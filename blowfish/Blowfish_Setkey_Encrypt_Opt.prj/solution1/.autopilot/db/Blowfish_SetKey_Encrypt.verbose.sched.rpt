

================================================================
== Vivado HLS Report for 'Blowfish_SetKey_Encrypt'
================================================================
* Date:           Tue Nov 19 22:53:56 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        Blowfish_Setkey_Encrypt_Opt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.358 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |   Interval  | Pipeline|
    |   min   |   max   |    min   |    max   | min |  max  |   Type  |
    +---------+---------+----------+----------+-----+-------+---------+
    |       44|    20922| 0.440 us | 0.209 ms |   44|  20922|   none  |
    +---------+---------+----------+----------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i32]* %S_3), !map !52"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i32]* %S_2), !map !59"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i32]* %S_1), !map !65"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i32]* %S_0), !map !71"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_17), !map !77"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_16), !map !83"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_15), !map !89"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_14), !map !95"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_13), !map !101"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_12), !map !107"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_11), !map !113"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_10), !map !119"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_9), !map !125"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_8), !map !131"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_7), !map !137"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_6), !map !143"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_5), !map !149"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_4), !map !155"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_3), !map !161"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_2), !map !166"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_1), !map !171"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_0), !map !176"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %set_key) nounwind, !map !181"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([56 x i8]* %key) nounwind, !map !187"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %key_size) nounwind, !map !193"   --->   Operation 35 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i8]* %plaintext) nounwind, !map !197"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i8]* %ciphertext) nounwind, !map !203"   --->   Operation 37 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([24 x i8]* @Blowfish_SetKey_Encr) nounwind"   --->   Operation 38 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%key_size_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %key_size)" [blowfish.cpp:207]   --->   Operation 39 'read' 'key_size_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%set_key_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %set_key)" [blowfish.cpp:207]   --->   Operation 40 'read' 'set_key_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "br i1 %set_key_read, label %1, label %._crit_edge" [blowfish.cpp:212]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [2/2] (0.00ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @Blowfish_SetKey([56 x i8]* %key, i64 %key_size_read, [256 x i32]* %S_0, [256 x i32]* %S_1, [256 x i32]* %S_2, [256 x i32]* %S_3)" [blowfish.cpp:213]   --->   Operation 42 'call' 'call_ret' <Predicate = (set_key_read)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 2.32>
ST_2 : Operation 43 [1/2] (0.00ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @Blowfish_SetKey([56 x i8]* %key, i64 %key_size_read, [256 x i32]* %S_0, [256 x i32]* %S_1, [256 x i32]* %S_2, [256 x i32]* %S_3)" [blowfish.cpp:213]   --->   Operation 43 'call' 'call_ret' <Predicate = (set_key_read)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%P_0_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 0" [blowfish.cpp:213]   --->   Operation 44 'extractvalue' 'P_0_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_0, i32 %P_0_ret)" [blowfish.cpp:213]   --->   Operation 45 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%P_1_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 1" [blowfish.cpp:213]   --->   Operation 46 'extractvalue' 'P_1_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_1, i32 %P_1_ret)" [blowfish.cpp:213]   --->   Operation 47 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%P_2_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 2" [blowfish.cpp:213]   --->   Operation 48 'extractvalue' 'P_2_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_2, i32 %P_2_ret)" [blowfish.cpp:213]   --->   Operation 49 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%P_3_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 3" [blowfish.cpp:213]   --->   Operation 50 'extractvalue' 'P_3_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_3, i32 %P_3_ret)" [blowfish.cpp:213]   --->   Operation 51 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%P_4_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 4" [blowfish.cpp:213]   --->   Operation 52 'extractvalue' 'P_4_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_4, i32 %P_4_ret)" [blowfish.cpp:213]   --->   Operation 53 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%P_5_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 5" [blowfish.cpp:213]   --->   Operation 54 'extractvalue' 'P_5_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_5, i32 %P_5_ret)" [blowfish.cpp:213]   --->   Operation 55 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%P_6_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 6" [blowfish.cpp:213]   --->   Operation 56 'extractvalue' 'P_6_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_6, i32 %P_6_ret)" [blowfish.cpp:213]   --->   Operation 57 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%P_7_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 7" [blowfish.cpp:213]   --->   Operation 58 'extractvalue' 'P_7_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_7, i32 %P_7_ret)" [blowfish.cpp:213]   --->   Operation 59 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%P_8_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 8" [blowfish.cpp:213]   --->   Operation 60 'extractvalue' 'P_8_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_8, i32 %P_8_ret)" [blowfish.cpp:213]   --->   Operation 61 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%P_9_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 9" [blowfish.cpp:213]   --->   Operation 62 'extractvalue' 'P_9_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_9, i32 %P_9_ret)" [blowfish.cpp:213]   --->   Operation 63 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%P_10_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 10" [blowfish.cpp:213]   --->   Operation 64 'extractvalue' 'P_10_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_10, i32 %P_10_ret)" [blowfish.cpp:213]   --->   Operation 65 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%P_11_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 11" [blowfish.cpp:213]   --->   Operation 66 'extractvalue' 'P_11_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_11, i32 %P_11_ret)" [blowfish.cpp:213]   --->   Operation 67 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%P_12_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 12" [blowfish.cpp:213]   --->   Operation 68 'extractvalue' 'P_12_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_12, i32 %P_12_ret)" [blowfish.cpp:213]   --->   Operation 69 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%P_13_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 13" [blowfish.cpp:213]   --->   Operation 70 'extractvalue' 'P_13_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_13, i32 %P_13_ret)" [blowfish.cpp:213]   --->   Operation 71 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%P_14_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 14" [blowfish.cpp:213]   --->   Operation 72 'extractvalue' 'P_14_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_14, i32 %P_14_ret)" [blowfish.cpp:213]   --->   Operation 73 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%P_15_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 15" [blowfish.cpp:213]   --->   Operation 74 'extractvalue' 'P_15_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_15, i32 %P_15_ret)" [blowfish.cpp:213]   --->   Operation 75 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%P_16_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 16" [blowfish.cpp:213]   --->   Operation 76 'extractvalue' 'P_16_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_16, i32 %P_16_ret)" [blowfish.cpp:213]   --->   Operation 77 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%P_17_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 17" [blowfish.cpp:213]   --->   Operation 78 'extractvalue' 'P_17_ret' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_17, i32 %P_17_ret)" [blowfish.cpp:213]   --->   Operation 79 'write' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "br label %._crit_edge" [blowfish.cpp:214]   --->   Operation 80 'br' <Predicate = (set_key_read)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%plaintext_addr = getelementptr [8 x i8]* %plaintext, i64 0, i64 0" [blowfish.cpp:227->blowfish.cpp:218]   --->   Operation 81 'getelementptr' 'plaintext_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [2/2] (2.32ns)   --->   "%plaintext_load = load i8* %plaintext_addr, align 1" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 82 'load' 'plaintext_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%plaintext_addr_1 = getelementptr [8 x i8]* %plaintext, i64 0, i64 1" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 83 'getelementptr' 'plaintext_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 84 [2/2] (2.32ns)   --->   "%plaintext_load_1 = load i8* %plaintext_addr_1, align 1" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 84 'load' 'plaintext_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 85 [1/2] (2.32ns)   --->   "%plaintext_load = load i8* %plaintext_addr, align 1" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 85 'load' 'plaintext_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_3 : Operation 86 [1/2] (2.32ns)   --->   "%plaintext_load_1 = load i8* %plaintext_addr_1, align 1" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 86 'load' 'plaintext_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%plaintext_addr_2 = getelementptr [8 x i8]* %plaintext, i64 0, i64 2" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 87 'getelementptr' 'plaintext_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [2/2] (2.32ns)   --->   "%plaintext_load_2 = load i8* %plaintext_addr_2, align 1" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 88 'load' 'plaintext_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%plaintext_addr_3 = getelementptr [8 x i8]* %plaintext, i64 0, i64 3" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 89 'getelementptr' 'plaintext_addr_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [2/2] (2.32ns)   --->   "%plaintext_load_3 = load i8* %plaintext_addr_3, align 1" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 90 'load' 'plaintext_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>

State 4 <SV = 3> <Delay = 2.32>
ST_4 : Operation 91 [1/2] (2.32ns)   --->   "%plaintext_load_2 = load i8* %plaintext_addr_2, align 1" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 91 'load' 'plaintext_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_4 : Operation 92 [1/2] (2.32ns)   --->   "%plaintext_load_3 = load i8* %plaintext_addr_3, align 1" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 92 'load' 'plaintext_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%plaintext_addr_4 = getelementptr [8 x i8]* %plaintext, i64 0, i64 4" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 93 'getelementptr' 'plaintext_addr_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 94 [2/2] (2.32ns)   --->   "%plaintext_load_4 = load i8* %plaintext_addr_4, align 1" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 94 'load' 'plaintext_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "%plaintext_addr_5 = getelementptr [8 x i8]* %plaintext, i64 0, i64 5" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 95 'getelementptr' 'plaintext_addr_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 96 [2/2] (2.32ns)   --->   "%plaintext_load_5 = load i8* %plaintext_addr_5, align 1" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 96 'load' 'plaintext_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>

State 5 <SV = 4> <Delay = 2.32>
ST_5 : Operation 97 [1/2] (2.32ns)   --->   "%plaintext_load_4 = load i8* %plaintext_addr_4, align 1" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 97 'load' 'plaintext_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_5 : Operation 98 [1/2] (2.32ns)   --->   "%plaintext_load_5 = load i8* %plaintext_addr_5, align 1" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 98 'load' 'plaintext_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%plaintext_addr_6 = getelementptr [8 x i8]* %plaintext, i64 0, i64 6" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 99 'getelementptr' 'plaintext_addr_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [2/2] (2.32ns)   --->   "%plaintext_load_6 = load i8* %plaintext_addr_6, align 1" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 100 'load' 'plaintext_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%plaintext_addr_7 = getelementptr [8 x i8]* %plaintext, i64 0, i64 7" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 101 'getelementptr' 'plaintext_addr_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 102 [2/2] (2.32ns)   --->   "%plaintext_load_7 = load i8* %plaintext_addr_7, align 1" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 102 'load' 'plaintext_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>

State 6 <SV = 5> <Delay = 4.09>
ST_6 : Operation 103 [1/1] (0.00ns)   --->   "%left_1 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %plaintext_load, i8 %plaintext_load_1, i8 %plaintext_load_2, i8 %plaintext_load_3)" [blowfish.cpp:228->blowfish.cpp:218]   --->   Operation 103 'bitconcatenate' 'left_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 104 [1/2] (2.32ns)   --->   "%plaintext_load_6 = load i8* %plaintext_addr_6, align 1" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 104 'load' 'plaintext_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_6 : Operation 105 [1/2] (2.32ns)   --->   "%plaintext_load_7 = load i8* %plaintext_addr_7, align 1" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 105 'load' 'plaintext_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_6 : Operation 106 [1/1] (0.00ns)   --->   "%right_1 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %plaintext_load_4, i8 %plaintext_load_5, i8 %plaintext_load_6, i8 %plaintext_load_7)" [blowfish.cpp:229->blowfish.cpp:218]   --->   Operation 106 'bitconcatenate' 'right_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 107 [1/1] (0.00ns)   --->   "%P_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_0)" [blowfish.cpp:219]   --->   Operation 107 'read' 'P_0_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 108 [1/1] (0.00ns)   --->   "%P_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_1)" [blowfish.cpp:219]   --->   Operation 108 'read' 'P_1_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 109 [1/1] (0.00ns)   --->   "%P_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_2)" [blowfish.cpp:219]   --->   Operation 109 'read' 'P_2_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "%P_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_3)" [blowfish.cpp:219]   --->   Operation 110 'read' 'P_3_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 111 [1/1] (0.00ns)   --->   "%P_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_4)" [blowfish.cpp:219]   --->   Operation 111 'read' 'P_4_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 112 [1/1] (0.00ns)   --->   "%P_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_5)" [blowfish.cpp:219]   --->   Operation 112 'read' 'P_5_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 113 [1/1] (0.00ns)   --->   "%P_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_6)" [blowfish.cpp:219]   --->   Operation 113 'read' 'P_6_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 114 [1/1] (0.00ns)   --->   "%P_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_7)" [blowfish.cpp:219]   --->   Operation 114 'read' 'P_7_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 115 [1/1] (0.00ns)   --->   "%P_8_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_8)" [blowfish.cpp:219]   --->   Operation 115 'read' 'P_8_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 116 [1/1] (0.00ns)   --->   "%P_9_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_9)" [blowfish.cpp:219]   --->   Operation 116 'read' 'P_9_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 117 [1/1] (0.00ns)   --->   "%P_10_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_10)" [blowfish.cpp:219]   --->   Operation 117 'read' 'P_10_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 118 [1/1] (0.00ns)   --->   "%P_11_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_11)" [blowfish.cpp:219]   --->   Operation 118 'read' 'P_11_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "%P_12_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_12)" [blowfish.cpp:219]   --->   Operation 119 'read' 'P_12_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (0.00ns)   --->   "%P_13_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_13)" [blowfish.cpp:219]   --->   Operation 120 'read' 'P_13_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 121 [1/1] (0.00ns)   --->   "%P_14_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_14)" [blowfish.cpp:219]   --->   Operation 121 'read' 'P_14_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "%P_15_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_15)" [blowfish.cpp:219]   --->   Operation 122 'read' 'P_15_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 123 [1/1] (0.00ns)   --->   "%P_16_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_16)" [blowfish.cpp:219]   --->   Operation 123 'read' 'P_16_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 124 [1/1] (0.00ns)   --->   "%P_17_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_17)" [blowfish.cpp:219]   --->   Operation 124 'read' 'P_17_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 125 [2/2] (1.76ns)   --->   "%call_ret1 = call fastcc { i32, i32 } @Encrypt_SetKey(i32 %left_1, i32 %right_1, i32 %P_0_read, i32 %P_1_read, i32 %P_2_read, i32 %P_3_read, i32 %P_4_read, i32 %P_5_read, i32 %P_6_read, i32 %P_7_read, i32 %P_8_read, i32 %P_9_read, i32 %P_10_read, i32 %P_11_read, i32 %P_12_read, i32 %P_13_read, i32 %P_14_read, i32 %P_15_read, i32 %P_16_read, i32 %P_17_read, [256 x i32]* %S_0, [256 x i32]* %S_1, [256 x i32]* %S_2, [256 x i32]* %S_3)" [blowfish.cpp:219]   --->   Operation 125 'call' 'call_ret1' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 3.31>
ST_7 : Operation 126 [1/2] (0.99ns)   --->   "%call_ret1 = call fastcc { i32, i32 } @Encrypt_SetKey(i32 %left_1, i32 %right_1, i32 %P_0_read, i32 %P_1_read, i32 %P_2_read, i32 %P_3_read, i32 %P_4_read, i32 %P_5_read, i32 %P_6_read, i32 %P_7_read, i32 %P_8_read, i32 %P_9_read, i32 %P_10_read, i32 %P_11_read, i32 %P_12_read, i32 %P_13_read, i32 %P_14_read, i32 %P_15_read, i32 %P_16_read, i32 %P_17_read, [256 x i32]* %S_0, [256 x i32]* %S_1, [256 x i32]* %S_2, [256 x i32]* %S_3)" [blowfish.cpp:219]   --->   Operation 126 'call' 'call_ret1' <Predicate = true> <Delay = 0.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 127 [1/1] (0.00ns)   --->   "%left = extractvalue { i32, i32 } %call_ret1, 0" [blowfish.cpp:219]   --->   Operation 127 'extractvalue' 'left' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 128 [1/1] (0.00ns)   --->   "%right = extractvalue { i32, i32 } %call_ret1, 1" [blowfish.cpp:219]   --->   Operation 128 'extractvalue' 'right' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 129 [1/1] (0.00ns)   --->   "%ciphertext_addr = getelementptr [8 x i8]* %ciphertext, i64 0, i64 0" [blowfish.cpp:233->blowfish.cpp:220]   --->   Operation 129 'getelementptr' 'ciphertext_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 130 [1/1] (0.00ns)   --->   "%trunc_ln = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %left, i32 24, i32 31)" [blowfish.cpp:234->blowfish.cpp:220]   --->   Operation 130 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 131 [1/1] (2.32ns)   --->   "store i8 %trunc_ln, i8* %ciphertext_addr, align 1" [blowfish.cpp:234->blowfish.cpp:220]   --->   Operation 131 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_7 : Operation 132 [1/1] (0.00ns)   --->   "%trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %left, i32 16, i32 23)" [blowfish.cpp:235->blowfish.cpp:220]   --->   Operation 132 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 133 [1/1] (0.00ns)   --->   "%ciphertext_addr_1 = getelementptr [8 x i8]* %ciphertext, i64 0, i64 1" [blowfish.cpp:235->blowfish.cpp:220]   --->   Operation 133 'getelementptr' 'ciphertext_addr_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 134 [1/1] (2.32ns)   --->   "store i8 %trunc_ln1, i8* %ciphertext_addr_1, align 1" [blowfish.cpp:235->blowfish.cpp:220]   --->   Operation 134 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_7 : Operation 135 [1/1] (0.00ns)   --->   "%trunc_ln2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %left, i32 8, i32 15)" [blowfish.cpp:236->blowfish.cpp:220]   --->   Operation 135 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 136 [1/1] (0.00ns)   --->   "%trunc_ln237 = trunc i32 %left to i8" [blowfish.cpp:237->blowfish.cpp:220]   --->   Operation 136 'trunc' 'trunc_ln237' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 137 [1/1] (0.00ns)   --->   "%trunc_ln4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %right, i32 24, i32 31)" [blowfish.cpp:238->blowfish.cpp:220]   --->   Operation 137 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 138 [1/1] (0.00ns)   --->   "%trunc_ln5 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %right, i32 16, i32 23)" [blowfish.cpp:239->blowfish.cpp:220]   --->   Operation 138 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 139 [1/1] (0.00ns)   --->   "%trunc_ln6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %right, i32 8, i32 15)" [blowfish.cpp:240->blowfish.cpp:220]   --->   Operation 139 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 140 [1/1] (0.00ns)   --->   "%trunc_ln241 = trunc i32 %right to i8" [blowfish.cpp:241->blowfish.cpp:220]   --->   Operation 140 'trunc' 'trunc_ln241' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 2.32>
ST_8 : Operation 141 [1/1] (0.00ns)   --->   "%ciphertext_addr_2 = getelementptr [8 x i8]* %ciphertext, i64 0, i64 2" [blowfish.cpp:236->blowfish.cpp:220]   --->   Operation 141 'getelementptr' 'ciphertext_addr_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 142 [1/1] (2.32ns)   --->   "store i8 %trunc_ln2, i8* %ciphertext_addr_2, align 1" [blowfish.cpp:236->blowfish.cpp:220]   --->   Operation 142 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_8 : Operation 143 [1/1] (0.00ns)   --->   "%ciphertext_addr_3 = getelementptr [8 x i8]* %ciphertext, i64 0, i64 3" [blowfish.cpp:237->blowfish.cpp:220]   --->   Operation 143 'getelementptr' 'ciphertext_addr_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 144 [1/1] (2.32ns)   --->   "store i8 %trunc_ln237, i8* %ciphertext_addr_3, align 1" [blowfish.cpp:237->blowfish.cpp:220]   --->   Operation 144 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>

State 9 <SV = 8> <Delay = 2.32>
ST_9 : Operation 145 [1/1] (0.00ns)   --->   "%ciphertext_addr_4 = getelementptr [8 x i8]* %ciphertext, i64 0, i64 4" [blowfish.cpp:238->blowfish.cpp:220]   --->   Operation 145 'getelementptr' 'ciphertext_addr_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 146 [1/1] (2.32ns)   --->   "store i8 %trunc_ln4, i8* %ciphertext_addr_4, align 1" [blowfish.cpp:238->blowfish.cpp:220]   --->   Operation 146 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_9 : Operation 147 [1/1] (0.00ns)   --->   "%ciphertext_addr_5 = getelementptr [8 x i8]* %ciphertext, i64 0, i64 5" [blowfish.cpp:239->blowfish.cpp:220]   --->   Operation 147 'getelementptr' 'ciphertext_addr_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 148 [1/1] (2.32ns)   --->   "store i8 %trunc_ln5, i8* %ciphertext_addr_5, align 1" [blowfish.cpp:239->blowfish.cpp:220]   --->   Operation 148 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>

State 10 <SV = 9> <Delay = 2.32>
ST_10 : Operation 149 [1/1] (0.00ns)   --->   "%ciphertext_addr_6 = getelementptr [8 x i8]* %ciphertext, i64 0, i64 6" [blowfish.cpp:240->blowfish.cpp:220]   --->   Operation 149 'getelementptr' 'ciphertext_addr_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 150 [1/1] (2.32ns)   --->   "store i8 %trunc_ln6, i8* %ciphertext_addr_6, align 1" [blowfish.cpp:240->blowfish.cpp:220]   --->   Operation 150 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_10 : Operation 151 [1/1] (0.00ns)   --->   "%ciphertext_addr_7 = getelementptr [8 x i8]* %ciphertext, i64 0, i64 7" [blowfish.cpp:241->blowfish.cpp:220]   --->   Operation 151 'getelementptr' 'ciphertext_addr_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 152 [1/1] (2.32ns)   --->   "store i8 %trunc_ln241, i8* %ciphertext_addr_7, align 1" [blowfish.cpp:241->blowfish.cpp:220]   --->   Operation 152 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 8> <RAM>
ST_10 : Operation 153 [1/1] (0.00ns)   --->   "ret void" [blowfish.cpp:222]   --->   Operation 153 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('plaintext_addr', blowfish.cpp:227->blowfish.cpp:218) [107]  (0 ns)
	'load' operation ('plaintext_load', blowfish.cpp:228->blowfish.cpp:218) on array 'plaintext' [108]  (2.32 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'load' operation ('plaintext_load', blowfish.cpp:228->blowfish.cpp:218) on array 'plaintext' [108]  (2.32 ns)

 <State 4>: 2.32ns
The critical path consists of the following:
	'load' operation ('plaintext_load_2', blowfish.cpp:228->blowfish.cpp:218) on array 'plaintext' [112]  (2.32 ns)

 <State 5>: 2.32ns
The critical path consists of the following:
	'load' operation ('plaintext_load_4', blowfish.cpp:229->blowfish.cpp:218) on array 'plaintext' [117]  (2.32 ns)

 <State 6>: 4.09ns
The critical path consists of the following:
	'load' operation ('plaintext_load_6', blowfish.cpp:229->blowfish.cpp:218) on array 'plaintext' [121]  (2.32 ns)
	'call' operation ('call_ret1', blowfish.cpp:219) to 'Encrypt_SetKey' [143]  (1.77 ns)

 <State 7>: 3.31ns
The critical path consists of the following:
	'call' operation ('call_ret1', blowfish.cpp:219) to 'Encrypt_SetKey' [143]  (0.993 ns)
	'store' operation ('store_ln234', blowfish.cpp:234->blowfish.cpp:220) of variable 'trunc_ln', blowfish.cpp:234->blowfish.cpp:220 on array 'ciphertext' [148]  (2.32 ns)

 <State 8>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ciphertext_addr_2', blowfish.cpp:236->blowfish.cpp:220) [153]  (0 ns)
	'store' operation ('store_ln236', blowfish.cpp:236->blowfish.cpp:220) of variable 'trunc_ln2', blowfish.cpp:236->blowfish.cpp:220 on array 'ciphertext' [154]  (2.32 ns)

 <State 9>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ciphertext_addr_4', blowfish.cpp:238->blowfish.cpp:220) [159]  (0 ns)
	'store' operation ('store_ln238', blowfish.cpp:238->blowfish.cpp:220) of variable 'trunc_ln4', blowfish.cpp:238->blowfish.cpp:220 on array 'ciphertext' [160]  (2.32 ns)

 <State 10>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ciphertext_addr_6', blowfish.cpp:240->blowfish.cpp:220) [165]  (0 ns)
	'store' operation ('store_ln240', blowfish.cpp:240->blowfish.cpp:220) of variable 'trunc_ln6', blowfish.cpp:240->blowfish.cpp:220 on array 'ciphertext' [166]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
