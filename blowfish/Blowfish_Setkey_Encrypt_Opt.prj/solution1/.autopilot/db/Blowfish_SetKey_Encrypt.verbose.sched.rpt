

================================================================
== Vivado HLS Report for 'Blowfish_SetKey_Encrypt'
================================================================
* Date:           Wed Nov 20 20:43:03 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        Blowfish_Setkey_Encrypt_Opt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 9.715 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |   Interval  | Pipeline|
    |   min   |   max   |    min   |    max   | min |  max  |   Type  |
    +---------+---------+----------+----------+-----+-------+---------+
    |       38|    19275| 0.380 us | 0.193 ms |   38|  19275|   none  |
    +---------+---------+----------+----------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 3 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i32]* %S_3), !map !54"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i32]* %S_2), !map !61"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i32]* %S_1), !map !67"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i32]* %S_0), !map !73"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_17), !map !79"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_16), !map !85"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_15), !map !91"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_14), !map !97"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_13), !map !103"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_12), !map !109"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_11), !map !115"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_10), !map !121"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_9), !map !127"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_8), !map !133"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_7), !map !139"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_6), !map !145"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_5), !map !151"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_4), !map !157"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_3), !map !163"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_2), !map !168"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_1), !map !173"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %P_0), !map !178"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %set_key) nounwind, !map !183"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([56 x i8]* %key) nounwind, !map !189"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %key_size) nounwind, !map !195"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i8]* %plaintext) nounwind, !map !199"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i8]* %ciphertext) nounwind, !map !205"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([24 x i8]* @Blowfish_SetKey_Encr) nounwind"   --->   Operation 32 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%key_size_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %key_size)" [blowfish.cpp:205]   --->   Operation 33 'read' 'key_size_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%set_key_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %set_key)" [blowfish.cpp:205]   --->   Operation 34 'read' 'set_key_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "br i1 %set_key_read, label %1, label %._crit_edge" [blowfish.cpp:220]   --->   Operation 35 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [2/2] (0.00ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @Blowfish_SetKey([56 x i8]* %key, i64 %key_size_read, [256 x i32]* %S_0, [256 x i32]* %S_1, [256 x i32]* %S_2, [256 x i32]* %S_3)" [blowfish.cpp:221]   --->   Operation 36 'call' 'call_ret' <Predicate = (set_key_read)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 37 [1/2] (0.00ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @Blowfish_SetKey([56 x i8]* %key, i64 %key_size_read, [256 x i32]* %S_0, [256 x i32]* %S_1, [256 x i32]* %S_2, [256 x i32]* %S_3)" [blowfish.cpp:221]   --->   Operation 37 'call' 'call_ret' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%P_0_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 0" [blowfish.cpp:221]   --->   Operation 38 'extractvalue' 'P_0_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_0, i32 %P_0_ret)" [blowfish.cpp:221]   --->   Operation 39 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%P_1_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 1" [blowfish.cpp:221]   --->   Operation 40 'extractvalue' 'P_1_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_1, i32 %P_1_ret)" [blowfish.cpp:221]   --->   Operation 41 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%P_2_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 2" [blowfish.cpp:221]   --->   Operation 42 'extractvalue' 'P_2_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_2, i32 %P_2_ret)" [blowfish.cpp:221]   --->   Operation 43 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%P_3_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 3" [blowfish.cpp:221]   --->   Operation 44 'extractvalue' 'P_3_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_3, i32 %P_3_ret)" [blowfish.cpp:221]   --->   Operation 45 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%P_4_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 4" [blowfish.cpp:221]   --->   Operation 46 'extractvalue' 'P_4_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_4, i32 %P_4_ret)" [blowfish.cpp:221]   --->   Operation 47 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%P_5_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 5" [blowfish.cpp:221]   --->   Operation 48 'extractvalue' 'P_5_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_5, i32 %P_5_ret)" [blowfish.cpp:221]   --->   Operation 49 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%P_6_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 6" [blowfish.cpp:221]   --->   Operation 50 'extractvalue' 'P_6_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_6, i32 %P_6_ret)" [blowfish.cpp:221]   --->   Operation 51 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%P_7_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 7" [blowfish.cpp:221]   --->   Operation 52 'extractvalue' 'P_7_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_7, i32 %P_7_ret)" [blowfish.cpp:221]   --->   Operation 53 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%P_8_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 8" [blowfish.cpp:221]   --->   Operation 54 'extractvalue' 'P_8_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_8, i32 %P_8_ret)" [blowfish.cpp:221]   --->   Operation 55 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%P_9_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 9" [blowfish.cpp:221]   --->   Operation 56 'extractvalue' 'P_9_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_9, i32 %P_9_ret)" [blowfish.cpp:221]   --->   Operation 57 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%P_10_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 10" [blowfish.cpp:221]   --->   Operation 58 'extractvalue' 'P_10_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_10, i32 %P_10_ret)" [blowfish.cpp:221]   --->   Operation 59 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%P_11_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 11" [blowfish.cpp:221]   --->   Operation 60 'extractvalue' 'P_11_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_11, i32 %P_11_ret)" [blowfish.cpp:221]   --->   Operation 61 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%P_12_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 12" [blowfish.cpp:221]   --->   Operation 62 'extractvalue' 'P_12_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_12, i32 %P_12_ret)" [blowfish.cpp:221]   --->   Operation 63 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%P_13_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 13" [blowfish.cpp:221]   --->   Operation 64 'extractvalue' 'P_13_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_13, i32 %P_13_ret)" [blowfish.cpp:221]   --->   Operation 65 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%P_14_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 14" [blowfish.cpp:221]   --->   Operation 66 'extractvalue' 'P_14_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_14, i32 %P_14_ret)" [blowfish.cpp:221]   --->   Operation 67 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%P_15_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 15" [blowfish.cpp:221]   --->   Operation 68 'extractvalue' 'P_15_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_15, i32 %P_15_ret)" [blowfish.cpp:221]   --->   Operation 69 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%P_16_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 16" [blowfish.cpp:221]   --->   Operation 70 'extractvalue' 'P_16_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_16, i32 %P_16_ret)" [blowfish.cpp:221]   --->   Operation 71 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%P_17_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 17" [blowfish.cpp:221]   --->   Operation 72 'extractvalue' 'P_17_ret' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %P_17, i32 %P_17_ret)" [blowfish.cpp:221]   --->   Operation 73 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "br label %._crit_edge" [blowfish.cpp:222]   --->   Operation 74 'br' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.44>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%P_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_0)" [blowfish.cpp:224]   --->   Operation 75 'read' 'P_0_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%P_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_1)" [blowfish.cpp:224]   --->   Operation 76 'read' 'P_1_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%P_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_2)" [blowfish.cpp:224]   --->   Operation 77 'read' 'P_2_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%P_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_3)" [blowfish.cpp:224]   --->   Operation 78 'read' 'P_3_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%P_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_4)" [blowfish.cpp:224]   --->   Operation 79 'read' 'P_4_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%P_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_5)" [blowfish.cpp:224]   --->   Operation 80 'read' 'P_5_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%P_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_6)" [blowfish.cpp:224]   --->   Operation 81 'read' 'P_6_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%P_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_7)" [blowfish.cpp:224]   --->   Operation 82 'read' 'P_7_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%P_8_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_8)" [blowfish.cpp:224]   --->   Operation 83 'read' 'P_8_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%P_9_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_9)" [blowfish.cpp:224]   --->   Operation 84 'read' 'P_9_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%P_10_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_10)" [blowfish.cpp:224]   --->   Operation 85 'read' 'P_10_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%P_11_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_11)" [blowfish.cpp:224]   --->   Operation 86 'read' 'P_11_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%P_12_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_12)" [blowfish.cpp:224]   --->   Operation 87 'read' 'P_12_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%P_13_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_13)" [blowfish.cpp:224]   --->   Operation 88 'read' 'P_13_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%P_14_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_14)" [blowfish.cpp:224]   --->   Operation 89 'read' 'P_14_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%P_15_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_15)" [blowfish.cpp:224]   --->   Operation 90 'read' 'P_15_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%P_16_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_16)" [blowfish.cpp:224]   --->   Operation 91 'read' 'P_16_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%P_17_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %P_17)" [blowfish.cpp:224]   --->   Operation 92 'read' 'P_17_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [2/2] (6.44ns)   --->   "call fastcc void @Blowfish_Encrypt([8 x i8]* %plaintext, [8 x i8]* %ciphertext, i32 %P_0_read, i32 %P_1_read, i32 %P_2_read, i32 %P_3_read, i32 %P_4_read, i32 %P_5_read, i32 %P_6_read, i32 %P_7_read, i32 %P_8_read, i32 %P_9_read, i32 %P_10_read, i32 %P_11_read, i32 %P_12_read, i32 %P_13_read, i32 %P_14_read, i32 %P_15_read, i32 %P_16_read, i32 %P_17_read, [256 x i32]* %S_0, [256 x i32]* %S_1, [256 x i32]* %S_2, [256 x i32]* %S_3)" [blowfish.cpp:224]   --->   Operation 93 'call' <Predicate = true> <Delay = 6.44> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 94 [1/2] (0.00ns)   --->   "call fastcc void @Blowfish_Encrypt([8 x i8]* %plaintext, [8 x i8]* %ciphertext, i32 %P_0_read, i32 %P_1_read, i32 %P_2_read, i32 %P_3_read, i32 %P_4_read, i32 %P_5_read, i32 %P_6_read, i32 %P_7_read, i32 %P_8_read, i32 %P_9_read, i32 %P_10_read, i32 %P_11_read, i32 %P_12_read, i32 %P_13_read, i32 %P_14_read, i32 %P_15_read, i32 %P_16_read, i32 %P_17_read, [256 x i32]* %S_0, [256 x i32]* %S_1, [256 x i32]* %S_2, [256 x i32]* %S_3)" [blowfish.cpp:224]   --->   Operation 94 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "ret void" [blowfish.cpp:230]   --->   Operation 95 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 6.45ns
The critical path consists of the following:
	wire read on port 'P_0' (blowfish.cpp:224) [107]  (0 ns)
	'call' operation ('call_ln224', blowfish.cpp:224) to 'Blowfish_Encrypt' [125]  (6.45 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
