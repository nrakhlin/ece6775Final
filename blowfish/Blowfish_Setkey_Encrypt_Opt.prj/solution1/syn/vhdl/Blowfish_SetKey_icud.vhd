-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Blowfish_SetKey_icud_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          addr1      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce1       : in std_logic; 
          q1         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Blowfish_SetKey_icud_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr1_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "01001011011110100111000011101001", 
    1 => "10110101101100110010100101000100", 
    2 => "11011011011101010000100100101110", 
    3 => "11000100000110010010011000100011", 
    4 => "10101101011011101010011010110000", 
    5 => "01001001101001111101111101111101", 
    6 => "10011100111011100110000010111000", 
    7 => "10001111111011011011001001100110", 
    8 => "11101100101010101000110001110001", 
    9 => "01101001100110100001011111111111", 
    10 => "01010110011001000101001001101100", 
    11 => "11000010101100011001111011100001", 
    12 => "00011001001101100000001010100101", 
    13 => "01110101000010010100110000101001", 
    14 => "10100000010110010001001101000000", 
    15 => "11100100000110000011101000111110", 
    16 => "00111111010101001001100010011010", 
    17 => "01011011010000101001110101100101", 
    18 => "01101011100011111110010011010110", 
    19 => "10011001111101110011111111010110", 
    20 => "10100001110100101001110000000111", 
    21 => "11101111111010000011000011110101", 
    22 => "01001101001011010011100011100110", 
    23 => "11110000001001010101110111000001", 
    24 => "01001100110111010010000010000110", 
    25 => "10000100011100001110101100100110", 
    26 => "01100011100000101110100111000110", 
    27 => "00000010000111101100110001011110", 
    28 => "00001001011010000110101100111111", 
    29 => "00111110101110101110111111001001", 
    30 => "00111100100101110001100000010100", 
    31 => "01101011011010100111000010100001", 
    32 => "01101000011111110011010110000100", 
    33 => "01010010101000001110001010000110", 
    34 => "10110111100111000101001100000101", 
    35 => "10101010010100000000011100110111", 
    36 => "00111110000001111000010000011100", 
    37 => "01111111110111101010111001011100", 
    38 => "10001110011111010100010011101100", 
    39 => "01010111000101101111001010111000", 
    40 => "10110000001110101101101000110111", 
    41 => "11110000010100000000110000001101", 
    42 => "11110000000111000001111100000100", 
    43 => "00000010000000001011001111111111", 
    44 => "10101110000011001111010100011010", 
    45 => "00111100101101010111010010110010", 
    46 => "00100101100000110111101001011000", 
    47 => "11011100000010010010000110111101", 
    48 => "11010001100100010001001111111001", 
    49 => "01111100101010010010111111110110", 
    50 => "10010100001100100100011101110011", 
    51 => "00100010111101010100011100000001", 
    52 => "00111010111001011110010110000001", 
    53 => "00110111110000101101101011011100", 
    54 => "11001000101101010111011000110100", 
    55 => "10011010111100111101110110100111", 
    56 => "10101001010001000110000101000110", 
    57 => "00001111110100000000001100001110", 
    58 => "11101100110010001100011100111110", 
    59 => "10100100011101010001111001000001", 
    60 => "11100010001110001100110110011001", 
    61 => "00111011111010100000111000101111", 
    62 => "00110010100000001011101110100001", 
    63 => "00011000001111101011001100110001", 
    64 => "01001110010101001000101100111000", 
    65 => "01001111011011011011100100001000", 
    66 => "01101111010000100000110100000011", 
    67 => "11110110000010100000010010111111", 
    68 => "00101100101110000001001010010000", 
    69 => "00100100100101110111110001111001", 
    70 => "01010110011110011011000001110010", 
    71 => "10111100101011111000100110101111", 
    72 => "11011110100110100111011100011111", 
    73 => "11011001100100110000100000010000", 
    74 => "10110011100010111010111000010010", 
    75 => "11011100110011110011111100101110", 
    76 => "01010101000100100111001000011111", 
    77 => "00101110011010110111000100100100", 
    78 => "01010000000110101101110111100110", 
    79 => "10011111100001001100110110000111", 
    80 => "01111010010110000100011100011000", 
    81 => "01110100000010001101101000010111", 
    82 => "10111100100111111001101010111100", 
    83 => "11101001010010110111110110001100", 
    84 => "11101100011110101110110000111010", 
    85 => "11011011100001010001110111111010", 
    86 => "01100011000010010100001101100110", 
    87 => "11000100011001001100001111010010", 
    88 => "11101111000111000001100001000111", 
    89 => "00110010000101011101100100001000", 
    90 => "11011101010000110011101100110111", 
    91 => "00100100110000101011101000010110", 
    92 => "00010010101000010100110101000011", 
    93 => "00101010011001011100010001010001", 
    94 => "01010000100101000000000000000010", 
    95 => "00010011001110101110010011011101", 
    96 => "01110001110111111111100010011110", 
    97 => "00010000001100010100111001010101", 
    98 => "10000001101011000111011111010110", 
    99 => "01011111000100010001100110011011", 
    100 => "00000100001101010101011011110001", 
    101 => "11010111101000111100011101101011", 
    102 => "00111100000100010001100000111011", 
    103 => "01011001001001001010010100001001", 
    104 => "11110010100011111110011011101101", 
    105 => "10010111111100011111101111111010", 
    106 => "10011110101110101011111100101100", 
    107 => "00011110000101010011110001101110", 
    108 => "10000110111000110100010101110000", 
    109 => "11101010111010010110111110110001", 
    110 => "10000110000011100101111000001010", 
    111 => "01011010001111100010101010110011", 
    112 => "01110111000111111110011100011100", 
    113 => "01001110001111010000011011111010", 
    114 => "00101001011001011101110010111001", 
    115 => "10011001111001110001110100001111", 
    116 => "10000000001111101000100111010110", 
    117 => "01010010011001101100100000100101", 
    118 => "00101110010011001100100101111000", 
    119 => "10011100000100001011001101101010", 
    120 => "11000110000101010000111010111010", 
    121 => "10010100111000101110101001111000", 
    122 => "10100101111111000011110001010011", 
    123 => "00011110000010100010110111110100", 
    124 => "11110010111101110100111010100111", 
    125 => "00110110000111010010101100111101", 
    126 => "00011001001110010010011000001111", 
    127 => "00011001110000100111100101100000", 
    128 => "01010010001000111010011100001000", 
    129 => "11110111000100110001001010110110", 
    130 => "11101011101011011111111001101110", 
    131 => "11101010110000110001111101100110", 
    132 => "11100011101111000100010110010101", 
    133 => "10100110011110111100100010000011", 
    134 => "10110001011111110011011111010001", 
    135 => "00000001100011001111111100101000", 
    136 => "11000011001100101101110111101111", 
    137 => "10111110011011000101101010100101", 
    138 => "01100101010110000010000110000101", 
    139 => "01101000101010111001100000000010", 
    140 => "11101110110011101010010100001111", 
    141 => "11011011001011111001010100111011", 
    142 => "00101010111011110111110110101101", 
    143 => "01011011011011100010111110000100", 
    144 => "00010101001000011011011000101000", 
    145 => "00101001000001110110000101110000", 
    146 => "11101100110111010100011101110101", 
    147 => "01100001100111110001010100010000", 
    148 => "00010011110011001010100000110000", 
    149 => "11101011011000011011110110010110", 
    150 => "00000011001101001111111000011110", 
    151 => "10101010000000110110001111001111", 
    152 => "10110101011100110101110010010000", 
    153 => "01001100011100001010001000111001", 
    154 => "11010101100111101001111000001011", 
    155 => "11001011101010101101111000010100", 
    156 => "11101110110011001000011010111100", 
    157 => "01100000011000100010110010100111", 
    158 => "10011100101010110101110010101011", 
    159 => "10110010111100111000010001101110", 
    160 => "01100100100010110001111010101111", 
    161 => "00011001101111011111000011001010", 
    162 => "10100000001000110110100110111001", 
    163 => "01100101010110101011101101010000", 
    164 => "01000000011010000101101000110010", 
    165 => "00111100001010101011010010110011", 
    166 => "00110001100111101110100111010101", 
    167 => "11000000001000011011100011110111", 
    168 => "10011011010101000000101100011001", 
    169 => "10000111010111111010000010011001", 
    170 => "10010101111101111001100101111110", 
    171 => "01100010001111010111110110101000", 
    172 => "11111000001101111000100010011010", 
    173 => "10010111111000110010110101110111", 
    174 => "00010001111011011001001101011111", 
    175 => "00010110011010000001001010000001", 
    176 => "00001110001101011000100000101001", 
    177 => "11000111111001100001111111010110", 
    178 => "10010110110111101101111110100001", 
    179 => "01111000010110001011101010011001", 
    180 => "01010111111101011000010010100101", 
    181 => "00011011001000100111001001100011", 
    182 => "10011011100000111100001111111111", 
    183 => "00011010110000100100011010010110", 
    184 => "11001101101100110000101011101011", 
    185 => "01010011001011100011000001010100", 
    186 => "10001111110110010100100011100100", 
    187 => "01101101101111000011000100101000", 
    188 => "01011000111010111111001011101111", 
    189 => "00110100110001101111111111101010", 
    190 => "11111110001010001110110101100001", 
    191 => "11101110011111000011110001110011", 
    192 => "01011101010010100001010011011001", 
    193 => "11101000011001001011011111100011", 
    194 => "01000010000100000101110100010100", 
    195 => "00100000001111100001001111100000", 
    196 => "01000101111011101110001010110110", 
    197 => "10100011101010101010101111101010", 
    198 => "11011011011011000100111100010101", 
    199 => "11111010110010110100111111010000", 
    200 => "11000111010000101111010001000010", 
    201 => "11101111011010101011101110110101", 
    202 => "01100101010011110011101100011101", 
    203 => "01000001110011010010000100000101", 
    204 => "11011000000111100111100110011110", 
    205 => "10000110100001010100110111000111", 
    206 => "11100100010010110100011101101010", 
    207 => "00111101100000010110001001010000", 
    208 => "11001111011000101010000111110010", 
    209 => "01011011100011010010011001000110", 
    210 => "11111100100010001000001110100000", 
    211 => "11000001110001111011011010100011", 
    212 => "01111111000101010010010011000011", 
    213 => "01101001110010110111010010010010", 
    214 => "01000111100001001000101000001011", 
    215 => "01010110100100101011001010000101", 
    216 => "00001001010110111011111100000000", 
    217 => "10101101000110010100100010011101", 
    218 => "00010100011000101011000101110100", 
    219 => "00100011100000100000111000000000", 
    220 => "01011000010000101000110100101010", 
    221 => "00001100010101011111010111101010", 
    222 => "00011101101011011111010000111110", 
    223 => "00100011001111110111000001100001", 
    224 => "00110011011100101111000010010010", 
    225 => "10001101100100110111111001000001", 
    226 => "11010110010111111110110011110001", 
    227 => "01101100001000100011101111011011", 
    228 => "01111100110111100011011101011001", 
    229 => "11001011111011100111010001100000", 
    230 => "01000000100001011111001010100111", 
    231 => "11001110011101110011001001101110", 
    232 => "10100110000001111000000010000100", 
    233 => "00011001111110000101000010011110", 
    234 => "11101000111011111101100001010101", 
    235 => "01100001110110011001011100110101", 
    236 => "10101001011010011010011110101010", 
    237 => "11000101000011000000011011000010", 
    238 => "01011010000001001010101111111100", 
    239 => "10000000000010111100101011011100", 
    240 => "10011110010001000111101000101110", 
    241 => "11000011010001010011010010000100", 
    242 => "11111101110101010110011100000101", 
    243 => "00001110000111101001111011001001", 
    244 => "11011011011100111101101111010011", 
    245 => "00010000010101011000100011001101", 
    246 => "01100111010111111101101001111001", 
    247 => "11100011011001110100001101000000", 
    248 => "11000101110001000011010001100101", 
    249 => "01110001001111100011100011011000", 
    250 => "00111101001010001111100010011110", 
    251 => "11110001011011011111111100100000", 
    252 => "00010101001111100010000111100111", 
    253 => "10001111101100000011110101001010", 
    254 => "11100110111000111001111100101011", 
    255 => "11011011100000111010110111110111" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

memory_access_guard_1: process (addr1) 
begin
      addr1_tmp <= addr1;
--synthesis translate_off
      if (CONV_INTEGER(addr1) > mem_size-1) then
           addr1_tmp <= (others => '0');
      else 
           addr1_tmp <= addr1;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
        if (ce1 = '1') then 
            q1 <= mem(CONV_INTEGER(addr1_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity Blowfish_SetKey_icud is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address1 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Blowfish_SetKey_icud is
    component Blowfish_SetKey_icud_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR;
            addr1 : IN STD_LOGIC_VECTOR;
            ce1 : IN STD_LOGIC;
            q1 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Blowfish_SetKey_icud_rom_U :  component Blowfish_SetKey_icud_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0,
        addr1 => address1,
        ce1 => ce1,
        q1 => q1);

end architecture;


