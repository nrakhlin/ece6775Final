// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Blowfish_SetKey_Encrypt_HH_
#define _Blowfish_SetKey_Encrypt_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Blowfish_SetKey.h"
#include "Encrypt_SetKey.h"

namespace ap_rtl {

struct Blowfish_SetKey_Encrypt : public sc_module {
    // Port declarations 115
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > set_key;
    sc_out< sc_lv<6> > key_address0;
    sc_out< sc_logic > key_ce0;
    sc_in< sc_lv<8> > key_q0;
    sc_in< sc_lv<64> > key_size;
    sc_out< sc_lv<3> > plaintext_address0;
    sc_out< sc_logic > plaintext_ce0;
    sc_in< sc_lv<8> > plaintext_q0;
    sc_out< sc_lv<3> > plaintext_address1;
    sc_out< sc_logic > plaintext_ce1;
    sc_in< sc_lv<8> > plaintext_q1;
    sc_out< sc_lv<3> > ciphertext_address0;
    sc_out< sc_logic > ciphertext_ce0;
    sc_out< sc_logic > ciphertext_we0;
    sc_out< sc_lv<8> > ciphertext_d0;
    sc_out< sc_lv<3> > ciphertext_address1;
    sc_out< sc_logic > ciphertext_ce1;
    sc_out< sc_logic > ciphertext_we1;
    sc_out< sc_lv<8> > ciphertext_d1;
    sc_in< sc_lv<32> > P_0_i;
    sc_out< sc_lv<32> > P_0_o;
    sc_out< sc_logic > P_0_o_ap_vld;
    sc_in< sc_lv<32> > P_1_i;
    sc_out< sc_lv<32> > P_1_o;
    sc_out< sc_logic > P_1_o_ap_vld;
    sc_in< sc_lv<32> > P_2_i;
    sc_out< sc_lv<32> > P_2_o;
    sc_out< sc_logic > P_2_o_ap_vld;
    sc_in< sc_lv<32> > P_3_i;
    sc_out< sc_lv<32> > P_3_o;
    sc_out< sc_logic > P_3_o_ap_vld;
    sc_in< sc_lv<32> > P_4_i;
    sc_out< sc_lv<32> > P_4_o;
    sc_out< sc_logic > P_4_o_ap_vld;
    sc_in< sc_lv<32> > P_5_i;
    sc_out< sc_lv<32> > P_5_o;
    sc_out< sc_logic > P_5_o_ap_vld;
    sc_in< sc_lv<32> > P_6_i;
    sc_out< sc_lv<32> > P_6_o;
    sc_out< sc_logic > P_6_o_ap_vld;
    sc_in< sc_lv<32> > P_7_i;
    sc_out< sc_lv<32> > P_7_o;
    sc_out< sc_logic > P_7_o_ap_vld;
    sc_in< sc_lv<32> > P_8_i;
    sc_out< sc_lv<32> > P_8_o;
    sc_out< sc_logic > P_8_o_ap_vld;
    sc_in< sc_lv<32> > P_9_i;
    sc_out< sc_lv<32> > P_9_o;
    sc_out< sc_logic > P_9_o_ap_vld;
    sc_in< sc_lv<32> > P_10_i;
    sc_out< sc_lv<32> > P_10_o;
    sc_out< sc_logic > P_10_o_ap_vld;
    sc_in< sc_lv<32> > P_11_i;
    sc_out< sc_lv<32> > P_11_o;
    sc_out< sc_logic > P_11_o_ap_vld;
    sc_in< sc_lv<32> > P_12_i;
    sc_out< sc_lv<32> > P_12_o;
    sc_out< sc_logic > P_12_o_ap_vld;
    sc_in< sc_lv<32> > P_13_i;
    sc_out< sc_lv<32> > P_13_o;
    sc_out< sc_logic > P_13_o_ap_vld;
    sc_in< sc_lv<32> > P_14_i;
    sc_out< sc_lv<32> > P_14_o;
    sc_out< sc_logic > P_14_o_ap_vld;
    sc_in< sc_lv<32> > P_15_i;
    sc_out< sc_lv<32> > P_15_o;
    sc_out< sc_logic > P_15_o_ap_vld;
    sc_in< sc_lv<32> > P_16_i;
    sc_out< sc_lv<32> > P_16_o;
    sc_out< sc_logic > P_16_o_ap_vld;
    sc_in< sc_lv<32> > P_17_i;
    sc_out< sc_lv<32> > P_17_o;
    sc_out< sc_logic > P_17_o_ap_vld;
    sc_out< sc_lv<8> > S_0_address0;
    sc_out< sc_logic > S_0_ce0;
    sc_out< sc_logic > S_0_we0;
    sc_out< sc_lv<32> > S_0_d0;
    sc_in< sc_lv<32> > S_0_q0;
    sc_out< sc_lv<8> > S_0_address1;
    sc_out< sc_logic > S_0_ce1;
    sc_out< sc_logic > S_0_we1;
    sc_out< sc_lv<32> > S_0_d1;
    sc_out< sc_lv<8> > S_1_address0;
    sc_out< sc_logic > S_1_ce0;
    sc_out< sc_logic > S_1_we0;
    sc_out< sc_lv<32> > S_1_d0;
    sc_in< sc_lv<32> > S_1_q0;
    sc_out< sc_lv<8> > S_1_address1;
    sc_out< sc_logic > S_1_ce1;
    sc_out< sc_logic > S_1_we1;
    sc_out< sc_lv<32> > S_1_d1;
    sc_out< sc_lv<8> > S_2_address0;
    sc_out< sc_logic > S_2_ce0;
    sc_out< sc_logic > S_2_we0;
    sc_out< sc_lv<32> > S_2_d0;
    sc_in< sc_lv<32> > S_2_q0;
    sc_out< sc_lv<8> > S_2_address1;
    sc_out< sc_logic > S_2_ce1;
    sc_out< sc_logic > S_2_we1;
    sc_out< sc_lv<32> > S_2_d1;
    sc_out< sc_lv<8> > S_3_address0;
    sc_out< sc_logic > S_3_ce0;
    sc_out< sc_logic > S_3_we0;
    sc_out< sc_lv<32> > S_3_d0;
    sc_in< sc_lv<32> > S_3_q0;
    sc_out< sc_lv<8> > S_3_address1;
    sc_out< sc_logic > S_3_ce1;
    sc_out< sc_logic > S_3_we1;
    sc_out< sc_lv<32> > S_3_d1;


    // Module declarations
    Blowfish_SetKey_Encrypt(sc_module_name name);
    SC_HAS_PROCESS(Blowfish_SetKey_Encrypt);

    ~Blowfish_SetKey_Encrypt();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Blowfish_SetKey* grp_Blowfish_SetKey_fu_520;
    Encrypt_SetKey* grp_Encrypt_SetKey_fu_544;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > set_key_read_read_fu_118_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_ap_ready;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_ap_done;
    sc_signal< bool > ap_block_state2_on_subcall_done;
    sc_signal< sc_lv<8> > plaintext_load_reg_801;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > plaintext_load_1_reg_806;
    sc_signal< sc_lv<8> > plaintext_load_2_reg_821;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > plaintext_load_3_reg_826;
    sc_signal< sc_lv<8> > plaintext_load_4_reg_841;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > plaintext_load_5_reg_846;
    sc_signal< sc_lv<32> > left_1_fu_684_p5;
    sc_signal< sc_lv<32> > left_1_reg_861;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > right_1_fu_693_p5;
    sc_signal< sc_lv<32> > right_1_reg_866;
    sc_signal< sc_lv<8> > trunc_ln2_reg_961;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_544_ap_ready;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_544_ap_done;
    sc_signal< sc_lv<8> > trunc_ln237_fu_744_p1;
    sc_signal< sc_lv<8> > trunc_ln237_reg_966;
    sc_signal< sc_lv<8> > trunc_ln4_reg_971;
    sc_signal< sc_lv<8> > trunc_ln5_reg_976;
    sc_signal< sc_lv<8> > trunc_ln6_reg_981;
    sc_signal< sc_lv<8> > trunc_ln241_fu_778_p1;
    sc_signal< sc_lv<8> > trunc_ln241_reg_986;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_ap_start;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_ap_idle;
    sc_signal< sc_lv<6> > grp_Blowfish_SetKey_fu_520_key_address0;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_key_ce0;
    sc_signal< sc_lv<8> > grp_Blowfish_SetKey_fu_520_S_0_address0;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_0_ce0;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_0_we0;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_S_0_d0;
    sc_signal< sc_lv<8> > grp_Blowfish_SetKey_fu_520_S_0_address1;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_0_ce1;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_0_we1;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_S_0_d1;
    sc_signal< sc_lv<8> > grp_Blowfish_SetKey_fu_520_S_1_address0;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_1_ce0;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_1_we0;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_S_1_d0;
    sc_signal< sc_lv<8> > grp_Blowfish_SetKey_fu_520_S_1_address1;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_1_ce1;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_1_we1;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_S_1_d1;
    sc_signal< sc_lv<8> > grp_Blowfish_SetKey_fu_520_S_2_address0;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_2_ce0;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_2_we0;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_S_2_d0;
    sc_signal< sc_lv<8> > grp_Blowfish_SetKey_fu_520_S_2_address1;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_2_ce1;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_2_we1;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_S_2_d1;
    sc_signal< sc_lv<8> > grp_Blowfish_SetKey_fu_520_S_3_address0;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_3_ce0;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_3_we0;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_S_3_d0;
    sc_signal< sc_lv<8> > grp_Blowfish_SetKey_fu_520_S_3_address1;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_3_ce1;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_S_3_we1;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_S_3_d1;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_0;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_1;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_2;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_3;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_4;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_5;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_6;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_7;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_8;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_9;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_10;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_11;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_12;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_13;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_14;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_15;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_16;
    sc_signal< sc_lv<32> > grp_Blowfish_SetKey_fu_520_ap_return_17;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_544_ap_start;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_544_ap_idle;
    sc_signal< sc_lv<8> > grp_Encrypt_SetKey_fu_544_S_0_address0;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_544_S_0_ce0;
    sc_signal< sc_lv<8> > grp_Encrypt_SetKey_fu_544_S_1_address0;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_544_S_1_ce0;
    sc_signal< sc_lv<8> > grp_Encrypt_SetKey_fu_544_S_2_address0;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_544_S_2_ce0;
    sc_signal< sc_lv<8> > grp_Encrypt_SetKey_fu_544_S_3_address0;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_544_S_3_ce0;
    sc_signal< sc_lv<32> > grp_Encrypt_SetKey_fu_544_ap_return_0;
    sc_signal< sc_lv<32> > grp_Encrypt_SetKey_fu_544_ap_return_1;
    sc_signal< sc_logic > grp_Blowfish_SetKey_fu_520_ap_start_reg;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_544_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_P_0_o();
    void thread_P_0_o_ap_vld();
    void thread_P_10_o();
    void thread_P_10_o_ap_vld();
    void thread_P_11_o();
    void thread_P_11_o_ap_vld();
    void thread_P_12_o();
    void thread_P_12_o_ap_vld();
    void thread_P_13_o();
    void thread_P_13_o_ap_vld();
    void thread_P_14_o();
    void thread_P_14_o_ap_vld();
    void thread_P_15_o();
    void thread_P_15_o_ap_vld();
    void thread_P_16_o();
    void thread_P_16_o_ap_vld();
    void thread_P_17_o();
    void thread_P_17_o_ap_vld();
    void thread_P_1_o();
    void thread_P_1_o_ap_vld();
    void thread_P_2_o();
    void thread_P_2_o_ap_vld();
    void thread_P_3_o();
    void thread_P_3_o_ap_vld();
    void thread_P_4_o();
    void thread_P_4_o_ap_vld();
    void thread_P_5_o();
    void thread_P_5_o_ap_vld();
    void thread_P_6_o();
    void thread_P_6_o_ap_vld();
    void thread_P_7_o();
    void thread_P_7_o_ap_vld();
    void thread_P_8_o();
    void thread_P_8_o_ap_vld();
    void thread_P_9_o();
    void thread_P_9_o_ap_vld();
    void thread_S_0_address0();
    void thread_S_0_address1();
    void thread_S_0_ce0();
    void thread_S_0_ce1();
    void thread_S_0_d0();
    void thread_S_0_d1();
    void thread_S_0_we0();
    void thread_S_0_we1();
    void thread_S_1_address0();
    void thread_S_1_address1();
    void thread_S_1_ce0();
    void thread_S_1_ce1();
    void thread_S_1_d0();
    void thread_S_1_d1();
    void thread_S_1_we0();
    void thread_S_1_we1();
    void thread_S_2_address0();
    void thread_S_2_address1();
    void thread_S_2_ce0();
    void thread_S_2_ce1();
    void thread_S_2_d0();
    void thread_S_2_d1();
    void thread_S_2_we0();
    void thread_S_2_we1();
    void thread_S_3_address0();
    void thread_S_3_address1();
    void thread_S_3_ce0();
    void thread_S_3_ce1();
    void thread_S_3_d0();
    void thread_S_3_d1();
    void thread_S_3_we0();
    void thread_S_3_we1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state2_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ciphertext_address0();
    void thread_ciphertext_address1();
    void thread_ciphertext_ce0();
    void thread_ciphertext_ce1();
    void thread_ciphertext_d0();
    void thread_ciphertext_d1();
    void thread_ciphertext_we0();
    void thread_ciphertext_we1();
    void thread_grp_Blowfish_SetKey_fu_520_ap_start();
    void thread_grp_Encrypt_SetKey_fu_544_ap_start();
    void thread_key_address0();
    void thread_key_ce0();
    void thread_left_1_fu_684_p5();
    void thread_plaintext_address0();
    void thread_plaintext_address1();
    void thread_plaintext_ce0();
    void thread_plaintext_ce1();
    void thread_right_1_fu_693_p5();
    void thread_set_key_read_read_fu_118_p2();
    void thread_trunc_ln237_fu_744_p1();
    void thread_trunc_ln241_fu_778_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
