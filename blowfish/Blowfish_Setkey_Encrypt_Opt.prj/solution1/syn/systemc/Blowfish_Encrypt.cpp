// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Blowfish_Encrypt.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Blowfish_Encrypt::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Blowfish_Encrypt::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state1 = "1";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state2 = "10";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state3 = "100";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state4 = "1000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state5 = "10000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state6 = "100000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state7 = "1000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state8 = "10000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state9 = "100000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state10 = "1000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state11 = "10000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state12 = "100000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<37> Blowfish_Encrypt::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_1 = "1";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_3 = "11";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_4 = "100";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_12 = "10010";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_14 = "10100";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_22 = "100010";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_6 = "110";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_16 = "10110";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_8 = "1000";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_18 = "11000";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_A = "1010";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_1A = "11010";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_C = "1100";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_1C = "11100";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_E = "1110";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_1E = "11110";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_10 = "10000";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_20 = "100000";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_2 = "10";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_5 = "101";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_7 = "111";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_9 = "1001";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_B = "1011";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_D = "1101";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_F = "1111";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_11 = "10001";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_13 = "10011";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_15 = "10101";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_17 = "10111";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_19 = "11001";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_1B = "11011";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_1D = "11101";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_1F = "11111";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_21 = "100001";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_23 = "100011";
const sc_lv<64> Blowfish_Encrypt::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> Blowfish_Encrypt::ap_const_lv64_1 = "1";
const sc_lv<64> Blowfish_Encrypt::ap_const_lv64_2 = "10";
const sc_lv<64> Blowfish_Encrypt::ap_const_lv64_3 = "11";
const sc_lv<64> Blowfish_Encrypt::ap_const_lv64_4 = "100";
const sc_lv<64> Blowfish_Encrypt::ap_const_lv64_5 = "101";
const sc_lv<64> Blowfish_Encrypt::ap_const_lv64_6 = "110";
const sc_lv<64> Blowfish_Encrypt::ap_const_lv64_7 = "111";
const sc_lv<32> Blowfish_Encrypt::ap_const_lv32_24 = "100100";
const bool Blowfish_Encrypt::ap_const_boolean_1 = true;

Blowfish_Encrypt::Blowfish_Encrypt(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_feistel_fu_362 = new feistel("grp_feistel_fu_362");
    grp_feistel_fu_362->ap_clk(ap_clk);
    grp_feistel_fu_362->ap_rst(ap_rst);
    grp_feistel_fu_362->ap_start(grp_feistel_fu_362_ap_start);
    grp_feistel_fu_362->ap_done(grp_feistel_fu_362_ap_done);
    grp_feistel_fu_362->ap_idle(grp_feistel_fu_362_ap_idle);
    grp_feistel_fu_362->ap_ready(grp_feistel_fu_362_ap_ready);
    grp_feistel_fu_362->ap_ce(ap_var_for_const0);
    grp_feistel_fu_362->x(grp_feistel_fu_362_x);
    grp_feistel_fu_362->S_0_address0(grp_feistel_fu_362_S_0_address0);
    grp_feistel_fu_362->S_0_ce0(grp_feistel_fu_362_S_0_ce0);
    grp_feistel_fu_362->S_0_q0(S_0_q0);
    grp_feistel_fu_362->S_1_address0(grp_feistel_fu_362_S_1_address0);
    grp_feistel_fu_362->S_1_ce0(grp_feistel_fu_362_S_1_ce0);
    grp_feistel_fu_362->S_1_q0(S_1_q0);
    grp_feistel_fu_362->S_2_address0(grp_feistel_fu_362_S_2_address0);
    grp_feistel_fu_362->S_2_ce0(grp_feistel_fu_362_S_2_ce0);
    grp_feistel_fu_362->S_2_q0(S_2_q0);
    grp_feistel_fu_362->S_3_address0(grp_feistel_fu_362_S_3_address0);
    grp_feistel_fu_362->S_3_ce0(grp_feistel_fu_362_S_3_ce0);
    grp_feistel_fu_362->S_3_q0(S_3_q0);
    grp_feistel_fu_362->ap_return(grp_feistel_fu_362_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_S_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_feistel_fu_362_S_0_address0 );

    SC_METHOD(thread_S_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_feistel_fu_362_S_0_ce0 );

    SC_METHOD(thread_S_1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_feistel_fu_362_S_1_address0 );

    SC_METHOD(thread_S_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_feistel_fu_362_S_1_ce0 );

    SC_METHOD(thread_S_2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_feistel_fu_362_S_2_address0 );

    SC_METHOD(thread_S_2_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_feistel_fu_362_S_2_ce0 );

    SC_METHOD(thread_S_3_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_feistel_fu_362_S_3_address0 );

    SC_METHOD(thread_S_3_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_feistel_fu_362_S_3_ce0 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state10);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state12);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state14);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state16);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state18);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state20);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state22);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state24);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state26);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state28);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state30);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state32);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state34);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state4);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state6);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state8);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_ciphertext_address0);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_ciphertext_address1);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_ciphertext_ce0);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_ciphertext_ce1);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_ciphertext_d0);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( trunc_ln7_reg_2022 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( trunc_ln_reg_2032 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( left_fu_1385_p2 );
    sensitive << ( right_fu_1590_p2 );

    SC_METHOD(thread_ciphertext_d1);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( xor_ln258_reg_2027 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( xor_ln262_reg_2037 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( xor_ln100_4_fu_1397_p2 );
    sensitive << ( xor_ln99_7_fu_1601_p2 );

    SC_METHOD(thread_ciphertext_we0);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_ciphertext_we1);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_grp_feistel_fu_362_ap_start);
    sensitive << ( grp_feistel_fu_362_ap_start_reg );

    SC_METHOD(thread_grp_feistel_fu_362_x);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_tmp_fu_416_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( p_tmp_1_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( p_tmp_2_fu_451_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( p_tmp_3_fu_542_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( p_tmp_4_fu_663_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( p_tmp_5_fu_687_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( p_tmp_6_fu_699_p2 );
    sensitive << ( p_tmp_7_fu_804_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( p_tmp_8_fu_967_p2 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( p_tmp_9_fu_1038_p2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( p_tmp_10_fu_1050_p2 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( p_tmp_11_fu_1126_p2 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( p_tmp_12_fu_1214_p2 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( p_tmp_13_fu_1238_p2 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( p_tmp_14_fu_1250_p2 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( left_2_fu_1355_p2 );

    SC_METHOD(thread_left_1_fu_407_p5);
    sensitive << ( reg_375 );
    sensitive << ( plaintext_load_1_reg_1702 );
    sensitive << ( plaintext_load_2_reg_1718 );
    sensitive << ( plaintext_load_3_reg_1725 );

    SC_METHOD(thread_left_2_fu_1355_p2);
    sensitive << ( p_tmp_13_reg_2003 );
    sensitive << ( xor_ln94_82_fu_1327_p2 );

    SC_METHOD(thread_left_fu_1385_p2);
    sensitive << ( P_17_read );
    sensitive << ( left_2_fu_1355_p2 );

    SC_METHOD(thread_p_tmp_10_fu_1050_p2);
    sensitive << ( p_tmp_8_reg_1907 );
    sensitive << ( xor_ln94_52_fu_1044_p2 );

    SC_METHOD(thread_p_tmp_11_fu_1126_p2);
    sensitive << ( p_tmp_9_reg_1935 );
    sensitive << ( xor_ln94_58_fu_1098_p2 );

    SC_METHOD(thread_p_tmp_12_fu_1214_p2);
    sensitive << ( p_tmp_10_reg_1948 );
    sensitive << ( xor_ln94_64_fu_1186_p2 );

    SC_METHOD(thread_p_tmp_13_fu_1238_p2);
    sensitive << ( p_tmp_11_reg_1959 );
    sensitive << ( xor_ln94_70_fu_1232_p2 );

    SC_METHOD(thread_p_tmp_14_fu_1250_p2);
    sensitive << ( p_tmp_12_reg_1980 );
    sensitive << ( xor_ln94_76_fu_1244_p2 );

    SC_METHOD(thread_p_tmp_1_fu_438_p2);
    sensitive << ( xor_ln94_fu_432_p2 );
    sensitive << ( right_1_fu_423_p5 );

    SC_METHOD(thread_p_tmp_2_fu_451_p2);
    sensitive << ( p_tmp_reg_1766 );
    sensitive << ( xor_ln94_4_fu_445_p2 );

    SC_METHOD(thread_p_tmp_3_fu_542_p2);
    sensitive << ( p_tmp_1_reg_1794 );
    sensitive << ( xor_ln94_10_fu_512_p2 );

    SC_METHOD(thread_p_tmp_4_fu_663_p2);
    sensitive << ( p_tmp_2_reg_1807 );
    sensitive << ( xor_ln94_16_fu_633_p2 );

    SC_METHOD(thread_p_tmp_5_fu_687_p2);
    sensitive << ( p_tmp_3_reg_1818 );
    sensitive << ( xor_ln94_22_fu_681_p2 );

    SC_METHOD(thread_p_tmp_6_fu_699_p2);
    sensitive << ( p_tmp_4_reg_1839 );
    sensitive << ( xor_ln94_28_fu_693_p2 );

    SC_METHOD(thread_p_tmp_7_fu_804_p2);
    sensitive << ( p_tmp_5_reg_1862 );
    sensitive << ( xor_ln94_34_fu_776_p2 );

    SC_METHOD(thread_p_tmp_8_fu_967_p2);
    sensitive << ( p_tmp_6_reg_1875 );
    sensitive << ( xor_ln94_40_fu_939_p2 );

    SC_METHOD(thread_p_tmp_9_fu_1038_p2);
    sensitive << ( p_tmp_7_reg_1881 );
    sensitive << ( xor_ln94_46_fu_1032_p2 );

    SC_METHOD(thread_p_tmp_fu_416_p2);
    sensitive << ( P_0_read );
    sensitive << ( left_1_fu_407_p5 );

    SC_METHOD(thread_plaintext_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_plaintext_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_plaintext_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_plaintext_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_right_1_fu_423_p5);
    sensitive << ( reg_375 );
    sensitive << ( plaintext_load_5_reg_1750 );
    sensitive << ( plaintext_load_6_reg_1772 );
    sensitive << ( plaintext_load_7_reg_1779 );

    SC_METHOD(thread_right_fu_1590_p2);
    sensitive << ( p_tmp_14_reg_2016 );
    sensitive << ( xor_ln99_fu_1562_p2 );

    SC_METHOD(thread_tmp_36_fu_563_p4);
    sensitive << ( plaintext_load_1_reg_1702 );
    sensitive << ( plaintext_load_2_reg_1718 );
    sensitive << ( plaintext_load_3_reg_1725 );

    SC_METHOD(thread_tmp_37_fu_573_p3);
    sensitive << ( plaintext_load_2_reg_1718 );
    sensitive << ( plaintext_load_3_reg_1725 );

    SC_METHOD(thread_tmp_38_fu_471_p4);
    sensitive << ( plaintext_load_5_reg_1750 );
    sensitive << ( plaintext_load_6_reg_1772 );
    sensitive << ( plaintext_load_7_reg_1779 );

    SC_METHOD(thread_tmp_39_fu_484_p3);
    sensitive << ( plaintext_load_6_reg_1772 );
    sensitive << ( plaintext_load_7_reg_1779 );

    SC_METHOD(thread_trunc_ln100_1_fu_1365_p1);
    sensitive << ( P_17_read );

    SC_METHOD(thread_trunc_ln100_2_fu_1375_p1);
    sensitive << ( P_17_read );

    SC_METHOD(thread_trunc_ln100_fu_1361_p1);
    sensitive << ( P_17_read );

    SC_METHOD(thread_trunc_ln94_10_fu_582_p1);
    sensitive << ( reg_383 );

    SC_METHOD(thread_trunc_ln94_11_fu_586_p1);
    sensitive << ( P_2_read );

    SC_METHOD(thread_trunc_ln94_12_fu_589_p1);
    sensitive << ( reg_383 );

    SC_METHOD(thread_trunc_ln94_13_fu_716_p1);
    sensitive << ( P_3_read );

    SC_METHOD(thread_trunc_ln94_14_fu_496_p1);
    sensitive << ( P_3_read );

    SC_METHOD(thread_trunc_ln94_15_fu_500_p1);
    sensitive << ( reg_387 );

    SC_METHOD(thread_trunc_ln94_16_fu_504_p1);
    sensitive << ( P_3_read );

    SC_METHOD(thread_trunc_ln94_17_fu_508_p1);
    sensitive << ( reg_387 );

    SC_METHOD(thread_trunc_ln94_18_fu_883_p1);
    sensitive << ( P_4_read );

    SC_METHOD(thread_trunc_ln94_19_fu_617_p1);
    sensitive << ( P_4_read );

    SC_METHOD(thread_trunc_ln94_1_fu_560_p1);
    sensitive << ( P_0_read );

    SC_METHOD(thread_trunc_ln94_20_fu_621_p1);
    sensitive << ( reg_391 );

    SC_METHOD(thread_trunc_ln94_21_fu_625_p1);
    sensitive << ( P_4_read );

    SC_METHOD(thread_trunc_ln94_22_fu_629_p1);
    sensitive << ( reg_391 );

    SC_METHOD(thread_trunc_ln94_23_fu_723_p1);
    sensitive << ( P_5_read );

    SC_METHOD(thread_trunc_ln94_24_fu_726_p1);
    sensitive << ( P_5_read );

    SC_METHOD(thread_trunc_ln94_25_fu_729_p1);
    sensitive << ( reg_395 );

    SC_METHOD(thread_trunc_ln94_26_fu_733_p1);
    sensitive << ( P_5_read );

    SC_METHOD(thread_trunc_ln94_27_fu_736_p1);
    sensitive << ( reg_395 );

    SC_METHOD(thread_trunc_ln94_28_fu_890_p1);
    sensitive << ( P_6_read );

    SC_METHOD(thread_trunc_ln94_29_fu_893_p1);
    sensitive << ( P_6_read );

    SC_METHOD(thread_trunc_ln94_2_fu_570_p1);
    sensitive << ( P_0_read );

    SC_METHOD(thread_trunc_ln94_30_fu_896_p1);
    sensitive << ( reg_399 );

    SC_METHOD(thread_trunc_ln94_31_fu_900_p1);
    sensitive << ( P_6_read );

    SC_METHOD(thread_trunc_ln94_32_fu_903_p1);
    sensitive << ( reg_399 );

    SC_METHOD(thread_trunc_ln94_33_fu_756_p1);
    sensitive << ( P_7_read );

    SC_METHOD(thread_trunc_ln94_34_fu_760_p1);
    sensitive << ( P_7_read );

    SC_METHOD(thread_trunc_ln94_35_fu_764_p1);
    sensitive << ( reg_403 );

    SC_METHOD(thread_trunc_ln94_36_fu_768_p1);
    sensitive << ( P_7_read );

    SC_METHOD(thread_trunc_ln94_37_fu_772_p1);
    sensitive << ( reg_403 );

    SC_METHOD(thread_trunc_ln94_38_fu_1488_p1);
    sensitive << ( P_8_read );

    SC_METHOD(thread_trunc_ln94_39_fu_923_p1);
    sensitive << ( P_8_read );

    SC_METHOD(thread_trunc_ln94_3_fu_709_p1);
    sensitive << ( P_1_read );

    SC_METHOD(thread_trunc_ln94_40_fu_927_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln94_41_fu_931_p1);
    sensitive << ( P_8_read );

    SC_METHOD(thread_trunc_ln94_42_fu_935_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln94_43_fu_1260_p1);
    sensitive << ( P_9_read );

    SC_METHOD(thread_trunc_ln94_44_fu_1056_p1);
    sensitive << ( P_9_read );

    SC_METHOD(thread_trunc_ln94_45_fu_1059_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln94_46_fu_1063_p1);
    sensitive << ( P_9_read );

    SC_METHOD(thread_trunc_ln94_47_fu_1066_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln94_48_fu_1495_p1);
    sensitive << ( P_10_read );

    SC_METHOD(thread_trunc_ln94_49_fu_1144_p1);
    sensitive << ( P_10_read );

    SC_METHOD(thread_trunc_ln94_4_fu_457_p1);
    sensitive << ( P_1_read );

    SC_METHOD(thread_trunc_ln94_50_fu_1147_p1);
    sensitive << ( reg_383 );

    SC_METHOD(thread_trunc_ln94_51_fu_1151_p1);
    sensitive << ( P_10_read );

    SC_METHOD(thread_trunc_ln94_52_fu_1154_p1);
    sensitive << ( reg_383 );

    SC_METHOD(thread_trunc_ln94_53_fu_1267_p1);
    sensitive << ( P_11_read );

    SC_METHOD(thread_trunc_ln94_54_fu_1082_p1);
    sensitive << ( P_11_read );

    SC_METHOD(thread_trunc_ln94_55_fu_1086_p1);
    sensitive << ( reg_387 );

    SC_METHOD(thread_trunc_ln94_56_fu_1090_p1);
    sensitive << ( P_11_read );

    SC_METHOD(thread_trunc_ln94_57_fu_1094_p1);
    sensitive << ( reg_387 );

    SC_METHOD(thread_trunc_ln94_58_fu_1502_p1);
    sensitive << ( P_12_read );

    SC_METHOD(thread_trunc_ln94_59_fu_1170_p1);
    sensitive << ( P_12_read );

    SC_METHOD(thread_trunc_ln94_5_fu_460_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln94_60_fu_1174_p1);
    sensitive << ( reg_391 );

    SC_METHOD(thread_trunc_ln94_61_fu_1178_p1);
    sensitive << ( P_12_read );

    SC_METHOD(thread_trunc_ln94_62_fu_1182_p1);
    sensitive << ( reg_391 );

    SC_METHOD(thread_trunc_ln94_63_fu_1274_p1);
    sensitive << ( P_13_read );

    SC_METHOD(thread_trunc_ln94_64_fu_1277_p1);
    sensitive << ( P_13_read );

    SC_METHOD(thread_trunc_ln94_65_fu_1280_p1);
    sensitive << ( reg_395 );

    SC_METHOD(thread_trunc_ln94_66_fu_1284_p1);
    sensitive << ( P_13_read );

    SC_METHOD(thread_trunc_ln94_67_fu_1287_p1);
    sensitive << ( reg_395 );

    SC_METHOD(thread_trunc_ln94_68_fu_1509_p1);
    sensitive << ( P_14_read );

    SC_METHOD(thread_trunc_ln94_69_fu_1512_p1);
    sensitive << ( P_14_read );

    SC_METHOD(thread_trunc_ln94_6_fu_464_p1);
    sensitive << ( P_1_read );

    SC_METHOD(thread_trunc_ln94_70_fu_1515_p1);
    sensitive << ( reg_399 );

    SC_METHOD(thread_trunc_ln94_71_fu_1519_p1);
    sensitive << ( P_14_read );

    SC_METHOD(thread_trunc_ln94_72_fu_1522_p1);
    sensitive << ( reg_399 );

    SC_METHOD(thread_trunc_ln94_73_fu_1307_p1);
    sensitive << ( P_15_read );

    SC_METHOD(thread_trunc_ln94_74_fu_1311_p1);
    sensitive << ( P_15_read );

    SC_METHOD(thread_trunc_ln94_75_fu_1315_p1);
    sensitive << ( reg_403 );

    SC_METHOD(thread_trunc_ln94_76_fu_1319_p1);
    sensitive << ( P_15_read );

    SC_METHOD(thread_trunc_ln94_77_fu_1323_p1);
    sensitive << ( reg_403 );

    SC_METHOD(thread_trunc_ln94_7_fu_467_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln94_8_fu_876_p1);
    sensitive << ( P_2_read );

    SC_METHOD(thread_trunc_ln94_9_fu_579_p1);
    sensitive << ( P_2_read );

    SC_METHOD(thread_trunc_ln94_fu_869_p1);
    sensitive << ( P_0_read );

    SC_METHOD(thread_trunc_ln95_10_fu_1263_p1);
    sensitive << ( reg_387 );

    SC_METHOD(thread_trunc_ln95_11_fu_1498_p1);
    sensitive << ( reg_391 );

    SC_METHOD(thread_trunc_ln95_12_fu_1270_p1);
    sensitive << ( reg_395 );

    SC_METHOD(thread_trunc_ln95_13_fu_1505_p1);
    sensitive << ( reg_399 );

    SC_METHOD(thread_trunc_ln95_14_fu_1303_p1);
    sensitive << ( reg_403 );

    SC_METHOD(thread_trunc_ln95_15_fu_1538_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln95_1_fu_872_p1);
    sensitive << ( reg_383 );

    SC_METHOD(thread_trunc_ln95_2_fu_712_p1);
    sensitive << ( reg_387 );

    SC_METHOD(thread_trunc_ln95_3_fu_879_p1);
    sensitive << ( reg_391 );

    SC_METHOD(thread_trunc_ln95_4_fu_719_p1);
    sensitive << ( reg_395 );

    SC_METHOD(thread_trunc_ln95_5_fu_886_p1);
    sensitive << ( reg_399 );

    SC_METHOD(thread_trunc_ln95_6_fu_752_p1);
    sensitive << ( reg_403 );

    SC_METHOD(thread_trunc_ln95_7_fu_919_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln95_8_fu_1256_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln95_9_fu_1491_p1);
    sensitive << ( reg_383 );

    SC_METHOD(thread_trunc_ln95_fu_705_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln99_1_fu_1546_p1);
    sensitive << ( P_16_read );

    SC_METHOD(thread_trunc_ln99_2_fu_1550_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln99_3_fu_1554_p1);
    sensitive << ( P_16_read );

    SC_METHOD(thread_trunc_ln99_4_fu_1558_p1);
    sensitive << ( reg_379 );

    SC_METHOD(thread_trunc_ln99_fu_1542_p1);
    sensitive << ( P_16_read );

    SC_METHOD(thread_xor_ln100_1_fu_1379_p2);
    sensitive << ( xor_ln94_84_fu_1338_p2 );
    sensitive << ( xor_ln94_83_fu_1333_p2 );

    SC_METHOD(thread_xor_ln100_3_fu_1391_p2);
    sensitive << ( xor_ln100_1_fu_1379_p2 );
    sensitive << ( trunc_ln100_2_fu_1375_p1 );

    SC_METHOD(thread_xor_ln100_4_fu_1397_p2);
    sensitive << ( xor_ln100_fu_1369_p2 );
    sensitive << ( trunc_ln100_1_fu_1365_p1 );

    SC_METHOD(thread_xor_ln100_fu_1369_p2);
    sensitive << ( xor_ln94_86_fu_1349_p2 );
    sensitive << ( xor_ln94_85_fu_1344_p2 );

    SC_METHOD(thread_xor_ln258_10_fu_1441_p2);
    sensitive << ( trunc_ln95_10_fu_1263_p1 );
    sensitive << ( trunc_ln94_53_fu_1267_p1 );

    SC_METHOD(thread_xor_ln258_11_fu_1447_p2);
    sensitive << ( xor_ln258_10_fu_1441_p2 );
    sensitive << ( xor_ln258_9_fu_1435_p2 );

    SC_METHOD(thread_xor_ln258_12_fu_1453_p2);
    sensitive << ( trunc_ln95_12_fu_1270_p1 );
    sensitive << ( trunc_ln94_63_fu_1274_p1 );

    SC_METHOD(thread_xor_ln258_13_fu_1459_p2);
    sensitive << ( trunc_ln94_73_fu_1307_p1 );
    sensitive << ( trunc_ln100_fu_1361_p1 );

    SC_METHOD(thread_xor_ln258_14_fu_1465_p2);
    sensitive << ( xor_ln258_13_fu_1459_p2 );
    sensitive << ( trunc_ln95_14_fu_1303_p1 );

    SC_METHOD(thread_xor_ln258_15_fu_1471_p2);
    sensitive << ( xor_ln258_14_fu_1465_p2 );
    sensitive << ( xor_ln258_12_fu_1453_p2 );

    SC_METHOD(thread_xor_ln258_16_fu_1477_p2);
    sensitive << ( xor_ln258_15_fu_1471_p2 );
    sensitive << ( xor_ln258_11_fu_1447_p2 );

    SC_METHOD(thread_xor_ln258_1_fu_822_p2);
    sensitive << ( plaintext_load_7_reg_1779 );
    sensitive << ( trunc_ln95_fu_705_p1 );

    SC_METHOD(thread_xor_ln258_2_fu_827_p2);
    sensitive << ( trunc_ln94_3_fu_709_p1 );
    sensitive << ( trunc_ln95_2_fu_712_p1 );

    SC_METHOD(thread_xor_ln258_3_fu_833_p2);
    sensitive << ( xor_ln258_2_fu_827_p2 );
    sensitive << ( xor_ln258_1_fu_822_p2 );

    SC_METHOD(thread_xor_ln258_4_fu_839_p2);
    sensitive << ( trunc_ln94_13_fu_716_p1 );
    sensitive << ( trunc_ln95_4_fu_719_p1 );

    SC_METHOD(thread_xor_ln258_5_fu_845_p2);
    sensitive << ( trunc_ln95_6_fu_752_p1 );
    sensitive << ( trunc_ln94_33_fu_756_p1 );

    SC_METHOD(thread_xor_ln258_6_fu_851_p2);
    sensitive << ( xor_ln258_5_fu_845_p2 );
    sensitive << ( trunc_ln94_23_fu_723_p1 );

    SC_METHOD(thread_xor_ln258_7_fu_857_p2);
    sensitive << ( xor_ln258_6_fu_851_p2 );
    sensitive << ( xor_ln258_4_fu_839_p2 );

    SC_METHOD(thread_xor_ln258_8_fu_863_p2);
    sensitive << ( xor_ln258_7_fu_857_p2 );
    sensitive << ( xor_ln258_3_fu_833_p2 );

    SC_METHOD(thread_xor_ln258_9_fu_1435_p2);
    sensitive << ( trunc_ln95_8_fu_1256_p1 );
    sensitive << ( trunc_ln94_43_fu_1260_p1 );

    SC_METHOD(thread_xor_ln258_fu_1483_p2);
    sensitive << ( xor_ln258_8_reg_1897 );
    sensitive << ( xor_ln258_16_fu_1477_p2 );

    SC_METHOD(thread_xor_ln262_10_fu_1645_p2);
    sensitive << ( trunc_ln94_48_fu_1495_p1 );
    sensitive << ( trunc_ln95_11_fu_1498_p1 );

    SC_METHOD(thread_xor_ln262_11_fu_1651_p2);
    sensitive << ( xor_ln262_10_fu_1645_p2 );
    sensitive << ( xor_ln262_9_fu_1639_p2 );

    SC_METHOD(thread_xor_ln262_12_fu_1657_p2);
    sensitive << ( trunc_ln94_58_fu_1502_p1 );
    sensitive << ( trunc_ln95_13_fu_1505_p1 );

    SC_METHOD(thread_xor_ln262_13_fu_1663_p2);
    sensitive << ( trunc_ln95_15_fu_1538_p1 );
    sensitive << ( trunc_ln99_fu_1542_p1 );

    SC_METHOD(thread_xor_ln262_14_fu_1669_p2);
    sensitive << ( xor_ln262_13_fu_1663_p2 );
    sensitive << ( trunc_ln94_68_fu_1509_p1 );

    SC_METHOD(thread_xor_ln262_15_fu_1675_p2);
    sensitive << ( xor_ln262_14_fu_1669_p2 );
    sensitive << ( xor_ln262_12_fu_1657_p2 );

    SC_METHOD(thread_xor_ln262_16_fu_1681_p2);
    sensitive << ( xor_ln262_15_fu_1675_p2 );
    sensitive << ( xor_ln262_11_fu_1651_p2 );

    SC_METHOD(thread_xor_ln262_1_fu_985_p2);
    sensitive << ( plaintext_load_3_reg_1725 );
    sensitive << ( trunc_ln94_fu_869_p1 );

    SC_METHOD(thread_xor_ln262_2_fu_990_p2);
    sensitive << ( trunc_ln95_1_fu_872_p1 );
    sensitive << ( trunc_ln94_8_fu_876_p1 );

    SC_METHOD(thread_xor_ln262_3_fu_996_p2);
    sensitive << ( xor_ln262_2_fu_990_p2 );
    sensitive << ( xor_ln262_1_fu_985_p2 );

    SC_METHOD(thread_xor_ln262_4_fu_1002_p2);
    sensitive << ( trunc_ln95_3_fu_879_p1 );
    sensitive << ( trunc_ln94_18_fu_883_p1 );

    SC_METHOD(thread_xor_ln262_5_fu_1008_p2);
    sensitive << ( trunc_ln94_28_fu_890_p1 );
    sensitive << ( trunc_ln95_7_fu_919_p1 );

    SC_METHOD(thread_xor_ln262_6_fu_1014_p2);
    sensitive << ( xor_ln262_5_fu_1008_p2 );
    sensitive << ( trunc_ln95_5_fu_886_p1 );

    SC_METHOD(thread_xor_ln262_7_fu_1020_p2);
    sensitive << ( xor_ln262_6_fu_1014_p2 );
    sensitive << ( xor_ln262_4_fu_1002_p2 );

    SC_METHOD(thread_xor_ln262_8_fu_1026_p2);
    sensitive << ( xor_ln262_7_fu_1020_p2 );
    sensitive << ( xor_ln262_3_fu_996_p2 );

    SC_METHOD(thread_xor_ln262_9_fu_1639_p2);
    sensitive << ( trunc_ln94_38_fu_1488_p1 );
    sensitive << ( trunc_ln95_9_fu_1491_p1 );

    SC_METHOD(thread_xor_ln262_fu_1687_p2);
    sensitive << ( xor_ln262_8_reg_1923 );
    sensitive << ( xor_ln262_16_fu_1681_p2 );

    SC_METHOD(thread_xor_ln94_10_fu_512_p2);
    sensitive << ( P_3_read );
    sensitive << ( reg_387 );

    SC_METHOD(thread_xor_ln94_11_fu_518_p2);
    sensitive << ( xor_ln94_2_fu_490_p2 );
    sensitive << ( tmp_39_fu_484_p3 );

    SC_METHOD(thread_xor_ln94_12_fu_524_p2);
    sensitive << ( trunc_ln94_17_fu_508_p1 );
    sensitive << ( trunc_ln94_16_fu_504_p1 );

    SC_METHOD(thread_xor_ln94_13_fu_530_p2);
    sensitive << ( xor_ln94_1_fu_478_p2 );
    sensitive << ( tmp_38_fu_471_p4 );

    SC_METHOD(thread_xor_ln94_14_fu_536_p2);
    sensitive << ( trunc_ln94_15_fu_500_p1 );
    sensitive << ( trunc_ln94_14_fu_496_p1 );

    SC_METHOD(thread_xor_ln94_16_fu_633_p2);
    sensitive << ( P_4_read );
    sensitive << ( reg_391 );

    SC_METHOD(thread_xor_ln94_17_fu_639_p2);
    sensitive << ( xor_ln94_8_fu_611_p2 );
    sensitive << ( xor_ln94_7_fu_605_p2 );

    SC_METHOD(thread_xor_ln94_18_fu_645_p2);
    sensitive << ( trunc_ln94_22_fu_629_p1 );
    sensitive << ( trunc_ln94_21_fu_625_p1 );

    SC_METHOD(thread_xor_ln94_19_fu_651_p2);
    sensitive << ( xor_ln94_6_fu_599_p2 );
    sensitive << ( xor_ln94_5_fu_593_p2 );

    SC_METHOD(thread_xor_ln94_1_fu_478_p2);
    sensitive << ( trunc_ln94_7_fu_467_p1 );
    sensitive << ( trunc_ln94_6_fu_464_p1 );

    SC_METHOD(thread_xor_ln94_20_fu_657_p2);
    sensitive << ( trunc_ln94_20_fu_621_p1 );
    sensitive << ( trunc_ln94_19_fu_617_p1 );

    SC_METHOD(thread_xor_ln94_22_fu_681_p2);
    sensitive << ( P_5_read );
    sensitive << ( reg_395 );

    SC_METHOD(thread_xor_ln94_23_fu_548_p2);
    sensitive << ( xor_ln94_14_fu_536_p2 );
    sensitive << ( xor_ln94_13_fu_530_p2 );

    SC_METHOD(thread_xor_ln94_24_fu_740_p2);
    sensitive << ( trunc_ln94_27_fu_736_p1 );
    sensitive << ( trunc_ln94_26_fu_733_p1 );

    SC_METHOD(thread_xor_ln94_25_fu_554_p2);
    sensitive << ( xor_ln94_12_fu_524_p2 );
    sensitive << ( xor_ln94_11_fu_518_p2 );

    SC_METHOD(thread_xor_ln94_26_fu_746_p2);
    sensitive << ( trunc_ln94_25_fu_729_p1 );
    sensitive << ( trunc_ln94_24_fu_726_p1 );

    SC_METHOD(thread_xor_ln94_28_fu_693_p2);
    sensitive << ( P_6_read );
    sensitive << ( reg_399 );

    SC_METHOD(thread_xor_ln94_29_fu_669_p2);
    sensitive << ( xor_ln94_20_fu_657_p2 );
    sensitive << ( xor_ln94_19_fu_651_p2 );

    SC_METHOD(thread_xor_ln94_2_fu_490_p2);
    sensitive << ( trunc_ln94_5_fu_460_p1 );
    sensitive << ( trunc_ln94_4_fu_457_p1 );

    SC_METHOD(thread_xor_ln94_30_fu_907_p2);
    sensitive << ( trunc_ln94_32_fu_903_p1 );
    sensitive << ( trunc_ln94_31_fu_900_p1 );

    SC_METHOD(thread_xor_ln94_31_fu_675_p2);
    sensitive << ( xor_ln94_18_fu_645_p2 );
    sensitive << ( xor_ln94_17_fu_639_p2 );

    SC_METHOD(thread_xor_ln94_32_fu_913_p2);
    sensitive << ( trunc_ln94_30_fu_896_p1 );
    sensitive << ( trunc_ln94_29_fu_893_p1 );

    SC_METHOD(thread_xor_ln94_34_fu_776_p2);
    sensitive << ( P_7_read );
    sensitive << ( reg_403 );

    SC_METHOD(thread_xor_ln94_35_fu_782_p2);
    sensitive << ( xor_ln94_25_reg_1829 );
    sensitive << ( xor_ln94_26_fu_746_p2 );

    SC_METHOD(thread_xor_ln94_36_fu_787_p2);
    sensitive << ( trunc_ln94_37_fu_772_p1 );
    sensitive << ( trunc_ln94_36_fu_768_p1 );

    SC_METHOD(thread_xor_ln94_37_fu_793_p2);
    sensitive << ( xor_ln94_23_reg_1824 );
    sensitive << ( xor_ln94_24_fu_740_p2 );

    SC_METHOD(thread_xor_ln94_38_fu_798_p2);
    sensitive << ( trunc_ln94_35_fu_764_p1 );
    sensitive << ( trunc_ln94_34_fu_760_p1 );

    SC_METHOD(thread_xor_ln94_40_fu_939_p2);
    sensitive << ( P_8_read );
    sensitive << ( reg_379 );

    SC_METHOD(thread_xor_ln94_41_fu_945_p2);
    sensitive << ( xor_ln94_31_reg_1850 );
    sensitive << ( xor_ln94_32_fu_913_p2 );

    SC_METHOD(thread_xor_ln94_42_fu_950_p2);
    sensitive << ( trunc_ln94_42_fu_935_p1 );
    sensitive << ( trunc_ln94_41_fu_931_p1 );

    SC_METHOD(thread_xor_ln94_43_fu_956_p2);
    sensitive << ( xor_ln94_29_reg_1845 );
    sensitive << ( xor_ln94_30_fu_907_p2 );

    SC_METHOD(thread_xor_ln94_44_fu_961_p2);
    sensitive << ( trunc_ln94_40_fu_927_p1 );
    sensitive << ( trunc_ln94_39_fu_923_p1 );

    SC_METHOD(thread_xor_ln94_46_fu_1032_p2);
    sensitive << ( P_9_read );
    sensitive << ( reg_379 );

    SC_METHOD(thread_xor_ln94_47_fu_810_p2);
    sensitive << ( xor_ln94_38_fu_798_p2 );
    sensitive << ( xor_ln94_37_fu_793_p2 );

    SC_METHOD(thread_xor_ln94_48_fu_1070_p2);
    sensitive << ( trunc_ln94_47_fu_1066_p1 );
    sensitive << ( trunc_ln94_46_fu_1063_p1 );

    SC_METHOD(thread_xor_ln94_49_fu_816_p2);
    sensitive << ( xor_ln94_36_fu_787_p2 );
    sensitive << ( xor_ln94_35_fu_782_p2 );

    SC_METHOD(thread_xor_ln94_4_fu_445_p2);
    sensitive << ( P_2_read );
    sensitive << ( reg_383 );

    SC_METHOD(thread_xor_ln94_50_fu_1076_p2);
    sensitive << ( trunc_ln94_45_fu_1059_p1 );
    sensitive << ( trunc_ln94_44_fu_1056_p1 );

    SC_METHOD(thread_xor_ln94_52_fu_1044_p2);
    sensitive << ( P_10_read );
    sensitive << ( reg_383 );

    SC_METHOD(thread_xor_ln94_53_fu_973_p2);
    sensitive << ( xor_ln94_44_fu_961_p2 );
    sensitive << ( xor_ln94_43_fu_956_p2 );

    SC_METHOD(thread_xor_ln94_54_fu_1158_p2);
    sensitive << ( trunc_ln94_52_fu_1154_p1 );
    sensitive << ( trunc_ln94_51_fu_1151_p1 );

    SC_METHOD(thread_xor_ln94_55_fu_979_p2);
    sensitive << ( xor_ln94_42_fu_950_p2 );
    sensitive << ( xor_ln94_41_fu_945_p2 );

    SC_METHOD(thread_xor_ln94_56_fu_1164_p2);
    sensitive << ( trunc_ln94_50_fu_1147_p1 );
    sensitive << ( trunc_ln94_49_fu_1144_p1 );

    SC_METHOD(thread_xor_ln94_58_fu_1098_p2);
    sensitive << ( P_11_read );
    sensitive << ( reg_387 );

    SC_METHOD(thread_xor_ln94_59_fu_1104_p2);
    sensitive << ( xor_ln94_49_reg_1892 );
    sensitive << ( xor_ln94_50_fu_1076_p2 );

    SC_METHOD(thread_xor_ln94_5_fu_593_p2);
    sensitive << ( tmp_37_fu_573_p3 );
    sensitive << ( trunc_ln94_2_fu_570_p1 );

    SC_METHOD(thread_xor_ln94_60_fu_1109_p2);
    sensitive << ( trunc_ln94_57_fu_1094_p1 );
    sensitive << ( trunc_ln94_56_fu_1090_p1 );

    SC_METHOD(thread_xor_ln94_61_fu_1115_p2);
    sensitive << ( xor_ln94_47_reg_1887 );
    sensitive << ( xor_ln94_48_fu_1070_p2 );

    SC_METHOD(thread_xor_ln94_62_fu_1120_p2);
    sensitive << ( trunc_ln94_55_fu_1086_p1 );
    sensitive << ( trunc_ln94_54_fu_1082_p1 );

    SC_METHOD(thread_xor_ln94_64_fu_1186_p2);
    sensitive << ( P_12_read );
    sensitive << ( reg_391 );

    SC_METHOD(thread_xor_ln94_65_fu_1192_p2);
    sensitive << ( xor_ln94_55_reg_1918 );
    sensitive << ( xor_ln94_56_fu_1164_p2 );

    SC_METHOD(thread_xor_ln94_66_fu_1197_p2);
    sensitive << ( trunc_ln94_62_fu_1182_p1 );
    sensitive << ( trunc_ln94_61_fu_1178_p1 );

    SC_METHOD(thread_xor_ln94_67_fu_1203_p2);
    sensitive << ( xor_ln94_53_reg_1913 );
    sensitive << ( xor_ln94_54_fu_1158_p2 );

    SC_METHOD(thread_xor_ln94_68_fu_1208_p2);
    sensitive << ( trunc_ln94_60_fu_1174_p1 );
    sensitive << ( trunc_ln94_59_fu_1170_p1 );

    SC_METHOD(thread_xor_ln94_6_fu_599_p2);
    sensitive << ( trunc_ln94_12_fu_589_p1 );
    sensitive << ( trunc_ln94_11_fu_586_p1 );

    SC_METHOD(thread_xor_ln94_70_fu_1232_p2);
    sensitive << ( P_13_read );
    sensitive << ( reg_395 );

    SC_METHOD(thread_xor_ln94_71_fu_1132_p2);
    sensitive << ( xor_ln94_62_fu_1120_p2 );
    sensitive << ( xor_ln94_61_fu_1115_p2 );

    SC_METHOD(thread_xor_ln94_72_fu_1291_p2);
    sensitive << ( trunc_ln94_67_fu_1287_p1 );
    sensitive << ( trunc_ln94_66_fu_1284_p1 );

    SC_METHOD(thread_xor_ln94_73_fu_1138_p2);
    sensitive << ( xor_ln94_60_fu_1109_p2 );
    sensitive << ( xor_ln94_59_fu_1104_p2 );

    SC_METHOD(thread_xor_ln94_74_fu_1297_p2);
    sensitive << ( trunc_ln94_65_fu_1280_p1 );
    sensitive << ( trunc_ln94_64_fu_1277_p1 );

    SC_METHOD(thread_xor_ln94_76_fu_1244_p2);
    sensitive << ( P_14_read );
    sensitive << ( reg_399 );

    SC_METHOD(thread_xor_ln94_77_fu_1220_p2);
    sensitive << ( xor_ln94_68_fu_1208_p2 );
    sensitive << ( xor_ln94_67_fu_1203_p2 );

    SC_METHOD(thread_xor_ln94_78_fu_1526_p2);
    sensitive << ( trunc_ln94_72_fu_1522_p1 );
    sensitive << ( trunc_ln94_71_fu_1519_p1 );

    SC_METHOD(thread_xor_ln94_79_fu_1226_p2);
    sensitive << ( xor_ln94_66_fu_1197_p2 );
    sensitive << ( xor_ln94_65_fu_1192_p2 );

    SC_METHOD(thread_xor_ln94_7_fu_605_p2);
    sensitive << ( tmp_36_fu_563_p4 );
    sensitive << ( trunc_ln94_1_fu_560_p1 );

    SC_METHOD(thread_xor_ln94_80_fu_1532_p2);
    sensitive << ( trunc_ln94_70_fu_1515_p1 );
    sensitive << ( trunc_ln94_69_fu_1512_p1 );

    SC_METHOD(thread_xor_ln94_82_fu_1327_p2);
    sensitive << ( P_15_read );
    sensitive << ( reg_403 );

    SC_METHOD(thread_xor_ln94_83_fu_1333_p2);
    sensitive << ( xor_ln94_73_reg_1970 );
    sensitive << ( xor_ln94_74_fu_1297_p2 );

    SC_METHOD(thread_xor_ln94_84_fu_1338_p2);
    sensitive << ( trunc_ln94_77_fu_1323_p1 );
    sensitive << ( trunc_ln94_76_fu_1319_p1 );

    SC_METHOD(thread_xor_ln94_85_fu_1344_p2);
    sensitive << ( xor_ln94_71_reg_1965 );
    sensitive << ( xor_ln94_72_fu_1291_p2 );

    SC_METHOD(thread_xor_ln94_86_fu_1349_p2);
    sensitive << ( trunc_ln94_75_fu_1315_p1 );
    sensitive << ( trunc_ln94_74_fu_1311_p1 );

    SC_METHOD(thread_xor_ln94_8_fu_611_p2);
    sensitive << ( trunc_ln94_10_fu_582_p1 );
    sensitive << ( trunc_ln94_9_fu_579_p1 );

    SC_METHOD(thread_xor_ln94_fu_432_p2);
    sensitive << ( P_1_read );
    sensitive << ( reg_379 );

    SC_METHOD(thread_xor_ln99_1_fu_1568_p2);
    sensitive << ( xor_ln94_79_reg_1991 );
    sensitive << ( xor_ln94_80_fu_1532_p2 );

    SC_METHOD(thread_xor_ln99_2_fu_1573_p2);
    sensitive << ( trunc_ln99_4_fu_1558_p1 );
    sensitive << ( trunc_ln99_3_fu_1554_p1 );

    SC_METHOD(thread_xor_ln99_3_fu_1579_p2);
    sensitive << ( xor_ln94_77_reg_1986 );
    sensitive << ( xor_ln94_78_fu_1526_p2 );

    SC_METHOD(thread_xor_ln99_4_fu_1584_p2);
    sensitive << ( trunc_ln99_2_fu_1550_p1 );
    sensitive << ( trunc_ln99_1_fu_1546_p1 );

    SC_METHOD(thread_xor_ln99_6_fu_1595_p2);
    sensitive << ( xor_ln99_4_fu_1584_p2 );
    sensitive << ( xor_ln99_3_fu_1579_p2 );

    SC_METHOD(thread_xor_ln99_7_fu_1601_p2);
    sensitive << ( xor_ln99_2_fu_1573_p2 );
    sensitive << ( xor_ln99_1_fu_1568_p2 );

    SC_METHOD(thread_xor_ln99_fu_1562_p2);
    sensitive << ( P_16_read );
    sensitive << ( reg_379 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000001";
    grp_feistel_fu_362_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Blowfish_Encrypt_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, plaintext_address0, "(port)plaintext_address0");
    sc_trace(mVcdFile, plaintext_ce0, "(port)plaintext_ce0");
    sc_trace(mVcdFile, plaintext_q0, "(port)plaintext_q0");
    sc_trace(mVcdFile, plaintext_address1, "(port)plaintext_address1");
    sc_trace(mVcdFile, plaintext_ce1, "(port)plaintext_ce1");
    sc_trace(mVcdFile, plaintext_q1, "(port)plaintext_q1");
    sc_trace(mVcdFile, ciphertext_address0, "(port)ciphertext_address0");
    sc_trace(mVcdFile, ciphertext_ce0, "(port)ciphertext_ce0");
    sc_trace(mVcdFile, ciphertext_we0, "(port)ciphertext_we0");
    sc_trace(mVcdFile, ciphertext_d0, "(port)ciphertext_d0");
    sc_trace(mVcdFile, ciphertext_address1, "(port)ciphertext_address1");
    sc_trace(mVcdFile, ciphertext_ce1, "(port)ciphertext_ce1");
    sc_trace(mVcdFile, ciphertext_we1, "(port)ciphertext_we1");
    sc_trace(mVcdFile, ciphertext_d1, "(port)ciphertext_d1");
    sc_trace(mVcdFile, P_0_read, "(port)P_0_read");
    sc_trace(mVcdFile, P_1_read, "(port)P_1_read");
    sc_trace(mVcdFile, P_2_read, "(port)P_2_read");
    sc_trace(mVcdFile, P_3_read, "(port)P_3_read");
    sc_trace(mVcdFile, P_4_read, "(port)P_4_read");
    sc_trace(mVcdFile, P_5_read, "(port)P_5_read");
    sc_trace(mVcdFile, P_6_read, "(port)P_6_read");
    sc_trace(mVcdFile, P_7_read, "(port)P_7_read");
    sc_trace(mVcdFile, P_8_read, "(port)P_8_read");
    sc_trace(mVcdFile, P_9_read, "(port)P_9_read");
    sc_trace(mVcdFile, P_10_read, "(port)P_10_read");
    sc_trace(mVcdFile, P_11_read, "(port)P_11_read");
    sc_trace(mVcdFile, P_12_read, "(port)P_12_read");
    sc_trace(mVcdFile, P_13_read, "(port)P_13_read");
    sc_trace(mVcdFile, P_14_read, "(port)P_14_read");
    sc_trace(mVcdFile, P_15_read, "(port)P_15_read");
    sc_trace(mVcdFile, P_16_read, "(port)P_16_read");
    sc_trace(mVcdFile, P_17_read, "(port)P_17_read");
    sc_trace(mVcdFile, S_0_address0, "(port)S_0_address0");
    sc_trace(mVcdFile, S_0_ce0, "(port)S_0_ce0");
    sc_trace(mVcdFile, S_0_q0, "(port)S_0_q0");
    sc_trace(mVcdFile, S_1_address0, "(port)S_1_address0");
    sc_trace(mVcdFile, S_1_ce0, "(port)S_1_ce0");
    sc_trace(mVcdFile, S_1_q0, "(port)S_1_q0");
    sc_trace(mVcdFile, S_2_address0, "(port)S_2_address0");
    sc_trace(mVcdFile, S_2_ce0, "(port)S_2_ce0");
    sc_trace(mVcdFile, S_2_q0, "(port)S_2_q0");
    sc_trace(mVcdFile, S_3_address0, "(port)S_3_address0");
    sc_trace(mVcdFile, S_3_ce0, "(port)S_3_ce0");
    sc_trace(mVcdFile, S_3_q0, "(port)S_3_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_375, "reg_375");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_feistel_fu_362_ap_return, "grp_feistel_fu_362_ap_return");
    sc_trace(mVcdFile, reg_379, "reg_379");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, reg_383, "reg_383");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, reg_387, "reg_387");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, reg_391, "reg_391");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, reg_395, "reg_395");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, reg_399, "reg_399");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, reg_403, "reg_403");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, plaintext_load_1_reg_1702, "plaintext_load_1_reg_1702");
    sc_trace(mVcdFile, plaintext_load_2_reg_1718, "plaintext_load_2_reg_1718");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, plaintext_load_3_reg_1725, "plaintext_load_3_reg_1725");
    sc_trace(mVcdFile, plaintext_load_5_reg_1750, "plaintext_load_5_reg_1750");
    sc_trace(mVcdFile, p_tmp_fu_416_p2, "p_tmp_fu_416_p2");
    sc_trace(mVcdFile, p_tmp_reg_1766, "p_tmp_reg_1766");
    sc_trace(mVcdFile, plaintext_load_6_reg_1772, "plaintext_load_6_reg_1772");
    sc_trace(mVcdFile, plaintext_load_7_reg_1779, "plaintext_load_7_reg_1779");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, p_tmp_1_fu_438_p2, "p_tmp_1_fu_438_p2");
    sc_trace(mVcdFile, p_tmp_1_reg_1794, "p_tmp_1_reg_1794");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, p_tmp_2_fu_451_p2, "p_tmp_2_fu_451_p2");
    sc_trace(mVcdFile, p_tmp_2_reg_1807, "p_tmp_2_reg_1807");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, p_tmp_3_fu_542_p2, "p_tmp_3_fu_542_p2");
    sc_trace(mVcdFile, p_tmp_3_reg_1818, "p_tmp_3_reg_1818");
    sc_trace(mVcdFile, xor_ln94_23_fu_548_p2, "xor_ln94_23_fu_548_p2");
    sc_trace(mVcdFile, xor_ln94_23_reg_1824, "xor_ln94_23_reg_1824");
    sc_trace(mVcdFile, xor_ln94_25_fu_554_p2, "xor_ln94_25_fu_554_p2");
    sc_trace(mVcdFile, xor_ln94_25_reg_1829, "xor_ln94_25_reg_1829");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, p_tmp_4_fu_663_p2, "p_tmp_4_fu_663_p2");
    sc_trace(mVcdFile, p_tmp_4_reg_1839, "p_tmp_4_reg_1839");
    sc_trace(mVcdFile, xor_ln94_29_fu_669_p2, "xor_ln94_29_fu_669_p2");
    sc_trace(mVcdFile, xor_ln94_29_reg_1845, "xor_ln94_29_reg_1845");
    sc_trace(mVcdFile, xor_ln94_31_fu_675_p2, "xor_ln94_31_fu_675_p2");
    sc_trace(mVcdFile, xor_ln94_31_reg_1850, "xor_ln94_31_reg_1850");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, p_tmp_5_fu_687_p2, "p_tmp_5_fu_687_p2");
    sc_trace(mVcdFile, p_tmp_5_reg_1862, "p_tmp_5_reg_1862");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, p_tmp_6_fu_699_p2, "p_tmp_6_fu_699_p2");
    sc_trace(mVcdFile, p_tmp_6_reg_1875, "p_tmp_6_reg_1875");
    sc_trace(mVcdFile, p_tmp_7_fu_804_p2, "p_tmp_7_fu_804_p2");
    sc_trace(mVcdFile, p_tmp_7_reg_1881, "p_tmp_7_reg_1881");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, xor_ln94_47_fu_810_p2, "xor_ln94_47_fu_810_p2");
    sc_trace(mVcdFile, xor_ln94_47_reg_1887, "xor_ln94_47_reg_1887");
    sc_trace(mVcdFile, xor_ln94_49_fu_816_p2, "xor_ln94_49_fu_816_p2");
    sc_trace(mVcdFile, xor_ln94_49_reg_1892, "xor_ln94_49_reg_1892");
    sc_trace(mVcdFile, xor_ln258_8_fu_863_p2, "xor_ln258_8_fu_863_p2");
    sc_trace(mVcdFile, xor_ln258_8_reg_1897, "xor_ln258_8_reg_1897");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, p_tmp_8_fu_967_p2, "p_tmp_8_fu_967_p2");
    sc_trace(mVcdFile, p_tmp_8_reg_1907, "p_tmp_8_reg_1907");
    sc_trace(mVcdFile, xor_ln94_53_fu_973_p2, "xor_ln94_53_fu_973_p2");
    sc_trace(mVcdFile, xor_ln94_53_reg_1913, "xor_ln94_53_reg_1913");
    sc_trace(mVcdFile, xor_ln94_55_fu_979_p2, "xor_ln94_55_fu_979_p2");
    sc_trace(mVcdFile, xor_ln94_55_reg_1918, "xor_ln94_55_reg_1918");
    sc_trace(mVcdFile, xor_ln262_8_fu_1026_p2, "xor_ln262_8_fu_1026_p2");
    sc_trace(mVcdFile, xor_ln262_8_reg_1923, "xor_ln262_8_reg_1923");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, p_tmp_9_fu_1038_p2, "p_tmp_9_fu_1038_p2");
    sc_trace(mVcdFile, p_tmp_9_reg_1935, "p_tmp_9_reg_1935");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, p_tmp_10_fu_1050_p2, "p_tmp_10_fu_1050_p2");
    sc_trace(mVcdFile, p_tmp_10_reg_1948, "p_tmp_10_reg_1948");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, p_tmp_11_fu_1126_p2, "p_tmp_11_fu_1126_p2");
    sc_trace(mVcdFile, p_tmp_11_reg_1959, "p_tmp_11_reg_1959");
    sc_trace(mVcdFile, xor_ln94_71_fu_1132_p2, "xor_ln94_71_fu_1132_p2");
    sc_trace(mVcdFile, xor_ln94_71_reg_1965, "xor_ln94_71_reg_1965");
    sc_trace(mVcdFile, xor_ln94_73_fu_1138_p2, "xor_ln94_73_fu_1138_p2");
    sc_trace(mVcdFile, xor_ln94_73_reg_1970, "xor_ln94_73_reg_1970");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, p_tmp_12_fu_1214_p2, "p_tmp_12_fu_1214_p2");
    sc_trace(mVcdFile, p_tmp_12_reg_1980, "p_tmp_12_reg_1980");
    sc_trace(mVcdFile, xor_ln94_77_fu_1220_p2, "xor_ln94_77_fu_1220_p2");
    sc_trace(mVcdFile, xor_ln94_77_reg_1986, "xor_ln94_77_reg_1986");
    sc_trace(mVcdFile, xor_ln94_79_fu_1226_p2, "xor_ln94_79_fu_1226_p2");
    sc_trace(mVcdFile, xor_ln94_79_reg_1991, "xor_ln94_79_reg_1991");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, p_tmp_13_fu_1238_p2, "p_tmp_13_fu_1238_p2");
    sc_trace(mVcdFile, p_tmp_13_reg_2003, "p_tmp_13_reg_2003");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, p_tmp_14_fu_1250_p2, "p_tmp_14_fu_1250_p2");
    sc_trace(mVcdFile, p_tmp_14_reg_2016, "p_tmp_14_reg_2016");
    sc_trace(mVcdFile, trunc_ln7_reg_2022, "trunc_ln7_reg_2022");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, xor_ln258_fu_1483_p2, "xor_ln258_fu_1483_p2");
    sc_trace(mVcdFile, xor_ln258_reg_2027, "xor_ln258_reg_2027");
    sc_trace(mVcdFile, trunc_ln_reg_2032, "trunc_ln_reg_2032");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, xor_ln262_fu_1687_p2, "xor_ln262_fu_1687_p2");
    sc_trace(mVcdFile, xor_ln262_reg_2037, "xor_ln262_reg_2037");
    sc_trace(mVcdFile, grp_feistel_fu_362_ap_start, "grp_feistel_fu_362_ap_start");
    sc_trace(mVcdFile, grp_feistel_fu_362_ap_done, "grp_feistel_fu_362_ap_done");
    sc_trace(mVcdFile, grp_feistel_fu_362_ap_idle, "grp_feistel_fu_362_ap_idle");
    sc_trace(mVcdFile, grp_feistel_fu_362_ap_ready, "grp_feistel_fu_362_ap_ready");
    sc_trace(mVcdFile, grp_feistel_fu_362_x, "grp_feistel_fu_362_x");
    sc_trace(mVcdFile, grp_feistel_fu_362_S_0_address0, "grp_feistel_fu_362_S_0_address0");
    sc_trace(mVcdFile, grp_feistel_fu_362_S_0_ce0, "grp_feistel_fu_362_S_0_ce0");
    sc_trace(mVcdFile, grp_feistel_fu_362_S_1_address0, "grp_feistel_fu_362_S_1_address0");
    sc_trace(mVcdFile, grp_feistel_fu_362_S_1_ce0, "grp_feistel_fu_362_S_1_ce0");
    sc_trace(mVcdFile, grp_feistel_fu_362_S_2_address0, "grp_feistel_fu_362_S_2_address0");
    sc_trace(mVcdFile, grp_feistel_fu_362_S_2_ce0, "grp_feistel_fu_362_S_2_ce0");
    sc_trace(mVcdFile, grp_feistel_fu_362_S_3_address0, "grp_feistel_fu_362_S_3_address0");
    sc_trace(mVcdFile, grp_feistel_fu_362_S_3_ce0, "grp_feistel_fu_362_S_3_ce0");
    sc_trace(mVcdFile, grp_feistel_fu_362_ap_start_reg, "grp_feistel_fu_362_ap_start_reg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_NS_fsm_state4, "ap_NS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm_state6, "ap_NS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm_state8, "ap_NS_fsm_state8");
    sc_trace(mVcdFile, ap_NS_fsm_state10, "ap_NS_fsm_state10");
    sc_trace(mVcdFile, ap_NS_fsm_state12, "ap_NS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm_state14, "ap_NS_fsm_state14");
    sc_trace(mVcdFile, ap_NS_fsm_state16, "ap_NS_fsm_state16");
    sc_trace(mVcdFile, ap_NS_fsm_state18, "ap_NS_fsm_state18");
    sc_trace(mVcdFile, ap_NS_fsm_state20, "ap_NS_fsm_state20");
    sc_trace(mVcdFile, ap_NS_fsm_state22, "ap_NS_fsm_state22");
    sc_trace(mVcdFile, ap_NS_fsm_state24, "ap_NS_fsm_state24");
    sc_trace(mVcdFile, ap_NS_fsm_state26, "ap_NS_fsm_state26");
    sc_trace(mVcdFile, ap_NS_fsm_state28, "ap_NS_fsm_state28");
    sc_trace(mVcdFile, ap_NS_fsm_state30, "ap_NS_fsm_state30");
    sc_trace(mVcdFile, ap_NS_fsm_state32, "ap_NS_fsm_state32");
    sc_trace(mVcdFile, ap_NS_fsm_state34, "ap_NS_fsm_state34");
    sc_trace(mVcdFile, left_2_fu_1355_p2, "left_2_fu_1355_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, left_1_fu_407_p5, "left_1_fu_407_p5");
    sc_trace(mVcdFile, xor_ln94_fu_432_p2, "xor_ln94_fu_432_p2");
    sc_trace(mVcdFile, right_1_fu_423_p5, "right_1_fu_423_p5");
    sc_trace(mVcdFile, xor_ln94_4_fu_445_p2, "xor_ln94_4_fu_445_p2");
    sc_trace(mVcdFile, trunc_ln94_7_fu_467_p1, "trunc_ln94_7_fu_467_p1");
    sc_trace(mVcdFile, trunc_ln94_6_fu_464_p1, "trunc_ln94_6_fu_464_p1");
    sc_trace(mVcdFile, trunc_ln94_5_fu_460_p1, "trunc_ln94_5_fu_460_p1");
    sc_trace(mVcdFile, trunc_ln94_4_fu_457_p1, "trunc_ln94_4_fu_457_p1");
    sc_trace(mVcdFile, xor_ln94_2_fu_490_p2, "xor_ln94_2_fu_490_p2");
    sc_trace(mVcdFile, tmp_39_fu_484_p3, "tmp_39_fu_484_p3");
    sc_trace(mVcdFile, trunc_ln94_17_fu_508_p1, "trunc_ln94_17_fu_508_p1");
    sc_trace(mVcdFile, trunc_ln94_16_fu_504_p1, "trunc_ln94_16_fu_504_p1");
    sc_trace(mVcdFile, xor_ln94_1_fu_478_p2, "xor_ln94_1_fu_478_p2");
    sc_trace(mVcdFile, tmp_38_fu_471_p4, "tmp_38_fu_471_p4");
    sc_trace(mVcdFile, trunc_ln94_15_fu_500_p1, "trunc_ln94_15_fu_500_p1");
    sc_trace(mVcdFile, trunc_ln94_14_fu_496_p1, "trunc_ln94_14_fu_496_p1");
    sc_trace(mVcdFile, xor_ln94_10_fu_512_p2, "xor_ln94_10_fu_512_p2");
    sc_trace(mVcdFile, xor_ln94_14_fu_536_p2, "xor_ln94_14_fu_536_p2");
    sc_trace(mVcdFile, xor_ln94_13_fu_530_p2, "xor_ln94_13_fu_530_p2");
    sc_trace(mVcdFile, xor_ln94_12_fu_524_p2, "xor_ln94_12_fu_524_p2");
    sc_trace(mVcdFile, xor_ln94_11_fu_518_p2, "xor_ln94_11_fu_518_p2");
    sc_trace(mVcdFile, tmp_37_fu_573_p3, "tmp_37_fu_573_p3");
    sc_trace(mVcdFile, trunc_ln94_2_fu_570_p1, "trunc_ln94_2_fu_570_p1");
    sc_trace(mVcdFile, trunc_ln94_12_fu_589_p1, "trunc_ln94_12_fu_589_p1");
    sc_trace(mVcdFile, trunc_ln94_11_fu_586_p1, "trunc_ln94_11_fu_586_p1");
    sc_trace(mVcdFile, tmp_36_fu_563_p4, "tmp_36_fu_563_p4");
    sc_trace(mVcdFile, trunc_ln94_1_fu_560_p1, "trunc_ln94_1_fu_560_p1");
    sc_trace(mVcdFile, trunc_ln94_10_fu_582_p1, "trunc_ln94_10_fu_582_p1");
    sc_trace(mVcdFile, trunc_ln94_9_fu_579_p1, "trunc_ln94_9_fu_579_p1");
    sc_trace(mVcdFile, xor_ln94_8_fu_611_p2, "xor_ln94_8_fu_611_p2");
    sc_trace(mVcdFile, xor_ln94_7_fu_605_p2, "xor_ln94_7_fu_605_p2");
    sc_trace(mVcdFile, trunc_ln94_22_fu_629_p1, "trunc_ln94_22_fu_629_p1");
    sc_trace(mVcdFile, trunc_ln94_21_fu_625_p1, "trunc_ln94_21_fu_625_p1");
    sc_trace(mVcdFile, xor_ln94_6_fu_599_p2, "xor_ln94_6_fu_599_p2");
    sc_trace(mVcdFile, xor_ln94_5_fu_593_p2, "xor_ln94_5_fu_593_p2");
    sc_trace(mVcdFile, trunc_ln94_20_fu_621_p1, "trunc_ln94_20_fu_621_p1");
    sc_trace(mVcdFile, trunc_ln94_19_fu_617_p1, "trunc_ln94_19_fu_617_p1");
    sc_trace(mVcdFile, xor_ln94_16_fu_633_p2, "xor_ln94_16_fu_633_p2");
    sc_trace(mVcdFile, xor_ln94_20_fu_657_p2, "xor_ln94_20_fu_657_p2");
    sc_trace(mVcdFile, xor_ln94_19_fu_651_p2, "xor_ln94_19_fu_651_p2");
    sc_trace(mVcdFile, xor_ln94_18_fu_645_p2, "xor_ln94_18_fu_645_p2");
    sc_trace(mVcdFile, xor_ln94_17_fu_639_p2, "xor_ln94_17_fu_639_p2");
    sc_trace(mVcdFile, xor_ln94_22_fu_681_p2, "xor_ln94_22_fu_681_p2");
    sc_trace(mVcdFile, xor_ln94_28_fu_693_p2, "xor_ln94_28_fu_693_p2");
    sc_trace(mVcdFile, trunc_ln94_27_fu_736_p1, "trunc_ln94_27_fu_736_p1");
    sc_trace(mVcdFile, trunc_ln94_26_fu_733_p1, "trunc_ln94_26_fu_733_p1");
    sc_trace(mVcdFile, trunc_ln94_25_fu_729_p1, "trunc_ln94_25_fu_729_p1");
    sc_trace(mVcdFile, trunc_ln94_24_fu_726_p1, "trunc_ln94_24_fu_726_p1");
    sc_trace(mVcdFile, xor_ln94_26_fu_746_p2, "xor_ln94_26_fu_746_p2");
    sc_trace(mVcdFile, trunc_ln94_37_fu_772_p1, "trunc_ln94_37_fu_772_p1");
    sc_trace(mVcdFile, trunc_ln94_36_fu_768_p1, "trunc_ln94_36_fu_768_p1");
    sc_trace(mVcdFile, xor_ln94_24_fu_740_p2, "xor_ln94_24_fu_740_p2");
    sc_trace(mVcdFile, trunc_ln94_35_fu_764_p1, "trunc_ln94_35_fu_764_p1");
    sc_trace(mVcdFile, trunc_ln94_34_fu_760_p1, "trunc_ln94_34_fu_760_p1");
    sc_trace(mVcdFile, xor_ln94_34_fu_776_p2, "xor_ln94_34_fu_776_p2");
    sc_trace(mVcdFile, xor_ln94_38_fu_798_p2, "xor_ln94_38_fu_798_p2");
    sc_trace(mVcdFile, xor_ln94_37_fu_793_p2, "xor_ln94_37_fu_793_p2");
    sc_trace(mVcdFile, xor_ln94_36_fu_787_p2, "xor_ln94_36_fu_787_p2");
    sc_trace(mVcdFile, xor_ln94_35_fu_782_p2, "xor_ln94_35_fu_782_p2");
    sc_trace(mVcdFile, trunc_ln95_fu_705_p1, "trunc_ln95_fu_705_p1");
    sc_trace(mVcdFile, trunc_ln94_3_fu_709_p1, "trunc_ln94_3_fu_709_p1");
    sc_trace(mVcdFile, trunc_ln95_2_fu_712_p1, "trunc_ln95_2_fu_712_p1");
    sc_trace(mVcdFile, xor_ln258_2_fu_827_p2, "xor_ln258_2_fu_827_p2");
    sc_trace(mVcdFile, xor_ln258_1_fu_822_p2, "xor_ln258_1_fu_822_p2");
    sc_trace(mVcdFile, trunc_ln94_13_fu_716_p1, "trunc_ln94_13_fu_716_p1");
    sc_trace(mVcdFile, trunc_ln95_4_fu_719_p1, "trunc_ln95_4_fu_719_p1");
    sc_trace(mVcdFile, trunc_ln95_6_fu_752_p1, "trunc_ln95_6_fu_752_p1");
    sc_trace(mVcdFile, trunc_ln94_33_fu_756_p1, "trunc_ln94_33_fu_756_p1");
    sc_trace(mVcdFile, xor_ln258_5_fu_845_p2, "xor_ln258_5_fu_845_p2");
    sc_trace(mVcdFile, trunc_ln94_23_fu_723_p1, "trunc_ln94_23_fu_723_p1");
    sc_trace(mVcdFile, xor_ln258_6_fu_851_p2, "xor_ln258_6_fu_851_p2");
    sc_trace(mVcdFile, xor_ln258_4_fu_839_p2, "xor_ln258_4_fu_839_p2");
    sc_trace(mVcdFile, xor_ln258_7_fu_857_p2, "xor_ln258_7_fu_857_p2");
    sc_trace(mVcdFile, xor_ln258_3_fu_833_p2, "xor_ln258_3_fu_833_p2");
    sc_trace(mVcdFile, trunc_ln94_32_fu_903_p1, "trunc_ln94_32_fu_903_p1");
    sc_trace(mVcdFile, trunc_ln94_31_fu_900_p1, "trunc_ln94_31_fu_900_p1");
    sc_trace(mVcdFile, trunc_ln94_30_fu_896_p1, "trunc_ln94_30_fu_896_p1");
    sc_trace(mVcdFile, trunc_ln94_29_fu_893_p1, "trunc_ln94_29_fu_893_p1");
    sc_trace(mVcdFile, xor_ln94_32_fu_913_p2, "xor_ln94_32_fu_913_p2");
    sc_trace(mVcdFile, trunc_ln94_42_fu_935_p1, "trunc_ln94_42_fu_935_p1");
    sc_trace(mVcdFile, trunc_ln94_41_fu_931_p1, "trunc_ln94_41_fu_931_p1");
    sc_trace(mVcdFile, xor_ln94_30_fu_907_p2, "xor_ln94_30_fu_907_p2");
    sc_trace(mVcdFile, trunc_ln94_40_fu_927_p1, "trunc_ln94_40_fu_927_p1");
    sc_trace(mVcdFile, trunc_ln94_39_fu_923_p1, "trunc_ln94_39_fu_923_p1");
    sc_trace(mVcdFile, xor_ln94_40_fu_939_p2, "xor_ln94_40_fu_939_p2");
    sc_trace(mVcdFile, xor_ln94_44_fu_961_p2, "xor_ln94_44_fu_961_p2");
    sc_trace(mVcdFile, xor_ln94_43_fu_956_p2, "xor_ln94_43_fu_956_p2");
    sc_trace(mVcdFile, xor_ln94_42_fu_950_p2, "xor_ln94_42_fu_950_p2");
    sc_trace(mVcdFile, xor_ln94_41_fu_945_p2, "xor_ln94_41_fu_945_p2");
    sc_trace(mVcdFile, trunc_ln94_fu_869_p1, "trunc_ln94_fu_869_p1");
    sc_trace(mVcdFile, trunc_ln95_1_fu_872_p1, "trunc_ln95_1_fu_872_p1");
    sc_trace(mVcdFile, trunc_ln94_8_fu_876_p1, "trunc_ln94_8_fu_876_p1");
    sc_trace(mVcdFile, xor_ln262_2_fu_990_p2, "xor_ln262_2_fu_990_p2");
    sc_trace(mVcdFile, xor_ln262_1_fu_985_p2, "xor_ln262_1_fu_985_p2");
    sc_trace(mVcdFile, trunc_ln95_3_fu_879_p1, "trunc_ln95_3_fu_879_p1");
    sc_trace(mVcdFile, trunc_ln94_18_fu_883_p1, "trunc_ln94_18_fu_883_p1");
    sc_trace(mVcdFile, trunc_ln94_28_fu_890_p1, "trunc_ln94_28_fu_890_p1");
    sc_trace(mVcdFile, trunc_ln95_7_fu_919_p1, "trunc_ln95_7_fu_919_p1");
    sc_trace(mVcdFile, xor_ln262_5_fu_1008_p2, "xor_ln262_5_fu_1008_p2");
    sc_trace(mVcdFile, trunc_ln95_5_fu_886_p1, "trunc_ln95_5_fu_886_p1");
    sc_trace(mVcdFile, xor_ln262_6_fu_1014_p2, "xor_ln262_6_fu_1014_p2");
    sc_trace(mVcdFile, xor_ln262_4_fu_1002_p2, "xor_ln262_4_fu_1002_p2");
    sc_trace(mVcdFile, xor_ln262_7_fu_1020_p2, "xor_ln262_7_fu_1020_p2");
    sc_trace(mVcdFile, xor_ln262_3_fu_996_p2, "xor_ln262_3_fu_996_p2");
    sc_trace(mVcdFile, xor_ln94_46_fu_1032_p2, "xor_ln94_46_fu_1032_p2");
    sc_trace(mVcdFile, xor_ln94_52_fu_1044_p2, "xor_ln94_52_fu_1044_p2");
    sc_trace(mVcdFile, trunc_ln94_47_fu_1066_p1, "trunc_ln94_47_fu_1066_p1");
    sc_trace(mVcdFile, trunc_ln94_46_fu_1063_p1, "trunc_ln94_46_fu_1063_p1");
    sc_trace(mVcdFile, trunc_ln94_45_fu_1059_p1, "trunc_ln94_45_fu_1059_p1");
    sc_trace(mVcdFile, trunc_ln94_44_fu_1056_p1, "trunc_ln94_44_fu_1056_p1");
    sc_trace(mVcdFile, xor_ln94_50_fu_1076_p2, "xor_ln94_50_fu_1076_p2");
    sc_trace(mVcdFile, trunc_ln94_57_fu_1094_p1, "trunc_ln94_57_fu_1094_p1");
    sc_trace(mVcdFile, trunc_ln94_56_fu_1090_p1, "trunc_ln94_56_fu_1090_p1");
    sc_trace(mVcdFile, xor_ln94_48_fu_1070_p2, "xor_ln94_48_fu_1070_p2");
    sc_trace(mVcdFile, trunc_ln94_55_fu_1086_p1, "trunc_ln94_55_fu_1086_p1");
    sc_trace(mVcdFile, trunc_ln94_54_fu_1082_p1, "trunc_ln94_54_fu_1082_p1");
    sc_trace(mVcdFile, xor_ln94_58_fu_1098_p2, "xor_ln94_58_fu_1098_p2");
    sc_trace(mVcdFile, xor_ln94_62_fu_1120_p2, "xor_ln94_62_fu_1120_p2");
    sc_trace(mVcdFile, xor_ln94_61_fu_1115_p2, "xor_ln94_61_fu_1115_p2");
    sc_trace(mVcdFile, xor_ln94_60_fu_1109_p2, "xor_ln94_60_fu_1109_p2");
    sc_trace(mVcdFile, xor_ln94_59_fu_1104_p2, "xor_ln94_59_fu_1104_p2");
    sc_trace(mVcdFile, trunc_ln94_52_fu_1154_p1, "trunc_ln94_52_fu_1154_p1");
    sc_trace(mVcdFile, trunc_ln94_51_fu_1151_p1, "trunc_ln94_51_fu_1151_p1");
    sc_trace(mVcdFile, trunc_ln94_50_fu_1147_p1, "trunc_ln94_50_fu_1147_p1");
    sc_trace(mVcdFile, trunc_ln94_49_fu_1144_p1, "trunc_ln94_49_fu_1144_p1");
    sc_trace(mVcdFile, xor_ln94_56_fu_1164_p2, "xor_ln94_56_fu_1164_p2");
    sc_trace(mVcdFile, trunc_ln94_62_fu_1182_p1, "trunc_ln94_62_fu_1182_p1");
    sc_trace(mVcdFile, trunc_ln94_61_fu_1178_p1, "trunc_ln94_61_fu_1178_p1");
    sc_trace(mVcdFile, xor_ln94_54_fu_1158_p2, "xor_ln94_54_fu_1158_p2");
    sc_trace(mVcdFile, trunc_ln94_60_fu_1174_p1, "trunc_ln94_60_fu_1174_p1");
    sc_trace(mVcdFile, trunc_ln94_59_fu_1170_p1, "trunc_ln94_59_fu_1170_p1");
    sc_trace(mVcdFile, xor_ln94_64_fu_1186_p2, "xor_ln94_64_fu_1186_p2");
    sc_trace(mVcdFile, xor_ln94_68_fu_1208_p2, "xor_ln94_68_fu_1208_p2");
    sc_trace(mVcdFile, xor_ln94_67_fu_1203_p2, "xor_ln94_67_fu_1203_p2");
    sc_trace(mVcdFile, xor_ln94_66_fu_1197_p2, "xor_ln94_66_fu_1197_p2");
    sc_trace(mVcdFile, xor_ln94_65_fu_1192_p2, "xor_ln94_65_fu_1192_p2");
    sc_trace(mVcdFile, xor_ln94_70_fu_1232_p2, "xor_ln94_70_fu_1232_p2");
    sc_trace(mVcdFile, xor_ln94_76_fu_1244_p2, "xor_ln94_76_fu_1244_p2");
    sc_trace(mVcdFile, trunc_ln94_67_fu_1287_p1, "trunc_ln94_67_fu_1287_p1");
    sc_trace(mVcdFile, trunc_ln94_66_fu_1284_p1, "trunc_ln94_66_fu_1284_p1");
    sc_trace(mVcdFile, trunc_ln94_65_fu_1280_p1, "trunc_ln94_65_fu_1280_p1");
    sc_trace(mVcdFile, trunc_ln94_64_fu_1277_p1, "trunc_ln94_64_fu_1277_p1");
    sc_trace(mVcdFile, xor_ln94_74_fu_1297_p2, "xor_ln94_74_fu_1297_p2");
    sc_trace(mVcdFile, trunc_ln94_77_fu_1323_p1, "trunc_ln94_77_fu_1323_p1");
    sc_trace(mVcdFile, trunc_ln94_76_fu_1319_p1, "trunc_ln94_76_fu_1319_p1");
    sc_trace(mVcdFile, xor_ln94_72_fu_1291_p2, "xor_ln94_72_fu_1291_p2");
    sc_trace(mVcdFile, trunc_ln94_75_fu_1315_p1, "trunc_ln94_75_fu_1315_p1");
    sc_trace(mVcdFile, trunc_ln94_74_fu_1311_p1, "trunc_ln94_74_fu_1311_p1");
    sc_trace(mVcdFile, xor_ln94_82_fu_1327_p2, "xor_ln94_82_fu_1327_p2");
    sc_trace(mVcdFile, xor_ln94_86_fu_1349_p2, "xor_ln94_86_fu_1349_p2");
    sc_trace(mVcdFile, xor_ln94_85_fu_1344_p2, "xor_ln94_85_fu_1344_p2");
    sc_trace(mVcdFile, xor_ln94_84_fu_1338_p2, "xor_ln94_84_fu_1338_p2");
    sc_trace(mVcdFile, xor_ln94_83_fu_1333_p2, "xor_ln94_83_fu_1333_p2");
    sc_trace(mVcdFile, xor_ln100_1_fu_1379_p2, "xor_ln100_1_fu_1379_p2");
    sc_trace(mVcdFile, trunc_ln100_2_fu_1375_p1, "trunc_ln100_2_fu_1375_p1");
    sc_trace(mVcdFile, xor_ln100_fu_1369_p2, "xor_ln100_fu_1369_p2");
    sc_trace(mVcdFile, trunc_ln100_1_fu_1365_p1, "trunc_ln100_1_fu_1365_p1");
    sc_trace(mVcdFile, left_fu_1385_p2, "left_fu_1385_p2");
    sc_trace(mVcdFile, xor_ln100_4_fu_1397_p2, "xor_ln100_4_fu_1397_p2");
    sc_trace(mVcdFile, xor_ln100_3_fu_1391_p2, "xor_ln100_3_fu_1391_p2");
    sc_trace(mVcdFile, trunc_ln95_8_fu_1256_p1, "trunc_ln95_8_fu_1256_p1");
    sc_trace(mVcdFile, trunc_ln94_43_fu_1260_p1, "trunc_ln94_43_fu_1260_p1");
    sc_trace(mVcdFile, trunc_ln95_10_fu_1263_p1, "trunc_ln95_10_fu_1263_p1");
    sc_trace(mVcdFile, trunc_ln94_53_fu_1267_p1, "trunc_ln94_53_fu_1267_p1");
    sc_trace(mVcdFile, xor_ln258_10_fu_1441_p2, "xor_ln258_10_fu_1441_p2");
    sc_trace(mVcdFile, xor_ln258_9_fu_1435_p2, "xor_ln258_9_fu_1435_p2");
    sc_trace(mVcdFile, trunc_ln95_12_fu_1270_p1, "trunc_ln95_12_fu_1270_p1");
    sc_trace(mVcdFile, trunc_ln94_63_fu_1274_p1, "trunc_ln94_63_fu_1274_p1");
    sc_trace(mVcdFile, trunc_ln94_73_fu_1307_p1, "trunc_ln94_73_fu_1307_p1");
    sc_trace(mVcdFile, trunc_ln100_fu_1361_p1, "trunc_ln100_fu_1361_p1");
    sc_trace(mVcdFile, xor_ln258_13_fu_1459_p2, "xor_ln258_13_fu_1459_p2");
    sc_trace(mVcdFile, trunc_ln95_14_fu_1303_p1, "trunc_ln95_14_fu_1303_p1");
    sc_trace(mVcdFile, xor_ln258_14_fu_1465_p2, "xor_ln258_14_fu_1465_p2");
    sc_trace(mVcdFile, xor_ln258_12_fu_1453_p2, "xor_ln258_12_fu_1453_p2");
    sc_trace(mVcdFile, xor_ln258_15_fu_1471_p2, "xor_ln258_15_fu_1471_p2");
    sc_trace(mVcdFile, xor_ln258_11_fu_1447_p2, "xor_ln258_11_fu_1447_p2");
    sc_trace(mVcdFile, xor_ln258_16_fu_1477_p2, "xor_ln258_16_fu_1477_p2");
    sc_trace(mVcdFile, trunc_ln94_72_fu_1522_p1, "trunc_ln94_72_fu_1522_p1");
    sc_trace(mVcdFile, trunc_ln94_71_fu_1519_p1, "trunc_ln94_71_fu_1519_p1");
    sc_trace(mVcdFile, trunc_ln94_70_fu_1515_p1, "trunc_ln94_70_fu_1515_p1");
    sc_trace(mVcdFile, trunc_ln94_69_fu_1512_p1, "trunc_ln94_69_fu_1512_p1");
    sc_trace(mVcdFile, xor_ln94_80_fu_1532_p2, "xor_ln94_80_fu_1532_p2");
    sc_trace(mVcdFile, trunc_ln99_4_fu_1558_p1, "trunc_ln99_4_fu_1558_p1");
    sc_trace(mVcdFile, trunc_ln99_3_fu_1554_p1, "trunc_ln99_3_fu_1554_p1");
    sc_trace(mVcdFile, xor_ln94_78_fu_1526_p2, "xor_ln94_78_fu_1526_p2");
    sc_trace(mVcdFile, trunc_ln99_2_fu_1550_p1, "trunc_ln99_2_fu_1550_p1");
    sc_trace(mVcdFile, trunc_ln99_1_fu_1546_p1, "trunc_ln99_1_fu_1546_p1");
    sc_trace(mVcdFile, xor_ln99_fu_1562_p2, "xor_ln99_fu_1562_p2");
    sc_trace(mVcdFile, xor_ln99_4_fu_1584_p2, "xor_ln99_4_fu_1584_p2");
    sc_trace(mVcdFile, xor_ln99_3_fu_1579_p2, "xor_ln99_3_fu_1579_p2");
    sc_trace(mVcdFile, xor_ln99_2_fu_1573_p2, "xor_ln99_2_fu_1573_p2");
    sc_trace(mVcdFile, xor_ln99_1_fu_1568_p2, "xor_ln99_1_fu_1568_p2");
    sc_trace(mVcdFile, right_fu_1590_p2, "right_fu_1590_p2");
    sc_trace(mVcdFile, xor_ln99_7_fu_1601_p2, "xor_ln99_7_fu_1601_p2");
    sc_trace(mVcdFile, xor_ln99_6_fu_1595_p2, "xor_ln99_6_fu_1595_p2");
    sc_trace(mVcdFile, trunc_ln94_38_fu_1488_p1, "trunc_ln94_38_fu_1488_p1");
    sc_trace(mVcdFile, trunc_ln95_9_fu_1491_p1, "trunc_ln95_9_fu_1491_p1");
    sc_trace(mVcdFile, trunc_ln94_48_fu_1495_p1, "trunc_ln94_48_fu_1495_p1");
    sc_trace(mVcdFile, trunc_ln95_11_fu_1498_p1, "trunc_ln95_11_fu_1498_p1");
    sc_trace(mVcdFile, xor_ln262_10_fu_1645_p2, "xor_ln262_10_fu_1645_p2");
    sc_trace(mVcdFile, xor_ln262_9_fu_1639_p2, "xor_ln262_9_fu_1639_p2");
    sc_trace(mVcdFile, trunc_ln94_58_fu_1502_p1, "trunc_ln94_58_fu_1502_p1");
    sc_trace(mVcdFile, trunc_ln95_13_fu_1505_p1, "trunc_ln95_13_fu_1505_p1");
    sc_trace(mVcdFile, trunc_ln95_15_fu_1538_p1, "trunc_ln95_15_fu_1538_p1");
    sc_trace(mVcdFile, trunc_ln99_fu_1542_p1, "trunc_ln99_fu_1542_p1");
    sc_trace(mVcdFile, xor_ln262_13_fu_1663_p2, "xor_ln262_13_fu_1663_p2");
    sc_trace(mVcdFile, trunc_ln94_68_fu_1509_p1, "trunc_ln94_68_fu_1509_p1");
    sc_trace(mVcdFile, xor_ln262_14_fu_1669_p2, "xor_ln262_14_fu_1669_p2");
    sc_trace(mVcdFile, xor_ln262_12_fu_1657_p2, "xor_ln262_12_fu_1657_p2");
    sc_trace(mVcdFile, xor_ln262_15_fu_1675_p2, "xor_ln262_15_fu_1675_p2");
    sc_trace(mVcdFile, xor_ln262_11_fu_1651_p2, "xor_ln262_11_fu_1651_p2");
    sc_trace(mVcdFile, xor_ln262_16_fu_1681_p2, "xor_ln262_16_fu_1681_p2");
#endif

    }
}

Blowfish_Encrypt::~Blowfish_Encrypt() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_feistel_fu_362;
}

void Blowfish_Encrypt::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Blowfish_Encrypt::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_feistel_fu_362_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state4.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state6.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state8.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state10.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state12.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state14.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state16.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state18.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state20.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state22.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state24.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state26.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state28.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state30.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state32.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state34.read())))) {
            grp_feistel_fu_362_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_feistel_fu_362_ap_ready.read())) {
            grp_feistel_fu_362_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        p_tmp_10_reg_1948 = p_tmp_10_fu_1050_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        p_tmp_11_reg_1959 = p_tmp_11_fu_1126_p2.read();
        xor_ln94_71_reg_1965 = xor_ln94_71_fu_1132_p2.read();
        xor_ln94_73_reg_1970 = xor_ln94_73_fu_1138_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        p_tmp_12_reg_1980 = p_tmp_12_fu_1214_p2.read();
        xor_ln94_77_reg_1986 = xor_ln94_77_fu_1220_p2.read();
        xor_ln94_79_reg_1991 = xor_ln94_79_fu_1226_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        p_tmp_13_reg_2003 = p_tmp_13_fu_1238_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        p_tmp_14_reg_2016 = p_tmp_14_fu_1250_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p_tmp_1_reg_1794 = p_tmp_1_fu_438_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_tmp_2_reg_1807 = p_tmp_2_fu_451_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        p_tmp_3_reg_1818 = p_tmp_3_fu_542_p2.read();
        xor_ln94_23_reg_1824 = xor_ln94_23_fu_548_p2.read();
        xor_ln94_25_reg_1829 = xor_ln94_25_fu_554_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_tmp_4_reg_1839 = p_tmp_4_fu_663_p2.read();
        xor_ln94_29_reg_1845 = xor_ln94_29_fu_669_p2.read();
        xor_ln94_31_reg_1850 = xor_ln94_31_fu_675_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        p_tmp_5_reg_1862 = p_tmp_5_fu_687_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        p_tmp_6_reg_1875 = p_tmp_6_fu_699_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        p_tmp_7_reg_1881 = p_tmp_7_fu_804_p2.read();
        xor_ln258_8_reg_1897 = xor_ln258_8_fu_863_p2.read();
        xor_ln94_47_reg_1887 = xor_ln94_47_fu_810_p2.read();
        xor_ln94_49_reg_1892 = xor_ln94_49_fu_816_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        p_tmp_8_reg_1907 = p_tmp_8_fu_967_p2.read();
        xor_ln262_8_reg_1923 = xor_ln262_8_fu_1026_p2.read();
        xor_ln94_53_reg_1913 = xor_ln94_53_fu_973_p2.read();
        xor_ln94_55_reg_1918 = xor_ln94_55_fu_979_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        p_tmp_9_reg_1935 = p_tmp_9_fu_1038_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_tmp_reg_1766 = p_tmp_fu_416_p2.read();
        plaintext_load_5_reg_1750 = plaintext_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        plaintext_load_1_reg_1702 = plaintext_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        plaintext_load_2_reg_1718 = plaintext_q0.read();
        plaintext_load_3_reg_1725 = plaintext_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        plaintext_load_6_reg_1772 = plaintext_q0.read();
        plaintext_load_7_reg_1779 = plaintext_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        reg_375 = plaintext_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        reg_379 = grp_feistel_fu_362_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        reg_383 = grp_feistel_fu_362_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_387 = grp_feistel_fu_362_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        reg_391 = grp_feistel_fu_362_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        reg_395 = grp_feistel_fu_362_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        reg_399 = grp_feistel_fu_362_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        reg_403 = grp_feistel_fu_362_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        trunc_ln7_reg_2022 = xor_ln100_3_fu_1391_p2.read().range(15, 8);
        xor_ln258_reg_2027 = xor_ln258_fu_1483_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        trunc_ln_reg_2032 = xor_ln99_6_fu_1595_p2.read().range(15, 8);
        xor_ln262_reg_2037 = xor_ln262_fu_1687_p2.read();
    }
}

void Blowfish_Encrypt::thread_S_0_address0() {
    S_0_address0 = grp_feistel_fu_362_S_0_address0.read();
}

void Blowfish_Encrypt::thread_S_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        S_0_ce0 = grp_feistel_fu_362_S_0_ce0.read();
    } else {
        S_0_ce0 = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_S_1_address0() {
    S_1_address0 = grp_feistel_fu_362_S_1_address0.read();
}

void Blowfish_Encrypt::thread_S_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        S_1_ce0 = grp_feistel_fu_362_S_1_ce0.read();
    } else {
        S_1_ce0 = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_S_2_address0() {
    S_2_address0 = grp_feistel_fu_362_S_2_address0.read();
}

void Blowfish_Encrypt::thread_S_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        S_2_ce0 = grp_feistel_fu_362_S_2_ce0.read();
    } else {
        S_2_ce0 = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_S_3_address0() {
    S_3_address0 = grp_feistel_fu_362_S_3_address0.read();
}

void Blowfish_Encrypt::thread_S_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        S_3_ce0 = grp_feistel_fu_362_S_3_ce0.read();
    } else {
        S_3_ce0 = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Blowfish_Encrypt::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state10() {
    ap_NS_fsm_state10 = ap_NS_fsm.read()[9];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state12() {
    ap_NS_fsm_state12 = ap_NS_fsm.read()[11];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state14() {
    ap_NS_fsm_state14 = ap_NS_fsm.read()[13];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state16() {
    ap_NS_fsm_state16 = ap_NS_fsm.read()[15];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state18() {
    ap_NS_fsm_state18 = ap_NS_fsm.read()[17];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state20() {
    ap_NS_fsm_state20 = ap_NS_fsm.read()[19];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state22() {
    ap_NS_fsm_state22 = ap_NS_fsm.read()[21];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state24() {
    ap_NS_fsm_state24 = ap_NS_fsm.read()[23];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state26() {
    ap_NS_fsm_state26 = ap_NS_fsm.read()[25];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state28() {
    ap_NS_fsm_state28 = ap_NS_fsm.read()[27];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state30() {
    ap_NS_fsm_state30 = ap_NS_fsm.read()[29];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state32() {
    ap_NS_fsm_state32 = ap_NS_fsm.read()[31];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state34() {
    ap_NS_fsm_state34 = ap_NS_fsm.read()[33];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state4() {
    ap_NS_fsm_state4 = ap_NS_fsm.read()[3];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state6() {
    ap_NS_fsm_state6 = ap_NS_fsm.read()[5];
}

void Blowfish_Encrypt::thread_ap_NS_fsm_state8() {
    ap_NS_fsm_state8 = ap_NS_fsm.read()[7];
}

void Blowfish_Encrypt::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_ciphertext_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        ciphertext_address0 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ciphertext_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        ciphertext_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        ciphertext_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        ciphertext_address0 = "XXX";
    }
}

void Blowfish_Encrypt::thread_ciphertext_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        ciphertext_address1 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ciphertext_address1 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        ciphertext_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        ciphertext_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        ciphertext_address1 = "XXX";
    }
}

void Blowfish_Encrypt::thread_ciphertext_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        ciphertext_ce0 = ap_const_logic_1;
    } else {
        ciphertext_ce0 = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_ciphertext_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        ciphertext_ce1 = ap_const_logic_1;
    } else {
        ciphertext_ce1 = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_ciphertext_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        ciphertext_d0 = trunc_ln_reg_2032.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ciphertext_d0 = right_fu_1590_p2.read().range(31, 24);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        ciphertext_d0 = trunc_ln7_reg_2022.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        ciphertext_d0 = left_fu_1385_p2.read().range(31, 24);
    } else {
        ciphertext_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Blowfish_Encrypt::thread_ciphertext_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        ciphertext_d1 = xor_ln262_reg_2037.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ciphertext_d1 = xor_ln99_7_fu_1601_p2.read().range(23, 16);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        ciphertext_d1 = xor_ln258_reg_2027.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        ciphertext_d1 = xor_ln100_4_fu_1397_p2.read().range(23, 16);
    } else {
        ciphertext_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Blowfish_Encrypt::thread_ciphertext_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        ciphertext_we0 = ap_const_logic_1;
    } else {
        ciphertext_we0 = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_ciphertext_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        ciphertext_we1 = ap_const_logic_1;
    } else {
        ciphertext_we1 = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_grp_feistel_fu_362_ap_start() {
    grp_feistel_fu_362_ap_start = grp_feistel_fu_362_ap_start_reg.read();
}

void Blowfish_Encrypt::thread_grp_feistel_fu_362_x() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_feistel_fu_362_x = left_2_fu_1355_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        grp_feistel_fu_362_x = p_tmp_14_fu_1250_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_feistel_fu_362_x = p_tmp_13_fu_1238_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_feistel_fu_362_x = p_tmp_12_fu_1214_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_feistel_fu_362_x = p_tmp_11_fu_1126_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_feistel_fu_362_x = p_tmp_10_fu_1050_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_feistel_fu_362_x = p_tmp_9_fu_1038_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_feistel_fu_362_x = p_tmp_8_fu_967_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_feistel_fu_362_x = p_tmp_7_fu_804_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_feistel_fu_362_x = p_tmp_6_fu_699_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_feistel_fu_362_x = p_tmp_5_fu_687_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_feistel_fu_362_x = p_tmp_4_fu_663_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_feistel_fu_362_x = p_tmp_3_fu_542_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_feistel_fu_362_x = p_tmp_2_fu_451_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_feistel_fu_362_x = p_tmp_1_fu_438_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_feistel_fu_362_x = p_tmp_fu_416_p2.read();
    } else {
        grp_feistel_fu_362_x =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Blowfish_Encrypt::thread_left_1_fu_407_p5() {
    left_1_fu_407_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(reg_375.read(), plaintext_load_1_reg_1702.read()), plaintext_load_2_reg_1718.read()), plaintext_load_3_reg_1725.read());
}

void Blowfish_Encrypt::thread_left_2_fu_1355_p2() {
    left_2_fu_1355_p2 = (xor_ln94_82_fu_1327_p2.read() ^ p_tmp_13_reg_2003.read());
}

void Blowfish_Encrypt::thread_left_fu_1385_p2() {
    left_fu_1385_p2 = (left_2_fu_1355_p2.read() ^ P_17_read.read());
}

void Blowfish_Encrypt::thread_p_tmp_10_fu_1050_p2() {
    p_tmp_10_fu_1050_p2 = (xor_ln94_52_fu_1044_p2.read() ^ p_tmp_8_reg_1907.read());
}

void Blowfish_Encrypt::thread_p_tmp_11_fu_1126_p2() {
    p_tmp_11_fu_1126_p2 = (xor_ln94_58_fu_1098_p2.read() ^ p_tmp_9_reg_1935.read());
}

void Blowfish_Encrypt::thread_p_tmp_12_fu_1214_p2() {
    p_tmp_12_fu_1214_p2 = (xor_ln94_64_fu_1186_p2.read() ^ p_tmp_10_reg_1948.read());
}

void Blowfish_Encrypt::thread_p_tmp_13_fu_1238_p2() {
    p_tmp_13_fu_1238_p2 = (xor_ln94_70_fu_1232_p2.read() ^ p_tmp_11_reg_1959.read());
}

void Blowfish_Encrypt::thread_p_tmp_14_fu_1250_p2() {
    p_tmp_14_fu_1250_p2 = (xor_ln94_76_fu_1244_p2.read() ^ p_tmp_12_reg_1980.read());
}

void Blowfish_Encrypt::thread_p_tmp_1_fu_438_p2() {
    p_tmp_1_fu_438_p2 = (xor_ln94_fu_432_p2.read() ^ right_1_fu_423_p5.read());
}

void Blowfish_Encrypt::thread_p_tmp_2_fu_451_p2() {
    p_tmp_2_fu_451_p2 = (xor_ln94_4_fu_445_p2.read() ^ p_tmp_reg_1766.read());
}

void Blowfish_Encrypt::thread_p_tmp_3_fu_542_p2() {
    p_tmp_3_fu_542_p2 = (xor_ln94_10_fu_512_p2.read() ^ p_tmp_1_reg_1794.read());
}

void Blowfish_Encrypt::thread_p_tmp_4_fu_663_p2() {
    p_tmp_4_fu_663_p2 = (xor_ln94_16_fu_633_p2.read() ^ p_tmp_2_reg_1807.read());
}

void Blowfish_Encrypt::thread_p_tmp_5_fu_687_p2() {
    p_tmp_5_fu_687_p2 = (xor_ln94_22_fu_681_p2.read() ^ p_tmp_3_reg_1818.read());
}

void Blowfish_Encrypt::thread_p_tmp_6_fu_699_p2() {
    p_tmp_6_fu_699_p2 = (xor_ln94_28_fu_693_p2.read() ^ p_tmp_4_reg_1839.read());
}

void Blowfish_Encrypt::thread_p_tmp_7_fu_804_p2() {
    p_tmp_7_fu_804_p2 = (xor_ln94_34_fu_776_p2.read() ^ p_tmp_5_reg_1862.read());
}

void Blowfish_Encrypt::thread_p_tmp_8_fu_967_p2() {
    p_tmp_8_fu_967_p2 = (xor_ln94_40_fu_939_p2.read() ^ p_tmp_6_reg_1875.read());
}

void Blowfish_Encrypt::thread_p_tmp_9_fu_1038_p2() {
    p_tmp_9_fu_1038_p2 = (xor_ln94_46_fu_1032_p2.read() ^ p_tmp_7_reg_1881.read());
}

void Blowfish_Encrypt::thread_p_tmp_fu_416_p2() {
    p_tmp_fu_416_p2 = (left_1_fu_407_p5.read() ^ P_0_read.read());
}

void Blowfish_Encrypt::thread_plaintext_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        plaintext_address0 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        plaintext_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        plaintext_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        plaintext_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        plaintext_address0 = "XXX";
    }
}

void Blowfish_Encrypt::thread_plaintext_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        plaintext_address1 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        plaintext_address1 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        plaintext_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        plaintext_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        plaintext_address1 = "XXX";
    }
}

void Blowfish_Encrypt::thread_plaintext_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        plaintext_ce0 = ap_const_logic_1;
    } else {
        plaintext_ce0 = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_plaintext_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        plaintext_ce1 = ap_const_logic_1;
    } else {
        plaintext_ce1 = ap_const_logic_0;
    }
}

void Blowfish_Encrypt::thread_right_1_fu_423_p5() {
    right_1_fu_423_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(reg_375.read(), plaintext_load_5_reg_1750.read()), plaintext_load_6_reg_1772.read()), plaintext_load_7_reg_1779.read());
}

void Blowfish_Encrypt::thread_right_fu_1590_p2() {
    right_fu_1590_p2 = (xor_ln99_fu_1562_p2.read() ^ p_tmp_14_reg_2016.read());
}

void Blowfish_Encrypt::thread_tmp_36_fu_563_p4() {
    tmp_36_fu_563_p4 = esl_concat<16,8>(esl_concat<8,8>(plaintext_load_1_reg_1702.read(), plaintext_load_2_reg_1718.read()), plaintext_load_3_reg_1725.read());
}

void Blowfish_Encrypt::thread_tmp_37_fu_573_p3() {
    tmp_37_fu_573_p3 = esl_concat<8,8>(plaintext_load_2_reg_1718.read(), plaintext_load_3_reg_1725.read());
}

void Blowfish_Encrypt::thread_tmp_38_fu_471_p4() {
    tmp_38_fu_471_p4 = esl_concat<16,8>(esl_concat<8,8>(plaintext_load_5_reg_1750.read(), plaintext_load_6_reg_1772.read()), plaintext_load_7_reg_1779.read());
}

void Blowfish_Encrypt::thread_tmp_39_fu_484_p3() {
    tmp_39_fu_484_p3 = esl_concat<8,8>(plaintext_load_6_reg_1772.read(), plaintext_load_7_reg_1779.read());
}

void Blowfish_Encrypt::thread_trunc_ln100_1_fu_1365_p1() {
    trunc_ln100_1_fu_1365_p1 = P_17_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln100_2_fu_1375_p1() {
    trunc_ln100_2_fu_1375_p1 = P_17_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln100_fu_1361_p1() {
    trunc_ln100_fu_1361_p1 = P_17_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_10_fu_582_p1() {
    trunc_ln94_10_fu_582_p1 = reg_383.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_11_fu_586_p1() {
    trunc_ln94_11_fu_586_p1 = P_2_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_12_fu_589_p1() {
    trunc_ln94_12_fu_589_p1 = reg_383.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_13_fu_716_p1() {
    trunc_ln94_13_fu_716_p1 = P_3_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_14_fu_496_p1() {
    trunc_ln94_14_fu_496_p1 = P_3_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_15_fu_500_p1() {
    trunc_ln94_15_fu_500_p1 = reg_387.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_16_fu_504_p1() {
    trunc_ln94_16_fu_504_p1 = P_3_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_17_fu_508_p1() {
    trunc_ln94_17_fu_508_p1 = reg_387.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_18_fu_883_p1() {
    trunc_ln94_18_fu_883_p1 = P_4_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_19_fu_617_p1() {
    trunc_ln94_19_fu_617_p1 = P_4_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_1_fu_560_p1() {
    trunc_ln94_1_fu_560_p1 = P_0_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_20_fu_621_p1() {
    trunc_ln94_20_fu_621_p1 = reg_391.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_21_fu_625_p1() {
    trunc_ln94_21_fu_625_p1 = P_4_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_22_fu_629_p1() {
    trunc_ln94_22_fu_629_p1 = reg_391.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_23_fu_723_p1() {
    trunc_ln94_23_fu_723_p1 = P_5_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_24_fu_726_p1() {
    trunc_ln94_24_fu_726_p1 = P_5_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_25_fu_729_p1() {
    trunc_ln94_25_fu_729_p1 = reg_395.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_26_fu_733_p1() {
    trunc_ln94_26_fu_733_p1 = P_5_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_27_fu_736_p1() {
    trunc_ln94_27_fu_736_p1 = reg_395.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_28_fu_890_p1() {
    trunc_ln94_28_fu_890_p1 = P_6_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_29_fu_893_p1() {
    trunc_ln94_29_fu_893_p1 = P_6_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_2_fu_570_p1() {
    trunc_ln94_2_fu_570_p1 = P_0_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_30_fu_896_p1() {
    trunc_ln94_30_fu_896_p1 = reg_399.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_31_fu_900_p1() {
    trunc_ln94_31_fu_900_p1 = P_6_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_32_fu_903_p1() {
    trunc_ln94_32_fu_903_p1 = reg_399.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_33_fu_756_p1() {
    trunc_ln94_33_fu_756_p1 = P_7_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_34_fu_760_p1() {
    trunc_ln94_34_fu_760_p1 = P_7_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_35_fu_764_p1() {
    trunc_ln94_35_fu_764_p1 = reg_403.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_36_fu_768_p1() {
    trunc_ln94_36_fu_768_p1 = P_7_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_37_fu_772_p1() {
    trunc_ln94_37_fu_772_p1 = reg_403.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_38_fu_1488_p1() {
    trunc_ln94_38_fu_1488_p1 = P_8_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_39_fu_923_p1() {
    trunc_ln94_39_fu_923_p1 = P_8_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_3_fu_709_p1() {
    trunc_ln94_3_fu_709_p1 = P_1_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_40_fu_927_p1() {
    trunc_ln94_40_fu_927_p1 = reg_379.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_41_fu_931_p1() {
    trunc_ln94_41_fu_931_p1 = P_8_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_42_fu_935_p1() {
    trunc_ln94_42_fu_935_p1 = reg_379.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_43_fu_1260_p1() {
    trunc_ln94_43_fu_1260_p1 = P_9_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_44_fu_1056_p1() {
    trunc_ln94_44_fu_1056_p1 = P_9_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_45_fu_1059_p1() {
    trunc_ln94_45_fu_1059_p1 = reg_379.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_46_fu_1063_p1() {
    trunc_ln94_46_fu_1063_p1 = P_9_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_47_fu_1066_p1() {
    trunc_ln94_47_fu_1066_p1 = reg_379.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_48_fu_1495_p1() {
    trunc_ln94_48_fu_1495_p1 = P_10_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_49_fu_1144_p1() {
    trunc_ln94_49_fu_1144_p1 = P_10_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_4_fu_457_p1() {
    trunc_ln94_4_fu_457_p1 = P_1_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_50_fu_1147_p1() {
    trunc_ln94_50_fu_1147_p1 = reg_383.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_51_fu_1151_p1() {
    trunc_ln94_51_fu_1151_p1 = P_10_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_52_fu_1154_p1() {
    trunc_ln94_52_fu_1154_p1 = reg_383.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_53_fu_1267_p1() {
    trunc_ln94_53_fu_1267_p1 = P_11_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_54_fu_1082_p1() {
    trunc_ln94_54_fu_1082_p1 = P_11_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_55_fu_1086_p1() {
    trunc_ln94_55_fu_1086_p1 = reg_387.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_56_fu_1090_p1() {
    trunc_ln94_56_fu_1090_p1 = P_11_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_57_fu_1094_p1() {
    trunc_ln94_57_fu_1094_p1 = reg_387.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_58_fu_1502_p1() {
    trunc_ln94_58_fu_1502_p1 = P_12_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_59_fu_1170_p1() {
    trunc_ln94_59_fu_1170_p1 = P_12_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_5_fu_460_p1() {
    trunc_ln94_5_fu_460_p1 = reg_379.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_60_fu_1174_p1() {
    trunc_ln94_60_fu_1174_p1 = reg_391.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_61_fu_1178_p1() {
    trunc_ln94_61_fu_1178_p1 = P_12_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_62_fu_1182_p1() {
    trunc_ln94_62_fu_1182_p1 = reg_391.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_63_fu_1274_p1() {
    trunc_ln94_63_fu_1274_p1 = P_13_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_64_fu_1277_p1() {
    trunc_ln94_64_fu_1277_p1 = P_13_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_65_fu_1280_p1() {
    trunc_ln94_65_fu_1280_p1 = reg_395.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_66_fu_1284_p1() {
    trunc_ln94_66_fu_1284_p1 = P_13_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_67_fu_1287_p1() {
    trunc_ln94_67_fu_1287_p1 = reg_395.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_68_fu_1509_p1() {
    trunc_ln94_68_fu_1509_p1 = P_14_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_69_fu_1512_p1() {
    trunc_ln94_69_fu_1512_p1 = P_14_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_6_fu_464_p1() {
    trunc_ln94_6_fu_464_p1 = P_1_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_70_fu_1515_p1() {
    trunc_ln94_70_fu_1515_p1 = reg_399.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_71_fu_1519_p1() {
    trunc_ln94_71_fu_1519_p1 = P_14_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_72_fu_1522_p1() {
    trunc_ln94_72_fu_1522_p1 = reg_399.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_73_fu_1307_p1() {
    trunc_ln94_73_fu_1307_p1 = P_15_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_74_fu_1311_p1() {
    trunc_ln94_74_fu_1311_p1 = P_15_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_75_fu_1315_p1() {
    trunc_ln94_75_fu_1315_p1 = reg_403.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_76_fu_1319_p1() {
    trunc_ln94_76_fu_1319_p1 = P_15_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_77_fu_1323_p1() {
    trunc_ln94_77_fu_1323_p1 = reg_403.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_7_fu_467_p1() {
    trunc_ln94_7_fu_467_p1 = reg_379.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_8_fu_876_p1() {
    trunc_ln94_8_fu_876_p1 = P_2_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_9_fu_579_p1() {
    trunc_ln94_9_fu_579_p1 = P_2_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln94_fu_869_p1() {
    trunc_ln94_fu_869_p1 = P_0_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_10_fu_1263_p1() {
    trunc_ln95_10_fu_1263_p1 = reg_387.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_11_fu_1498_p1() {
    trunc_ln95_11_fu_1498_p1 = reg_391.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_12_fu_1270_p1() {
    trunc_ln95_12_fu_1270_p1 = reg_395.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_13_fu_1505_p1() {
    trunc_ln95_13_fu_1505_p1 = reg_399.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_14_fu_1303_p1() {
    trunc_ln95_14_fu_1303_p1 = reg_403.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_15_fu_1538_p1() {
    trunc_ln95_15_fu_1538_p1 = reg_379.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_1_fu_872_p1() {
    trunc_ln95_1_fu_872_p1 = reg_383.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_2_fu_712_p1() {
    trunc_ln95_2_fu_712_p1 = reg_387.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_3_fu_879_p1() {
    trunc_ln95_3_fu_879_p1 = reg_391.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_4_fu_719_p1() {
    trunc_ln95_4_fu_719_p1 = reg_395.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_5_fu_886_p1() {
    trunc_ln95_5_fu_886_p1 = reg_399.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_6_fu_752_p1() {
    trunc_ln95_6_fu_752_p1 = reg_403.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_7_fu_919_p1() {
    trunc_ln95_7_fu_919_p1 = reg_379.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_8_fu_1256_p1() {
    trunc_ln95_8_fu_1256_p1 = reg_379.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_9_fu_1491_p1() {
    trunc_ln95_9_fu_1491_p1 = reg_383.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln95_fu_705_p1() {
    trunc_ln95_fu_705_p1 = reg_379.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln99_1_fu_1546_p1() {
    trunc_ln99_1_fu_1546_p1 = P_16_read.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln99_2_fu_1550_p1() {
    trunc_ln99_2_fu_1550_p1 = reg_379.read().range(16-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln99_3_fu_1554_p1() {
    trunc_ln99_3_fu_1554_p1 = P_16_read.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln99_4_fu_1558_p1() {
    trunc_ln99_4_fu_1558_p1 = reg_379.read().range(24-1, 0);
}

void Blowfish_Encrypt::thread_trunc_ln99_fu_1542_p1() {
    trunc_ln99_fu_1542_p1 = P_16_read.read().range(8-1, 0);
}

void Blowfish_Encrypt::thread_xor_ln100_1_fu_1379_p2() {
    xor_ln100_1_fu_1379_p2 = (xor_ln94_84_fu_1338_p2.read() ^ xor_ln94_83_fu_1333_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln100_3_fu_1391_p2() {
    xor_ln100_3_fu_1391_p2 = (xor_ln100_1_fu_1379_p2.read() ^ trunc_ln100_2_fu_1375_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln100_4_fu_1397_p2() {
    xor_ln100_4_fu_1397_p2 = (xor_ln100_fu_1369_p2.read() ^ trunc_ln100_1_fu_1365_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln100_fu_1369_p2() {
    xor_ln100_fu_1369_p2 = (xor_ln94_86_fu_1349_p2.read() ^ xor_ln94_85_fu_1344_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln258_10_fu_1441_p2() {
    xor_ln258_10_fu_1441_p2 = (trunc_ln95_10_fu_1263_p1.read() ^ trunc_ln94_53_fu_1267_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln258_11_fu_1447_p2() {
    xor_ln258_11_fu_1447_p2 = (xor_ln258_10_fu_1441_p2.read() ^ xor_ln258_9_fu_1435_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln258_12_fu_1453_p2() {
    xor_ln258_12_fu_1453_p2 = (trunc_ln95_12_fu_1270_p1.read() ^ trunc_ln94_63_fu_1274_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln258_13_fu_1459_p2() {
    xor_ln258_13_fu_1459_p2 = (trunc_ln94_73_fu_1307_p1.read() ^ trunc_ln100_fu_1361_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln258_14_fu_1465_p2() {
    xor_ln258_14_fu_1465_p2 = (xor_ln258_13_fu_1459_p2.read() ^ trunc_ln95_14_fu_1303_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln258_15_fu_1471_p2() {
    xor_ln258_15_fu_1471_p2 = (xor_ln258_14_fu_1465_p2.read() ^ xor_ln258_12_fu_1453_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln258_16_fu_1477_p2() {
    xor_ln258_16_fu_1477_p2 = (xor_ln258_15_fu_1471_p2.read() ^ xor_ln258_11_fu_1447_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln258_1_fu_822_p2() {
    xor_ln258_1_fu_822_p2 = (plaintext_load_7_reg_1779.read() ^ trunc_ln95_fu_705_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln258_2_fu_827_p2() {
    xor_ln258_2_fu_827_p2 = (trunc_ln94_3_fu_709_p1.read() ^ trunc_ln95_2_fu_712_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln258_3_fu_833_p2() {
    xor_ln258_3_fu_833_p2 = (xor_ln258_2_fu_827_p2.read() ^ xor_ln258_1_fu_822_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln258_4_fu_839_p2() {
    xor_ln258_4_fu_839_p2 = (trunc_ln94_13_fu_716_p1.read() ^ trunc_ln95_4_fu_719_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln258_5_fu_845_p2() {
    xor_ln258_5_fu_845_p2 = (trunc_ln95_6_fu_752_p1.read() ^ trunc_ln94_33_fu_756_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln258_6_fu_851_p2() {
    xor_ln258_6_fu_851_p2 = (xor_ln258_5_fu_845_p2.read() ^ trunc_ln94_23_fu_723_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln258_7_fu_857_p2() {
    xor_ln258_7_fu_857_p2 = (xor_ln258_6_fu_851_p2.read() ^ xor_ln258_4_fu_839_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln258_8_fu_863_p2() {
    xor_ln258_8_fu_863_p2 = (xor_ln258_7_fu_857_p2.read() ^ xor_ln258_3_fu_833_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln258_9_fu_1435_p2() {
    xor_ln258_9_fu_1435_p2 = (trunc_ln95_8_fu_1256_p1.read() ^ trunc_ln94_43_fu_1260_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln258_fu_1483_p2() {
    xor_ln258_fu_1483_p2 = (xor_ln258_16_fu_1477_p2.read() ^ xor_ln258_8_reg_1897.read());
}

void Blowfish_Encrypt::thread_xor_ln262_10_fu_1645_p2() {
    xor_ln262_10_fu_1645_p2 = (trunc_ln94_48_fu_1495_p1.read() ^ trunc_ln95_11_fu_1498_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln262_11_fu_1651_p2() {
    xor_ln262_11_fu_1651_p2 = (xor_ln262_10_fu_1645_p2.read() ^ xor_ln262_9_fu_1639_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln262_12_fu_1657_p2() {
    xor_ln262_12_fu_1657_p2 = (trunc_ln94_58_fu_1502_p1.read() ^ trunc_ln95_13_fu_1505_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln262_13_fu_1663_p2() {
    xor_ln262_13_fu_1663_p2 = (trunc_ln95_15_fu_1538_p1.read() ^ trunc_ln99_fu_1542_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln262_14_fu_1669_p2() {
    xor_ln262_14_fu_1669_p2 = (xor_ln262_13_fu_1663_p2.read() ^ trunc_ln94_68_fu_1509_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln262_15_fu_1675_p2() {
    xor_ln262_15_fu_1675_p2 = (xor_ln262_14_fu_1669_p2.read() ^ xor_ln262_12_fu_1657_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln262_16_fu_1681_p2() {
    xor_ln262_16_fu_1681_p2 = (xor_ln262_15_fu_1675_p2.read() ^ xor_ln262_11_fu_1651_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln262_1_fu_985_p2() {
    xor_ln262_1_fu_985_p2 = (plaintext_load_3_reg_1725.read() ^ trunc_ln94_fu_869_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln262_2_fu_990_p2() {
    xor_ln262_2_fu_990_p2 = (trunc_ln95_1_fu_872_p1.read() ^ trunc_ln94_8_fu_876_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln262_3_fu_996_p2() {
    xor_ln262_3_fu_996_p2 = (xor_ln262_2_fu_990_p2.read() ^ xor_ln262_1_fu_985_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln262_4_fu_1002_p2() {
    xor_ln262_4_fu_1002_p2 = (trunc_ln95_3_fu_879_p1.read() ^ trunc_ln94_18_fu_883_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln262_5_fu_1008_p2() {
    xor_ln262_5_fu_1008_p2 = (trunc_ln94_28_fu_890_p1.read() ^ trunc_ln95_7_fu_919_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln262_6_fu_1014_p2() {
    xor_ln262_6_fu_1014_p2 = (xor_ln262_5_fu_1008_p2.read() ^ trunc_ln95_5_fu_886_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln262_7_fu_1020_p2() {
    xor_ln262_7_fu_1020_p2 = (xor_ln262_6_fu_1014_p2.read() ^ xor_ln262_4_fu_1002_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln262_8_fu_1026_p2() {
    xor_ln262_8_fu_1026_p2 = (xor_ln262_7_fu_1020_p2.read() ^ xor_ln262_3_fu_996_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln262_9_fu_1639_p2() {
    xor_ln262_9_fu_1639_p2 = (trunc_ln94_38_fu_1488_p1.read() ^ trunc_ln95_9_fu_1491_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln262_fu_1687_p2() {
    xor_ln262_fu_1687_p2 = (xor_ln262_16_fu_1681_p2.read() ^ xor_ln262_8_reg_1923.read());
}

void Blowfish_Encrypt::thread_xor_ln94_10_fu_512_p2() {
    xor_ln94_10_fu_512_p2 = (reg_387.read() ^ P_3_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_11_fu_518_p2() {
    xor_ln94_11_fu_518_p2 = (xor_ln94_2_fu_490_p2.read() ^ tmp_39_fu_484_p3.read());
}

void Blowfish_Encrypt::thread_xor_ln94_12_fu_524_p2() {
    xor_ln94_12_fu_524_p2 = (trunc_ln94_17_fu_508_p1.read() ^ trunc_ln94_16_fu_504_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_13_fu_530_p2() {
    xor_ln94_13_fu_530_p2 = (xor_ln94_1_fu_478_p2.read() ^ tmp_38_fu_471_p4.read());
}

void Blowfish_Encrypt::thread_xor_ln94_14_fu_536_p2() {
    xor_ln94_14_fu_536_p2 = (trunc_ln94_15_fu_500_p1.read() ^ trunc_ln94_14_fu_496_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_16_fu_633_p2() {
    xor_ln94_16_fu_633_p2 = (reg_391.read() ^ P_4_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_17_fu_639_p2() {
    xor_ln94_17_fu_639_p2 = (xor_ln94_8_fu_611_p2.read() ^ xor_ln94_7_fu_605_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_18_fu_645_p2() {
    xor_ln94_18_fu_645_p2 = (trunc_ln94_22_fu_629_p1.read() ^ trunc_ln94_21_fu_625_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_19_fu_651_p2() {
    xor_ln94_19_fu_651_p2 = (xor_ln94_6_fu_599_p2.read() ^ xor_ln94_5_fu_593_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_1_fu_478_p2() {
    xor_ln94_1_fu_478_p2 = (trunc_ln94_7_fu_467_p1.read() ^ trunc_ln94_6_fu_464_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_20_fu_657_p2() {
    xor_ln94_20_fu_657_p2 = (trunc_ln94_20_fu_621_p1.read() ^ trunc_ln94_19_fu_617_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_22_fu_681_p2() {
    xor_ln94_22_fu_681_p2 = (reg_395.read() ^ P_5_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_23_fu_548_p2() {
    xor_ln94_23_fu_548_p2 = (xor_ln94_14_fu_536_p2.read() ^ xor_ln94_13_fu_530_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_24_fu_740_p2() {
    xor_ln94_24_fu_740_p2 = (trunc_ln94_27_fu_736_p1.read() ^ trunc_ln94_26_fu_733_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_25_fu_554_p2() {
    xor_ln94_25_fu_554_p2 = (xor_ln94_12_fu_524_p2.read() ^ xor_ln94_11_fu_518_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_26_fu_746_p2() {
    xor_ln94_26_fu_746_p2 = (trunc_ln94_25_fu_729_p1.read() ^ trunc_ln94_24_fu_726_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_28_fu_693_p2() {
    xor_ln94_28_fu_693_p2 = (reg_399.read() ^ P_6_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_29_fu_669_p2() {
    xor_ln94_29_fu_669_p2 = (xor_ln94_20_fu_657_p2.read() ^ xor_ln94_19_fu_651_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_2_fu_490_p2() {
    xor_ln94_2_fu_490_p2 = (trunc_ln94_5_fu_460_p1.read() ^ trunc_ln94_4_fu_457_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_30_fu_907_p2() {
    xor_ln94_30_fu_907_p2 = (trunc_ln94_32_fu_903_p1.read() ^ trunc_ln94_31_fu_900_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_31_fu_675_p2() {
    xor_ln94_31_fu_675_p2 = (xor_ln94_18_fu_645_p2.read() ^ xor_ln94_17_fu_639_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_32_fu_913_p2() {
    xor_ln94_32_fu_913_p2 = (trunc_ln94_30_fu_896_p1.read() ^ trunc_ln94_29_fu_893_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_34_fu_776_p2() {
    xor_ln94_34_fu_776_p2 = (reg_403.read() ^ P_7_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_35_fu_782_p2() {
    xor_ln94_35_fu_782_p2 = (xor_ln94_26_fu_746_p2.read() ^ xor_ln94_25_reg_1829.read());
}

void Blowfish_Encrypt::thread_xor_ln94_36_fu_787_p2() {
    xor_ln94_36_fu_787_p2 = (trunc_ln94_37_fu_772_p1.read() ^ trunc_ln94_36_fu_768_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_37_fu_793_p2() {
    xor_ln94_37_fu_793_p2 = (xor_ln94_24_fu_740_p2.read() ^ xor_ln94_23_reg_1824.read());
}

void Blowfish_Encrypt::thread_xor_ln94_38_fu_798_p2() {
    xor_ln94_38_fu_798_p2 = (trunc_ln94_35_fu_764_p1.read() ^ trunc_ln94_34_fu_760_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_40_fu_939_p2() {
    xor_ln94_40_fu_939_p2 = (reg_379.read() ^ P_8_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_41_fu_945_p2() {
    xor_ln94_41_fu_945_p2 = (xor_ln94_32_fu_913_p2.read() ^ xor_ln94_31_reg_1850.read());
}

void Blowfish_Encrypt::thread_xor_ln94_42_fu_950_p2() {
    xor_ln94_42_fu_950_p2 = (trunc_ln94_42_fu_935_p1.read() ^ trunc_ln94_41_fu_931_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_43_fu_956_p2() {
    xor_ln94_43_fu_956_p2 = (xor_ln94_30_fu_907_p2.read() ^ xor_ln94_29_reg_1845.read());
}

void Blowfish_Encrypt::thread_xor_ln94_44_fu_961_p2() {
    xor_ln94_44_fu_961_p2 = (trunc_ln94_40_fu_927_p1.read() ^ trunc_ln94_39_fu_923_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_46_fu_1032_p2() {
    xor_ln94_46_fu_1032_p2 = (reg_379.read() ^ P_9_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_47_fu_810_p2() {
    xor_ln94_47_fu_810_p2 = (xor_ln94_38_fu_798_p2.read() ^ xor_ln94_37_fu_793_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_48_fu_1070_p2() {
    xor_ln94_48_fu_1070_p2 = (trunc_ln94_47_fu_1066_p1.read() ^ trunc_ln94_46_fu_1063_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_49_fu_816_p2() {
    xor_ln94_49_fu_816_p2 = (xor_ln94_36_fu_787_p2.read() ^ xor_ln94_35_fu_782_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_4_fu_445_p2() {
    xor_ln94_4_fu_445_p2 = (reg_383.read() ^ P_2_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_50_fu_1076_p2() {
    xor_ln94_50_fu_1076_p2 = (trunc_ln94_45_fu_1059_p1.read() ^ trunc_ln94_44_fu_1056_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_52_fu_1044_p2() {
    xor_ln94_52_fu_1044_p2 = (reg_383.read() ^ P_10_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_53_fu_973_p2() {
    xor_ln94_53_fu_973_p2 = (xor_ln94_44_fu_961_p2.read() ^ xor_ln94_43_fu_956_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_54_fu_1158_p2() {
    xor_ln94_54_fu_1158_p2 = (trunc_ln94_52_fu_1154_p1.read() ^ trunc_ln94_51_fu_1151_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_55_fu_979_p2() {
    xor_ln94_55_fu_979_p2 = (xor_ln94_42_fu_950_p2.read() ^ xor_ln94_41_fu_945_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_56_fu_1164_p2() {
    xor_ln94_56_fu_1164_p2 = (trunc_ln94_50_fu_1147_p1.read() ^ trunc_ln94_49_fu_1144_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_58_fu_1098_p2() {
    xor_ln94_58_fu_1098_p2 = (reg_387.read() ^ P_11_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_59_fu_1104_p2() {
    xor_ln94_59_fu_1104_p2 = (xor_ln94_50_fu_1076_p2.read() ^ xor_ln94_49_reg_1892.read());
}

void Blowfish_Encrypt::thread_xor_ln94_5_fu_593_p2() {
    xor_ln94_5_fu_593_p2 = (tmp_37_fu_573_p3.read() ^ trunc_ln94_2_fu_570_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_60_fu_1109_p2() {
    xor_ln94_60_fu_1109_p2 = (trunc_ln94_57_fu_1094_p1.read() ^ trunc_ln94_56_fu_1090_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_61_fu_1115_p2() {
    xor_ln94_61_fu_1115_p2 = (xor_ln94_48_fu_1070_p2.read() ^ xor_ln94_47_reg_1887.read());
}

void Blowfish_Encrypt::thread_xor_ln94_62_fu_1120_p2() {
    xor_ln94_62_fu_1120_p2 = (trunc_ln94_55_fu_1086_p1.read() ^ trunc_ln94_54_fu_1082_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_64_fu_1186_p2() {
    xor_ln94_64_fu_1186_p2 = (reg_391.read() ^ P_12_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_65_fu_1192_p2() {
    xor_ln94_65_fu_1192_p2 = (xor_ln94_56_fu_1164_p2.read() ^ xor_ln94_55_reg_1918.read());
}

void Blowfish_Encrypt::thread_xor_ln94_66_fu_1197_p2() {
    xor_ln94_66_fu_1197_p2 = (trunc_ln94_62_fu_1182_p1.read() ^ trunc_ln94_61_fu_1178_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_67_fu_1203_p2() {
    xor_ln94_67_fu_1203_p2 = (xor_ln94_54_fu_1158_p2.read() ^ xor_ln94_53_reg_1913.read());
}

void Blowfish_Encrypt::thread_xor_ln94_68_fu_1208_p2() {
    xor_ln94_68_fu_1208_p2 = (trunc_ln94_60_fu_1174_p1.read() ^ trunc_ln94_59_fu_1170_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_6_fu_599_p2() {
    xor_ln94_6_fu_599_p2 = (trunc_ln94_12_fu_589_p1.read() ^ trunc_ln94_11_fu_586_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_70_fu_1232_p2() {
    xor_ln94_70_fu_1232_p2 = (reg_395.read() ^ P_13_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_71_fu_1132_p2() {
    xor_ln94_71_fu_1132_p2 = (xor_ln94_62_fu_1120_p2.read() ^ xor_ln94_61_fu_1115_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_72_fu_1291_p2() {
    xor_ln94_72_fu_1291_p2 = (trunc_ln94_67_fu_1287_p1.read() ^ trunc_ln94_66_fu_1284_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_73_fu_1138_p2() {
    xor_ln94_73_fu_1138_p2 = (xor_ln94_60_fu_1109_p2.read() ^ xor_ln94_59_fu_1104_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_74_fu_1297_p2() {
    xor_ln94_74_fu_1297_p2 = (trunc_ln94_65_fu_1280_p1.read() ^ trunc_ln94_64_fu_1277_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_76_fu_1244_p2() {
    xor_ln94_76_fu_1244_p2 = (reg_399.read() ^ P_14_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_77_fu_1220_p2() {
    xor_ln94_77_fu_1220_p2 = (xor_ln94_68_fu_1208_p2.read() ^ xor_ln94_67_fu_1203_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_78_fu_1526_p2() {
    xor_ln94_78_fu_1526_p2 = (trunc_ln94_72_fu_1522_p1.read() ^ trunc_ln94_71_fu_1519_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_79_fu_1226_p2() {
    xor_ln94_79_fu_1226_p2 = (xor_ln94_66_fu_1197_p2.read() ^ xor_ln94_65_fu_1192_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln94_7_fu_605_p2() {
    xor_ln94_7_fu_605_p2 = (tmp_36_fu_563_p4.read() ^ trunc_ln94_1_fu_560_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_80_fu_1532_p2() {
    xor_ln94_80_fu_1532_p2 = (trunc_ln94_70_fu_1515_p1.read() ^ trunc_ln94_69_fu_1512_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_82_fu_1327_p2() {
    xor_ln94_82_fu_1327_p2 = (reg_403.read() ^ P_15_read.read());
}

void Blowfish_Encrypt::thread_xor_ln94_83_fu_1333_p2() {
    xor_ln94_83_fu_1333_p2 = (xor_ln94_74_fu_1297_p2.read() ^ xor_ln94_73_reg_1970.read());
}

void Blowfish_Encrypt::thread_xor_ln94_84_fu_1338_p2() {
    xor_ln94_84_fu_1338_p2 = (trunc_ln94_77_fu_1323_p1.read() ^ trunc_ln94_76_fu_1319_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_85_fu_1344_p2() {
    xor_ln94_85_fu_1344_p2 = (xor_ln94_72_fu_1291_p2.read() ^ xor_ln94_71_reg_1965.read());
}

void Blowfish_Encrypt::thread_xor_ln94_86_fu_1349_p2() {
    xor_ln94_86_fu_1349_p2 = (trunc_ln94_75_fu_1315_p1.read() ^ trunc_ln94_74_fu_1311_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_8_fu_611_p2() {
    xor_ln94_8_fu_611_p2 = (trunc_ln94_10_fu_582_p1.read() ^ trunc_ln94_9_fu_579_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln94_fu_432_p2() {
    xor_ln94_fu_432_p2 = (reg_379.read() ^ P_1_read.read());
}

void Blowfish_Encrypt::thread_xor_ln99_1_fu_1568_p2() {
    xor_ln99_1_fu_1568_p2 = (xor_ln94_80_fu_1532_p2.read() ^ xor_ln94_79_reg_1991.read());
}

void Blowfish_Encrypt::thread_xor_ln99_2_fu_1573_p2() {
    xor_ln99_2_fu_1573_p2 = (trunc_ln99_4_fu_1558_p1.read() ^ trunc_ln99_3_fu_1554_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln99_3_fu_1579_p2() {
    xor_ln99_3_fu_1579_p2 = (xor_ln94_78_fu_1526_p2.read() ^ xor_ln94_77_reg_1986.read());
}

void Blowfish_Encrypt::thread_xor_ln99_4_fu_1584_p2() {
    xor_ln99_4_fu_1584_p2 = (trunc_ln99_2_fu_1550_p1.read() ^ trunc_ln99_1_fu_1546_p1.read());
}

void Blowfish_Encrypt::thread_xor_ln99_6_fu_1595_p2() {
    xor_ln99_6_fu_1595_p2 = (xor_ln99_4_fu_1584_p2.read() ^ xor_ln99_3_fu_1579_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln99_7_fu_1601_p2() {
    xor_ln99_7_fu_1601_p2 = (xor_ln99_2_fu_1573_p2.read() ^ xor_ln99_1_fu_1568_p2.read());
}

void Blowfish_Encrypt::thread_xor_ln99_fu_1562_p2() {
    xor_ln99_fu_1562_p2 = (reg_379.read() ^ P_16_read.read());
}

void Blowfish_Encrypt::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<37>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

