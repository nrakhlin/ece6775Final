// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Blowfish_Encrypt_HH_
#define _Blowfish_Encrypt_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Blowfish_Encrypt_bkb.h"

namespace ap_rtl {

struct Blowfish_Encrypt : public sc_module {
    // Port declarations 35
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > Blowfish_pary_s_address0;
    sc_out< sc_logic > Blowfish_pary_s_ce0;
    sc_out< sc_logic > Blowfish_pary_s_we0;
    sc_out< sc_lv<32> > Blowfish_pary_s_d0;
    sc_in< sc_lv<32> > Blowfish_pary_s_q0;
    sc_out< sc_lv<5> > Blowfish_pary_s_address1;
    sc_out< sc_logic > Blowfish_pary_s_ce1;
    sc_out< sc_logic > Blowfish_pary_s_we1;
    sc_out< sc_lv<32> > Blowfish_pary_s_d1;
    sc_in< sc_lv<32> > Blowfish_pary_s_q1;
    sc_out< sc_lv<10> > Blowfish_sbox_s_address0;
    sc_out< sc_logic > Blowfish_sbox_s_ce0;
    sc_in< sc_lv<32> > Blowfish_sbox_s_q0;
    sc_out< sc_lv<10> > Blowfish_sbox_s_address1;
    sc_out< sc_logic > Blowfish_sbox_s_ce1;
    sc_in< sc_lv<32> > Blowfish_sbox_s_q1;
    sc_out< sc_lv<3> > dst_address0;
    sc_out< sc_logic > dst_ce0;
    sc_out< sc_logic > dst_we0;
    sc_out< sc_lv<8> > dst_d0;
    sc_in< sc_lv<8> > dst_q0;
    sc_out< sc_lv<3> > dst_address1;
    sc_out< sc_logic > dst_ce1;
    sc_out< sc_logic > dst_we1;
    sc_out< sc_lv<8> > dst_d1;
    sc_in< sc_lv<8> > dst_q1;
    sc_out< sc_lv<3> > src_address0;
    sc_out< sc_logic > src_ce0;
    sc_in< sc_lv<8> > src_q0;


    // Module declarations
    Blowfish_Encrypt(sc_module_name name);
    SC_HAS_PROCESS(Blowfish_Encrypt);

    ~Blowfish_Encrypt();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Blowfish_Encrypt_bkb* pary_s_U;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_fu_287_p2;
    sc_signal< sc_lv<4> > i_reg_547;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln119_fu_293_p1;
    sc_signal< sc_lv<64> > zext_ln119_reg_552;
    sc_signal< sc_lv<1> > icmp_ln118_fu_281_p2;
    sc_signal< sc_lv<8> > dst_load_reg_568;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > dst_load_1_reg_573;
    sc_signal< sc_lv<3> > dst_addr_2_reg_578;
    sc_signal< sc_lv<3> > dst_addr_3_reg_583;
    sc_signal< sc_lv<8> > dst_load_2_reg_588;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > dst_load_3_reg_593;
    sc_signal< sc_lv<3> > dst_addr_4_reg_598;
    sc_signal< sc_lv<3> > dst_addr_5_reg_603;
    sc_signal< sc_lv<8> > dst_load_4_reg_608;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > dst_load_5_reg_613;
    sc_signal< sc_lv<3> > dst_addr_6_reg_618;
    sc_signal< sc_lv<3> > dst_addr_7_reg_623;
    sc_signal< sc_lv<32> > left_fu_298_p5;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > right_fu_306_p5;
    sc_signal< sc_lv<5> > i_1_fu_322_p2;
    sc_signal< sc_lv<5> > i_1_reg_641;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln231_fu_316_p2;
    sc_signal< sc_lv<8> > trunc_ln232_fu_355_p1;
    sc_signal< sc_lv<8> > trunc_ln232_reg_651;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > temp_fu_367_p2;
    sc_signal< sc_lv<32> > temp_reg_656;
    sc_signal< sc_lv<8> > c_reg_661;
    sc_signal< sc_lv<32> > add_ln290_fu_446_p2;
    sc_signal< sc_lv<32> > add_ln290_reg_676;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > xor_ln233_fu_480_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<8> > trunc_ln7_reg_696;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<8> > trunc_ln143_fu_534_p1;
    sc_signal< sc_lv<8> > trunc_ln143_reg_701;
    sc_signal< sc_lv<5> > pary_s_address0;
    sc_signal< sc_logic > pary_s_ce0;
    sc_signal< sc_lv<32> > pary_s_q0;
    sc_signal< sc_lv<4> > i_0_reg_239;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > temp_2_reg_250;
    sc_signal< sc_lv<32> > left_new_reg_260;
    sc_signal< sc_lv<5> > i_0_i_reg_270;
    sc_signal< sc_lv<64> > zext_ln232_fu_328_p1;
    sc_signal< sc_lv<64> > zext_ln290_fu_423_p1;
    sc_signal< sc_lv<64> > tmp_fu_428_p3;
    sc_signal< sc_lv<64> > tmp_1_fu_452_p3;
    sc_signal< sc_lv<64> > tmp_2_fu_460_p3;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<8> > trunc_ln139_fu_497_p1;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<16> > trunc_ln232_3_fu_363_p1;
    sc_signal< sc_lv<16> > trunc_ln231_fu_373_p1;
    sc_signal< sc_lv<24> > trunc_ln232_2_fu_359_p1;
    sc_signal< sc_lv<24> > trunc_ln231_1_fu_383_p1;
    sc_signal< sc_lv<24> > xor_ln281_1_fu_387_p2;
    sc_signal< sc_lv<16> > xor_ln281_fu_377_p2;
    sc_signal< sc_lv<8> > a_fu_393_p4;
    sc_signal< sc_lv<8> > b_fu_403_p4;
    sc_signal< sc_lv<8> > trunc_ln232_1_fu_437_p1;
    sc_signal< sc_lv<8> > d_fu_441_p2;
    sc_signal< sc_lv<32> > xor_ln290_fu_469_p2;
    sc_signal< sc_lv<32> > add_ln290_1_fu_474_p2;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<56> ap_const_lv56_1;
    static const sc_lv<56> ap_const_lv56_2;
    static const sc_lv<56> ap_const_lv56_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Blowfish_pary_s_address0();
    void thread_Blowfish_pary_s_address1();
    void thread_Blowfish_pary_s_ce0();
    void thread_Blowfish_pary_s_ce1();
    void thread_Blowfish_pary_s_d0();
    void thread_Blowfish_pary_s_d1();
    void thread_Blowfish_pary_s_we0();
    void thread_Blowfish_pary_s_we1();
    void thread_Blowfish_sbox_s_address0();
    void thread_Blowfish_sbox_s_address1();
    void thread_Blowfish_sbox_s_ce0();
    void thread_Blowfish_sbox_s_ce1();
    void thread_a_fu_393_p4();
    void thread_add_ln290_1_fu_474_p2();
    void thread_add_ln290_fu_446_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_fu_403_p4();
    void thread_d_fu_441_p2();
    void thread_dst_addr_2_reg_578();
    void thread_dst_addr_3_reg_583();
    void thread_dst_addr_4_reg_598();
    void thread_dst_addr_5_reg_603();
    void thread_dst_addr_6_reg_618();
    void thread_dst_addr_7_reg_623();
    void thread_dst_address0();
    void thread_dst_address1();
    void thread_dst_ce0();
    void thread_dst_ce1();
    void thread_dst_d0();
    void thread_dst_d1();
    void thread_dst_we0();
    void thread_dst_we1();
    void thread_i_1_fu_322_p2();
    void thread_i_fu_287_p2();
    void thread_icmp_ln118_fu_281_p2();
    void thread_icmp_ln231_fu_316_p2();
    void thread_left_fu_298_p5();
    void thread_pary_s_address0();
    void thread_pary_s_ce0();
    void thread_right_fu_306_p5();
    void thread_src_address0();
    void thread_src_ce0();
    void thread_temp_fu_367_p2();
    void thread_tmp_1_fu_452_p3();
    void thread_tmp_2_fu_460_p3();
    void thread_tmp_fu_428_p3();
    void thread_trunc_ln139_fu_497_p1();
    void thread_trunc_ln143_fu_534_p1();
    void thread_trunc_ln231_1_fu_383_p1();
    void thread_trunc_ln231_fu_373_p1();
    void thread_trunc_ln232_1_fu_437_p1();
    void thread_trunc_ln232_2_fu_359_p1();
    void thread_trunc_ln232_3_fu_363_p1();
    void thread_trunc_ln232_fu_355_p1();
    void thread_xor_ln233_fu_480_p2();
    void thread_xor_ln281_1_fu_387_p2();
    void thread_xor_ln281_fu_377_p2();
    void thread_xor_ln290_fu_469_p2();
    void thread_zext_ln119_fu_293_p1();
    void thread_zext_ln232_fu_328_p1();
    void thread_zext_ln290_fu_423_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
