// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Blowfish_SetKey_Encrypt_Decrypt.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Blowfish_SetKey_Encrypt_Decrypt::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Blowfish_SetKey_Encrypt_Decrypt::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> Blowfish_SetKey_Encrypt_Decrypt::ap_ST_fsm_state1 = "1";
const sc_lv<6> Blowfish_SetKey_Encrypt_Decrypt::ap_ST_fsm_state2 = "10";
const sc_lv<6> Blowfish_SetKey_Encrypt_Decrypt::ap_ST_fsm_state3 = "100";
const sc_lv<6> Blowfish_SetKey_Encrypt_Decrypt::ap_ST_fsm_state4 = "1000";
const sc_lv<6> Blowfish_SetKey_Encrypt_Decrypt::ap_ST_fsm_state5 = "10000";
const sc_lv<6> Blowfish_SetKey_Encrypt_Decrypt::ap_ST_fsm_state6 = "100000";
const sc_lv<32> Blowfish_SetKey_Encrypt_Decrypt::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Blowfish_SetKey_Encrypt_Decrypt::ap_const_lv32_2 = "10";
const sc_lv<32> Blowfish_SetKey_Encrypt_Decrypt::ap_const_lv32_4 = "100";
const sc_lv<1> Blowfish_SetKey_Encrypt_Decrypt::ap_const_lv1_1 = "1";
const sc_lv<32> Blowfish_SetKey_Encrypt_Decrypt::ap_const_lv32_1 = "1";
const sc_lv<32> Blowfish_SetKey_Encrypt_Decrypt::ap_const_lv32_3 = "11";
const sc_lv<32> Blowfish_SetKey_Encrypt_Decrypt::ap_const_lv32_5 = "101";
const sc_lv<1> Blowfish_SetKey_Encrypt_Decrypt::ap_const_lv1_0 = "0";
const bool Blowfish_SetKey_Encrypt_Decrypt::ap_const_boolean_1 = true;

Blowfish_SetKey_Encrypt_Decrypt::Blowfish_SetKey_Encrypt_Decrypt(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ciphertext_U = new Blowfish_SetKey_EfYi("ciphertext_U");
    ciphertext_U->clk(ap_clk);
    ciphertext_U->reset(ap_rst);
    ciphertext_U->address0(ciphertext_address0);
    ciphertext_U->ce0(ciphertext_ce0);
    ciphertext_U->we0(ciphertext_we0);
    ciphertext_U->d0(grp_Blowfish_Encrypt_fu_346_ciphertext_d0);
    ciphertext_U->q0(ciphertext_q0);
    ciphertext_U->address1(ciphertext_address1);
    ciphertext_U->ce1(ciphertext_ce1);
    ciphertext_U->we1(ciphertext_we1);
    ciphertext_U->d1(grp_Blowfish_Encrypt_fu_346_ciphertext_d1);
    ciphertext_U->q1(ciphertext_q1);
    grp_Blowfish_SetKey_fu_328 = new Blowfish_SetKey("grp_Blowfish_SetKey_fu_328");
    grp_Blowfish_SetKey_fu_328->ap_clk(ap_clk);
    grp_Blowfish_SetKey_fu_328->ap_rst(ap_rst);
    grp_Blowfish_SetKey_fu_328->ap_start(grp_Blowfish_SetKey_fu_328_ap_start);
    grp_Blowfish_SetKey_fu_328->ap_done(grp_Blowfish_SetKey_fu_328_ap_done);
    grp_Blowfish_SetKey_fu_328->ap_idle(grp_Blowfish_SetKey_fu_328_ap_idle);
    grp_Blowfish_SetKey_fu_328->ap_ready(grp_Blowfish_SetKey_fu_328_ap_ready);
    grp_Blowfish_SetKey_fu_328->key_address0(grp_Blowfish_SetKey_fu_328_key_address0);
    grp_Blowfish_SetKey_fu_328->key_ce0(grp_Blowfish_SetKey_fu_328_key_ce0);
    grp_Blowfish_SetKey_fu_328->key_q0(key_q0);
    grp_Blowfish_SetKey_fu_328->key_address1(grp_Blowfish_SetKey_fu_328_key_address1);
    grp_Blowfish_SetKey_fu_328->key_ce1(grp_Blowfish_SetKey_fu_328_key_ce1);
    grp_Blowfish_SetKey_fu_328->key_q1(key_q1);
    grp_Blowfish_SetKey_fu_328->key_size(key_size);
    grp_Blowfish_SetKey_fu_328->S_0_address0(grp_Blowfish_SetKey_fu_328_S_0_address0);
    grp_Blowfish_SetKey_fu_328->S_0_ce0(grp_Blowfish_SetKey_fu_328_S_0_ce0);
    grp_Blowfish_SetKey_fu_328->S_0_we0(grp_Blowfish_SetKey_fu_328_S_0_we0);
    grp_Blowfish_SetKey_fu_328->S_0_d0(grp_Blowfish_SetKey_fu_328_S_0_d0);
    grp_Blowfish_SetKey_fu_328->S_0_q0(S_0_q0);
    grp_Blowfish_SetKey_fu_328->S_0_address1(grp_Blowfish_SetKey_fu_328_S_0_address1);
    grp_Blowfish_SetKey_fu_328->S_0_ce1(grp_Blowfish_SetKey_fu_328_S_0_ce1);
    grp_Blowfish_SetKey_fu_328->S_0_we1(grp_Blowfish_SetKey_fu_328_S_0_we1);
    grp_Blowfish_SetKey_fu_328->S_0_d1(grp_Blowfish_SetKey_fu_328_S_0_d1);
    grp_Blowfish_SetKey_fu_328->S_1_address0(grp_Blowfish_SetKey_fu_328_S_1_address0);
    grp_Blowfish_SetKey_fu_328->S_1_ce0(grp_Blowfish_SetKey_fu_328_S_1_ce0);
    grp_Blowfish_SetKey_fu_328->S_1_we0(grp_Blowfish_SetKey_fu_328_S_1_we0);
    grp_Blowfish_SetKey_fu_328->S_1_d0(grp_Blowfish_SetKey_fu_328_S_1_d0);
    grp_Blowfish_SetKey_fu_328->S_1_q0(S_1_q0);
    grp_Blowfish_SetKey_fu_328->S_1_address1(grp_Blowfish_SetKey_fu_328_S_1_address1);
    grp_Blowfish_SetKey_fu_328->S_1_ce1(grp_Blowfish_SetKey_fu_328_S_1_ce1);
    grp_Blowfish_SetKey_fu_328->S_1_we1(grp_Blowfish_SetKey_fu_328_S_1_we1);
    grp_Blowfish_SetKey_fu_328->S_1_d1(grp_Blowfish_SetKey_fu_328_S_1_d1);
    grp_Blowfish_SetKey_fu_328->S_2_address0(grp_Blowfish_SetKey_fu_328_S_2_address0);
    grp_Blowfish_SetKey_fu_328->S_2_ce0(grp_Blowfish_SetKey_fu_328_S_2_ce0);
    grp_Blowfish_SetKey_fu_328->S_2_we0(grp_Blowfish_SetKey_fu_328_S_2_we0);
    grp_Blowfish_SetKey_fu_328->S_2_d0(grp_Blowfish_SetKey_fu_328_S_2_d0);
    grp_Blowfish_SetKey_fu_328->S_2_q0(S_2_q0);
    grp_Blowfish_SetKey_fu_328->S_2_address1(grp_Blowfish_SetKey_fu_328_S_2_address1);
    grp_Blowfish_SetKey_fu_328->S_2_ce1(grp_Blowfish_SetKey_fu_328_S_2_ce1);
    grp_Blowfish_SetKey_fu_328->S_2_we1(grp_Blowfish_SetKey_fu_328_S_2_we1);
    grp_Blowfish_SetKey_fu_328->S_2_d1(grp_Blowfish_SetKey_fu_328_S_2_d1);
    grp_Blowfish_SetKey_fu_328->S_3_address0(grp_Blowfish_SetKey_fu_328_S_3_address0);
    grp_Blowfish_SetKey_fu_328->S_3_ce0(grp_Blowfish_SetKey_fu_328_S_3_ce0);
    grp_Blowfish_SetKey_fu_328->S_3_we0(grp_Blowfish_SetKey_fu_328_S_3_we0);
    grp_Blowfish_SetKey_fu_328->S_3_d0(grp_Blowfish_SetKey_fu_328_S_3_d0);
    grp_Blowfish_SetKey_fu_328->S_3_q0(S_3_q0);
    grp_Blowfish_SetKey_fu_328->S_3_address1(grp_Blowfish_SetKey_fu_328_S_3_address1);
    grp_Blowfish_SetKey_fu_328->S_3_ce1(grp_Blowfish_SetKey_fu_328_S_3_ce1);
    grp_Blowfish_SetKey_fu_328->S_3_we1(grp_Blowfish_SetKey_fu_328_S_3_we1);
    grp_Blowfish_SetKey_fu_328->S_3_d1(grp_Blowfish_SetKey_fu_328_S_3_d1);
    grp_Blowfish_SetKey_fu_328->ap_return_0(grp_Blowfish_SetKey_fu_328_ap_return_0);
    grp_Blowfish_SetKey_fu_328->ap_return_1(grp_Blowfish_SetKey_fu_328_ap_return_1);
    grp_Blowfish_SetKey_fu_328->ap_return_2(grp_Blowfish_SetKey_fu_328_ap_return_2);
    grp_Blowfish_SetKey_fu_328->ap_return_3(grp_Blowfish_SetKey_fu_328_ap_return_3);
    grp_Blowfish_SetKey_fu_328->ap_return_4(grp_Blowfish_SetKey_fu_328_ap_return_4);
    grp_Blowfish_SetKey_fu_328->ap_return_5(grp_Blowfish_SetKey_fu_328_ap_return_5);
    grp_Blowfish_SetKey_fu_328->ap_return_6(grp_Blowfish_SetKey_fu_328_ap_return_6);
    grp_Blowfish_SetKey_fu_328->ap_return_7(grp_Blowfish_SetKey_fu_328_ap_return_7);
    grp_Blowfish_SetKey_fu_328->ap_return_8(grp_Blowfish_SetKey_fu_328_ap_return_8);
    grp_Blowfish_SetKey_fu_328->ap_return_9(grp_Blowfish_SetKey_fu_328_ap_return_9);
    grp_Blowfish_SetKey_fu_328->ap_return_10(grp_Blowfish_SetKey_fu_328_ap_return_10);
    grp_Blowfish_SetKey_fu_328->ap_return_11(grp_Blowfish_SetKey_fu_328_ap_return_11);
    grp_Blowfish_SetKey_fu_328->ap_return_12(grp_Blowfish_SetKey_fu_328_ap_return_12);
    grp_Blowfish_SetKey_fu_328->ap_return_13(grp_Blowfish_SetKey_fu_328_ap_return_13);
    grp_Blowfish_SetKey_fu_328->ap_return_14(grp_Blowfish_SetKey_fu_328_ap_return_14);
    grp_Blowfish_SetKey_fu_328->ap_return_15(grp_Blowfish_SetKey_fu_328_ap_return_15);
    grp_Blowfish_SetKey_fu_328->ap_return_16(grp_Blowfish_SetKey_fu_328_ap_return_16);
    grp_Blowfish_SetKey_fu_328->ap_return_17(grp_Blowfish_SetKey_fu_328_ap_return_17);
    grp_Blowfish_Encrypt_fu_346 = new Blowfish_Encrypt("grp_Blowfish_Encrypt_fu_346");
    grp_Blowfish_Encrypt_fu_346->ap_clk(ap_clk);
    grp_Blowfish_Encrypt_fu_346->ap_rst(ap_rst);
    grp_Blowfish_Encrypt_fu_346->ap_start(grp_Blowfish_Encrypt_fu_346_ap_start);
    grp_Blowfish_Encrypt_fu_346->ap_done(grp_Blowfish_Encrypt_fu_346_ap_done);
    grp_Blowfish_Encrypt_fu_346->ap_idle(grp_Blowfish_Encrypt_fu_346_ap_idle);
    grp_Blowfish_Encrypt_fu_346->ap_ready(grp_Blowfish_Encrypt_fu_346_ap_ready);
    grp_Blowfish_Encrypt_fu_346->plaintext_address0(grp_Blowfish_Encrypt_fu_346_plaintext_address0);
    grp_Blowfish_Encrypt_fu_346->plaintext_ce0(grp_Blowfish_Encrypt_fu_346_plaintext_ce0);
    grp_Blowfish_Encrypt_fu_346->plaintext_q0(plaintext_q0);
    grp_Blowfish_Encrypt_fu_346->plaintext_address1(grp_Blowfish_Encrypt_fu_346_plaintext_address1);
    grp_Blowfish_Encrypt_fu_346->plaintext_ce1(grp_Blowfish_Encrypt_fu_346_plaintext_ce1);
    grp_Blowfish_Encrypt_fu_346->plaintext_q1(plaintext_q1);
    grp_Blowfish_Encrypt_fu_346->ciphertext_address0(grp_Blowfish_Encrypt_fu_346_ciphertext_address0);
    grp_Blowfish_Encrypt_fu_346->ciphertext_ce0(grp_Blowfish_Encrypt_fu_346_ciphertext_ce0);
    grp_Blowfish_Encrypt_fu_346->ciphertext_we0(grp_Blowfish_Encrypt_fu_346_ciphertext_we0);
    grp_Blowfish_Encrypt_fu_346->ciphertext_d0(grp_Blowfish_Encrypt_fu_346_ciphertext_d0);
    grp_Blowfish_Encrypt_fu_346->ciphertext_address1(grp_Blowfish_Encrypt_fu_346_ciphertext_address1);
    grp_Blowfish_Encrypt_fu_346->ciphertext_ce1(grp_Blowfish_Encrypt_fu_346_ciphertext_ce1);
    grp_Blowfish_Encrypt_fu_346->ciphertext_we1(grp_Blowfish_Encrypt_fu_346_ciphertext_we1);
    grp_Blowfish_Encrypt_fu_346->ciphertext_d1(grp_Blowfish_Encrypt_fu_346_ciphertext_d1);
    grp_Blowfish_Encrypt_fu_346->P_0_read(reg_448);
    grp_Blowfish_Encrypt_fu_346->P_1_read(reg_454);
    grp_Blowfish_Encrypt_fu_346->P_2_read(reg_460);
    grp_Blowfish_Encrypt_fu_346->P_3_read(reg_466);
    grp_Blowfish_Encrypt_fu_346->P_4_read(reg_472);
    grp_Blowfish_Encrypt_fu_346->P_5_read(reg_478);
    grp_Blowfish_Encrypt_fu_346->P_6_read(reg_484);
    grp_Blowfish_Encrypt_fu_346->P_7_read(reg_490);
    grp_Blowfish_Encrypt_fu_346->P_8_read(reg_496);
    grp_Blowfish_Encrypt_fu_346->P_9_read(reg_502);
    grp_Blowfish_Encrypt_fu_346->P_10_read(reg_508);
    grp_Blowfish_Encrypt_fu_346->P_11_read(reg_514);
    grp_Blowfish_Encrypt_fu_346->P_12_read(reg_520);
    grp_Blowfish_Encrypt_fu_346->P_13_read(reg_526);
    grp_Blowfish_Encrypt_fu_346->P_14_read(reg_532);
    grp_Blowfish_Encrypt_fu_346->P_15_read(reg_538);
    grp_Blowfish_Encrypt_fu_346->P_16_read(reg_544);
    grp_Blowfish_Encrypt_fu_346->P_17_read(reg_550);
    grp_Blowfish_Encrypt_fu_346->S_0_address0(grp_Blowfish_Encrypt_fu_346_S_0_address0);
    grp_Blowfish_Encrypt_fu_346->S_0_ce0(grp_Blowfish_Encrypt_fu_346_S_0_ce0);
    grp_Blowfish_Encrypt_fu_346->S_0_q0(S_0_q0);
    grp_Blowfish_Encrypt_fu_346->S_1_address0(grp_Blowfish_Encrypt_fu_346_S_1_address0);
    grp_Blowfish_Encrypt_fu_346->S_1_ce0(grp_Blowfish_Encrypt_fu_346_S_1_ce0);
    grp_Blowfish_Encrypt_fu_346->S_1_q0(S_1_q0);
    grp_Blowfish_Encrypt_fu_346->S_2_address0(grp_Blowfish_Encrypt_fu_346_S_2_address0);
    grp_Blowfish_Encrypt_fu_346->S_2_ce0(grp_Blowfish_Encrypt_fu_346_S_2_ce0);
    grp_Blowfish_Encrypt_fu_346->S_2_q0(S_2_q0);
    grp_Blowfish_Encrypt_fu_346->S_3_address0(grp_Blowfish_Encrypt_fu_346_S_3_address0);
    grp_Blowfish_Encrypt_fu_346->S_3_ce0(grp_Blowfish_Encrypt_fu_346_S_3_ce0);
    grp_Blowfish_Encrypt_fu_346->S_3_q0(S_3_q0);
    grp_Blowfish_Decrypt_fu_397 = new Blowfish_Decrypt("grp_Blowfish_Decrypt_fu_397");
    grp_Blowfish_Decrypt_fu_397->ap_clk(ap_clk);
    grp_Blowfish_Decrypt_fu_397->ap_rst(ap_rst);
    grp_Blowfish_Decrypt_fu_397->ap_start(grp_Blowfish_Decrypt_fu_397_ap_start);
    grp_Blowfish_Decrypt_fu_397->ap_done(grp_Blowfish_Decrypt_fu_397_ap_done);
    grp_Blowfish_Decrypt_fu_397->ap_idle(grp_Blowfish_Decrypt_fu_397_ap_idle);
    grp_Blowfish_Decrypt_fu_397->ap_ready(grp_Blowfish_Decrypt_fu_397_ap_ready);
    grp_Blowfish_Decrypt_fu_397->ciphertext_address0(grp_Blowfish_Decrypt_fu_397_ciphertext_address0);
    grp_Blowfish_Decrypt_fu_397->ciphertext_ce0(grp_Blowfish_Decrypt_fu_397_ciphertext_ce0);
    grp_Blowfish_Decrypt_fu_397->ciphertext_q0(ciphertext_q0);
    grp_Blowfish_Decrypt_fu_397->ciphertext_address1(grp_Blowfish_Decrypt_fu_397_ciphertext_address1);
    grp_Blowfish_Decrypt_fu_397->ciphertext_ce1(grp_Blowfish_Decrypt_fu_397_ciphertext_ce1);
    grp_Blowfish_Decrypt_fu_397->ciphertext_q1(ciphertext_q1);
    grp_Blowfish_Decrypt_fu_397->decryptedtext_address0(grp_Blowfish_Decrypt_fu_397_decryptedtext_address0);
    grp_Blowfish_Decrypt_fu_397->decryptedtext_ce0(grp_Blowfish_Decrypt_fu_397_decryptedtext_ce0);
    grp_Blowfish_Decrypt_fu_397->decryptedtext_we0(grp_Blowfish_Decrypt_fu_397_decryptedtext_we0);
    grp_Blowfish_Decrypt_fu_397->decryptedtext_d0(grp_Blowfish_Decrypt_fu_397_decryptedtext_d0);
    grp_Blowfish_Decrypt_fu_397->decryptedtext_address1(grp_Blowfish_Decrypt_fu_397_decryptedtext_address1);
    grp_Blowfish_Decrypt_fu_397->decryptedtext_ce1(grp_Blowfish_Decrypt_fu_397_decryptedtext_ce1);
    grp_Blowfish_Decrypt_fu_397->decryptedtext_we1(grp_Blowfish_Decrypt_fu_397_decryptedtext_we1);
    grp_Blowfish_Decrypt_fu_397->decryptedtext_d1(grp_Blowfish_Decrypt_fu_397_decryptedtext_d1);
    grp_Blowfish_Decrypt_fu_397->P_0_read(reg_448);
    grp_Blowfish_Decrypt_fu_397->P_1_read(reg_454);
    grp_Blowfish_Decrypt_fu_397->P_2_read(reg_460);
    grp_Blowfish_Decrypt_fu_397->P_3_read(reg_466);
    grp_Blowfish_Decrypt_fu_397->P_4_read(reg_472);
    grp_Blowfish_Decrypt_fu_397->P_5_read(reg_478);
    grp_Blowfish_Decrypt_fu_397->P_6_read(reg_484);
    grp_Blowfish_Decrypt_fu_397->P_7_read(reg_490);
    grp_Blowfish_Decrypt_fu_397->P_8_read(reg_496);
    grp_Blowfish_Decrypt_fu_397->P_9_read(reg_502);
    grp_Blowfish_Decrypt_fu_397->P_10_read(reg_508);
    grp_Blowfish_Decrypt_fu_397->P_11_read(reg_514);
    grp_Blowfish_Decrypt_fu_397->P_12_read(reg_520);
    grp_Blowfish_Decrypt_fu_397->P_13_read(reg_526);
    grp_Blowfish_Decrypt_fu_397->P_14_read(reg_532);
    grp_Blowfish_Decrypt_fu_397->P_15_read(reg_538);
    grp_Blowfish_Decrypt_fu_397->P_16_read(reg_544);
    grp_Blowfish_Decrypt_fu_397->P_17_read(reg_550);
    grp_Blowfish_Decrypt_fu_397->S_0_address0(grp_Blowfish_Decrypt_fu_397_S_0_address0);
    grp_Blowfish_Decrypt_fu_397->S_0_ce0(grp_Blowfish_Decrypt_fu_397_S_0_ce0);
    grp_Blowfish_Decrypt_fu_397->S_0_q0(S_0_q0);
    grp_Blowfish_Decrypt_fu_397->S_1_address0(grp_Blowfish_Decrypt_fu_397_S_1_address0);
    grp_Blowfish_Decrypt_fu_397->S_1_ce0(grp_Blowfish_Decrypt_fu_397_S_1_ce0);
    grp_Blowfish_Decrypt_fu_397->S_1_q0(S_1_q0);
    grp_Blowfish_Decrypt_fu_397->S_2_address0(grp_Blowfish_Decrypt_fu_397_S_2_address0);
    grp_Blowfish_Decrypt_fu_397->S_2_ce0(grp_Blowfish_Decrypt_fu_397_S_2_ce0);
    grp_Blowfish_Decrypt_fu_397->S_2_q0(S_2_q0);
    grp_Blowfish_Decrypt_fu_397->S_3_address0(grp_Blowfish_Decrypt_fu_397_S_3_address0);
    grp_Blowfish_Decrypt_fu_397->S_3_ce0(grp_Blowfish_Decrypt_fu_397_S_3_ce0);
    grp_Blowfish_Decrypt_fu_397->S_3_q0(S_3_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_P_0_o);
    sensitive << ( P_0_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_0_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_10_o);
    sensitive << ( P_10_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_10 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_10_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_11_o);
    sensitive << ( P_11_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_11 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_11_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_12_o);
    sensitive << ( P_12_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_12 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_12_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_13_o);
    sensitive << ( P_13_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_13 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_13_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_14_o);
    sensitive << ( P_14_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_14 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_14_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_15_o);
    sensitive << ( P_15_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_15 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_15_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_16_o);
    sensitive << ( P_16_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_16 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_16_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_17_o);
    sensitive << ( P_17_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_17 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_17_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_1_o);
    sensitive << ( P_1_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_1_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_2_o);
    sensitive << ( P_2_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_2_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_3_o);
    sensitive << ( P_3_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_3 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_3_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_4_o);
    sensitive << ( P_4_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_4_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_5_o);
    sensitive << ( P_5_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_5 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_5_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_6_o);
    sensitive << ( P_6_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_6 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_6_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_7_o);
    sensitive << ( P_7_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_7 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_7_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_8_o);
    sensitive << ( P_8_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_8 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_8_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_9_o);
    sensitive << ( P_9_i );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_return_9 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_9_o_ap_vld);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_0_address0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_0_address0 );
    sensitive << ( grp_Blowfish_Encrypt_fu_346_S_0_address0 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_S_0_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_S_0_address1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_0_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_0_ce0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_0_ce0 );
    sensitive << ( grp_Blowfish_Encrypt_fu_346_S_0_ce0 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_S_0_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_S_0_ce1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_0_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_0_d0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_0_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_0_d1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_0_d1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_0_we0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_0_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_0_we1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_0_we1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_1_address0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_1_address0 );
    sensitive << ( grp_Blowfish_Encrypt_fu_346_S_1_address0 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_S_1_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_S_1_address1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_1_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_1_ce0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_1_ce0 );
    sensitive << ( grp_Blowfish_Encrypt_fu_346_S_1_ce0 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_S_1_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_S_1_ce1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_1_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_1_d0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_1_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_1_d1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_1_d1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_1_we0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_1_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_1_we1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_1_we1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_2_address0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_2_address0 );
    sensitive << ( grp_Blowfish_Encrypt_fu_346_S_2_address0 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_S_2_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_S_2_address1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_2_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_2_ce0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_2_ce0 );
    sensitive << ( grp_Blowfish_Encrypt_fu_346_S_2_ce0 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_S_2_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_S_2_ce1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_2_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_2_d0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_2_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_2_d1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_2_d1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_2_we0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_2_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_2_we1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_2_we1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_3_address0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_3_address0 );
    sensitive << ( grp_Blowfish_Encrypt_fu_346_S_3_address0 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_S_3_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_S_3_address1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_3_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_3_ce0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_3_ce0 );
    sensitive << ( grp_Blowfish_Encrypt_fu_346_S_3_ce0 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_S_3_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_S_3_ce1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_3_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_3_d0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_3_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_3_d1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_3_d1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_3_we0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_3_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_S_3_we1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_S_3_we1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_ap_done );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_ap_done );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ciphertext_address0);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_ciphertext_address0 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_ciphertext_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ciphertext_address1);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_ciphertext_address1 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_ciphertext_address1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ciphertext_ce0);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_ciphertext_ce0 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_ciphertext_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ciphertext_ce1);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_ciphertext_ce1 );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_ciphertext_ce1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ciphertext_we0);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_ciphertext_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ciphertext_we1);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_ciphertext_we1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_decryptedtext_address0);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_decryptedtext_address0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_decryptedtext_address1);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_decryptedtext_address1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_decryptedtext_ce0);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_decryptedtext_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_decryptedtext_ce1);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_decryptedtext_ce1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_decryptedtext_d0);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_decryptedtext_d0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_decryptedtext_d1);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_decryptedtext_d1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_decryptedtext_we0);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_decryptedtext_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_decryptedtext_we1);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_decryptedtext_we1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_Blowfish_Decrypt_fu_397_ap_start);
    sensitive << ( grp_Blowfish_Decrypt_fu_397_ap_start_reg );

    SC_METHOD(thread_grp_Blowfish_Encrypt_fu_346_ap_start);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_ap_start_reg );

    SC_METHOD(thread_grp_Blowfish_SetKey_fu_328_ap_start);
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_start_reg );

    SC_METHOD(thread_key_address0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_key_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_key_address1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_key_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_key_ce0);
    sensitive << ( grp_Blowfish_SetKey_fu_328_key_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_key_ce1);
    sensitive << ( grp_Blowfish_SetKey_fu_328_key_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_plaintext_address0);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_plaintext_address0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_plaintext_address1);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_plaintext_address1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_plaintext_ce0);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_plaintext_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_plaintext_ce1);
    sensitive << ( grp_Blowfish_Encrypt_fu_346_plaintext_ce1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_set_key_read_read_fu_88_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( set_key );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_Blowfish_SetKey_fu_328_ap_done );
    sensitive << ( grp_Blowfish_Encrypt_fu_346_ap_done );
    sensitive << ( grp_Blowfish_Decrypt_fu_397_ap_done );
    sensitive << ( set_key_read_read_fu_88_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    grp_Blowfish_SetKey_fu_328_ap_start_reg = SC_LOGIC_0;
    grp_Blowfish_Encrypt_fu_346_ap_start_reg = SC_LOGIC_0;
    grp_Blowfish_Decrypt_fu_397_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Blowfish_SetKey_Encrypt_Decrypt_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, set_key, "(port)set_key");
    sc_trace(mVcdFile, key_address0, "(port)key_address0");
    sc_trace(mVcdFile, key_ce0, "(port)key_ce0");
    sc_trace(mVcdFile, key_q0, "(port)key_q0");
    sc_trace(mVcdFile, key_address1, "(port)key_address1");
    sc_trace(mVcdFile, key_ce1, "(port)key_ce1");
    sc_trace(mVcdFile, key_q1, "(port)key_q1");
    sc_trace(mVcdFile, key_size, "(port)key_size");
    sc_trace(mVcdFile, plaintext_address0, "(port)plaintext_address0");
    sc_trace(mVcdFile, plaintext_ce0, "(port)plaintext_ce0");
    sc_trace(mVcdFile, plaintext_q0, "(port)plaintext_q0");
    sc_trace(mVcdFile, plaintext_address1, "(port)plaintext_address1");
    sc_trace(mVcdFile, plaintext_ce1, "(port)plaintext_ce1");
    sc_trace(mVcdFile, plaintext_q1, "(port)plaintext_q1");
    sc_trace(mVcdFile, decryptedtext_address0, "(port)decryptedtext_address0");
    sc_trace(mVcdFile, decryptedtext_ce0, "(port)decryptedtext_ce0");
    sc_trace(mVcdFile, decryptedtext_we0, "(port)decryptedtext_we0");
    sc_trace(mVcdFile, decryptedtext_d0, "(port)decryptedtext_d0");
    sc_trace(mVcdFile, decryptedtext_address1, "(port)decryptedtext_address1");
    sc_trace(mVcdFile, decryptedtext_ce1, "(port)decryptedtext_ce1");
    sc_trace(mVcdFile, decryptedtext_we1, "(port)decryptedtext_we1");
    sc_trace(mVcdFile, decryptedtext_d1, "(port)decryptedtext_d1");
    sc_trace(mVcdFile, P_0_i, "(port)P_0_i");
    sc_trace(mVcdFile, P_0_o, "(port)P_0_o");
    sc_trace(mVcdFile, P_0_o_ap_vld, "(port)P_0_o_ap_vld");
    sc_trace(mVcdFile, P_1_i, "(port)P_1_i");
    sc_trace(mVcdFile, P_1_o, "(port)P_1_o");
    sc_trace(mVcdFile, P_1_o_ap_vld, "(port)P_1_o_ap_vld");
    sc_trace(mVcdFile, P_2_i, "(port)P_2_i");
    sc_trace(mVcdFile, P_2_o, "(port)P_2_o");
    sc_trace(mVcdFile, P_2_o_ap_vld, "(port)P_2_o_ap_vld");
    sc_trace(mVcdFile, P_3_i, "(port)P_3_i");
    sc_trace(mVcdFile, P_3_o, "(port)P_3_o");
    sc_trace(mVcdFile, P_3_o_ap_vld, "(port)P_3_o_ap_vld");
    sc_trace(mVcdFile, P_4_i, "(port)P_4_i");
    sc_trace(mVcdFile, P_4_o, "(port)P_4_o");
    sc_trace(mVcdFile, P_4_o_ap_vld, "(port)P_4_o_ap_vld");
    sc_trace(mVcdFile, P_5_i, "(port)P_5_i");
    sc_trace(mVcdFile, P_5_o, "(port)P_5_o");
    sc_trace(mVcdFile, P_5_o_ap_vld, "(port)P_5_o_ap_vld");
    sc_trace(mVcdFile, P_6_i, "(port)P_6_i");
    sc_trace(mVcdFile, P_6_o, "(port)P_6_o");
    sc_trace(mVcdFile, P_6_o_ap_vld, "(port)P_6_o_ap_vld");
    sc_trace(mVcdFile, P_7_i, "(port)P_7_i");
    sc_trace(mVcdFile, P_7_o, "(port)P_7_o");
    sc_trace(mVcdFile, P_7_o_ap_vld, "(port)P_7_o_ap_vld");
    sc_trace(mVcdFile, P_8_i, "(port)P_8_i");
    sc_trace(mVcdFile, P_8_o, "(port)P_8_o");
    sc_trace(mVcdFile, P_8_o_ap_vld, "(port)P_8_o_ap_vld");
    sc_trace(mVcdFile, P_9_i, "(port)P_9_i");
    sc_trace(mVcdFile, P_9_o, "(port)P_9_o");
    sc_trace(mVcdFile, P_9_o_ap_vld, "(port)P_9_o_ap_vld");
    sc_trace(mVcdFile, P_10_i, "(port)P_10_i");
    sc_trace(mVcdFile, P_10_o, "(port)P_10_o");
    sc_trace(mVcdFile, P_10_o_ap_vld, "(port)P_10_o_ap_vld");
    sc_trace(mVcdFile, P_11_i, "(port)P_11_i");
    sc_trace(mVcdFile, P_11_o, "(port)P_11_o");
    sc_trace(mVcdFile, P_11_o_ap_vld, "(port)P_11_o_ap_vld");
    sc_trace(mVcdFile, P_12_i, "(port)P_12_i");
    sc_trace(mVcdFile, P_12_o, "(port)P_12_o");
    sc_trace(mVcdFile, P_12_o_ap_vld, "(port)P_12_o_ap_vld");
    sc_trace(mVcdFile, P_13_i, "(port)P_13_i");
    sc_trace(mVcdFile, P_13_o, "(port)P_13_o");
    sc_trace(mVcdFile, P_13_o_ap_vld, "(port)P_13_o_ap_vld");
    sc_trace(mVcdFile, P_14_i, "(port)P_14_i");
    sc_trace(mVcdFile, P_14_o, "(port)P_14_o");
    sc_trace(mVcdFile, P_14_o_ap_vld, "(port)P_14_o_ap_vld");
    sc_trace(mVcdFile, P_15_i, "(port)P_15_i");
    sc_trace(mVcdFile, P_15_o, "(port)P_15_o");
    sc_trace(mVcdFile, P_15_o_ap_vld, "(port)P_15_o_ap_vld");
    sc_trace(mVcdFile, P_16_i, "(port)P_16_i");
    sc_trace(mVcdFile, P_16_o, "(port)P_16_o");
    sc_trace(mVcdFile, P_16_o_ap_vld, "(port)P_16_o_ap_vld");
    sc_trace(mVcdFile, P_17_i, "(port)P_17_i");
    sc_trace(mVcdFile, P_17_o, "(port)P_17_o");
    sc_trace(mVcdFile, P_17_o_ap_vld, "(port)P_17_o_ap_vld");
    sc_trace(mVcdFile, S_0_address0, "(port)S_0_address0");
    sc_trace(mVcdFile, S_0_ce0, "(port)S_0_ce0");
    sc_trace(mVcdFile, S_0_we0, "(port)S_0_we0");
    sc_trace(mVcdFile, S_0_d0, "(port)S_0_d0");
    sc_trace(mVcdFile, S_0_q0, "(port)S_0_q0");
    sc_trace(mVcdFile, S_0_address1, "(port)S_0_address1");
    sc_trace(mVcdFile, S_0_ce1, "(port)S_0_ce1");
    sc_trace(mVcdFile, S_0_we1, "(port)S_0_we1");
    sc_trace(mVcdFile, S_0_d1, "(port)S_0_d1");
    sc_trace(mVcdFile, S_1_address0, "(port)S_1_address0");
    sc_trace(mVcdFile, S_1_ce0, "(port)S_1_ce0");
    sc_trace(mVcdFile, S_1_we0, "(port)S_1_we0");
    sc_trace(mVcdFile, S_1_d0, "(port)S_1_d0");
    sc_trace(mVcdFile, S_1_q0, "(port)S_1_q0");
    sc_trace(mVcdFile, S_1_address1, "(port)S_1_address1");
    sc_trace(mVcdFile, S_1_ce1, "(port)S_1_ce1");
    sc_trace(mVcdFile, S_1_we1, "(port)S_1_we1");
    sc_trace(mVcdFile, S_1_d1, "(port)S_1_d1");
    sc_trace(mVcdFile, S_2_address0, "(port)S_2_address0");
    sc_trace(mVcdFile, S_2_ce0, "(port)S_2_ce0");
    sc_trace(mVcdFile, S_2_we0, "(port)S_2_we0");
    sc_trace(mVcdFile, S_2_d0, "(port)S_2_d0");
    sc_trace(mVcdFile, S_2_q0, "(port)S_2_q0");
    sc_trace(mVcdFile, S_2_address1, "(port)S_2_address1");
    sc_trace(mVcdFile, S_2_ce1, "(port)S_2_ce1");
    sc_trace(mVcdFile, S_2_we1, "(port)S_2_we1");
    sc_trace(mVcdFile, S_2_d1, "(port)S_2_d1");
    sc_trace(mVcdFile, S_3_address0, "(port)S_3_address0");
    sc_trace(mVcdFile, S_3_ce0, "(port)S_3_ce0");
    sc_trace(mVcdFile, S_3_we0, "(port)S_3_we0");
    sc_trace(mVcdFile, S_3_d0, "(port)S_3_d0");
    sc_trace(mVcdFile, S_3_q0, "(port)S_3_q0");
    sc_trace(mVcdFile, S_3_address1, "(port)S_3_address1");
    sc_trace(mVcdFile, S_3_ce1, "(port)S_3_ce1");
    sc_trace(mVcdFile, S_3_we1, "(port)S_3_we1");
    sc_trace(mVcdFile, S_3_d1, "(port)S_3_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_448, "reg_448");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, reg_454, "reg_454");
    sc_trace(mVcdFile, reg_460, "reg_460");
    sc_trace(mVcdFile, reg_466, "reg_466");
    sc_trace(mVcdFile, reg_472, "reg_472");
    sc_trace(mVcdFile, reg_478, "reg_478");
    sc_trace(mVcdFile, reg_484, "reg_484");
    sc_trace(mVcdFile, reg_490, "reg_490");
    sc_trace(mVcdFile, reg_496, "reg_496");
    sc_trace(mVcdFile, reg_502, "reg_502");
    sc_trace(mVcdFile, reg_508, "reg_508");
    sc_trace(mVcdFile, reg_514, "reg_514");
    sc_trace(mVcdFile, reg_520, "reg_520");
    sc_trace(mVcdFile, reg_526, "reg_526");
    sc_trace(mVcdFile, reg_532, "reg_532");
    sc_trace(mVcdFile, reg_538, "reg_538");
    sc_trace(mVcdFile, reg_544, "reg_544");
    sc_trace(mVcdFile, reg_550, "reg_550");
    sc_trace(mVcdFile, ciphertext_address0, "ciphertext_address0");
    sc_trace(mVcdFile, ciphertext_ce0, "ciphertext_ce0");
    sc_trace(mVcdFile, ciphertext_we0, "ciphertext_we0");
    sc_trace(mVcdFile, ciphertext_q0, "ciphertext_q0");
    sc_trace(mVcdFile, ciphertext_address1, "ciphertext_address1");
    sc_trace(mVcdFile, ciphertext_ce1, "ciphertext_ce1");
    sc_trace(mVcdFile, ciphertext_we1, "ciphertext_we1");
    sc_trace(mVcdFile, ciphertext_q1, "ciphertext_q1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_start, "grp_Blowfish_SetKey_fu_328_ap_start");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_done, "grp_Blowfish_SetKey_fu_328_ap_done");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_idle, "grp_Blowfish_SetKey_fu_328_ap_idle");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_ready, "grp_Blowfish_SetKey_fu_328_ap_ready");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_key_address0, "grp_Blowfish_SetKey_fu_328_key_address0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_key_ce0, "grp_Blowfish_SetKey_fu_328_key_ce0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_key_address1, "grp_Blowfish_SetKey_fu_328_key_address1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_key_ce1, "grp_Blowfish_SetKey_fu_328_key_ce1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_0_address0, "grp_Blowfish_SetKey_fu_328_S_0_address0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_0_ce0, "grp_Blowfish_SetKey_fu_328_S_0_ce0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_0_we0, "grp_Blowfish_SetKey_fu_328_S_0_we0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_0_d0, "grp_Blowfish_SetKey_fu_328_S_0_d0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_0_address1, "grp_Blowfish_SetKey_fu_328_S_0_address1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_0_ce1, "grp_Blowfish_SetKey_fu_328_S_0_ce1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_0_we1, "grp_Blowfish_SetKey_fu_328_S_0_we1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_0_d1, "grp_Blowfish_SetKey_fu_328_S_0_d1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_1_address0, "grp_Blowfish_SetKey_fu_328_S_1_address0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_1_ce0, "grp_Blowfish_SetKey_fu_328_S_1_ce0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_1_we0, "grp_Blowfish_SetKey_fu_328_S_1_we0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_1_d0, "grp_Blowfish_SetKey_fu_328_S_1_d0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_1_address1, "grp_Blowfish_SetKey_fu_328_S_1_address1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_1_ce1, "grp_Blowfish_SetKey_fu_328_S_1_ce1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_1_we1, "grp_Blowfish_SetKey_fu_328_S_1_we1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_1_d1, "grp_Blowfish_SetKey_fu_328_S_1_d1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_2_address0, "grp_Blowfish_SetKey_fu_328_S_2_address0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_2_ce0, "grp_Blowfish_SetKey_fu_328_S_2_ce0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_2_we0, "grp_Blowfish_SetKey_fu_328_S_2_we0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_2_d0, "grp_Blowfish_SetKey_fu_328_S_2_d0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_2_address1, "grp_Blowfish_SetKey_fu_328_S_2_address1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_2_ce1, "grp_Blowfish_SetKey_fu_328_S_2_ce1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_2_we1, "grp_Blowfish_SetKey_fu_328_S_2_we1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_2_d1, "grp_Blowfish_SetKey_fu_328_S_2_d1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_3_address0, "grp_Blowfish_SetKey_fu_328_S_3_address0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_3_ce0, "grp_Blowfish_SetKey_fu_328_S_3_ce0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_3_we0, "grp_Blowfish_SetKey_fu_328_S_3_we0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_3_d0, "grp_Blowfish_SetKey_fu_328_S_3_d0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_3_address1, "grp_Blowfish_SetKey_fu_328_S_3_address1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_3_ce1, "grp_Blowfish_SetKey_fu_328_S_3_ce1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_3_we1, "grp_Blowfish_SetKey_fu_328_S_3_we1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_S_3_d1, "grp_Blowfish_SetKey_fu_328_S_3_d1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_0, "grp_Blowfish_SetKey_fu_328_ap_return_0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_1, "grp_Blowfish_SetKey_fu_328_ap_return_1");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_2, "grp_Blowfish_SetKey_fu_328_ap_return_2");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_3, "grp_Blowfish_SetKey_fu_328_ap_return_3");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_4, "grp_Blowfish_SetKey_fu_328_ap_return_4");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_5, "grp_Blowfish_SetKey_fu_328_ap_return_5");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_6, "grp_Blowfish_SetKey_fu_328_ap_return_6");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_7, "grp_Blowfish_SetKey_fu_328_ap_return_7");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_8, "grp_Blowfish_SetKey_fu_328_ap_return_8");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_9, "grp_Blowfish_SetKey_fu_328_ap_return_9");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_10, "grp_Blowfish_SetKey_fu_328_ap_return_10");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_11, "grp_Blowfish_SetKey_fu_328_ap_return_11");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_12, "grp_Blowfish_SetKey_fu_328_ap_return_12");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_13, "grp_Blowfish_SetKey_fu_328_ap_return_13");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_14, "grp_Blowfish_SetKey_fu_328_ap_return_14");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_15, "grp_Blowfish_SetKey_fu_328_ap_return_15");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_16, "grp_Blowfish_SetKey_fu_328_ap_return_16");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_return_17, "grp_Blowfish_SetKey_fu_328_ap_return_17");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ap_start, "grp_Blowfish_Encrypt_fu_346_ap_start");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ap_done, "grp_Blowfish_Encrypt_fu_346_ap_done");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ap_idle, "grp_Blowfish_Encrypt_fu_346_ap_idle");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ap_ready, "grp_Blowfish_Encrypt_fu_346_ap_ready");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_plaintext_address0, "grp_Blowfish_Encrypt_fu_346_plaintext_address0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_plaintext_ce0, "grp_Blowfish_Encrypt_fu_346_plaintext_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_plaintext_address1, "grp_Blowfish_Encrypt_fu_346_plaintext_address1");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_plaintext_ce1, "grp_Blowfish_Encrypt_fu_346_plaintext_ce1");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ciphertext_address0, "grp_Blowfish_Encrypt_fu_346_ciphertext_address0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ciphertext_ce0, "grp_Blowfish_Encrypt_fu_346_ciphertext_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ciphertext_we0, "grp_Blowfish_Encrypt_fu_346_ciphertext_we0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ciphertext_d0, "grp_Blowfish_Encrypt_fu_346_ciphertext_d0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ciphertext_address1, "grp_Blowfish_Encrypt_fu_346_ciphertext_address1");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ciphertext_ce1, "grp_Blowfish_Encrypt_fu_346_ciphertext_ce1");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ciphertext_we1, "grp_Blowfish_Encrypt_fu_346_ciphertext_we1");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ciphertext_d1, "grp_Blowfish_Encrypt_fu_346_ciphertext_d1");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_S_0_address0, "grp_Blowfish_Encrypt_fu_346_S_0_address0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_S_0_ce0, "grp_Blowfish_Encrypt_fu_346_S_0_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_S_1_address0, "grp_Blowfish_Encrypt_fu_346_S_1_address0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_S_1_ce0, "grp_Blowfish_Encrypt_fu_346_S_1_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_S_2_address0, "grp_Blowfish_Encrypt_fu_346_S_2_address0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_S_2_ce0, "grp_Blowfish_Encrypt_fu_346_S_2_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_S_3_address0, "grp_Blowfish_Encrypt_fu_346_S_3_address0");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_S_3_ce0, "grp_Blowfish_Encrypt_fu_346_S_3_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_ap_start, "grp_Blowfish_Decrypt_fu_397_ap_start");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_ap_done, "grp_Blowfish_Decrypt_fu_397_ap_done");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_ap_idle, "grp_Blowfish_Decrypt_fu_397_ap_idle");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_ap_ready, "grp_Blowfish_Decrypt_fu_397_ap_ready");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_ciphertext_address0, "grp_Blowfish_Decrypt_fu_397_ciphertext_address0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_ciphertext_ce0, "grp_Blowfish_Decrypt_fu_397_ciphertext_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_ciphertext_address1, "grp_Blowfish_Decrypt_fu_397_ciphertext_address1");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_ciphertext_ce1, "grp_Blowfish_Decrypt_fu_397_ciphertext_ce1");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_decryptedtext_address0, "grp_Blowfish_Decrypt_fu_397_decryptedtext_address0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_decryptedtext_ce0, "grp_Blowfish_Decrypt_fu_397_decryptedtext_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_decryptedtext_we0, "grp_Blowfish_Decrypt_fu_397_decryptedtext_we0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_decryptedtext_d0, "grp_Blowfish_Decrypt_fu_397_decryptedtext_d0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_decryptedtext_address1, "grp_Blowfish_Decrypt_fu_397_decryptedtext_address1");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_decryptedtext_ce1, "grp_Blowfish_Decrypt_fu_397_decryptedtext_ce1");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_decryptedtext_we1, "grp_Blowfish_Decrypt_fu_397_decryptedtext_we1");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_decryptedtext_d1, "grp_Blowfish_Decrypt_fu_397_decryptedtext_d1");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_S_0_address0, "grp_Blowfish_Decrypt_fu_397_S_0_address0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_S_0_ce0, "grp_Blowfish_Decrypt_fu_397_S_0_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_S_1_address0, "grp_Blowfish_Decrypt_fu_397_S_1_address0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_S_1_ce0, "grp_Blowfish_Decrypt_fu_397_S_1_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_S_2_address0, "grp_Blowfish_Decrypt_fu_397_S_2_address0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_S_2_ce0, "grp_Blowfish_Decrypt_fu_397_S_2_ce0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_S_3_address0, "grp_Blowfish_Decrypt_fu_397_S_3_address0");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_S_3_ce0, "grp_Blowfish_Decrypt_fu_397_S_3_ce0");
    sc_trace(mVcdFile, grp_Blowfish_SetKey_fu_328_ap_start_reg, "grp_Blowfish_SetKey_fu_328_ap_start_reg");
    sc_trace(mVcdFile, set_key_read_read_fu_88_p2, "set_key_read_read_fu_88_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_Blowfish_Encrypt_fu_346_ap_start_reg, "grp_Blowfish_Encrypt_fu_346_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_Blowfish_Decrypt_fu_397_ap_start_reg, "grp_Blowfish_Decrypt_fu_397_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("Blowfish_SetKey_Encrypt_Decrypt.hdltvin.dat");
    mHdltvoutHandle.open("Blowfish_SetKey_Encrypt_Decrypt.hdltvout.dat");
}

Blowfish_SetKey_Encrypt_Decrypt::~Blowfish_SetKey_Encrypt_Decrypt() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete ciphertext_U;
    delete grp_Blowfish_SetKey_fu_328;
    delete grp_Blowfish_Encrypt_fu_346;
    delete grp_Blowfish_Decrypt_fu_397;
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_Blowfish_Decrypt_fu_397_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_Blowfish_Decrypt_fu_397_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_Blowfish_Decrypt_fu_397_ap_ready.read())) {
            grp_Blowfish_Decrypt_fu_397_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_Blowfish_Encrypt_fu_346_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_Blowfish_Encrypt_fu_346_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_Blowfish_Encrypt_fu_346_ap_ready.read())) {
            grp_Blowfish_Encrypt_fu_346_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_Blowfish_SetKey_fu_328_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(set_key_read_read_fu_88_p2.read(), ap_const_lv1_1))) {
            grp_Blowfish_SetKey_fu_328_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_Blowfish_SetKey_fu_328_ap_ready.read())) {
            grp_Blowfish_SetKey_fu_328_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        reg_448 = P_0_i.read();
        reg_454 = P_1_i.read();
        reg_460 = P_2_i.read();
        reg_466 = P_3_i.read();
        reg_472 = P_4_i.read();
        reg_478 = P_5_i.read();
        reg_484 = P_6_i.read();
        reg_490 = P_7_i.read();
        reg_496 = P_8_i.read();
        reg_502 = P_9_i.read();
        reg_508 = P_10_i.read();
        reg_514 = P_11_i.read();
        reg_520 = P_12_i.read();
        reg_526 = P_13_i.read();
        reg_532 = P_14_i.read();
        reg_538 = P_15_i.read();
        reg_544 = P_16_i.read();
        reg_550 = P_17_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_0_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_0_o = grp_Blowfish_SetKey_fu_328_ap_return_0.read();
    } else {
        P_0_o = P_0_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_0_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_0_o_ap_vld = ap_const_logic_1;
    } else {
        P_0_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_10_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_10_o = grp_Blowfish_SetKey_fu_328_ap_return_10.read();
    } else {
        P_10_o = P_10_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_10_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_10_o_ap_vld = ap_const_logic_1;
    } else {
        P_10_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_11_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_11_o = grp_Blowfish_SetKey_fu_328_ap_return_11.read();
    } else {
        P_11_o = P_11_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_11_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_11_o_ap_vld = ap_const_logic_1;
    } else {
        P_11_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_12_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_12_o = grp_Blowfish_SetKey_fu_328_ap_return_12.read();
    } else {
        P_12_o = P_12_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_12_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_12_o_ap_vld = ap_const_logic_1;
    } else {
        P_12_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_13_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_13_o = grp_Blowfish_SetKey_fu_328_ap_return_13.read();
    } else {
        P_13_o = P_13_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_13_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_13_o_ap_vld = ap_const_logic_1;
    } else {
        P_13_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_14_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_14_o = grp_Blowfish_SetKey_fu_328_ap_return_14.read();
    } else {
        P_14_o = P_14_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_14_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_14_o_ap_vld = ap_const_logic_1;
    } else {
        P_14_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_15_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_15_o = grp_Blowfish_SetKey_fu_328_ap_return_15.read();
    } else {
        P_15_o = P_15_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_15_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_15_o_ap_vld = ap_const_logic_1;
    } else {
        P_15_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_16_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_16_o = grp_Blowfish_SetKey_fu_328_ap_return_16.read();
    } else {
        P_16_o = P_16_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_16_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_16_o_ap_vld = ap_const_logic_1;
    } else {
        P_16_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_17_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_17_o = grp_Blowfish_SetKey_fu_328_ap_return_17.read();
    } else {
        P_17_o = P_17_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_17_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_17_o_ap_vld = ap_const_logic_1;
    } else {
        P_17_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_1_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_1_o = grp_Blowfish_SetKey_fu_328_ap_return_1.read();
    } else {
        P_1_o = P_1_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_1_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_1_o_ap_vld = ap_const_logic_1;
    } else {
        P_1_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_2_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_2_o = grp_Blowfish_SetKey_fu_328_ap_return_2.read();
    } else {
        P_2_o = P_2_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_2_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_2_o_ap_vld = ap_const_logic_1;
    } else {
        P_2_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_3_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_3_o = grp_Blowfish_SetKey_fu_328_ap_return_3.read();
    } else {
        P_3_o = P_3_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_3_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_3_o_ap_vld = ap_const_logic_1;
    } else {
        P_3_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_4_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_4_o = grp_Blowfish_SetKey_fu_328_ap_return_4.read();
    } else {
        P_4_o = P_4_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_4_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_4_o_ap_vld = ap_const_logic_1;
    } else {
        P_4_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_5_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_5_o = grp_Blowfish_SetKey_fu_328_ap_return_5.read();
    } else {
        P_5_o = P_5_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_5_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_5_o_ap_vld = ap_const_logic_1;
    } else {
        P_5_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_6_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_6_o = grp_Blowfish_SetKey_fu_328_ap_return_6.read();
    } else {
        P_6_o = P_6_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_6_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_6_o_ap_vld = ap_const_logic_1;
    } else {
        P_6_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_7_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_7_o = grp_Blowfish_SetKey_fu_328_ap_return_7.read();
    } else {
        P_7_o = P_7_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_7_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_7_o_ap_vld = ap_const_logic_1;
    } else {
        P_7_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_8_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_8_o = grp_Blowfish_SetKey_fu_328_ap_return_8.read();
    } else {
        P_8_o = P_8_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_8_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_8_o_ap_vld = ap_const_logic_1;
    } else {
        P_8_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_9_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_9_o = grp_Blowfish_SetKey_fu_328_ap_return_9.read();
    } else {
        P_9_o = P_9_i.read();
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_P_9_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
        P_9_o_ap_vld = ap_const_logic_1;
    } else {
        P_9_o_ap_vld = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        S_0_address0 = grp_Blowfish_Decrypt_fu_397_S_0_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        S_0_address0 = grp_Blowfish_Encrypt_fu_346_S_0_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_0_address0 = grp_Blowfish_SetKey_fu_328_S_0_address0.read();
    } else {
        S_0_address0 = "XXXXXXXX";
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_0_address1() {
    S_0_address1 = grp_Blowfish_SetKey_fu_328_S_0_address1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        S_0_ce0 = grp_Blowfish_Decrypt_fu_397_S_0_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        S_0_ce0 = grp_Blowfish_Encrypt_fu_346_S_0_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_0_ce0 = grp_Blowfish_SetKey_fu_328_S_0_ce0.read();
    } else {
        S_0_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_0_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_0_ce1 = grp_Blowfish_SetKey_fu_328_S_0_ce1.read();
    } else {
        S_0_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_0_d0() {
    S_0_d0 = grp_Blowfish_SetKey_fu_328_S_0_d0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_0_d1() {
    S_0_d1 = grp_Blowfish_SetKey_fu_328_S_0_d1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_0_we0 = grp_Blowfish_SetKey_fu_328_S_0_we0.read();
    } else {
        S_0_we0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_0_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_0_we1 = grp_Blowfish_SetKey_fu_328_S_0_we1.read();
    } else {
        S_0_we1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        S_1_address0 = grp_Blowfish_Decrypt_fu_397_S_1_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        S_1_address0 = grp_Blowfish_Encrypt_fu_346_S_1_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_1_address0 = grp_Blowfish_SetKey_fu_328_S_1_address0.read();
    } else {
        S_1_address0 = "XXXXXXXX";
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_1_address1() {
    S_1_address1 = grp_Blowfish_SetKey_fu_328_S_1_address1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        S_1_ce0 = grp_Blowfish_Decrypt_fu_397_S_1_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        S_1_ce0 = grp_Blowfish_Encrypt_fu_346_S_1_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_1_ce0 = grp_Blowfish_SetKey_fu_328_S_1_ce0.read();
    } else {
        S_1_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_1_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_1_ce1 = grp_Blowfish_SetKey_fu_328_S_1_ce1.read();
    } else {
        S_1_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_1_d0() {
    S_1_d0 = grp_Blowfish_SetKey_fu_328_S_1_d0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_1_d1() {
    S_1_d1 = grp_Blowfish_SetKey_fu_328_S_1_d1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_1_we0 = grp_Blowfish_SetKey_fu_328_S_1_we0.read();
    } else {
        S_1_we0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_1_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_1_we1 = grp_Blowfish_SetKey_fu_328_S_1_we1.read();
    } else {
        S_1_we1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        S_2_address0 = grp_Blowfish_Decrypt_fu_397_S_2_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        S_2_address0 = grp_Blowfish_Encrypt_fu_346_S_2_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_2_address0 = grp_Blowfish_SetKey_fu_328_S_2_address0.read();
    } else {
        S_2_address0 = "XXXXXXXX";
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_2_address1() {
    S_2_address1 = grp_Blowfish_SetKey_fu_328_S_2_address1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        S_2_ce0 = grp_Blowfish_Decrypt_fu_397_S_2_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        S_2_ce0 = grp_Blowfish_Encrypt_fu_346_S_2_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_2_ce0 = grp_Blowfish_SetKey_fu_328_S_2_ce0.read();
    } else {
        S_2_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_2_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_2_ce1 = grp_Blowfish_SetKey_fu_328_S_2_ce1.read();
    } else {
        S_2_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_2_d0() {
    S_2_d0 = grp_Blowfish_SetKey_fu_328_S_2_d0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_2_d1() {
    S_2_d1 = grp_Blowfish_SetKey_fu_328_S_2_d1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_2_we0 = grp_Blowfish_SetKey_fu_328_S_2_we0.read();
    } else {
        S_2_we0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_2_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_2_we1 = grp_Blowfish_SetKey_fu_328_S_2_we1.read();
    } else {
        S_2_we1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        S_3_address0 = grp_Blowfish_Decrypt_fu_397_S_3_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        S_3_address0 = grp_Blowfish_Encrypt_fu_346_S_3_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_3_address0 = grp_Blowfish_SetKey_fu_328_S_3_address0.read();
    } else {
        S_3_address0 = "XXXXXXXX";
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_3_address1() {
    S_3_address1 = grp_Blowfish_SetKey_fu_328_S_3_address1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        S_3_ce0 = grp_Blowfish_Decrypt_fu_397_S_3_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        S_3_ce0 = grp_Blowfish_Encrypt_fu_346_S_3_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_3_ce0 = grp_Blowfish_SetKey_fu_328_S_3_ce0.read();
    } else {
        S_3_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_3_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_3_ce1 = grp_Blowfish_SetKey_fu_328_S_3_ce1.read();
    } else {
        S_3_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_3_d0() {
    S_3_d0 = grp_Blowfish_SetKey_fu_328_S_3_d0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_3_d1() {
    S_3_d1 = grp_Blowfish_SetKey_fu_328_S_3_d1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_3_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_3_we0 = grp_Blowfish_SetKey_fu_328_S_3_we0.read();
    } else {
        S_3_we0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_S_3_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        S_3_we1 = grp_Blowfish_SetKey_fu_328_S_3_we1.read();
    } else {
        S_3_we1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_Decrypt_fu_397_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(grp_Blowfish_Decrypt_fu_397_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ciphertext_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ciphertext_address0 = grp_Blowfish_Decrypt_fu_397_ciphertext_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ciphertext_address0 = grp_Blowfish_Encrypt_fu_346_ciphertext_address0.read();
    } else {
        ciphertext_address0 =  (sc_lv<3>) ("XXX");
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ciphertext_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ciphertext_address1 = grp_Blowfish_Decrypt_fu_397_ciphertext_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ciphertext_address1 = grp_Blowfish_Encrypt_fu_346_ciphertext_address1.read();
    } else {
        ciphertext_address1 =  (sc_lv<3>) ("XXX");
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ciphertext_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ciphertext_ce0 = grp_Blowfish_Decrypt_fu_397_ciphertext_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ciphertext_ce0 = grp_Blowfish_Encrypt_fu_346_ciphertext_ce0.read();
    } else {
        ciphertext_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ciphertext_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ciphertext_ce1 = grp_Blowfish_Decrypt_fu_397_ciphertext_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ciphertext_ce1 = grp_Blowfish_Encrypt_fu_346_ciphertext_ce1.read();
    } else {
        ciphertext_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ciphertext_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ciphertext_we0 = grp_Blowfish_Encrypt_fu_346_ciphertext_we0.read();
    } else {
        ciphertext_we0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ciphertext_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ciphertext_we1 = grp_Blowfish_Encrypt_fu_346_ciphertext_we1.read();
    } else {
        ciphertext_we1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_decryptedtext_address0() {
    decryptedtext_address0 = grp_Blowfish_Decrypt_fu_397_decryptedtext_address0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_decryptedtext_address1() {
    decryptedtext_address1 = grp_Blowfish_Decrypt_fu_397_decryptedtext_address1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_decryptedtext_ce0() {
    decryptedtext_ce0 = grp_Blowfish_Decrypt_fu_397_decryptedtext_ce0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_decryptedtext_ce1() {
    decryptedtext_ce1 = grp_Blowfish_Decrypt_fu_397_decryptedtext_ce1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_decryptedtext_d0() {
    decryptedtext_d0 = grp_Blowfish_Decrypt_fu_397_decryptedtext_d0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_decryptedtext_d1() {
    decryptedtext_d1 = grp_Blowfish_Decrypt_fu_397_decryptedtext_d1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_decryptedtext_we0() {
    decryptedtext_we0 = grp_Blowfish_Decrypt_fu_397_decryptedtext_we0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_decryptedtext_we1() {
    decryptedtext_we1 = grp_Blowfish_Decrypt_fu_397_decryptedtext_we1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_grp_Blowfish_Decrypt_fu_397_ap_start() {
    grp_Blowfish_Decrypt_fu_397_ap_start = grp_Blowfish_Decrypt_fu_397_ap_start_reg.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_grp_Blowfish_Encrypt_fu_346_ap_start() {
    grp_Blowfish_Encrypt_fu_346_ap_start = grp_Blowfish_Encrypt_fu_346_ap_start_reg.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_grp_Blowfish_SetKey_fu_328_ap_start() {
    grp_Blowfish_SetKey_fu_328_ap_start = grp_Blowfish_SetKey_fu_328_ap_start_reg.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_key_address0() {
    key_address0 = grp_Blowfish_SetKey_fu_328_key_address0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_key_address1() {
    key_address1 = grp_Blowfish_SetKey_fu_328_key_address1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_key_ce0() {
    key_ce0 = grp_Blowfish_SetKey_fu_328_key_ce0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_key_ce1() {
    key_ce1 = grp_Blowfish_SetKey_fu_328_key_ce1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_plaintext_address0() {
    plaintext_address0 = grp_Blowfish_Encrypt_fu_346_plaintext_address0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_plaintext_address1() {
    plaintext_address1 = grp_Blowfish_Encrypt_fu_346_plaintext_address1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_plaintext_ce0() {
    plaintext_ce0 = grp_Blowfish_Encrypt_fu_346_plaintext_ce0.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_plaintext_ce1() {
    plaintext_ce1 = grp_Blowfish_Encrypt_fu_346_plaintext_ce1.read();
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_set_key_read_read_fu_88_p2() {
    set_key_read_read_fu_88_p2 =  (sc_lv<1>) (set_key.read());
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(set_key_read_read_fu_88_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(set_key_read_read_fu_88_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_Blowfish_SetKey_fu_328_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_Blowfish_Encrypt_fu_346_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_Blowfish_Decrypt_fu_397_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void Blowfish_SetKey_Encrypt_Decrypt::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"set_key\" :  \"" << set_key.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"key_address0\" :  \"" << key_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"key_ce0\" :  \"" << key_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key_q0\" :  \"" << key_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"key_address1\" :  \"" << key_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"key_ce1\" :  \"" << key_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key_q1\" :  \"" << key_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key_size\" :  \"" << key_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"plaintext_address0\" :  \"" << plaintext_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"plaintext_ce0\" :  \"" << plaintext_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"plaintext_q0\" :  \"" << plaintext_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"plaintext_address1\" :  \"" << plaintext_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"plaintext_ce1\" :  \"" << plaintext_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"plaintext_q1\" :  \"" << plaintext_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"decryptedtext_address0\" :  \"" << decryptedtext_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"decryptedtext_ce0\" :  \"" << decryptedtext_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"decryptedtext_we0\" :  \"" << decryptedtext_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"decryptedtext_d0\" :  \"" << decryptedtext_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"decryptedtext_address1\" :  \"" << decryptedtext_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"decryptedtext_ce1\" :  \"" << decryptedtext_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"decryptedtext_we1\" :  \"" << decryptedtext_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"decryptedtext_d1\" :  \"" << decryptedtext_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_0_i\" :  \"" << P_0_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_0_o\" :  \"" << P_0_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_0_o_ap_vld\" :  \"" << P_0_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_1_i\" :  \"" << P_1_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_1_o\" :  \"" << P_1_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_1_o_ap_vld\" :  \"" << P_1_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_2_i\" :  \"" << P_2_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_2_o\" :  \"" << P_2_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_2_o_ap_vld\" :  \"" << P_2_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_3_i\" :  \"" << P_3_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_3_o\" :  \"" << P_3_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_3_o_ap_vld\" :  \"" << P_3_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_4_i\" :  \"" << P_4_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_4_o\" :  \"" << P_4_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_4_o_ap_vld\" :  \"" << P_4_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_5_i\" :  \"" << P_5_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_5_o\" :  \"" << P_5_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_5_o_ap_vld\" :  \"" << P_5_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_6_i\" :  \"" << P_6_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_6_o\" :  \"" << P_6_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_6_o_ap_vld\" :  \"" << P_6_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_7_i\" :  \"" << P_7_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_7_o\" :  \"" << P_7_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_7_o_ap_vld\" :  \"" << P_7_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_8_i\" :  \"" << P_8_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_8_o\" :  \"" << P_8_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_8_o_ap_vld\" :  \"" << P_8_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_9_i\" :  \"" << P_9_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_9_o\" :  \"" << P_9_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_9_o_ap_vld\" :  \"" << P_9_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_10_i\" :  \"" << P_10_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_10_o\" :  \"" << P_10_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_10_o_ap_vld\" :  \"" << P_10_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_11_i\" :  \"" << P_11_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_11_o\" :  \"" << P_11_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_11_o_ap_vld\" :  \"" << P_11_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_12_i\" :  \"" << P_12_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_12_o\" :  \"" << P_12_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_12_o_ap_vld\" :  \"" << P_12_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_13_i\" :  \"" << P_13_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_13_o\" :  \"" << P_13_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_13_o_ap_vld\" :  \"" << P_13_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_14_i\" :  \"" << P_14_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_14_o\" :  \"" << P_14_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_14_o_ap_vld\" :  \"" << P_14_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_15_i\" :  \"" << P_15_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_15_o\" :  \"" << P_15_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_15_o_ap_vld\" :  \"" << P_15_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_16_i\" :  \"" << P_16_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_16_o\" :  \"" << P_16_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_16_o_ap_vld\" :  \"" << P_16_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_17_i\" :  \"" << P_17_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_17_o\" :  \"" << P_17_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_17_o_ap_vld\" :  \"" << P_17_o_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_0_address0\" :  \"" << S_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_0_ce0\" :  \"" << S_0_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_0_we0\" :  \"" << S_0_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_0_d0\" :  \"" << S_0_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_0_q0\" :  \"" << S_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_0_address1\" :  \"" << S_0_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_0_ce1\" :  \"" << S_0_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_0_we1\" :  \"" << S_0_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_0_d1\" :  \"" << S_0_d1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_1_address0\" :  \"" << S_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_1_ce0\" :  \"" << S_1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_1_we0\" :  \"" << S_1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_1_d0\" :  \"" << S_1_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_1_q0\" :  \"" << S_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_1_address1\" :  \"" << S_1_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_1_ce1\" :  \"" << S_1_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_1_we1\" :  \"" << S_1_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_1_d1\" :  \"" << S_1_d1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_2_address0\" :  \"" << S_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_2_ce0\" :  \"" << S_2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_2_we0\" :  \"" << S_2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_2_d0\" :  \"" << S_2_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_2_q0\" :  \"" << S_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_2_address1\" :  \"" << S_2_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_2_ce1\" :  \"" << S_2_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_2_we1\" :  \"" << S_2_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_2_d1\" :  \"" << S_2_d1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_3_address0\" :  \"" << S_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_3_ce0\" :  \"" << S_3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_3_we0\" :  \"" << S_3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_3_d0\" :  \"" << S_3_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_3_q0\" :  \"" << S_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_3_address1\" :  \"" << S_3_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_3_ce1\" :  \"" << S_3_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_3_we1\" :  \"" << S_3_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_3_d1\" :  \"" << S_3_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

