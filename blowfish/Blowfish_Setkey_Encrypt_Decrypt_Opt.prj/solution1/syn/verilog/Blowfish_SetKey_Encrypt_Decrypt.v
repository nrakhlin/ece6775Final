// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Blowfish_SetKey_Encrypt_Decrypt,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.714650,HLS_SYN_LAT=9695,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=9035,HLS_SYN_LUT=17863,HLS_VERSION=2019_2}" *)

module Blowfish_SetKey_Encrypt_Decrypt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        set_key,
        key_address0,
        key_ce0,
        key_q0,
        key_address1,
        key_ce1,
        key_q1,
        key_size,
        plaintext_address0,
        plaintext_ce0,
        plaintext_q0,
        plaintext_address1,
        plaintext_ce1,
        plaintext_q1,
        decryptedtext_address0,
        decryptedtext_ce0,
        decryptedtext_we0,
        decryptedtext_d0,
        decryptedtext_address1,
        decryptedtext_ce1,
        decryptedtext_we1,
        decryptedtext_d1,
        P_0_i,
        P_0_o,
        P_0_o_ap_vld,
        P_1_i,
        P_1_o,
        P_1_o_ap_vld,
        P_2_i,
        P_2_o,
        P_2_o_ap_vld,
        P_3_i,
        P_3_o,
        P_3_o_ap_vld,
        P_4_i,
        P_4_o,
        P_4_o_ap_vld,
        P_5_i,
        P_5_o,
        P_5_o_ap_vld,
        P_6_i,
        P_6_o,
        P_6_o_ap_vld,
        P_7_i,
        P_7_o,
        P_7_o_ap_vld,
        P_8_i,
        P_8_o,
        P_8_o_ap_vld,
        P_9_i,
        P_9_o,
        P_9_o_ap_vld,
        P_10_i,
        P_10_o,
        P_10_o_ap_vld,
        P_11_i,
        P_11_o,
        P_11_o_ap_vld,
        P_12_i,
        P_12_o,
        P_12_o_ap_vld,
        P_13_i,
        P_13_o,
        P_13_o_ap_vld,
        P_14_i,
        P_14_o,
        P_14_o_ap_vld,
        P_15_i,
        P_15_o,
        P_15_o_ap_vld,
        P_16_i,
        P_16_o,
        P_16_o_ap_vld,
        P_17_i,
        P_17_o,
        P_17_o_ap_vld,
        S_0_address0,
        S_0_ce0,
        S_0_we0,
        S_0_d0,
        S_0_q0,
        S_0_address1,
        S_0_ce1,
        S_0_we1,
        S_0_d1,
        S_1_address0,
        S_1_ce0,
        S_1_we0,
        S_1_d0,
        S_1_q0,
        S_1_address1,
        S_1_ce1,
        S_1_we1,
        S_1_d1,
        S_2_address0,
        S_2_ce0,
        S_2_we0,
        S_2_d0,
        S_2_q0,
        S_2_address1,
        S_2_ce1,
        S_2_we1,
        S_2_d1,
        S_3_address0,
        S_3_ce0,
        S_3_we0,
        S_3_d0,
        S_3_q0,
        S_3_address1,
        S_3_ce1,
        S_3_we1,
        S_3_d1
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   set_key;
output  [5:0] key_address0;
output   key_ce0;
input  [7:0] key_q0;
output  [5:0] key_address1;
output   key_ce1;
input  [7:0] key_q1;
input  [63:0] key_size;
output  [2:0] plaintext_address0;
output   plaintext_ce0;
input  [7:0] plaintext_q0;
output  [2:0] plaintext_address1;
output   plaintext_ce1;
input  [7:0] plaintext_q1;
output  [2:0] decryptedtext_address0;
output   decryptedtext_ce0;
output   decryptedtext_we0;
output  [7:0] decryptedtext_d0;
output  [2:0] decryptedtext_address1;
output   decryptedtext_ce1;
output   decryptedtext_we1;
output  [7:0] decryptedtext_d1;
input  [31:0] P_0_i;
output  [31:0] P_0_o;
output   P_0_o_ap_vld;
input  [31:0] P_1_i;
output  [31:0] P_1_o;
output   P_1_o_ap_vld;
input  [31:0] P_2_i;
output  [31:0] P_2_o;
output   P_2_o_ap_vld;
input  [31:0] P_3_i;
output  [31:0] P_3_o;
output   P_3_o_ap_vld;
input  [31:0] P_4_i;
output  [31:0] P_4_o;
output   P_4_o_ap_vld;
input  [31:0] P_5_i;
output  [31:0] P_5_o;
output   P_5_o_ap_vld;
input  [31:0] P_6_i;
output  [31:0] P_6_o;
output   P_6_o_ap_vld;
input  [31:0] P_7_i;
output  [31:0] P_7_o;
output   P_7_o_ap_vld;
input  [31:0] P_8_i;
output  [31:0] P_8_o;
output   P_8_o_ap_vld;
input  [31:0] P_9_i;
output  [31:0] P_9_o;
output   P_9_o_ap_vld;
input  [31:0] P_10_i;
output  [31:0] P_10_o;
output   P_10_o_ap_vld;
input  [31:0] P_11_i;
output  [31:0] P_11_o;
output   P_11_o_ap_vld;
input  [31:0] P_12_i;
output  [31:0] P_12_o;
output   P_12_o_ap_vld;
input  [31:0] P_13_i;
output  [31:0] P_13_o;
output   P_13_o_ap_vld;
input  [31:0] P_14_i;
output  [31:0] P_14_o;
output   P_14_o_ap_vld;
input  [31:0] P_15_i;
output  [31:0] P_15_o;
output   P_15_o_ap_vld;
input  [31:0] P_16_i;
output  [31:0] P_16_o;
output   P_16_o_ap_vld;
input  [31:0] P_17_i;
output  [31:0] P_17_o;
output   P_17_o_ap_vld;
output  [7:0] S_0_address0;
output   S_0_ce0;
output   S_0_we0;
output  [31:0] S_0_d0;
input  [31:0] S_0_q0;
output  [7:0] S_0_address1;
output   S_0_ce1;
output   S_0_we1;
output  [31:0] S_0_d1;
output  [7:0] S_1_address0;
output   S_1_ce0;
output   S_1_we0;
output  [31:0] S_1_d0;
input  [31:0] S_1_q0;
output  [7:0] S_1_address1;
output   S_1_ce1;
output   S_1_we1;
output  [31:0] S_1_d1;
output  [7:0] S_2_address0;
output   S_2_ce0;
output   S_2_we0;
output  [31:0] S_2_d0;
input  [31:0] S_2_q0;
output  [7:0] S_2_address1;
output   S_2_ce1;
output   S_2_we1;
output  [31:0] S_2_d1;
output  [7:0] S_3_address0;
output   S_3_ce0;
output   S_3_we0;
output  [31:0] S_3_d0;
input  [31:0] S_3_q0;
output  [7:0] S_3_address1;
output   S_3_ce1;
output   S_3_we1;
output  [31:0] S_3_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] P_0_o;
reg P_0_o_ap_vld;
reg[31:0] P_1_o;
reg P_1_o_ap_vld;
reg[31:0] P_2_o;
reg P_2_o_ap_vld;
reg[31:0] P_3_o;
reg P_3_o_ap_vld;
reg[31:0] P_4_o;
reg P_4_o_ap_vld;
reg[31:0] P_5_o;
reg P_5_o_ap_vld;
reg[31:0] P_6_o;
reg P_6_o_ap_vld;
reg[31:0] P_7_o;
reg P_7_o_ap_vld;
reg[31:0] P_8_o;
reg P_8_o_ap_vld;
reg[31:0] P_9_o;
reg P_9_o_ap_vld;
reg[31:0] P_10_o;
reg P_10_o_ap_vld;
reg[31:0] P_11_o;
reg P_11_o_ap_vld;
reg[31:0] P_12_o;
reg P_12_o_ap_vld;
reg[31:0] P_13_o;
reg P_13_o_ap_vld;
reg[31:0] P_14_o;
reg P_14_o_ap_vld;
reg[31:0] P_15_o;
reg P_15_o_ap_vld;
reg[31:0] P_16_o;
reg P_16_o_ap_vld;
reg[31:0] P_17_o;
reg P_17_o_ap_vld;
reg[7:0] S_0_address0;
reg S_0_ce0;
reg S_0_we0;
reg S_0_ce1;
reg S_0_we1;
reg[7:0] S_1_address0;
reg S_1_ce0;
reg S_1_we0;
reg S_1_ce1;
reg S_1_we1;
reg[7:0] S_2_address0;
reg S_2_ce0;
reg S_2_we0;
reg S_2_ce1;
reg S_2_we1;
reg[7:0] S_3_address0;
reg S_3_ce0;
reg S_3_we0;
reg S_3_ce1;
reg S_3_we1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_448;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
reg   [31:0] reg_454;
reg   [31:0] reg_460;
reg   [31:0] reg_466;
reg   [31:0] reg_472;
reg   [31:0] reg_478;
reg   [31:0] reg_484;
reg   [31:0] reg_490;
reg   [31:0] reg_496;
reg   [31:0] reg_502;
reg   [31:0] reg_508;
reg   [31:0] reg_514;
reg   [31:0] reg_520;
reg   [31:0] reg_526;
reg   [31:0] reg_532;
reg   [31:0] reg_538;
reg   [31:0] reg_544;
reg   [31:0] reg_550;
reg   [2:0] ciphertext_address0;
reg    ciphertext_ce0;
reg    ciphertext_we0;
wire   [7:0] ciphertext_q0;
reg   [2:0] ciphertext_address1;
reg    ciphertext_ce1;
reg    ciphertext_we1;
wire   [7:0] ciphertext_q1;
wire    grp_Blowfish_SetKey_fu_328_ap_start;
wire    grp_Blowfish_SetKey_fu_328_ap_done;
wire    grp_Blowfish_SetKey_fu_328_ap_idle;
wire    grp_Blowfish_SetKey_fu_328_ap_ready;
wire   [5:0] grp_Blowfish_SetKey_fu_328_key_address0;
wire    grp_Blowfish_SetKey_fu_328_key_ce0;
wire   [5:0] grp_Blowfish_SetKey_fu_328_key_address1;
wire    grp_Blowfish_SetKey_fu_328_key_ce1;
wire   [7:0] grp_Blowfish_SetKey_fu_328_S_0_address0;
wire    grp_Blowfish_SetKey_fu_328_S_0_ce0;
wire    grp_Blowfish_SetKey_fu_328_S_0_we0;
wire   [31:0] grp_Blowfish_SetKey_fu_328_S_0_d0;
wire   [7:0] grp_Blowfish_SetKey_fu_328_S_0_address1;
wire    grp_Blowfish_SetKey_fu_328_S_0_ce1;
wire    grp_Blowfish_SetKey_fu_328_S_0_we1;
wire   [31:0] grp_Blowfish_SetKey_fu_328_S_0_d1;
wire   [7:0] grp_Blowfish_SetKey_fu_328_S_1_address0;
wire    grp_Blowfish_SetKey_fu_328_S_1_ce0;
wire    grp_Blowfish_SetKey_fu_328_S_1_we0;
wire   [31:0] grp_Blowfish_SetKey_fu_328_S_1_d0;
wire   [7:0] grp_Blowfish_SetKey_fu_328_S_1_address1;
wire    grp_Blowfish_SetKey_fu_328_S_1_ce1;
wire    grp_Blowfish_SetKey_fu_328_S_1_we1;
wire   [31:0] grp_Blowfish_SetKey_fu_328_S_1_d1;
wire   [7:0] grp_Blowfish_SetKey_fu_328_S_2_address0;
wire    grp_Blowfish_SetKey_fu_328_S_2_ce0;
wire    grp_Blowfish_SetKey_fu_328_S_2_we0;
wire   [31:0] grp_Blowfish_SetKey_fu_328_S_2_d0;
wire   [7:0] grp_Blowfish_SetKey_fu_328_S_2_address1;
wire    grp_Blowfish_SetKey_fu_328_S_2_ce1;
wire    grp_Blowfish_SetKey_fu_328_S_2_we1;
wire   [31:0] grp_Blowfish_SetKey_fu_328_S_2_d1;
wire   [7:0] grp_Blowfish_SetKey_fu_328_S_3_address0;
wire    grp_Blowfish_SetKey_fu_328_S_3_ce0;
wire    grp_Blowfish_SetKey_fu_328_S_3_we0;
wire   [31:0] grp_Blowfish_SetKey_fu_328_S_3_d0;
wire   [7:0] grp_Blowfish_SetKey_fu_328_S_3_address1;
wire    grp_Blowfish_SetKey_fu_328_S_3_ce1;
wire    grp_Blowfish_SetKey_fu_328_S_3_we1;
wire   [31:0] grp_Blowfish_SetKey_fu_328_S_3_d1;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_0;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_1;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_2;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_3;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_4;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_5;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_6;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_7;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_8;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_9;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_10;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_11;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_12;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_13;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_14;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_15;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_16;
wire   [31:0] grp_Blowfish_SetKey_fu_328_ap_return_17;
wire    grp_Blowfish_Encrypt_fu_346_ap_start;
wire    grp_Blowfish_Encrypt_fu_346_ap_done;
wire    grp_Blowfish_Encrypt_fu_346_ap_idle;
wire    grp_Blowfish_Encrypt_fu_346_ap_ready;
wire   [2:0] grp_Blowfish_Encrypt_fu_346_plaintext_address0;
wire    grp_Blowfish_Encrypt_fu_346_plaintext_ce0;
wire   [2:0] grp_Blowfish_Encrypt_fu_346_plaintext_address1;
wire    grp_Blowfish_Encrypt_fu_346_plaintext_ce1;
wire   [2:0] grp_Blowfish_Encrypt_fu_346_ciphertext_address0;
wire    grp_Blowfish_Encrypt_fu_346_ciphertext_ce0;
wire    grp_Blowfish_Encrypt_fu_346_ciphertext_we0;
wire   [7:0] grp_Blowfish_Encrypt_fu_346_ciphertext_d0;
wire   [2:0] grp_Blowfish_Encrypt_fu_346_ciphertext_address1;
wire    grp_Blowfish_Encrypt_fu_346_ciphertext_ce1;
wire    grp_Blowfish_Encrypt_fu_346_ciphertext_we1;
wire   [7:0] grp_Blowfish_Encrypt_fu_346_ciphertext_d1;
wire   [7:0] grp_Blowfish_Encrypt_fu_346_S_0_address0;
wire    grp_Blowfish_Encrypt_fu_346_S_0_ce0;
wire   [7:0] grp_Blowfish_Encrypt_fu_346_S_1_address0;
wire    grp_Blowfish_Encrypt_fu_346_S_1_ce0;
wire   [7:0] grp_Blowfish_Encrypt_fu_346_S_2_address0;
wire    grp_Blowfish_Encrypt_fu_346_S_2_ce0;
wire   [7:0] grp_Blowfish_Encrypt_fu_346_S_3_address0;
wire    grp_Blowfish_Encrypt_fu_346_S_3_ce0;
wire    grp_Blowfish_Decrypt_fu_397_ap_start;
wire    grp_Blowfish_Decrypt_fu_397_ap_done;
wire    grp_Blowfish_Decrypt_fu_397_ap_idle;
wire    grp_Blowfish_Decrypt_fu_397_ap_ready;
wire   [2:0] grp_Blowfish_Decrypt_fu_397_ciphertext_address0;
wire    grp_Blowfish_Decrypt_fu_397_ciphertext_ce0;
wire   [2:0] grp_Blowfish_Decrypt_fu_397_ciphertext_address1;
wire    grp_Blowfish_Decrypt_fu_397_ciphertext_ce1;
wire   [2:0] grp_Blowfish_Decrypt_fu_397_decryptedtext_address0;
wire    grp_Blowfish_Decrypt_fu_397_decryptedtext_ce0;
wire    grp_Blowfish_Decrypt_fu_397_decryptedtext_we0;
wire   [7:0] grp_Blowfish_Decrypt_fu_397_decryptedtext_d0;
wire   [2:0] grp_Blowfish_Decrypt_fu_397_decryptedtext_address1;
wire    grp_Blowfish_Decrypt_fu_397_decryptedtext_ce1;
wire    grp_Blowfish_Decrypt_fu_397_decryptedtext_we1;
wire   [7:0] grp_Blowfish_Decrypt_fu_397_decryptedtext_d1;
wire   [7:0] grp_Blowfish_Decrypt_fu_397_S_0_address0;
wire    grp_Blowfish_Decrypt_fu_397_S_0_ce0;
wire   [7:0] grp_Blowfish_Decrypt_fu_397_S_1_address0;
wire    grp_Blowfish_Decrypt_fu_397_S_1_ce0;
wire   [7:0] grp_Blowfish_Decrypt_fu_397_S_2_address0;
wire    grp_Blowfish_Decrypt_fu_397_S_2_ce0;
wire   [7:0] grp_Blowfish_Decrypt_fu_397_S_3_address0;
wire    grp_Blowfish_Decrypt_fu_397_S_3_ce0;
reg    grp_Blowfish_SetKey_fu_328_ap_start_reg;
wire   [0:0] set_key_read_read_fu_88_p2;
wire    ap_CS_fsm_state2;
reg    grp_Blowfish_Encrypt_fu_346_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_Blowfish_Decrypt_fu_397_ap_start_reg;
wire    ap_CS_fsm_state6;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_Blowfish_SetKey_fu_328_ap_start_reg = 1'b0;
#0 grp_Blowfish_Encrypt_fu_346_ap_start_reg = 1'b0;
#0 grp_Blowfish_Decrypt_fu_397_ap_start_reg = 1'b0;
end

Blowfish_SetKey_EfYi #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
ciphertext_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ciphertext_address0),
    .ce0(ciphertext_ce0),
    .we0(ciphertext_we0),
    .d0(grp_Blowfish_Encrypt_fu_346_ciphertext_d0),
    .q0(ciphertext_q0),
    .address1(ciphertext_address1),
    .ce1(ciphertext_ce1),
    .we1(ciphertext_we1),
    .d1(grp_Blowfish_Encrypt_fu_346_ciphertext_d1),
    .q1(ciphertext_q1)
);

Blowfish_SetKey grp_Blowfish_SetKey_fu_328(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Blowfish_SetKey_fu_328_ap_start),
    .ap_done(grp_Blowfish_SetKey_fu_328_ap_done),
    .ap_idle(grp_Blowfish_SetKey_fu_328_ap_idle),
    .ap_ready(grp_Blowfish_SetKey_fu_328_ap_ready),
    .key_address0(grp_Blowfish_SetKey_fu_328_key_address0),
    .key_ce0(grp_Blowfish_SetKey_fu_328_key_ce0),
    .key_q0(key_q0),
    .key_address1(grp_Blowfish_SetKey_fu_328_key_address1),
    .key_ce1(grp_Blowfish_SetKey_fu_328_key_ce1),
    .key_q1(key_q1),
    .key_size(key_size),
    .S_0_address0(grp_Blowfish_SetKey_fu_328_S_0_address0),
    .S_0_ce0(grp_Blowfish_SetKey_fu_328_S_0_ce0),
    .S_0_we0(grp_Blowfish_SetKey_fu_328_S_0_we0),
    .S_0_d0(grp_Blowfish_SetKey_fu_328_S_0_d0),
    .S_0_q0(S_0_q0),
    .S_0_address1(grp_Blowfish_SetKey_fu_328_S_0_address1),
    .S_0_ce1(grp_Blowfish_SetKey_fu_328_S_0_ce1),
    .S_0_we1(grp_Blowfish_SetKey_fu_328_S_0_we1),
    .S_0_d1(grp_Blowfish_SetKey_fu_328_S_0_d1),
    .S_1_address0(grp_Blowfish_SetKey_fu_328_S_1_address0),
    .S_1_ce0(grp_Blowfish_SetKey_fu_328_S_1_ce0),
    .S_1_we0(grp_Blowfish_SetKey_fu_328_S_1_we0),
    .S_1_d0(grp_Blowfish_SetKey_fu_328_S_1_d0),
    .S_1_q0(S_1_q0),
    .S_1_address1(grp_Blowfish_SetKey_fu_328_S_1_address1),
    .S_1_ce1(grp_Blowfish_SetKey_fu_328_S_1_ce1),
    .S_1_we1(grp_Blowfish_SetKey_fu_328_S_1_we1),
    .S_1_d1(grp_Blowfish_SetKey_fu_328_S_1_d1),
    .S_2_address0(grp_Blowfish_SetKey_fu_328_S_2_address0),
    .S_2_ce0(grp_Blowfish_SetKey_fu_328_S_2_ce0),
    .S_2_we0(grp_Blowfish_SetKey_fu_328_S_2_we0),
    .S_2_d0(grp_Blowfish_SetKey_fu_328_S_2_d0),
    .S_2_q0(S_2_q0),
    .S_2_address1(grp_Blowfish_SetKey_fu_328_S_2_address1),
    .S_2_ce1(grp_Blowfish_SetKey_fu_328_S_2_ce1),
    .S_2_we1(grp_Blowfish_SetKey_fu_328_S_2_we1),
    .S_2_d1(grp_Blowfish_SetKey_fu_328_S_2_d1),
    .S_3_address0(grp_Blowfish_SetKey_fu_328_S_3_address0),
    .S_3_ce0(grp_Blowfish_SetKey_fu_328_S_3_ce0),
    .S_3_we0(grp_Blowfish_SetKey_fu_328_S_3_we0),
    .S_3_d0(grp_Blowfish_SetKey_fu_328_S_3_d0),
    .S_3_q0(S_3_q0),
    .S_3_address1(grp_Blowfish_SetKey_fu_328_S_3_address1),
    .S_3_ce1(grp_Blowfish_SetKey_fu_328_S_3_ce1),
    .S_3_we1(grp_Blowfish_SetKey_fu_328_S_3_we1),
    .S_3_d1(grp_Blowfish_SetKey_fu_328_S_3_d1),
    .ap_return_0(grp_Blowfish_SetKey_fu_328_ap_return_0),
    .ap_return_1(grp_Blowfish_SetKey_fu_328_ap_return_1),
    .ap_return_2(grp_Blowfish_SetKey_fu_328_ap_return_2),
    .ap_return_3(grp_Blowfish_SetKey_fu_328_ap_return_3),
    .ap_return_4(grp_Blowfish_SetKey_fu_328_ap_return_4),
    .ap_return_5(grp_Blowfish_SetKey_fu_328_ap_return_5),
    .ap_return_6(grp_Blowfish_SetKey_fu_328_ap_return_6),
    .ap_return_7(grp_Blowfish_SetKey_fu_328_ap_return_7),
    .ap_return_8(grp_Blowfish_SetKey_fu_328_ap_return_8),
    .ap_return_9(grp_Blowfish_SetKey_fu_328_ap_return_9),
    .ap_return_10(grp_Blowfish_SetKey_fu_328_ap_return_10),
    .ap_return_11(grp_Blowfish_SetKey_fu_328_ap_return_11),
    .ap_return_12(grp_Blowfish_SetKey_fu_328_ap_return_12),
    .ap_return_13(grp_Blowfish_SetKey_fu_328_ap_return_13),
    .ap_return_14(grp_Blowfish_SetKey_fu_328_ap_return_14),
    .ap_return_15(grp_Blowfish_SetKey_fu_328_ap_return_15),
    .ap_return_16(grp_Blowfish_SetKey_fu_328_ap_return_16),
    .ap_return_17(grp_Blowfish_SetKey_fu_328_ap_return_17)
);

Blowfish_Encrypt grp_Blowfish_Encrypt_fu_346(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Blowfish_Encrypt_fu_346_ap_start),
    .ap_done(grp_Blowfish_Encrypt_fu_346_ap_done),
    .ap_idle(grp_Blowfish_Encrypt_fu_346_ap_idle),
    .ap_ready(grp_Blowfish_Encrypt_fu_346_ap_ready),
    .plaintext_address0(grp_Blowfish_Encrypt_fu_346_plaintext_address0),
    .plaintext_ce0(grp_Blowfish_Encrypt_fu_346_plaintext_ce0),
    .plaintext_q0(plaintext_q0),
    .plaintext_address1(grp_Blowfish_Encrypt_fu_346_plaintext_address1),
    .plaintext_ce1(grp_Blowfish_Encrypt_fu_346_plaintext_ce1),
    .plaintext_q1(plaintext_q1),
    .ciphertext_address0(grp_Blowfish_Encrypt_fu_346_ciphertext_address0),
    .ciphertext_ce0(grp_Blowfish_Encrypt_fu_346_ciphertext_ce0),
    .ciphertext_we0(grp_Blowfish_Encrypt_fu_346_ciphertext_we0),
    .ciphertext_d0(grp_Blowfish_Encrypt_fu_346_ciphertext_d0),
    .ciphertext_address1(grp_Blowfish_Encrypt_fu_346_ciphertext_address1),
    .ciphertext_ce1(grp_Blowfish_Encrypt_fu_346_ciphertext_ce1),
    .ciphertext_we1(grp_Blowfish_Encrypt_fu_346_ciphertext_we1),
    .ciphertext_d1(grp_Blowfish_Encrypt_fu_346_ciphertext_d1),
    .P_0_read(reg_448),
    .P_1_read(reg_454),
    .P_2_read(reg_460),
    .P_3_read(reg_466),
    .P_4_read(reg_472),
    .P_5_read(reg_478),
    .P_6_read(reg_484),
    .P_7_read(reg_490),
    .P_8_read(reg_496),
    .P_9_read(reg_502),
    .P_10_read(reg_508),
    .P_11_read(reg_514),
    .P_12_read(reg_520),
    .P_13_read(reg_526),
    .P_14_read(reg_532),
    .P_15_read(reg_538),
    .P_16_read(reg_544),
    .P_17_read(reg_550),
    .S_0_address0(grp_Blowfish_Encrypt_fu_346_S_0_address0),
    .S_0_ce0(grp_Blowfish_Encrypt_fu_346_S_0_ce0),
    .S_0_q0(S_0_q0),
    .S_1_address0(grp_Blowfish_Encrypt_fu_346_S_1_address0),
    .S_1_ce0(grp_Blowfish_Encrypt_fu_346_S_1_ce0),
    .S_1_q0(S_1_q0),
    .S_2_address0(grp_Blowfish_Encrypt_fu_346_S_2_address0),
    .S_2_ce0(grp_Blowfish_Encrypt_fu_346_S_2_ce0),
    .S_2_q0(S_2_q0),
    .S_3_address0(grp_Blowfish_Encrypt_fu_346_S_3_address0),
    .S_3_ce0(grp_Blowfish_Encrypt_fu_346_S_3_ce0),
    .S_3_q0(S_3_q0)
);

Blowfish_Decrypt grp_Blowfish_Decrypt_fu_397(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Blowfish_Decrypt_fu_397_ap_start),
    .ap_done(grp_Blowfish_Decrypt_fu_397_ap_done),
    .ap_idle(grp_Blowfish_Decrypt_fu_397_ap_idle),
    .ap_ready(grp_Blowfish_Decrypt_fu_397_ap_ready),
    .ciphertext_address0(grp_Blowfish_Decrypt_fu_397_ciphertext_address0),
    .ciphertext_ce0(grp_Blowfish_Decrypt_fu_397_ciphertext_ce0),
    .ciphertext_q0(ciphertext_q0),
    .ciphertext_address1(grp_Blowfish_Decrypt_fu_397_ciphertext_address1),
    .ciphertext_ce1(grp_Blowfish_Decrypt_fu_397_ciphertext_ce1),
    .ciphertext_q1(ciphertext_q1),
    .decryptedtext_address0(grp_Blowfish_Decrypt_fu_397_decryptedtext_address0),
    .decryptedtext_ce0(grp_Blowfish_Decrypt_fu_397_decryptedtext_ce0),
    .decryptedtext_we0(grp_Blowfish_Decrypt_fu_397_decryptedtext_we0),
    .decryptedtext_d0(grp_Blowfish_Decrypt_fu_397_decryptedtext_d0),
    .decryptedtext_address1(grp_Blowfish_Decrypt_fu_397_decryptedtext_address1),
    .decryptedtext_ce1(grp_Blowfish_Decrypt_fu_397_decryptedtext_ce1),
    .decryptedtext_we1(grp_Blowfish_Decrypt_fu_397_decryptedtext_we1),
    .decryptedtext_d1(grp_Blowfish_Decrypt_fu_397_decryptedtext_d1),
    .P_0_read(reg_448),
    .P_1_read(reg_454),
    .P_2_read(reg_460),
    .P_3_read(reg_466),
    .P_4_read(reg_472),
    .P_5_read(reg_478),
    .P_6_read(reg_484),
    .P_7_read(reg_490),
    .P_8_read(reg_496),
    .P_9_read(reg_502),
    .P_10_read(reg_508),
    .P_11_read(reg_514),
    .P_12_read(reg_520),
    .P_13_read(reg_526),
    .P_14_read(reg_532),
    .P_15_read(reg_538),
    .P_16_read(reg_544),
    .P_17_read(reg_550),
    .S_0_address0(grp_Blowfish_Decrypt_fu_397_S_0_address0),
    .S_0_ce0(grp_Blowfish_Decrypt_fu_397_S_0_ce0),
    .S_0_q0(S_0_q0),
    .S_1_address0(grp_Blowfish_Decrypt_fu_397_S_1_address0),
    .S_1_ce0(grp_Blowfish_Decrypt_fu_397_S_1_ce0),
    .S_1_q0(S_1_q0),
    .S_2_address0(grp_Blowfish_Decrypt_fu_397_S_2_address0),
    .S_2_ce0(grp_Blowfish_Decrypt_fu_397_S_2_ce0),
    .S_2_q0(S_2_q0),
    .S_3_address0(grp_Blowfish_Decrypt_fu_397_S_3_address0),
    .S_3_ce0(grp_Blowfish_Decrypt_fu_397_S_3_ce0),
    .S_3_q0(S_3_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Blowfish_Decrypt_fu_397_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_Blowfish_Decrypt_fu_397_ap_start_reg <= 1'b1;
        end else if ((grp_Blowfish_Decrypt_fu_397_ap_ready == 1'b1)) begin
            grp_Blowfish_Decrypt_fu_397_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Blowfish_Encrypt_fu_346_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_Blowfish_Encrypt_fu_346_ap_start_reg <= 1'b1;
        end else if ((grp_Blowfish_Encrypt_fu_346_ap_ready == 1'b1)) begin
            grp_Blowfish_Encrypt_fu_346_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Blowfish_SetKey_fu_328_ap_start_reg <= 1'b0;
    end else begin
        if (((set_key_read_read_fu_88_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_Blowfish_SetKey_fu_328_ap_start_reg <= 1'b1;
        end else if ((grp_Blowfish_SetKey_fu_328_ap_ready == 1'b1)) begin
            grp_Blowfish_SetKey_fu_328_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_448 <= P_0_i;
        reg_454 <= P_1_i;
        reg_460 <= P_2_i;
        reg_466 <= P_3_i;
        reg_472 <= P_4_i;
        reg_478 <= P_5_i;
        reg_484 <= P_6_i;
        reg_490 <= P_7_i;
        reg_496 <= P_8_i;
        reg_502 <= P_9_i;
        reg_508 <= P_10_i;
        reg_514 <= P_11_i;
        reg_520 <= P_12_i;
        reg_526 <= P_13_i;
        reg_532 <= P_14_i;
        reg_538 <= P_15_i;
        reg_544 <= P_16_i;
        reg_550 <= P_17_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_0_o = grp_Blowfish_SetKey_fu_328_ap_return_0;
    end else begin
        P_0_o = P_0_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_0_o_ap_vld = 1'b1;
    end else begin
        P_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_10_o = grp_Blowfish_SetKey_fu_328_ap_return_10;
    end else begin
        P_10_o = P_10_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_10_o_ap_vld = 1'b1;
    end else begin
        P_10_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_11_o = grp_Blowfish_SetKey_fu_328_ap_return_11;
    end else begin
        P_11_o = P_11_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_11_o_ap_vld = 1'b1;
    end else begin
        P_11_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_12_o = grp_Blowfish_SetKey_fu_328_ap_return_12;
    end else begin
        P_12_o = P_12_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_12_o_ap_vld = 1'b1;
    end else begin
        P_12_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_13_o = grp_Blowfish_SetKey_fu_328_ap_return_13;
    end else begin
        P_13_o = P_13_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_13_o_ap_vld = 1'b1;
    end else begin
        P_13_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_14_o = grp_Blowfish_SetKey_fu_328_ap_return_14;
    end else begin
        P_14_o = P_14_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_14_o_ap_vld = 1'b1;
    end else begin
        P_14_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_15_o = grp_Blowfish_SetKey_fu_328_ap_return_15;
    end else begin
        P_15_o = P_15_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_15_o_ap_vld = 1'b1;
    end else begin
        P_15_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_16_o = grp_Blowfish_SetKey_fu_328_ap_return_16;
    end else begin
        P_16_o = P_16_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_16_o_ap_vld = 1'b1;
    end else begin
        P_16_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_17_o = grp_Blowfish_SetKey_fu_328_ap_return_17;
    end else begin
        P_17_o = P_17_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_17_o_ap_vld = 1'b1;
    end else begin
        P_17_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_1_o = grp_Blowfish_SetKey_fu_328_ap_return_1;
    end else begin
        P_1_o = P_1_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_1_o_ap_vld = 1'b1;
    end else begin
        P_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_2_o = grp_Blowfish_SetKey_fu_328_ap_return_2;
    end else begin
        P_2_o = P_2_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_2_o_ap_vld = 1'b1;
    end else begin
        P_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_3_o = grp_Blowfish_SetKey_fu_328_ap_return_3;
    end else begin
        P_3_o = P_3_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_3_o_ap_vld = 1'b1;
    end else begin
        P_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_4_o = grp_Blowfish_SetKey_fu_328_ap_return_4;
    end else begin
        P_4_o = P_4_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_4_o_ap_vld = 1'b1;
    end else begin
        P_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_5_o = grp_Blowfish_SetKey_fu_328_ap_return_5;
    end else begin
        P_5_o = P_5_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_5_o_ap_vld = 1'b1;
    end else begin
        P_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_6_o = grp_Blowfish_SetKey_fu_328_ap_return_6;
    end else begin
        P_6_o = P_6_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_6_o_ap_vld = 1'b1;
    end else begin
        P_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_7_o = grp_Blowfish_SetKey_fu_328_ap_return_7;
    end else begin
        P_7_o = P_7_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_7_o_ap_vld = 1'b1;
    end else begin
        P_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_8_o = grp_Blowfish_SetKey_fu_328_ap_return_8;
    end else begin
        P_8_o = P_8_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_8_o_ap_vld = 1'b1;
    end else begin
        P_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_9_o = grp_Blowfish_SetKey_fu_328_ap_return_9;
    end else begin
        P_9_o = P_9_i;
    end
end

always @ (*) begin
    if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        P_9_o_ap_vld = 1'b1;
    end else begin
        P_9_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        S_0_address0 = grp_Blowfish_Decrypt_fu_397_S_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        S_0_address0 = grp_Blowfish_Encrypt_fu_346_S_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        S_0_address0 = grp_Blowfish_SetKey_fu_328_S_0_address0;
    end else begin
        S_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        S_0_ce0 = grp_Blowfish_Decrypt_fu_397_S_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        S_0_ce0 = grp_Blowfish_Encrypt_fu_346_S_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        S_0_ce0 = grp_Blowfish_SetKey_fu_328_S_0_ce0;
    end else begin
        S_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_0_ce1 = grp_Blowfish_SetKey_fu_328_S_0_ce1;
    end else begin
        S_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_0_we0 = grp_Blowfish_SetKey_fu_328_S_0_we0;
    end else begin
        S_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_0_we1 = grp_Blowfish_SetKey_fu_328_S_0_we1;
    end else begin
        S_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        S_1_address0 = grp_Blowfish_Decrypt_fu_397_S_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        S_1_address0 = grp_Blowfish_Encrypt_fu_346_S_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        S_1_address0 = grp_Blowfish_SetKey_fu_328_S_1_address0;
    end else begin
        S_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        S_1_ce0 = grp_Blowfish_Decrypt_fu_397_S_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        S_1_ce0 = grp_Blowfish_Encrypt_fu_346_S_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        S_1_ce0 = grp_Blowfish_SetKey_fu_328_S_1_ce0;
    end else begin
        S_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_1_ce1 = grp_Blowfish_SetKey_fu_328_S_1_ce1;
    end else begin
        S_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_1_we0 = grp_Blowfish_SetKey_fu_328_S_1_we0;
    end else begin
        S_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_1_we1 = grp_Blowfish_SetKey_fu_328_S_1_we1;
    end else begin
        S_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        S_2_address0 = grp_Blowfish_Decrypt_fu_397_S_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        S_2_address0 = grp_Blowfish_Encrypt_fu_346_S_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        S_2_address0 = grp_Blowfish_SetKey_fu_328_S_2_address0;
    end else begin
        S_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        S_2_ce0 = grp_Blowfish_Decrypt_fu_397_S_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        S_2_ce0 = grp_Blowfish_Encrypt_fu_346_S_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        S_2_ce0 = grp_Blowfish_SetKey_fu_328_S_2_ce0;
    end else begin
        S_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_2_ce1 = grp_Blowfish_SetKey_fu_328_S_2_ce1;
    end else begin
        S_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_2_we0 = grp_Blowfish_SetKey_fu_328_S_2_we0;
    end else begin
        S_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_2_we1 = grp_Blowfish_SetKey_fu_328_S_2_we1;
    end else begin
        S_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        S_3_address0 = grp_Blowfish_Decrypt_fu_397_S_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        S_3_address0 = grp_Blowfish_Encrypt_fu_346_S_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        S_3_address0 = grp_Blowfish_SetKey_fu_328_S_3_address0;
    end else begin
        S_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        S_3_ce0 = grp_Blowfish_Decrypt_fu_397_S_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        S_3_ce0 = grp_Blowfish_Encrypt_fu_346_S_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        S_3_ce0 = grp_Blowfish_SetKey_fu_328_S_3_ce0;
    end else begin
        S_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_3_ce1 = grp_Blowfish_SetKey_fu_328_S_3_ce1;
    end else begin
        S_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_3_we0 = grp_Blowfish_SetKey_fu_328_S_3_we0;
    end else begin
        S_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        S_3_we1 = grp_Blowfish_SetKey_fu_328_S_3_we1;
    end else begin
        S_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_Decrypt_fu_397_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Blowfish_Decrypt_fu_397_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ciphertext_address0 = grp_Blowfish_Decrypt_fu_397_ciphertext_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ciphertext_address0 = grp_Blowfish_Encrypt_fu_346_ciphertext_address0;
    end else begin
        ciphertext_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ciphertext_address1 = grp_Blowfish_Decrypt_fu_397_ciphertext_address1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ciphertext_address1 = grp_Blowfish_Encrypt_fu_346_ciphertext_address1;
    end else begin
        ciphertext_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ciphertext_ce0 = grp_Blowfish_Decrypt_fu_397_ciphertext_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ciphertext_ce0 = grp_Blowfish_Encrypt_fu_346_ciphertext_ce0;
    end else begin
        ciphertext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ciphertext_ce1 = grp_Blowfish_Decrypt_fu_397_ciphertext_ce1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ciphertext_ce1 = grp_Blowfish_Encrypt_fu_346_ciphertext_ce1;
    end else begin
        ciphertext_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ciphertext_we0 = grp_Blowfish_Encrypt_fu_346_ciphertext_we0;
    end else begin
        ciphertext_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ciphertext_we1 = grp_Blowfish_Encrypt_fu_346_ciphertext_we1;
    end else begin
        ciphertext_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((set_key_read_read_fu_88_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((set_key_read_read_fu_88_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_Blowfish_SetKey_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_Blowfish_Encrypt_fu_346_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_Blowfish_Decrypt_fu_397_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign S_0_address1 = grp_Blowfish_SetKey_fu_328_S_0_address1;

assign S_0_d0 = grp_Blowfish_SetKey_fu_328_S_0_d0;

assign S_0_d1 = grp_Blowfish_SetKey_fu_328_S_0_d1;

assign S_1_address1 = grp_Blowfish_SetKey_fu_328_S_1_address1;

assign S_1_d0 = grp_Blowfish_SetKey_fu_328_S_1_d0;

assign S_1_d1 = grp_Blowfish_SetKey_fu_328_S_1_d1;

assign S_2_address1 = grp_Blowfish_SetKey_fu_328_S_2_address1;

assign S_2_d0 = grp_Blowfish_SetKey_fu_328_S_2_d0;

assign S_2_d1 = grp_Blowfish_SetKey_fu_328_S_2_d1;

assign S_3_address1 = grp_Blowfish_SetKey_fu_328_S_3_address1;

assign S_3_d0 = grp_Blowfish_SetKey_fu_328_S_3_d0;

assign S_3_d1 = grp_Blowfish_SetKey_fu_328_S_3_d1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign decryptedtext_address0 = grp_Blowfish_Decrypt_fu_397_decryptedtext_address0;

assign decryptedtext_address1 = grp_Blowfish_Decrypt_fu_397_decryptedtext_address1;

assign decryptedtext_ce0 = grp_Blowfish_Decrypt_fu_397_decryptedtext_ce0;

assign decryptedtext_ce1 = grp_Blowfish_Decrypt_fu_397_decryptedtext_ce1;

assign decryptedtext_d0 = grp_Blowfish_Decrypt_fu_397_decryptedtext_d0;

assign decryptedtext_d1 = grp_Blowfish_Decrypt_fu_397_decryptedtext_d1;

assign decryptedtext_we0 = grp_Blowfish_Decrypt_fu_397_decryptedtext_we0;

assign decryptedtext_we1 = grp_Blowfish_Decrypt_fu_397_decryptedtext_we1;

assign grp_Blowfish_Decrypt_fu_397_ap_start = grp_Blowfish_Decrypt_fu_397_ap_start_reg;

assign grp_Blowfish_Encrypt_fu_346_ap_start = grp_Blowfish_Encrypt_fu_346_ap_start_reg;

assign grp_Blowfish_SetKey_fu_328_ap_start = grp_Blowfish_SetKey_fu_328_ap_start_reg;

assign key_address0 = grp_Blowfish_SetKey_fu_328_key_address0;

assign key_address1 = grp_Blowfish_SetKey_fu_328_key_address1;

assign key_ce0 = grp_Blowfish_SetKey_fu_328_key_ce0;

assign key_ce1 = grp_Blowfish_SetKey_fu_328_key_ce1;

assign plaintext_address0 = grp_Blowfish_Encrypt_fu_346_plaintext_address0;

assign plaintext_address1 = grp_Blowfish_Encrypt_fu_346_plaintext_address1;

assign plaintext_ce0 = grp_Blowfish_Encrypt_fu_346_plaintext_ce0;

assign plaintext_ce1 = grp_Blowfish_Encrypt_fu_346_plaintext_ce1;

assign set_key_read_read_fu_88_p2 = set_key;

endmodule //Blowfish_SetKey_Encrypt_Decrypt
