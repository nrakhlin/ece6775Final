-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Blowfish_SetKey_ibkb_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          addr1      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce1       : in std_logic; 
          q1         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Blowfish_SetKey_ibkb_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr1_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11010001001100010000101110100110", 
    1 => "10011000110111111011010110101100", 
    2 => "00101111111111010111001011011011", 
    3 => "11010000000110101101111110110111", 
    4 => "10111000111000011010111111101101", 
    5 => "01101010001001100111111010010110", 
    6 => "10111010011111001001000001000101", 
    7 => "11110001001011000111111110011001", 
    8 => "00100100101000011001100101000111", 
    9 => "10110011100100010110110011110111", 
    10 => "00001000000000011111001011100010", 
    11 => "10000101100011101111110000010110", 
    12 => "01100011011010010010000011011000", 
    13 => "01110001010101110100111001101001", 
    14 => "10100100010110001111111010100011", 
    15 => "11110100100100110011110101111110", 
    16 => "00001101100101010111010010001111", 
    17 => "01110010100011101011011001011000", 
    18 => "01110001100010111100110101011000", 
    19 => "10000010000101010100101011101110", 
    20 => "01111011010101001010010000011101", 
    21 => "11000010010110100101100110110101", 
    22 => "10011100001100001101010100111001", 
    23 => "00101010111100100110000000010011", 
    24 => "11000101110100011011000000100011", 
    25 => "00101000011000001000010111110000", 
    26 => "11001010010000010111100100011000", 
    27 => "10111000110110110011100011101111", 
    28 => "10001110011110011101110010110000", 
    29 => "01100000001110100001100000001110", 
    30 => "01101100100111100000111010001011", 
    31 => "10110000000111101000101000111110", 
    32 => "11010111000101010111011111000001", 
    33 => "10111101001100010100101100100111", 
    34 => "01111000101011110010111111011010", 
    35 => "01010101011000000101110001100000", 
    36 => "11100110010101010010010111110011", 
    37 => "10101010010101011010101110010100", 
    38 => "01010111010010001001100001100010", 
    39 => "01100011111010000001010001000000", 
    40 => "01010101110010100011100101101010", 
    41 => "00101010101010110001000010110110", 
    42 => "10110100110011000101110000110100", 
    43 => "00010001010000011110100011001110", 
    44 => "10100001010101001000011010101111", 
    45 => "01111100011100101110100110010011", 
    46 => "10110011111011100001010000010001", 
    47 => "01100011011011111011110000101010", 
    48 => "00101011101010011100010101011101", 
    49 => "01110100000110000011000111110110", 
    50 => "11001110010111000011111000010110", 
    51 => "10011011100001111001001100011110", 
    52 => "10101111110101101011101000110011", 
    53 => "01101100001001001100111101011100", 
    54 => "01111010001100100101001110000001", 
    55 => "00101000100101011000011001110111", 
    56 => "00111011100011110100100010011000", 
    57 => "01101011010010111011100110101111", 
    58 => "11000100101111111110100000011011", 
    59 => "01100110001010000010000110010011", 
    60 => "01100001110110000000100111001100", 
    61 => "11111011001000011010100110010001", 
    62 => "01001000011111001010110001100000", 
    63 => "01011101111011001000000000110010", 
    64 => "11101111100001000101110101011101", 
    65 => "11101001100001010111010110110001", 
    66 => "11011100001001100010001100000010", 
    67 => "11101011011001010001101110001000", 
    68 => "00100011100010010011111010000001", 
    69 => "11010011100101101010110011000101", 
    70 => "00001111011011010110111111110011", 
    71 => "10000011111101000100001000111001", 
    72 => "00101110000010110100010010000010", 
    73 => "10100100100001000010000000000100", 
    74 => "01101001110010001111000001001010", 
    75 => "10011110000111111001101101011110", 
    76 => "00100001110001100110100001000010", 
    77 => "11110110111010010110110010011010", 
    78 => "01100111000011001001110001100001", 
    79 => "10101011110100111000100011110000", 
    80 => "01101010010100011010000011010010", 
    81 => "11011000010101000010111101101000", 
    82 => "10010110000011111010011100101000", 
    83 => "10101011010100010011001110100011", 
    84 => "01101110111011110000101101101100", 
    85 => "00010011011110100011101111100100", 
    86 => "10111010001110111111000001010000", 
    87 => "01111110111110110010101010011000", 
    88 => "10100001111100010110010100011101", 
    89 => "00111001101011110000000101110110", 
    90 => "01100110110010100101100100111110", 
    91 => "10000010010000110000111010001000", 
    92 => "10001100111011101000011000011001", 
    93 => "01000101011011111001111110110100", 
    94 => "01111101100001001010010111000011", 
    95 => "00111011100010110101111010111110", 
    96 => "11100000011011110111010111011000", 
    97 => "10000101110000010010000001110011", 
    98 => "01000000000110100100010010011111", 
    99 => "01010110110000010110101010100110", 
    100 => "01001110110100111010101001100010", 
    101 => "00110110001111110111011100000110", 
    102 => "00011011111111101101111101110010", 
    103 => "01000010100110110000001000111101", 
    104 => "00110111110100001101011100100100", 
    105 => "11010000000010100001001001001000", 
    106 => "11011011000011111110101011010011", 
    107 => "01001001111100011100000010011011", 
    108 => "00000111010100110111001011001001", 
    109 => "10000000100110010001101101111011", 
    110 => "00100101110101000111100111011000", 
    111 => "11110110111010001101111011110111", 
    112 => "11100011111111100101000000011010", 
    113 => "10110110011110010100110000111011", 
    114 => "10010111011011001110000010111101", 
    115 => "00000100110000000000011010111010", 
    116 => "11000001101010010100111110110110", 
    117 => "01000000100111110110000011000100", 
    118 => "01011110010111001001111011000010", 
    119 => "00011001011010100010010001100011", 
    120 => "01101000111110110110111110101111", 
    121 => "00111110011011000101001110110101", 
    122 => "00010011001110011011001011101011", 
    123 => "00111011010100101110110001101111", 
    124 => "01101101111111000101000100011111", 
    125 => "10011011001100001001010100101100", 
    126 => "11001100100000010100010101000100", 
    127 => "10101111010111101011110100001001", 
    128 => "10111110111000111101000000000100", 
    129 => "11011110001100110100101011111101", 
    130 => "01100110000011110010100000000111", 
    131 => "00011001001011100100101110110011", 
    132 => "11000000110010111010100001010111", 
    133 => "01000101110010000111010000001111", 
    134 => "11010010000010110101111100111001", 
    135 => "10111001110100111111101111011011", 
    136 => "01010101011110011100000010111101", 
    137 => "00011010011000000011001000001010", 
    138 => "11010110101000010000000011000110", 
    139 => "01000000001011000111001001111001", 
    140 => "01100111100111110010010111111110", 
    141 => "11111011000111111010001111001100", 
    142 => "10001110101001011110100111111000", 
    143 => "11011011001100100010001011111000", 
    144 => "00111100011101010001011011011111", 
    145 => "11111101011000010110101100010101", 
    146 => "00101111010100000001111011001000", 
    147 => "10101101000001010101001010101011", 
    148 => "00110010001111011011010111111010", 
    149 => "11111101001000111000011101100000", 
    150 => "01010011001100010111101101001000", 
    151 => "00111110000000001101111110000010", 
    152 => "10011110010111000101011110111011", 
    153 => "11001010011011111000110010100000", 
    154 => "00011010100001110101011000101110", 
    155 => "11011111000101110110100111011011", 
    156 => "11010101010000101010100011110110", 
    157 => "00101000011111101111111111000011", 
    158 => "10101100011001110011001011000110", 
    159 => "10001100010011110101010101110011", 
    160 => "01101001010110110010011110110000", 
    161 => "10111011110010100101100011001000", 
    162 => "11100001111111111010001101011101", 
    163 => "10111000111100000001000110100000", 
    164 => "00010000111110100011110110011000", 
    165 => "11111101001000011000001110111000", 
    166 => "01001010111111001011010101101100", 
    167 => "00101101110100011101001101011011", 
    168 => "10011010010100111110010001111001", 
    169 => "10110110111110000100010101100101", 
    170 => "11010010100011100100100110111100", 
    171 => "01001011111110111001011110010000", 
    172 => "11100001110111011111001011011010", 
    173 => "10100100110010110111111000110011", 
    174 => "01100010111110110001001101000001", 
    175 => "11001110111001001100011011101000", 
    176 => "11101111001000001100101011011010", 
    177 => "00110110011101110100110000000001", 
    178 => "11010000011111101001111011111110", 
    179 => "00101011111100010001111110110100", 
    180 => "10010101110110111101101001001101", 
    181 => "10101110100100001001000110011000", 
    182 => "11101010101011011000111001110001", 
    183 => "01101011100100111101010110100000", 
    184 => "11010000100011101101000111010000", 
    185 => "10101111110001110010010111100000", 
    186 => "10001110001111000101101100101111", 
    187 => "10001110011101011001010010110111", 
    188 => "10001111111101101110001011111011", 
    189 => "11110010000100100010101101100100", 
    190 => "10001000100010001011100000010010", 
    191 => "10010000000011011111000000011100", 
    192 => "01001111101011010101111010100000", 
    193 => "01101000100011111100001100011100", 
    194 => "11010001110011111111000110010001", 
    195 => "10110011101010001100000110101101", 
    196 => "00101111001011110010001000011000", 
    197 => "10111110000011100001011101110111", 
    198 => "11101010011101010010110111111110", 
    199 => "10001011000000100001111110100001", 
    200 => "11100101101000001100110000001111", 
    201 => "10110101011011110111010011101000", 
    202 => "00011000101011001111001111010110", 
    203 => "11001110100010011110001010011001", 
    204 => "10110100101010000100111111100000", 
    205 => "11111101000100111110000010110111", 
    206 => "01111100110001000011101110000001", 
    207 => "11010010101011011010100011011001", 
    208 => "00010110010111111010001001100110", 
    209 => "10000000100101010111011100000101", 
    210 => "10010011110011000111001100010100", 
    211 => "00100001000110100001010001110111", 
    212 => "11100110101011010010000001100101", 
    213 => "01110111101101011111101010000110", 
    214 => "11000111010101000100001011110101", 
    215 => "11111011100111010011010111001111", 
    216 => "11101011110011011010111100001100", 
    217 => "01111011001111101000100110100000", 
    218 => "11010110010000010001101111010011", 
    219 => "10101110000111100111111001001001", 
    220 => "00000000001001010000111000101101", 
    221 => "00100000011100011011001101011110", 
    222 => "00100010011010000000000010111011", 
    223 => "01010111101110001110000010101111", 
    224 => "00100100011001000011011010011011", 
    225 => "11110000000010011011100100011110", 
    226 => "01010101011000111001000100011101", 
    227 => "01011001110111111010011010101010", 
    228 => "01111000110000010100001110001001", 
    229 => "11011001010110100101001101111111", 
    230 => "00100000011111010101101110100010", 
    231 => "00000010111001011011100111000101", 
    232 => "10000011001001100000001101110110", 
    233 => "01100010100101011100111110101001", 
    234 => "00010001110010000001100101101000", 
    235 => "01001110011100110100101001000001", 
    236 => "10110011010001110010110111001010", 
    237 => "01111011000101001010100101001010", 
    238 => "00011011010100010000000001010010", 
    239 => "10011010010100110010100100010101", 
    240 => "11010110000011110101011100111111", 
    241 => "10111100100110111100011011100100", 
    242 => "00101011011000001010010001110110", 
    243 => "10000001111001100111010000000000", 
    244 => "00001000101110100110111110110101", 
    245 => "01010111000110111110100100011111", 
    246 => "11110010100101101110110001101011", 
    247 => "00101010000011011101100100010101", 
    248 => "10110110011000110110010100100001", 
    249 => "11100111101110011111100110110110", 
    250 => "11111111001101000000010100101110", 
    251 => "11000101100001010101011001100100", 
    252 => "01010011101100000010110101011101", 
    253 => "10101001100111111000111110100001", 
    254 => "00001000101110100100011110011001", 
    255 => "01101110100001010000011101101010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

memory_access_guard_1: process (addr1) 
begin
      addr1_tmp <= addr1;
--synthesis translate_off
      if (CONV_INTEGER(addr1) > mem_size-1) then
           addr1_tmp <= (others => '0');
      else 
           addr1_tmp <= addr1;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
        if (ce1 = '1') then 
            q1 <= mem(CONV_INTEGER(addr1_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity Blowfish_SetKey_ibkb is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address1 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Blowfish_SetKey_ibkb is
    component Blowfish_SetKey_ibkb_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR;
            addr1 : IN STD_LOGIC_VECTOR;
            ce1 : IN STD_LOGIC;
            q1 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Blowfish_SetKey_ibkb_rom_U :  component Blowfish_SetKey_ibkb_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0,
        addr1 => address1,
        ce1 => ce1,
        q1 => q1);

end architecture;


