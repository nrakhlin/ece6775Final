-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Blowfish_SetKey_ieOg_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          addr1      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce1       : in std_logic; 
          q1         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Blowfish_SetKey_ieOg_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr1_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00111010001110011100111000110111", 
    1 => "11010011111110101111010111001111", 
    2 => "10101011110000100111011100110111", 
    3 => "01011010110001010010110100011011", 
    4 => "01011100101100000110011110011110", 
    5 => "01001111101000110011011101000010", 
    6 => "11010011100000100010011101000000", 
    7 => "10011001101111001001101110111110", 
    8 => "11010101000100011000111010011101", 
    9 => "10111111000011110111001100010101", 
    10 => "11010110001011010001110001111110", 
    11 => "11000111000000001100010001111011", 
    12 => "10110111100011000001101101101011", 
    13 => "00100001101000011001000001000101", 
    14 => "10110010011011101011000110111110", 
    15 => "01101010001101100110111010110100", 
    16 => "01010111010010001010101100101111", 
    17 => "10111100100101000110111001111001", 
    18 => "11000110101000110111011011010010", 
    19 => "01100101010010011100001011001000", 
    20 => "01010011000011111111100011101110", 
    21 => "01000110100011011101111001111101", 
    22 => "11010101011100110000101000011101", 
    23 => "01001100110100000100110111000110", 
    24 => "00101001001110011011101111011011", 
    25 => "10101001101110100100011001010000", 
    26 => "10101100100101010010011011101000", 
    27 => "10111110010111101110001100000100", 
    28 => "10100001111110101101010111110000", 
    29 => "01101010001011010101000110011010", 
    30 => "01100011111011111000110011100010", 
    31 => "10011010100001101110111000100010", 
    32 => "11000000100010011100001010111000", 
    33 => "01000011001001000010111011110110", 
    34 => "10100101000111100000001110101010", 
    35 => "10011100111100101101000010100100", 
    36 => "10000011110000000110000110111010", 
    37 => "10011011111010010110101001001101", 
    38 => "10001111111001010001010101010000", 
    39 => "10111010011001000101101111010110", 
    40 => "00101000001001101010001011111001", 
    41 => "10100111001110100011101011100001", 
    42 => "01001011101010011001010110000110", 
    43 => "11101111010101010110001011101001", 
    44 => "11000111001011111110111111010011", 
    45 => "11110111010100101111011111011010", 
    46 => "00111111000001000110111101101001", 
    47 => "01110111111110100000101001011001", 
    48 => "10000000111001001010100100010101", 
    49 => "10000111101100001000011000000001", 
    50 => "10011011000010011110011010101101", 
    51 => "00111011001111101110010110010011", 
    52 => "11101001100100001111110101011010", 
    53 => "10011110001101001101011110010111", 
    54 => "00101100111100001011011111011001", 
    55 => "00000010001010111000101101010001", 
    56 => "10010110110101011010110000111010", 
    57 => "00000001011111011010011001111101", 
    58 => "11010001110011110011111011010110", 
    59 => "01111100011111010010110100101000", 
    60 => "00011111100111110010010111001111", 
    61 => "10101101111100101011100010011011", 
    62 => "01011010110101101011010001110010", 
    63 => "01011010100010001111010101001100", 
    64 => "11100000001010011010110001110001", 
    65 => "11100000000110011010010111100110", 
    66 => "01000111101100001010110011111101", 
    67 => "11101101100100111111101010011011", 
    68 => "11101000110100111100010010001101", 
    69 => "00101000001110110101011111001100", 
    70 => "11111000110101010110011000101001", 
    71 => "01111001000100110010111000101000", 
    72 => "01111000010111110000000110010001", 
    73 => "11101101011101010110000001010101", 
    74 => "11110111100101100000111001000100", 
    75 => "11100011110100110101111010001100", 
    76 => "00010101000001010110110111010100", 
    77 => "10001000111101000110110110111010", 
    78 => "00000011101000010110000100100101", 
    79 => "00000101011001001111000010111101", 
    80 => "11000011111010111001111000010101", 
    81 => "00111100100100000101011110100010", 
    82 => "10010111001001110001101011101100", 
    83 => "10101001001110100000011100101010", 
    84 => "00011011001111110110110110011011", 
    85 => "00011110011000110010000111110101", 
    86 => "11110101100111000110011011111011", 
    87 => "00100110110111001111001100011001", 
    88 => "01110101001100111101100100101000", 
    89 => "10110001010101011111110111110101", 
    90 => "00000011010101100011010010000010", 
    91 => "10001010101110100011110010111011", 
    92 => "00101000010100010111011100010001", 
    93 => "11000010000010101101100111111000", 
    94 => "10101011110011000101000101100111", 
    95 => "11001100101011011001001001011111", 
    96 => "01001101111010000001011101010001", 
    97 => "00111000001100001101110010001110", 
    98 => "00110111100111010101100001100010", 
    99 => "10010011001000001111100110010001", 
    100 => "11101010011110101001000011000010", 
    101 => "11111011001111100111101111001110", 
    102 => "01010001001000011100111001100100", 
    103 => "01110111010011111011111000110010", 
    104 => "10101000101101101110001101111110", 
    105 => "11000011001010010011110101000110", 
    106 => "01001000110111100101001101101001", 
    107 => "01100100000100111110011010000000", 
    108 => "10100010101011100000100000010000", 
    109 => "11011101011011011011001000100100", 
    110 => "01101001100001010010110111111101", 
    111 => "00001001000001110010000101100110", 
    112 => "10110011100110100100011000001010", 
    113 => "01100100010001011100000011011101", 
    114 => "01011000011011001101111011001111", 
    115 => "00011100001000001100100010101110", 
    116 => "01011011101111101111011111011101", 
    117 => "00011011010110001000110101000000", 
    118 => "11001100110100100000000101111111", 
    119 => "01101011101101001110001110111011", 
    120 => "11011101101000100110101001111110", 
    121 => "00111010010110011111111101000101", 
    122 => "00111110001101010000101001000100", 
    123 => "10111100101101001100110111010101", 
    124 => "01110010111010101100111010101000", 
    125 => "11111010011001001000010010111011", 
    126 => "10001101011001100001001010101110", 
    127 => "10111111001111000110111101000111", 
    128 => "11010010100110111110010001100011", 
    129 => "01010100001011110101110110011110", 
    130 => "10101110110000100111011100011011", 
    131 => "11110110010011100110001101110000", 
    132 => "01110100000011100000110110001101", 
    133 => "11100111010110110001001101010111", 
    134 => "11111000011100100001011001110001", 
    135 => "10101111010100110111110101011101", 
    136 => "01000000010000001100101100001000", 
    137 => "01001110101101001110001011001100", 
    138 => "00110100110100100100011001101010", 
    139 => "00000001000101011010111110000100", 
    140 => "11100001101100000000010000101000", 
    141 => "10010101100110000011101000011101", 
    142 => "00000110101110001001111110110100", 
    143 => "11001110011011101010000001001000", 
    144 => "01101111001111110011101110000010", 
    145 => "00110101001000001010101110000010", 
    146 => "00000001000110100001110101001011", 
    147 => "00100111011100100010011111111000", 
    148 => "01100001000101010110000010110001", 
    149 => "11100111100100110011111111011100", 
    150 => "10111011001110100111100100101011", 
    151 => "00110100010001010010010110111101", 
    152 => "10100000100010000011100111100001", 
    153 => "01010001110011100111100101001011", 
    154 => "00101111001100101100100110110111", 
    155 => "10100000000111111011101011001001", 
    156 => "11100000000111001100100001111110", 
    157 => "10111100110001111101000111110110", 
    158 => "11001111000000010001000111000011", 
    159 => "10100001111010001010101011000111", 
    160 => "00011010100100001000011101001001", 
    161 => "11010100010011111011110110011010", 
    162 => "11010000110110101101111011001011", 
    163 => "11010101000010101101101000111000", 
    164 => "00000011001110011100001100101010", 
    165 => "11000110100100010011011001100111", 
    166 => "10001101111110010011000101111100", 
    167 => "11100000101100010010101101001111", 
    168 => "11110111100111100101100110110111", 
    169 => "01000011111101011011101100111010", 
    170 => "11110010110101010001100111111111", 
    171 => "00100111110110010100010110011100", 
    172 => "10111111100101110010001000101100", 
    173 => "00010101111001101111110000101010", 
    174 => "00001111100100011111110001110001", 
    175 => "10011011100101000001010100100101", 
    176 => "11111010111001011001001101100001", 
    177 => "11001110101101101001110011101011", 
    178 => "11000010101010000110010001011001", 
    179 => "00010010101110101010100011010001", 
    180 => "10110110110000010000011101011110", 
    181 => "11100011000001010110101000001100", 
    182 => "00010000110100100101000001100101", 
    183 => "11001011000000111010010001000010", 
    184 => "11100000111011000110111000001110", 
    185 => "00010110100110001101101100111011", 
    186 => "01001100100110001010000010111110", 
    187 => "00110010011110001110100101100100", 
    188 => "10011111000111111001010100110010", 
    189 => "11100000110100111001001011011111", 
    190 => "11010011101000000011010000101011", 
    191 => "10001001011100011111001000011110", 
    192 => "00011011000010100111010001000001", 
    193 => "01001011101000110011010010001100", 
    194 => "11000101101111100111000100100000", 
    195 => "11000011011101100011001011011000", 
    196 => "11011111001101011001111110001101", 
    197 => "10011011100110010010111100101110", 
    198 => "11100110000010110110111101000111", 
    199 => "00001111111000111111000100011101", 
    200 => "11100101010011001101101001010100", 
    201 => "00011110110110101101100010010001", 
    202 => "11001110011000100111100111001111", 
    203 => "11001101001111100111111001101111", 
    204 => "00010110000110001011000101100110", 
    205 => "11111101001011000001110100000101", 
    206 => "10000100100011111101001011000101", 
    207 => "11110110111110110010001010011001", 
    208 => "11110101001000111111001101010111", 
    209 => "10100110001100100111011000100011", 
    210 => "10010011101010000011010100110001", 
    211 => "01010110110011001100110100000010", 
    212 => "10101100111100001000000101100010", 
    213 => "01011010011101011110101110110101", 
    214 => "01101110000101100011011010010111", 
    215 => "10001000110100100111001111001100", 
    216 => "11011110100101100110001010010010", 
    217 => "10000001101110010100100111010000", 
    218 => "01001100010100001001000000011011", 
    219 => "01110001110001100101011000010100", 
    220 => "11100110110001101100011110111101", 
    221 => "00110010011110100001010000001010", 
    222 => "01000101111000011101000000000110", 
    223 => "11000011111100100111101110011010", 
    224 => "11001001101010100101001111111101", 
    225 => "01100010101010000000111100000000", 
    226 => "10111011001001011011111111100010", 
    227 => "00110101101111011101001011110110", 
    228 => "01110001000100100110100100000101", 
    229 => "10110010000001000000001000100010", 
    230 => "10110110110010111100111101111100", 
    231 => "11001101011101101001110000101011", 
    232 => "01010011000100010011111011000000", 
    233 => "00010110010000001110001111010011", 
    234 => "00111000101010111011110101100000", 
    235 => "00100101010001111010110111110000", 
    236 => "10111010001110000010000010011100", 
    237 => "11110111010001101100111001110110", 
    238 => "01110111101011111010000111000101", 
    239 => "00100000011101010110000001100000", 
    240 => "10000101110010111111111001001110", 
    241 => "10001010111010001000110111011000", 
    242 => "01111010101010101111100110110000", 
    243 => "01001100111110011010101001111110", 
    244 => "00011001010010001100001001011100", 
    245 => "00000010111110111000101010001100", 
    246 => "00000001110000110110101011100100", 
    247 => "11010110111010111110000111111001", 
    248 => "10010000110101001111100001101001", 
    249 => "10100110010111001101111010100000", 
    250 => "00111111000010010010010100101101", 
    251 => "11000010000010001110011010011111", 
    252 => "10110111010011100110000100110010", 
    253 => "11001110011101111110001001011011", 
    254 => "01010111100011111101111111100011", 
    255 => "00111010110000110111001011100110" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

memory_access_guard_1: process (addr1) 
begin
      addr1_tmp <= addr1;
--synthesis translate_off
      if (CONV_INTEGER(addr1) > mem_size-1) then
           addr1_tmp <= (others => '0');
      else 
           addr1_tmp <= addr1;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
        if (ce1 = '1') then 
            q1 <= mem(CONV_INTEGER(addr1_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity Blowfish_SetKey_ieOg is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address1 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Blowfish_SetKey_ieOg is
    component Blowfish_SetKey_ieOg_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR;
            addr1 : IN STD_LOGIC_VECTOR;
            ce1 : IN STD_LOGIC;
            q1 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Blowfish_SetKey_ieOg_rom_U :  component Blowfish_SetKey_ieOg_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0,
        addr1 => address1,
        ce1 => ce1,
        q1 => q1);

end architecture;


