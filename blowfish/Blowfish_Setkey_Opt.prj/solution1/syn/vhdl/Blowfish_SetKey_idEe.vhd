-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Blowfish_SetKey_idEe_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          addr1      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce1       : in std_logic; 
          q1         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Blowfish_SetKey_idEe_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr1_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11101001001111010101101001101000", 
    1 => "10010100100000010100000011110111", 
    2 => "11110110010011000010011000011100", 
    3 => "10010100011010010010100100110100", 
    4 => "01000001000101010010000011110111", 
    5 => "01110110000000101101010011110111", 
    6 => "10111100111101000110101100101110", 
    7 => "11010100101000100000000001101000", 
    8 => "11010100000010000010010001110001", 
    9 => "00110011001000001111010001101010", 
    10 => "01000011101101111101010010110111", 
    11 => "01010000000000000110000110101111", 
    12 => "00011110001110011111011000101110", 
    13 => "10010111001001000100010101000110", 
    14 => "00010100001000010100111101110100", 
    15 => "10111111100010111000100001000000", 
    16 => "01001101100101011111110000011101", 
    17 => "10010110101101011001000110101111", 
    18 => "01110000111101001101110111010011", 
    19 => "01100110101000000010111101000101", 
    20 => "10111111101111000000100111101100", 
    21 => "00000011101111011001011110000101", 
    22 => "01111111101011000110110111010000", 
    23 => "00110001110010111000010100000100", 
    24 => "10010110111010110010011110110011", 
    25 => "01010101111111010011100101000001", 
    26 => "11011010001001010100011111100110", 
    27 => "10101011110010100000101010011010", 
    28 => "00101000010100000111100000100101", 
    29 => "01010011000001000010100111110100", 
    30 => "00001010001011001000011011011010", 
    31 => "11101001101101100110110111111011", 
    32 => "01101000110111000001010001100010", 
    33 => "11010111010010000110100100000000", 
    34 => "01101000000011101100000010100100", 
    35 => "00100111101000011000110111101110", 
    36 => "01001111001111111111111010100010", 
    37 => "11101000100001111010110110001100", 
    38 => "10110101100011001110000000000110", 
    39 => "01111010111101001101011010110110", 
    40 => "10101010110011100001111001111100", 
    41 => "11010011001101110101111111101100", 
    42 => "11001110011110001010001110011001", 
    43 => "01000000011010110010101001000010", 
    44 => "00100000111111101001111000110101", 
    45 => "11011001111100111000010110111001", 
    46 => "11101110001110011101011110101011", 
    47 => "00111011000100100100111010001011", 
    48 => "00011101110010011111101011110111", 
    49 => "01001011011011010001100001010110", 
    50 => "00100110101000110110011000110001", 
    51 => "11101010111000111001011110110010", 
    52 => "00111010011011101111101001110100", 
    53 => "11011101010110110100001100110010", 
    54 => "01101000010000011110011111110111", 
    55 => "11001010011110000010000011111011", 
    56 => "11111011000010101111010101001110", 
    57 => "11011000111111101011001110010111", 
    58 => "01000101010000000101011010101100", 
    59 => "10111010010010001001010100100111", 
    60 => "01010101010100110011101000111010", 
    61 => "00100000100000111000110110000111", 
    62 => "11111110011010111010100110110111", 
    63 => "11010000100101101001010101001011", 
    64 => "01010101101010000110011110111100", 
    65 => "10100001000101011001101001011000", 
    66 => "11001100101010010010100101100011", 
    67 => "10011001111000011101101100110011", 
    68 => "10100110001010100100101001010110", 
    69 => "00111111001100010010010111111001", 
    70 => "01011110111101000111111000011100", 
    71 => "10010000001010010011000101111100", 
    72 => "11111101111110001110100000000010", 
    73 => "00000100001001110010111101110000", 
    74 => "10000000101110110001010101011100", 
    75 => "00000101001010000010110011100011", 
    76 => "10010101110000010001010101001000", 
    77 => "11100100110001100110110100100010", 
    78 => "01001000110000010001001100111111", 
    79 => "11000111000011111000011011011100", 
    80 => "00000111111110011100100111101110", 
    81 => "01000001000001000001111100001111", 
    82 => "01000000010001110111100110100100", 
    83 => "01011101100010000110111000010111", 
    84 => "00110010010111110101000111101011", 
    85 => "11010101100110111100000011010001", 
    86 => "11110010101111001100000110001111", 
    87 => "01000001000100010011010101100100", 
    88 => "00100101011110110111100000110100", 
    89 => "01100000001010101001110001100000", 
    90 => "11011111111110001110100010100011", 
    91 => "00011111011000110110110000011011", 
    92 => "00001110000100101011010011000010", 
    93 => "00000010111000010011001010011110", 
    94 => "10101111011001100100111111010001", 
    95 => "11001010110100011000000100010101", 
    96 => "01101011001000111001010111100000", 
    97 => "00110011001111101001001011100001", 
    98 => "00111011001001000000101101100010", 
    99 => "11101110101111101011100100100010", 
    100 => "10000101101100101010001000001110", 
    101 => "11100110101110100000110110011001", 
    102 => "11011110011100100000110010001100", 
    103 => "00101101101000101111011100101000", 
    104 => "11010000000100100111100001000101", 
    105 => "10010101101101111001010011111101", 
    106 => "01100100011111010000100001100010", 
    107 => "11100111110011001111010111110000", 
    108 => "01010100010010011010001101101111", 
    109 => "10000111011111010100100011111010", 
    110 => "11000011100111011111110100100111", 
    111 => "11110011001111101000110100011110", 
    112 => "00001010010001110110001101000001", 
    113 => "10011001001011101111111101110100", 
    114 => "00111010011011110110111010101011", 
    115 => "11110100111110001111110100110111", 
    116 => "10101000000100101101110001100000", 
    117 => "10100001111010111101110111111000", 
    118 => "10011001000110111110000101001100", 
    119 => "11011011011011100110101100001101", 
    120 => "11000110011110110101010100010000", 
    121 => "01101101011001110010110000110111", 
    122 => "00100111011001011101010000111011", 
    123 => "11011100110100001110100000000100", 
    124 => "11110001001010010000110111000111", 
    125 => "11001100000000001111111110100011", 
    126 => "10110101001110010000111110010010", 
    127 => "01101001000011111110110100001011", 
    128 => "01100110011110111001111111111011", 
    129 => "11001110110110110111110110011100", 
    130 => "10100000100100011100111100001011", 
    131 => "11011001000101010101111010100011", 
    132 => "10111011000100110010111110001000", 
    133 => "01010001010110111010110100100100", 
    134 => "01111011100101000111100110111111", 
    135 => "01110110001110111101011011101011", 
    136 => "00110111001110010010111010110011", 
    137 => "11001100000100010101100101111001", 
    138 => "10000000001001101110001010010111", 
    139 => "11110100001011100011000100101101", 
    140 => "01101000010000101010110110100111", 
    141 => "11000110011010100010101100111011", 
    142 => "00010010011101010100110011001100", 
    143 => "01111000001011101111000100011100", 
    144 => "01101010000100100100001000110111", 
    145 => "10110111100100100101000111100111", 
    146 => "00000110101000011011101111100110", 
    147 => "01001011111110110110001101010000", 
    148 => "00011010011010110001000000011000", 
    149 => "00010001110010101110110111111010", 
    150 => "00111101001001011011110111011000", 
    151 => "11100010111000011100001111001001", 
    152 => "01000100010000100001011001011001", 
    153 => "00001010000100100001001110000110", 
    154 => "11011001000011001110110001101110", 
    155 => "11010101101010111110101000101010", 
    156 => "01100100101011110110011101001110", 
    157 => "11011010100001101010100001011111", 
    158 => "10111110101111111110100110001000", 
    159 => "01100100111001001100001111111110", 
    160 => "10011101101111001000000001010111", 
    161 => "11110000111101111100000010000110", 
    162 => "01100000011110000111101111111000", 
    163 => "01100000000000110110000001001101", 
    164 => "11010001111111011000001101000110", 
    165 => "11110110001110000001111110110000", 
    166 => "01110111010001011010111000000100", 
    167 => "11010111001101101111110011001100", 
    168 => "10000011010000100110101100110011", 
    169 => "11110000000111101010101101110001", 
    170 => "10110000100000000100000110000111", 
    171 => "00111100000000000101111001011111", 
    172 => "01110111101000000101011110111110", 
    173 => "10111101111010001010111000100100", 
    174 => "01010101010001100100001010011001", 
    175 => "10111111010110000010111001100001", 
    176 => "01001110010110001111010010001111", 
    177 => "11110010110111011111110110100010", 
    178 => "11110100011101001110111100111000", 
    179 => "10000111100010011011110111000010", 
    180 => "01010011011001101111100111000011", 
    181 => "11001000101100111000111001110100", 
    182 => "10110100011101011111001001010101", 
    183 => "01000110111111001101100110111001", 
    184 => "01111010111010110010011001100001", 
    185 => "10001011000111011101111110000100", 
    186 => "10000100011010100000111001111001", 
    187 => "10010001010111111001010111100010", 
    188 => "01000110011011100101100110001110", 
    189 => "00100000101101000101011101110000", 
    190 => "10001100110101010101010110010001", 
    191 => "11001001000000101101111001001100", 
    192 => "10111001000010111010110011100001", 
    193 => "10111011100000100000010111010000", 
    194 => "00010001101010000110001001001000", 
    195 => "01110101011101001010100110011110", 
    196 => "10110111011111110001100110110110", 
    197 => "11100000101010011101110000001001", 
    198 => "01100110001011010000100110100001", 
    199 => "11000100001100100100011000110011", 
    200 => "11101000010110100001111100000010", 
    201 => "00001001111100001011111010001100", 
    202 => "01001010100110011010000000100101", 
    203 => "00011101011011101111111000010000", 
    204 => "00011010101110010011110100011101", 
    205 => "00001011101001011010010011011111", 
    206 => "10100001100001101111001000001111", 
    207 => "00101000011010001111000101101001", 
    208 => "11011100101101111101101010000011", 
    209 => "01010111001110010000011011111110", 
    210 => "10100001111000101100111010011011", 
    211 => "01001111110011010111111101010010", 
    212 => "01010000000100010101111000000001", 
    213 => "10100111000001101000001111111010", 
    214 => "10100000000000101011010111000100", 
    215 => "00001101111001101101000000100111", 
    216 => "10011010111110001000110000100111", 
    217 => "01110111001111111000011001000001", 
    218 => "11000011011000000100110000000110", 
    219 => "01100001101010000000011010110101", 
    220 => "11110000000101110111101000101000", 
    221 => "11000000111101011000011011100000", 
    222 => "00000000011000000101100010101010", 
    223 => "00110000110111000111110101100010", 
    224 => "00010001111001101001111011010111", 
    225 => "00100011001110001110101001100011", 
    226 => "01010011110000101101110110010100", 
    227 => "11000010110000100001011000110100", 
    228 => "10111011110010111110111001010110", 
    229 => "10010000101111001011011011011110", 
    230 => "11101011111111000111110110100001", 
    231 => "11001110010110010001110101110110", 
    232 => "01101111000001011110010000001001", 
    233 => "01001011011111000000000110001000", 
    234 => "00111001011100100000101000111101", 
    235 => "01111100100100100111110000100100", 
    236 => "10000110111000110111001001011111", 
    237 => "01110010010011011001110110111001", 
    238 => "00011010110000010101101110110100", 
    239 => "11010011100111101011100011111100", 
    240 => "11101101010101000101010101111000", 
    241 => "00001000111111001010010110110101", 
    242 => "11011000001111010111110011010011", 
    243 => "01001101101011010000111111000100", 
    244 => "00011110010100001110111101011110", 
    245 => "10110001011000011110011011111000", 
    246 => "10100010100001010001010011011001", 
    247 => "01101100010100010001001100111100", 
    248 => "01101111110101011100011111100111", 
    249 => "01010110111000010100111011000100", 
    250 => "00110110001010101011111111001110", 
    251 => "11011101110001101100100000110111", 
    252 => "11010111100110100011001000110100", 
    253 => "10010010011000111000001000010010", 
    254 => "01100111000011101111101010001110", 
    255 => "01000000011000000000000011100000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

memory_access_guard_1: process (addr1) 
begin
      addr1_tmp <= addr1;
--synthesis translate_off
      if (CONV_INTEGER(addr1) > mem_size-1) then
           addr1_tmp <= (others => '0');
      else 
           addr1_tmp <= addr1;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
        if (ce1 = '1') then 
            q1 <= mem(CONV_INTEGER(addr1_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity Blowfish_SetKey_idEe is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address1 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Blowfish_SetKey_idEe is
    component Blowfish_SetKey_idEe_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR;
            addr1 : IN STD_LOGIC_VECTOR;
            ce1 : IN STD_LOGIC;
            q1 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Blowfish_SetKey_idEe_rom_U :  component Blowfish_SetKey_idEe_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0,
        addr1 => address1,
        ce1 => ce1,
        q1 => q1);

end architecture;


