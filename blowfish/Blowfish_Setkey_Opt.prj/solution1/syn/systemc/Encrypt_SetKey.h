// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Encrypt_SetKey_HH_
#define _Encrypt_SetKey_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "feistel.h"

namespace ap_rtl {

struct Encrypt_SetKey : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > left_read;
    sc_in< sc_lv<32> > right_read;
    sc_out< sc_lv<5> > P_address0;
    sc_out< sc_logic > P_ce0;
    sc_in< sc_lv<32> > P_q0;
    sc_out< sc_lv<5> > P_address1;
    sc_out< sc_logic > P_ce1;
    sc_in< sc_lv<32> > P_q1;
    sc_out< sc_lv<10> > S_address0;
    sc_out< sc_logic > S_ce0;
    sc_in< sc_lv<32> > S_q0;
    sc_out< sc_lv<10> > S_address1;
    sc_out< sc_logic > S_ce1;
    sc_in< sc_lv<32> > S_q1;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Encrypt_SetKey(sc_module_name name);
    SC_HAS_PROCESS(Encrypt_SetKey);

    ~Encrypt_SetKey();

    sc_trace_file* mVcdFile;

    feistel* grp_feistel_fu_233;
    sc_signal< sc_lv<50> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > P_load_2_reg_445;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > xor_ln57_fu_240_p2;
    sc_signal< sc_lv<32> > xor_ln57_reg_450;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > xor_ln57_1_fu_252_p2;
    sc_signal< sc_lv<32> > xor_ln57_1_reg_461;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > xor_ln57_2_fu_263_p2;
    sc_signal< sc_lv<32> > xor_ln57_2_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > xor_ln57_3_fu_274_p2;
    sc_signal< sc_lv<32> > xor_ln57_3_reg_483;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > xor_ln57_4_fu_285_p2;
    sc_signal< sc_lv<32> > xor_ln57_4_reg_494;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > xor_ln57_5_fu_296_p2;
    sc_signal< sc_lv<32> > xor_ln57_5_reg_505;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<32> > xor_ln57_6_fu_307_p2;
    sc_signal< sc_lv<32> > xor_ln57_6_reg_516;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > xor_ln57_7_fu_318_p2;
    sc_signal< sc_lv<32> > xor_ln57_7_reg_527;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<32> > xor_ln57_8_fu_329_p2;
    sc_signal< sc_lv<32> > xor_ln57_8_reg_538;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<32> > xor_ln57_9_fu_340_p2;
    sc_signal< sc_lv<32> > xor_ln57_9_reg_549;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_lv<32> > xor_ln57_10_fu_351_p2;
    sc_signal< sc_lv<32> > xor_ln57_10_reg_560;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<32> > xor_ln57_11_fu_362_p2;
    sc_signal< sc_lv<32> > xor_ln57_11_reg_571;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_lv<32> > xor_ln57_12_fu_373_p2;
    sc_signal< sc_lv<32> > xor_ln57_12_reg_582;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_lv<32> > xor_ln57_13_fu_384_p2;
    sc_signal< sc_lv<32> > xor_ln57_13_reg_593;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_lv<32> > xor_ln57_14_fu_395_p2;
    sc_signal< sc_lv<32> > xor_ln57_14_reg_604;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_lv<32> > xor_ln57_30_fu_406_p2;
    sc_signal< sc_lv<32> > xor_ln57_30_reg_615;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_logic > grp_feistel_fu_233_ap_start;
    sc_signal< sc_logic > grp_feistel_fu_233_ap_done;
    sc_signal< sc_logic > grp_feistel_fu_233_ap_idle;
    sc_signal< sc_logic > grp_feistel_fu_233_ap_ready;
    sc_signal< sc_lv<32> > grp_feistel_fu_233_x;
    sc_signal< sc_lv<10> > grp_feistel_fu_233_S_address0;
    sc_signal< sc_logic > grp_feistel_fu_233_S_ce0;
    sc_signal< sc_lv<10> > grp_feistel_fu_233_S_address1;
    sc_signal< sc_logic > grp_feistel_fu_233_S_ce1;
    sc_signal< sc_lv<32> > grp_feistel_fu_233_ap_return;
    sc_signal< sc_logic > grp_feistel_fu_233_ap_start_reg;
    sc_signal< sc_lv<50> > ap_NS_fsm;
    sc_signal< sc_logic > ap_NS_fsm_state3;
    sc_signal< sc_logic > ap_NS_fsm_state6;
    sc_signal< sc_logic > ap_NS_fsm_state9;
    sc_signal< sc_logic > ap_NS_fsm_state12;
    sc_signal< sc_logic > ap_NS_fsm_state15;
    sc_signal< sc_logic > ap_NS_fsm_state18;
    sc_signal< sc_logic > ap_NS_fsm_state21;
    sc_signal< sc_logic > ap_NS_fsm_state24;
    sc_signal< sc_logic > ap_NS_fsm_state27;
    sc_signal< sc_logic > ap_NS_fsm_state30;
    sc_signal< sc_logic > ap_NS_fsm_state33;
    sc_signal< sc_logic > ap_NS_fsm_state36;
    sc_signal< sc_logic > ap_NS_fsm_state39;
    sc_signal< sc_logic > ap_NS_fsm_state42;
    sc_signal< sc_logic > ap_NS_fsm_state45;
    sc_signal< sc_logic > ap_NS_fsm_state48;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_lv<32> > xor_ln57_15_fu_246_p2;
    sc_signal< sc_lv<32> > xor_ln57_16_fu_258_p2;
    sc_signal< sc_lv<32> > xor_ln57_17_fu_269_p2;
    sc_signal< sc_lv<32> > xor_ln57_18_fu_280_p2;
    sc_signal< sc_lv<32> > xor_ln57_19_fu_291_p2;
    sc_signal< sc_lv<32> > xor_ln57_20_fu_302_p2;
    sc_signal< sc_lv<32> > xor_ln57_21_fu_313_p2;
    sc_signal< sc_lv<32> > xor_ln57_22_fu_324_p2;
    sc_signal< sc_lv<32> > xor_ln57_23_fu_335_p2;
    sc_signal< sc_lv<32> > xor_ln57_24_fu_346_p2;
    sc_signal< sc_lv<32> > xor_ln57_25_fu_357_p2;
    sc_signal< sc_lv<32> > xor_ln57_26_fu_368_p2;
    sc_signal< sc_lv<32> > xor_ln57_27_fu_379_p2;
    sc_signal< sc_lv<32> > xor_ln57_28_fu_390_p2;
    sc_signal< sc_lv<32> > xor_ln57_29_fu_401_p2;
    sc_signal< sc_lv<32> > xor_ln64_1_fu_412_p2;
    sc_signal< sc_lv<32> > xor_ln65_fu_423_p2;
    sc_signal< sc_lv<32> > xor_ln64_fu_417_p2;
    sc_signal< sc_lv<32> > ap_return_0_preg;
    sc_signal< sc_lv<32> > ap_return_1_preg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<50> ap_ST_fsm_state1;
    static const sc_lv<50> ap_ST_fsm_state2;
    static const sc_lv<50> ap_ST_fsm_state3;
    static const sc_lv<50> ap_ST_fsm_state4;
    static const sc_lv<50> ap_ST_fsm_state5;
    static const sc_lv<50> ap_ST_fsm_state6;
    static const sc_lv<50> ap_ST_fsm_state7;
    static const sc_lv<50> ap_ST_fsm_state8;
    static const sc_lv<50> ap_ST_fsm_state9;
    static const sc_lv<50> ap_ST_fsm_state10;
    static const sc_lv<50> ap_ST_fsm_state11;
    static const sc_lv<50> ap_ST_fsm_state12;
    static const sc_lv<50> ap_ST_fsm_state13;
    static const sc_lv<50> ap_ST_fsm_state14;
    static const sc_lv<50> ap_ST_fsm_state15;
    static const sc_lv<50> ap_ST_fsm_state16;
    static const sc_lv<50> ap_ST_fsm_state17;
    static const sc_lv<50> ap_ST_fsm_state18;
    static const sc_lv<50> ap_ST_fsm_state19;
    static const sc_lv<50> ap_ST_fsm_state20;
    static const sc_lv<50> ap_ST_fsm_state21;
    static const sc_lv<50> ap_ST_fsm_state22;
    static const sc_lv<50> ap_ST_fsm_state23;
    static const sc_lv<50> ap_ST_fsm_state24;
    static const sc_lv<50> ap_ST_fsm_state25;
    static const sc_lv<50> ap_ST_fsm_state26;
    static const sc_lv<50> ap_ST_fsm_state27;
    static const sc_lv<50> ap_ST_fsm_state28;
    static const sc_lv<50> ap_ST_fsm_state29;
    static const sc_lv<50> ap_ST_fsm_state30;
    static const sc_lv<50> ap_ST_fsm_state31;
    static const sc_lv<50> ap_ST_fsm_state32;
    static const sc_lv<50> ap_ST_fsm_state33;
    static const sc_lv<50> ap_ST_fsm_state34;
    static const sc_lv<50> ap_ST_fsm_state35;
    static const sc_lv<50> ap_ST_fsm_state36;
    static const sc_lv<50> ap_ST_fsm_state37;
    static const sc_lv<50> ap_ST_fsm_state38;
    static const sc_lv<50> ap_ST_fsm_state39;
    static const sc_lv<50> ap_ST_fsm_state40;
    static const sc_lv<50> ap_ST_fsm_state41;
    static const sc_lv<50> ap_ST_fsm_state42;
    static const sc_lv<50> ap_ST_fsm_state43;
    static const sc_lv<50> ap_ST_fsm_state44;
    static const sc_lv<50> ap_ST_fsm_state45;
    static const sc_lv<50> ap_ST_fsm_state46;
    static const sc_lv<50> ap_ST_fsm_state47;
    static const sc_lv<50> ap_ST_fsm_state48;
    static const sc_lv<50> ap_ST_fsm_state49;
    static const sc_lv<50> ap_ST_fsm_state50;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<64> ap_const_lv64_10;
    static const sc_lv<64> ap_const_lv64_11;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_P_address0();
    void thread_P_address1();
    void thread_P_ce0();
    void thread_P_ce1();
    void thread_S_address0();
    void thread_S_address1();
    void thread_S_ce0();
    void thread_S_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_NS_fsm_state12();
    void thread_ap_NS_fsm_state15();
    void thread_ap_NS_fsm_state18();
    void thread_ap_NS_fsm_state21();
    void thread_ap_NS_fsm_state24();
    void thread_ap_NS_fsm_state27();
    void thread_ap_NS_fsm_state3();
    void thread_ap_NS_fsm_state30();
    void thread_ap_NS_fsm_state33();
    void thread_ap_NS_fsm_state36();
    void thread_ap_NS_fsm_state39();
    void thread_ap_NS_fsm_state42();
    void thread_ap_NS_fsm_state45();
    void thread_ap_NS_fsm_state48();
    void thread_ap_NS_fsm_state6();
    void thread_ap_NS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_grp_feistel_fu_233_ap_start();
    void thread_grp_feistel_fu_233_x();
    void thread_xor_ln57_10_fu_351_p2();
    void thread_xor_ln57_11_fu_362_p2();
    void thread_xor_ln57_12_fu_373_p2();
    void thread_xor_ln57_13_fu_384_p2();
    void thread_xor_ln57_14_fu_395_p2();
    void thread_xor_ln57_15_fu_246_p2();
    void thread_xor_ln57_16_fu_258_p2();
    void thread_xor_ln57_17_fu_269_p2();
    void thread_xor_ln57_18_fu_280_p2();
    void thread_xor_ln57_19_fu_291_p2();
    void thread_xor_ln57_1_fu_252_p2();
    void thread_xor_ln57_20_fu_302_p2();
    void thread_xor_ln57_21_fu_313_p2();
    void thread_xor_ln57_22_fu_324_p2();
    void thread_xor_ln57_23_fu_335_p2();
    void thread_xor_ln57_24_fu_346_p2();
    void thread_xor_ln57_25_fu_357_p2();
    void thread_xor_ln57_26_fu_368_p2();
    void thread_xor_ln57_27_fu_379_p2();
    void thread_xor_ln57_28_fu_390_p2();
    void thread_xor_ln57_29_fu_401_p2();
    void thread_xor_ln57_2_fu_263_p2();
    void thread_xor_ln57_30_fu_406_p2();
    void thread_xor_ln57_3_fu_274_p2();
    void thread_xor_ln57_4_fu_285_p2();
    void thread_xor_ln57_5_fu_296_p2();
    void thread_xor_ln57_6_fu_307_p2();
    void thread_xor_ln57_7_fu_318_p2();
    void thread_xor_ln57_8_fu_329_p2();
    void thread_xor_ln57_9_fu_340_p2();
    void thread_xor_ln57_fu_240_p2();
    void thread_xor_ln64_1_fu_412_p2();
    void thread_xor_ln64_fu_417_p2();
    void thread_xor_ln65_fu_423_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
