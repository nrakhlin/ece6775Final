// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Blowfish_SetKey.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Blowfish_SetKey::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Blowfish_SetKey::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state1 = "1";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state2 = "10";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state3 = "100";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state4 = "1000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state5 = "10000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state6 = "100000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state7 = "1000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state8 = "10000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state9 = "100000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state10 = "1000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state11 = "10000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state12 = "100000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<72> Blowfish_SetKey::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_22 = "100010";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_25 = "100101";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_28 = "101000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_2B = "101011";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_2E = "101110";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_31 = "110001";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_34 = "110100";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_37 = "110111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_3A = "111010";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_43 = "1000011";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_3D = "111101";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_46 = "1000110";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_1 = "1";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_2 = "10";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_3 = "11";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_4 = "100";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_5 = "101";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_6 = "110";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_7 = "111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_8 = "1000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_9 = "1001";
const sc_lv<1> Blowfish_SetKey::ap_const_lv1_0 = "0";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_A = "1010";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_C = "1100";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_D = "1101";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_F = "1111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_10 = "10000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_12 = "10010";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_13 = "10011";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_15 = "10101";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_1F = "11111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_20 = "100000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_3E = "111110";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_40 = "1000000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_41 = "1000001";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_44 = "1000100";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_47 = "1000111";
const sc_lv<9> Blowfish_SetKey::ap_const_lv9_0 = "000000000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_B = "1011";
const sc_lv<1> Blowfish_SetKey::ap_const_lv1_1 = "1";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_E = "1110";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_11 = "10001";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_14 = "10100";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_21 = "100001";
const sc_lv<5> Blowfish_SetKey::ap_const_lv5_0 = "00000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_3B = "111011";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_3C = "111100";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_3F = "111111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_42 = "1000010";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_24 = "100100";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_27 = "100111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_2A = "101010";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_2D = "101101";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_30 = "110000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_33 = "110011";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_36 = "110110";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_39 = "111001";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_45 = "1000101";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_1 = "1";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_2 = "10";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_3 = "11";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_4 = "100";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_5 = "101";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_6 = "110";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_7 = "111";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_8 = "1000";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_9 = "1001";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_A = "1010";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_B = "1011";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_C = "1100";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_D = "1101";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_E = "1110";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_F = "1111";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_10 = "10000";
const sc_lv<64> Blowfish_SetKey::ap_const_lv64_11 = "10001";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_243F6A88 = "100100001111110110101010001000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_85A308D3 = "10000101101000110000100011010011";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_13198A2E = "10011000110011000101000101110";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_3707344 = "11011100000111001101000100";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_A4093822 = "10100100000010010011100000100010";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_299F31D0 = "101001100111110011000111010000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_82EFA98 = "1000001011101111101010011000";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_EC4E6C89 = "11101100010011100110110010001001";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_452821E6 = "1000101001010000010000111100110";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_38D01377 = "111000110100000001001101110111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_BE5466CF = "10111110010101000110011011001111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_34E90C6C = "110100111010010000110001101100";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_C0AC29B7 = "11000000101011000010100110110111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_C97C50DD = "11001001011111000101000011011101";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_3F84D5B5 = "111111100001001101010110110101";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_B5470917 = "10110101010001110000100100010111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_9216D5D9 = "10010010000101101101010111011001";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_8979FB1B = "10001001011110011111101100011011";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_23 = "100011";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_26 = "100110";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_29 = "101001";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_2C = "101100";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_2F = "101111";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_32 = "110010";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_35 = "110101";
const sc_lv<32> Blowfish_SetKey::ap_const_lv32_38 = "111000";
const sc_lv<9> Blowfish_SetKey::ap_const_lv9_100 = "100000000";
const sc_lv<8> Blowfish_SetKey::ap_const_lv8_1 = "1";
const sc_lv<9> Blowfish_SetKey::ap_const_lv9_4 = "100";
const sc_lv<8> Blowfish_SetKey::ap_const_lv8_2 = "10";
const sc_lv<8> Blowfish_SetKey::ap_const_lv8_3 = "11";
const sc_lv<10> Blowfish_SetKey::ap_const_lv10_100 = "100000000";
const sc_lv<56> Blowfish_SetKey::ap_const_lv56_1 = "1";
const sc_lv<55> Blowfish_SetKey::ap_const_lv55_1 = "1";
const sc_lv<56> Blowfish_SetKey::ap_const_lv56_2 = "10";
const sc_lv<11> Blowfish_SetKey::ap_const_lv11_300 = "1100000000";
const sc_lv<56> Blowfish_SetKey::ap_const_lv56_3 = "11";
const sc_lv<5> Blowfish_SetKey::ap_const_lv5_12 = "10010";
const sc_lv<5> Blowfish_SetKey::ap_const_lv5_1 = "1";
const sc_lv<2> Blowfish_SetKey::ap_const_lv2_0 = "00";
const sc_lv<7> Blowfish_SetKey::ap_const_lv7_1 = "1";
const sc_lv<7> Blowfish_SetKey::ap_const_lv7_2 = "10";
const sc_lv<7> Blowfish_SetKey::ap_const_lv7_3 = "11";
const sc_lv<9> Blowfish_SetKey::ap_const_lv9_2 = "10";
const bool Blowfish_SetKey::ap_const_boolean_1 = true;

Blowfish_SetKey::Blowfish_SetKey(sc_module_name name) : sc_module(name), mVcdFile(0) {
    initial_sbox_0_U = new Blowfish_SetKey_ibkb("initial_sbox_0_U");
    initial_sbox_0_U->clk(ap_clk);
    initial_sbox_0_U->reset(ap_rst);
    initial_sbox_0_U->address0(initial_sbox_0_address0);
    initial_sbox_0_U->ce0(initial_sbox_0_ce0);
    initial_sbox_0_U->q0(initial_sbox_0_q0);
    initial_sbox_0_U->address1(initial_sbox_0_address1);
    initial_sbox_0_U->ce1(initial_sbox_0_ce1);
    initial_sbox_0_U->q1(initial_sbox_0_q1);
    initial_sbox_1_U = new Blowfish_SetKey_icud("initial_sbox_1_U");
    initial_sbox_1_U->clk(ap_clk);
    initial_sbox_1_U->reset(ap_rst);
    initial_sbox_1_U->address0(initial_sbox_1_address0);
    initial_sbox_1_U->ce0(initial_sbox_1_ce0);
    initial_sbox_1_U->q0(initial_sbox_1_q0);
    initial_sbox_1_U->address1(initial_sbox_1_address1);
    initial_sbox_1_U->ce1(initial_sbox_1_ce1);
    initial_sbox_1_U->q1(initial_sbox_1_q1);
    initial_sbox_2_U = new Blowfish_SetKey_idEe("initial_sbox_2_U");
    initial_sbox_2_U->clk(ap_clk);
    initial_sbox_2_U->reset(ap_rst);
    initial_sbox_2_U->address0(initial_sbox_2_address0);
    initial_sbox_2_U->ce0(initial_sbox_2_ce0);
    initial_sbox_2_U->q0(initial_sbox_2_q0);
    initial_sbox_2_U->address1(initial_sbox_2_address1);
    initial_sbox_2_U->ce1(initial_sbox_2_ce1);
    initial_sbox_2_U->q1(initial_sbox_2_q1);
    initial_sbox_3_U = new Blowfish_SetKey_ieOg("initial_sbox_3_U");
    initial_sbox_3_U->clk(ap_clk);
    initial_sbox_3_U->reset(ap_rst);
    initial_sbox_3_U->address0(initial_sbox_3_address0);
    initial_sbox_3_U->ce0(initial_sbox_3_ce0);
    initial_sbox_3_U->q0(initial_sbox_3_q0);
    initial_sbox_3_U->address1(initial_sbox_3_address1);
    initial_sbox_3_U->ce1(initial_sbox_3_ce1);
    initial_sbox_3_U->q1(initial_sbox_3_q1);
    grp_Encrypt_SetKey_fu_986 = new Encrypt_SetKey("grp_Encrypt_SetKey_fu_986");
    grp_Encrypt_SetKey_fu_986->ap_clk(ap_clk);
    grp_Encrypt_SetKey_fu_986->ap_rst(ap_rst);
    grp_Encrypt_SetKey_fu_986->ap_start(grp_Encrypt_SetKey_fu_986_ap_start);
    grp_Encrypt_SetKey_fu_986->ap_done(grp_Encrypt_SetKey_fu_986_ap_done);
    grp_Encrypt_SetKey_fu_986->ap_idle(grp_Encrypt_SetKey_fu_986_ap_idle);
    grp_Encrypt_SetKey_fu_986->ap_ready(grp_Encrypt_SetKey_fu_986_ap_ready);
    grp_Encrypt_SetKey_fu_986->left_read(grp_Encrypt_SetKey_fu_986_left_read);
    grp_Encrypt_SetKey_fu_986->right_read(grp_Encrypt_SetKey_fu_986_right_read);
    grp_Encrypt_SetKey_fu_986->P_address0(grp_Encrypt_SetKey_fu_986_P_address0);
    grp_Encrypt_SetKey_fu_986->P_ce0(grp_Encrypt_SetKey_fu_986_P_ce0);
    grp_Encrypt_SetKey_fu_986->P_q0(P_q0);
    grp_Encrypt_SetKey_fu_986->P_address1(grp_Encrypt_SetKey_fu_986_P_address1);
    grp_Encrypt_SetKey_fu_986->P_ce1(grp_Encrypt_SetKey_fu_986_P_ce1);
    grp_Encrypt_SetKey_fu_986->P_q1(P_q1);
    grp_Encrypt_SetKey_fu_986->S_address0(grp_Encrypt_SetKey_fu_986_S_address0);
    grp_Encrypt_SetKey_fu_986->S_ce0(grp_Encrypt_SetKey_fu_986_S_ce0);
    grp_Encrypt_SetKey_fu_986->S_q0(S_q0);
    grp_Encrypt_SetKey_fu_986->S_address1(grp_Encrypt_SetKey_fu_986_S_address1);
    grp_Encrypt_SetKey_fu_986->S_ce1(grp_Encrypt_SetKey_fu_986_S_ce1);
    grp_Encrypt_SetKey_fu_986->S_q1(S_q1);
    grp_Encrypt_SetKey_fu_986->ap_return_0(grp_Encrypt_SetKey_fu_986_ap_return_0);
    grp_Encrypt_SetKey_fu_986->ap_return_1(grp_Encrypt_SetKey_fu_986_ap_return_1);
    Blowfish_SetKey_ufYi_U7 = new Blowfish_SetKey_ufYi<1,11,7,64,32>("Blowfish_SetKey_ufYi_U7");
    Blowfish_SetKey_ufYi_U7->clk(ap_clk);
    Blowfish_SetKey_ufYi_U7->reset(ap_rst);
    Blowfish_SetKey_ufYi_U7->start(grp_fu_1389_ap_start);
    Blowfish_SetKey_ufYi_U7->done(grp_fu_1389_ap_done);
    Blowfish_SetKey_ufYi_U7->din0(grp_fu_1389_p0);
    Blowfish_SetKey_ufYi_U7->din1(key_size);
    Blowfish_SetKey_ufYi_U7->ce(ap_var_for_const0);
    Blowfish_SetKey_ufYi_U7->dout(grp_fu_1389_p2);
    Blowfish_SetKey_ufYi_U8 = new Blowfish_SetKey_ufYi<1,11,7,64,32>("Blowfish_SetKey_ufYi_U8");
    Blowfish_SetKey_ufYi_U8->clk(ap_clk);
    Blowfish_SetKey_ufYi_U8->reset(ap_rst);
    Blowfish_SetKey_ufYi_U8->start(grp_fu_1404_ap_start);
    Blowfish_SetKey_ufYi_U8->done(grp_fu_1404_ap_done);
    Blowfish_SetKey_ufYi_U8->din0(grp_fu_1404_p0);
    Blowfish_SetKey_ufYi_U8->din1(key_size);
    Blowfish_SetKey_ufYi_U8->ce(ap_var_for_const0);
    Blowfish_SetKey_ufYi_U8->dout(grp_fu_1404_p2);
    Blowfish_SetKey_ufYi_U9 = new Blowfish_SetKey_ufYi<1,11,7,64,32>("Blowfish_SetKey_ufYi_U9");
    Blowfish_SetKey_ufYi_U9->clk(ap_clk);
    Blowfish_SetKey_ufYi_U9->reset(ap_rst);
    Blowfish_SetKey_ufYi_U9->start(grp_fu_1419_ap_start);
    Blowfish_SetKey_ufYi_U9->done(grp_fu_1419_ap_done);
    Blowfish_SetKey_ufYi_U9->din0(grp_fu_1419_p0);
    Blowfish_SetKey_ufYi_U9->din1(key_size);
    Blowfish_SetKey_ufYi_U9->ce(ap_var_for_const0);
    Blowfish_SetKey_ufYi_U9->dout(grp_fu_1419_p2);
    Blowfish_SetKey_ufYi_U10 = new Blowfish_SetKey_ufYi<1,11,7,64,32>("Blowfish_SetKey_ufYi_U10");
    Blowfish_SetKey_ufYi_U10->clk(ap_clk);
    Blowfish_SetKey_ufYi_U10->reset(ap_rst);
    Blowfish_SetKey_ufYi_U10->start(grp_fu_1434_ap_start);
    Blowfish_SetKey_ufYi_U10->done(grp_fu_1434_ap_done);
    Blowfish_SetKey_ufYi_U10->din0(grp_fu_1434_p0);
    Blowfish_SetKey_ufYi_U10->din1(key_size);
    Blowfish_SetKey_ufYi_U10->ce(ap_var_for_const0);
    Blowfish_SetKey_ufYi_U10->dout(grp_fu_1434_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_P_addr_18_reg_1668);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_P_addr_19_reg_1673);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_addr_20_reg_1678);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_P_addr_21_reg_1683);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_P_addr_22_reg_1688);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_P_addr_23_reg_1693);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_P_addr_24_reg_1698);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_P_addr_25_reg_1703);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_P_addr_26_reg_1708);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_P_addr_27_reg_1713);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_P_addr_28_reg_1718);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_P_addr_29_reg_1723);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_P_addr_30_reg_1728);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_P_addr_31_reg_1733);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_P_addr_32_reg_1738);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_P_addr_33_reg_1751);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_P_addr_34_reg_1756);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_P_addr_reg_1663);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_P_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( P_addr_reg_1663 );
    sensitive << ( P_addr_19_reg_1673 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( P_addr_21_reg_1683 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( P_addr_23_reg_1693 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( P_addr_25_reg_1703 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( P_addr_27_reg_1713 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( P_addr_29_reg_1723 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( P_addr_31_reg_1733 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( P_addr_33_reg_1751 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( grp_Encrypt_SetKey_fu_986_P_address0 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( zext_ln177_fu_1473_p1 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_P_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( P_addr_18_reg_1668 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( P_addr_20_reg_1678 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( P_addr_22_reg_1688 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( P_addr_24_reg_1698 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( P_addr_26_reg_1708 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( P_addr_28_reg_1718 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( P_addr_30_reg_1728 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( P_addr_32_reg_1738 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( P_addr_34_reg_1756 );
    sensitive << ( P_addr_35_reg_2030 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( grp_Encrypt_SetKey_fu_986_P_address1 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_P_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( grp_Encrypt_SetKey_fu_986_P_ce0 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_P_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( grp_Encrypt_SetKey_fu_986_P_ce1 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_P_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reg_1014 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_P_d1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reg_1023 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( xor_ln177_fu_1488_p2 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_P_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_P_we1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_S_address0);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( zext_ln162_reg_1764 );
    sensitive << ( zext_ln162_2_reg_1795 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( grp_Encrypt_SetKey_fu_986_S_address0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( zext_ln162_17_fu_1134_p1 );
    sensitive << ( tmp_4_fu_1173_p3 );
    sensitive << ( tmp_6_fu_1215_p3 );
    sensitive << ( tmp_8_fu_1258_p3 );
    sensitive << ( zext_ln162_19_fu_1310_p1 );
    sensitive << ( tmp_11_fu_1349_p3 );
    sensitive << ( zext_ln196_fu_1503_p1 );
    sensitive << ( zext_ln196_1_fu_1543_p1 );
    sensitive << ( tmp_14_fu_1581_p3 );
    sensitive << ( zext_ln196_2_fu_1633_p1 );

    SC_METHOD(thread_S_address1);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( zext_ln162_1_reg_1780 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln162_3_reg_1805 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( grp_Encrypt_SetKey_fu_986_S_address1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_3_fu_1139_p3 );
    sensitive << ( tmp_5_fu_1181_p3 );
    sensitive << ( tmp_7_fu_1224_p3 );
    sensitive << ( tmp_9_fu_1266_p3 );
    sensitive << ( tmp_10_fu_1315_p3 );
    sensitive << ( tmp_12_fu_1357_p3 );
    sensitive << ( zext_ln197_fu_1518_p1 );
    sensitive << ( tmp_13_fu_1558_p3 );
    sensitive << ( tmp_21_fu_1600_p3 );
    sensitive << ( tmp_22_fu_1648_p3 );

    SC_METHOD(thread_S_ce0);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( grp_Encrypt_SetKey_fu_986_S_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_S_ce1);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( grp_Encrypt_SetKey_fu_986_S_ce1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_S_d0);
    sensitive << ( initial_sbox_0_q0 );
    sensitive << ( initial_sbox_1_q0 );
    sensitive << ( initial_sbox_2_q0 );
    sensitive << ( initial_sbox_3_q0 );
    sensitive << ( reg_1014 );
    sensitive << ( reg_1032 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( left_ret18_1_reg_2047 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_S_d1);
    sensitive << ( initial_sbox_0_q1 );
    sensitive << ( initial_sbox_1_q1 );
    sensitive << ( initial_sbox_2_q1 );
    sensitive << ( initial_sbox_3_q1 );
    sensitive << ( reg_1023 );
    sensitive << ( reg_1039 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( right_ret19_1_reg_2053 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_S_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_S_we1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_add_ln161_1_fu_1167_p2);
    sensitive << ( j_0_1_0_reg_804 );

    SC_METHOD(thread_add_ln161_2_fu_1252_p2);
    sensitive << ( j_0_2_0_reg_816 );

    SC_METHOD(thread_add_ln161_3_fu_1343_p2);
    sensitive << ( j_0_3_0_reg_828 );

    SC_METHOD(thread_add_ln161_fu_1072_p2);
    sensitive << ( j_0_0_0_reg_793 );

    SC_METHOD(thread_add_ln162_1_fu_1304_p2);
    sensitive << ( zext_ln162_18_fu_1300_p1 );

    SC_METHOD(thread_add_ln162_fu_1128_p2);
    sensitive << ( zext_ln162_16_fu_1124_p1 );

    SC_METHOD(thread_add_ln194_1_fu_1567_p2);
    sensitive << ( j6_0_1_reg_906 );

    SC_METHOD(thread_add_ln194_2_fu_1609_p2);
    sensitive << ( j6_0_2_reg_940 );

    SC_METHOD(thread_add_ln194_3_fu_1657_p2);
    sensitive << ( j6_0_3_reg_974 );

    SC_METHOD(thread_add_ln194_fu_1523_p2);
    sensitive << ( j6_0_0_reg_872 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( tmp_24_fu_1615_p3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( tmp_24_fu_1615_p3 );

    SC_METHOD(thread_data_3_fu_1478_p5);
    sensitive << ( key_q0 );
    sensitive << ( key_q1 );
    sensitive << ( key_load_reg_2010 );
    sensitive << ( key_load_1_reg_2015 );

    SC_METHOD(thread_empty_28_fu_1057_p1);
    sensitive << ( j_0_0_0_reg_793 );

    SC_METHOD(thread_empty_31_fu_1109_p1);
    sensitive << ( j_0_1_0_reg_804 );

    SC_METHOD(thread_empty_34_fu_1200_p1);
    sensitive << ( j_0_2_0_reg_816 );

    SC_METHOD(thread_empty_37_fu_1285_p1);
    sensitive << ( j_0_3_0_reg_828 );

    SC_METHOD(thread_grp_Encrypt_SetKey_fu_986_ap_start);
    sensitive << ( grp_Encrypt_SetKey_fu_986_ap_start_reg );

    SC_METHOD(thread_grp_Encrypt_SetKey_fu_986_left_read);
    sensitive << ( reg_1014 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( left_2_0_reg_862 );
    sensitive << ( left_2_1_reg_895 );
    sensitive << ( left_2_2_reg_929 );
    sensitive << ( left_2_3_reg_963 );

    SC_METHOD(thread_grp_Encrypt_SetKey_fu_986_right_read);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( reg_1023 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( right_2_0_reg_852 );
    sensitive << ( right_2_1_reg_884 );
    sensitive << ( right_2_2_reg_918 );
    sensitive << ( right_2_3_reg_952 );

    SC_METHOD(thread_grp_fu_1389_ap_start);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln170_fu_1365_p2 );

    SC_METHOD(thread_grp_fu_1389_p0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_1389_p00 );

    SC_METHOD(thread_grp_fu_1389_p00);
    sensitive << ( shl_ln_fu_1377_p3 );

    SC_METHOD(thread_grp_fu_1404_ap_start);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln170_fu_1365_p2 );

    SC_METHOD(thread_grp_fu_1404_p0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_1404_p00 );

    SC_METHOD(thread_grp_fu_1404_p00);
    sensitive << ( or_ln174_fu_1394_p2 );

    SC_METHOD(thread_grp_fu_1419_ap_start);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln170_fu_1365_p2 );

    SC_METHOD(thread_grp_fu_1419_p0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_1419_p00 );

    SC_METHOD(thread_grp_fu_1419_p00);
    sensitive << ( or_ln174_1_fu_1409_p2 );

    SC_METHOD(thread_grp_fu_1434_ap_start);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln170_fu_1365_p2 );

    SC_METHOD(thread_grp_fu_1434_p0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( grp_fu_1434_p00 );

    SC_METHOD(thread_grp_fu_1434_p00);
    sensitive << ( or_ln174_2_fu_1424_p2 );

    SC_METHOD(thread_i_fu_1371_p2);
    sensitive << ( i2_0_reg_840 );

    SC_METHOD(thread_icmp_ln161_1_fu_1098_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( j_0_1_0_reg_804 );

    SC_METHOD(thread_icmp_ln161_2_fu_1189_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( j_0_2_0_reg_816 );

    SC_METHOD(thread_icmp_ln161_3_fu_1274_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( j_0_3_0_reg_828 );

    SC_METHOD(thread_icmp_ln161_fu_1046_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( j_0_0_0_reg_793 );

    SC_METHOD(thread_icmp_ln170_fu_1365_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( i2_0_reg_840 );

    SC_METHOD(thread_initial_sbox_0_address0);
    sensitive << ( zext_ln162_fu_1052_p1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln162_2_fu_1083_p1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_initial_sbox_0_address1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln162_1_fu_1067_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln162_3_fu_1093_p1 );

    SC_METHOD(thread_initial_sbox_0_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_initial_sbox_0_ce1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_initial_sbox_1_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln162_4_fu_1104_p1 );
    sensitive << ( zext_ln162_6_fu_1152_p1 );

    SC_METHOD(thread_initial_sbox_1_address1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln162_5_fu_1119_p1 );
    sensitive << ( zext_ln162_7_fu_1162_p1 );

    SC_METHOD(thread_initial_sbox_1_ce0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_initial_sbox_1_ce1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_initial_sbox_2_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln162_8_fu_1195_p1 );
    sensitive << ( zext_ln162_10_fu_1237_p1 );

    SC_METHOD(thread_initial_sbox_2_address1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln162_9_fu_1210_p1 );
    sensitive << ( zext_ln162_11_fu_1247_p1 );

    SC_METHOD(thread_initial_sbox_2_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_initial_sbox_2_ce1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_initial_sbox_3_address0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln162_12_fu_1280_p1 );
    sensitive << ( zext_ln162_14_fu_1328_p1 );

    SC_METHOD(thread_initial_sbox_3_address1);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln162_13_fu_1295_p1 );
    sensitive << ( zext_ln162_15_fu_1338_p1 );

    SC_METHOD(thread_initial_sbox_3_ce0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_initial_sbox_3_ce1);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_key_address0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( zext_ln175_fu_1443_p1 );
    sensitive << ( zext_ln175_2_fu_1460_p1 );

    SC_METHOD(thread_key_address1);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( zext_ln175_1_fu_1452_p1 );
    sensitive << ( zext_ln175_3_fu_1468_p1 );

    SC_METHOD(thread_key_ce0);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_key_ce1);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_or_ln161_10_fu_1323_p2);
    sensitive << ( empty_37_reg_1921 );

    SC_METHOD(thread_or_ln161_11_fu_1333_p2);
    sensitive << ( empty_37_reg_1921 );

    SC_METHOD(thread_or_ln161_1_fu_1078_p2);
    sensitive << ( empty_28_reg_1774 );

    SC_METHOD(thread_or_ln161_2_fu_1088_p2);
    sensitive << ( empty_28_reg_1774 );

    SC_METHOD(thread_or_ln161_3_fu_1113_p2);
    sensitive << ( empty_31_fu_1109_p1 );

    SC_METHOD(thread_or_ln161_4_fu_1147_p2);
    sensitive << ( empty_31_reg_1823 );

    SC_METHOD(thread_or_ln161_5_fu_1157_p2);
    sensitive << ( empty_31_reg_1823 );

    SC_METHOD(thread_or_ln161_6_fu_1204_p2);
    sensitive << ( empty_34_fu_1200_p1 );

    SC_METHOD(thread_or_ln161_7_fu_1232_p2);
    sensitive << ( empty_34_reg_1872 );

    SC_METHOD(thread_or_ln161_8_fu_1242_p2);
    sensitive << ( empty_34_reg_1872 );

    SC_METHOD(thread_or_ln161_9_fu_1289_p2);
    sensitive << ( empty_37_fu_1285_p1 );

    SC_METHOD(thread_or_ln161_fu_1061_p2);
    sensitive << ( empty_28_fu_1057_p1 );

    SC_METHOD(thread_or_ln174_1_fu_1409_p2);
    sensitive << ( shl_ln_fu_1377_p3 );

    SC_METHOD(thread_or_ln174_2_fu_1424_p2);
    sensitive << ( shl_ln_fu_1377_p3 );

    SC_METHOD(thread_or_ln174_fu_1394_p2);
    sensitive << ( shl_ln_fu_1377_p3 );

    SC_METHOD(thread_or_ln197_1_fu_1552_p2);
    sensitive << ( trunc_ln194_1_fu_1548_p1 );

    SC_METHOD(thread_or_ln197_2_fu_1594_p2);
    sensitive << ( trunc_ln194_2_fu_1590_p1 );

    SC_METHOD(thread_or_ln197_3_fu_1642_p2);
    sensitive << ( trunc_ln194_3_fu_1638_p1 );

    SC_METHOD(thread_or_ln197_fu_1512_p2);
    sensitive << ( trunc_ln194_fu_1508_p1 );

    SC_METHOD(thread_sext_ln196_fu_1629_p1);
    sensitive << ( xor_ln196_1_fu_1623_p2 );

    SC_METHOD(thread_shl_ln_fu_1377_p3);
    sensitive << ( i2_0_reg_840 );

    SC_METHOD(thread_tmp_10_fu_1315_p3);
    sensitive << ( or_ln161_9_reg_1927 );

    SC_METHOD(thread_tmp_11_fu_1349_p3);
    sensitive << ( or_ln161_10_reg_1937 );

    SC_METHOD(thread_tmp_12_fu_1357_p3);
    sensitive << ( or_ln161_11_reg_1947 );

    SC_METHOD(thread_tmp_13_fu_1558_p3);
    sensitive << ( or_ln197_1_fu_1552_p2 );

    SC_METHOD(thread_tmp_14_fu_1581_p3);
    sensitive << ( j6_0_2_reg_940 );

    SC_METHOD(thread_tmp_1_fu_1495_p3);
    sensitive << ( j6_0_0_reg_872 );

    SC_METHOD(thread_tmp_21_fu_1600_p3);
    sensitive << ( or_ln197_2_fu_1594_p2 );

    SC_METHOD(thread_tmp_22_fu_1648_p3);
    sensitive << ( or_ln197_3_fu_1642_p2 );

    SC_METHOD(thread_tmp_23_fu_1573_p3);
    sensitive << ( j6_0_2_reg_940 );

    SC_METHOD(thread_tmp_24_fu_1615_p3);
    sensitive << ( j6_0_3_reg_974 );

    SC_METHOD(thread_tmp_2_fu_1529_p3);
    sensitive << ( j6_0_1_reg_906 );

    SC_METHOD(thread_tmp_3_fu_1139_p3);
    sensitive << ( or_ln161_3_reg_1829 );

    SC_METHOD(thread_tmp_4_fu_1173_p3);
    sensitive << ( or_ln161_4_reg_1839 );

    SC_METHOD(thread_tmp_5_fu_1181_p3);
    sensitive << ( or_ln161_5_reg_1849 );

    SC_METHOD(thread_tmp_6_fu_1215_p3);
    sensitive << ( j_0_2_0_reg_816 );

    SC_METHOD(thread_tmp_7_fu_1224_p3);
    sensitive << ( or_ln161_6_reg_1878 );

    SC_METHOD(thread_tmp_8_fu_1258_p3);
    sensitive << ( or_ln161_7_reg_1888 );

    SC_METHOD(thread_tmp_9_fu_1266_p3);
    sensitive << ( or_ln161_8_reg_1898 );

    SC_METHOD(thread_trunc_ln174_1_fu_1448_p1);
    sensitive << ( grp_fu_1404_p2 );

    SC_METHOD(thread_trunc_ln174_2_fu_1457_p1);
    sensitive << ( urem_ln174_2_reg_2000 );

    SC_METHOD(thread_trunc_ln174_3_fu_1465_p1);
    sensitive << ( urem_ln174_3_reg_2005 );

    SC_METHOD(thread_trunc_ln174_fu_1439_p1);
    sensitive << ( grp_fu_1389_p2 );

    SC_METHOD(thread_trunc_ln194_1_fu_1548_p1);
    sensitive << ( j6_0_1_reg_906 );

    SC_METHOD(thread_trunc_ln194_2_fu_1590_p1);
    sensitive << ( j6_0_2_reg_940 );

    SC_METHOD(thread_trunc_ln194_3_fu_1638_p1);
    sensitive << ( j6_0_3_reg_974 );

    SC_METHOD(thread_trunc_ln194_fu_1508_p1);
    sensitive << ( j6_0_0_reg_872 );

    SC_METHOD(thread_xor_ln177_fu_1488_p2);
    sensitive << ( P_q0 );
    sensitive << ( data_3_fu_1478_p5 );

    SC_METHOD(thread_xor_ln196_1_fu_1623_p2);
    sensitive << ( j6_0_3_reg_974 );

    SC_METHOD(thread_xor_ln196_fu_1537_p2);
    sensitive << ( j6_0_1_reg_906 );

    SC_METHOD(thread_zext_ln162_10_fu_1237_p1);
    sensitive << ( or_ln161_7_fu_1232_p2 );

    SC_METHOD(thread_zext_ln162_11_fu_1247_p1);
    sensitive << ( or_ln161_8_fu_1242_p2 );

    SC_METHOD(thread_zext_ln162_12_fu_1280_p1);
    sensitive << ( j_0_3_0_reg_828 );

    SC_METHOD(thread_zext_ln162_13_fu_1295_p1);
    sensitive << ( or_ln161_9_fu_1289_p2 );

    SC_METHOD(thread_zext_ln162_14_fu_1328_p1);
    sensitive << ( or_ln161_10_fu_1323_p2 );

    SC_METHOD(thread_zext_ln162_15_fu_1338_p1);
    sensitive << ( or_ln161_11_fu_1333_p2 );

    SC_METHOD(thread_zext_ln162_16_fu_1124_p1);
    sensitive << ( j_0_1_0_reg_804 );

    SC_METHOD(thread_zext_ln162_17_fu_1134_p1);
    sensitive << ( add_ln162_fu_1128_p2 );

    SC_METHOD(thread_zext_ln162_18_fu_1300_p1);
    sensitive << ( j_0_3_0_reg_828 );

    SC_METHOD(thread_zext_ln162_19_fu_1310_p1);
    sensitive << ( add_ln162_1_fu_1304_p2 );

    SC_METHOD(thread_zext_ln162_1_fu_1067_p1);
    sensitive << ( or_ln161_fu_1061_p2 );

    SC_METHOD(thread_zext_ln162_2_fu_1083_p1);
    sensitive << ( or_ln161_1_fu_1078_p2 );

    SC_METHOD(thread_zext_ln162_3_fu_1093_p1);
    sensitive << ( or_ln161_2_fu_1088_p2 );

    SC_METHOD(thread_zext_ln162_4_fu_1104_p1);
    sensitive << ( j_0_1_0_reg_804 );

    SC_METHOD(thread_zext_ln162_5_fu_1119_p1);
    sensitive << ( or_ln161_3_fu_1113_p2 );

    SC_METHOD(thread_zext_ln162_6_fu_1152_p1);
    sensitive << ( or_ln161_4_fu_1147_p2 );

    SC_METHOD(thread_zext_ln162_7_fu_1162_p1);
    sensitive << ( or_ln161_5_fu_1157_p2 );

    SC_METHOD(thread_zext_ln162_8_fu_1195_p1);
    sensitive << ( j_0_2_0_reg_816 );

    SC_METHOD(thread_zext_ln162_9_fu_1210_p1);
    sensitive << ( or_ln161_6_fu_1204_p2 );

    SC_METHOD(thread_zext_ln162_fu_1052_p1);
    sensitive << ( j_0_0_0_reg_793 );

    SC_METHOD(thread_zext_ln175_1_fu_1452_p1);
    sensitive << ( trunc_ln174_1_fu_1448_p1 );

    SC_METHOD(thread_zext_ln175_2_fu_1460_p1);
    sensitive << ( trunc_ln174_2_fu_1457_p1 );

    SC_METHOD(thread_zext_ln175_3_fu_1468_p1);
    sensitive << ( trunc_ln174_3_fu_1465_p1 );

    SC_METHOD(thread_zext_ln175_fu_1443_p1);
    sensitive << ( trunc_ln174_fu_1439_p1 );

    SC_METHOD(thread_zext_ln177_fu_1473_p1);
    sensitive << ( i2_0_reg_840 );

    SC_METHOD(thread_zext_ln196_1_fu_1543_p1);
    sensitive << ( xor_ln196_fu_1537_p2 );

    SC_METHOD(thread_zext_ln196_2_fu_1633_p1);
    sensitive << ( sext_ln196_fu_1629_p1 );

    SC_METHOD(thread_zext_ln196_fu_1503_p1);
    sensitive << ( j6_0_0_reg_872 );

    SC_METHOD(thread_zext_ln197_fu_1518_p1);
    sensitive << ( or_ln197_fu_1512_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( grp_Encrypt_SetKey_fu_986_ap_done );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln161_fu_1046_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( icmp_ln161_1_fu_1098_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( icmp_ln161_2_fu_1189_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln161_3_fu_1274_p2 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln170_fu_1365_p2 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( tmp_1_fu_1495_p3 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( tmp_2_fu_1529_p3 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( tmp_23_fu_1573_p3 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( tmp_24_fu_1615_p3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000000001";
    grp_Encrypt_SetKey_fu_986_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Blowfish_SetKey_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, key_address0, "(port)key_address0");
    sc_trace(mVcdFile, key_ce0, "(port)key_ce0");
    sc_trace(mVcdFile, key_q0, "(port)key_q0");
    sc_trace(mVcdFile, key_address1, "(port)key_address1");
    sc_trace(mVcdFile, key_ce1, "(port)key_ce1");
    sc_trace(mVcdFile, key_q1, "(port)key_q1");
    sc_trace(mVcdFile, key_size, "(port)key_size");
    sc_trace(mVcdFile, P_address0, "(port)P_address0");
    sc_trace(mVcdFile, P_ce0, "(port)P_ce0");
    sc_trace(mVcdFile, P_we0, "(port)P_we0");
    sc_trace(mVcdFile, P_d0, "(port)P_d0");
    sc_trace(mVcdFile, P_q0, "(port)P_q0");
    sc_trace(mVcdFile, P_address1, "(port)P_address1");
    sc_trace(mVcdFile, P_ce1, "(port)P_ce1");
    sc_trace(mVcdFile, P_we1, "(port)P_we1");
    sc_trace(mVcdFile, P_d1, "(port)P_d1");
    sc_trace(mVcdFile, P_q1, "(port)P_q1");
    sc_trace(mVcdFile, S_address0, "(port)S_address0");
    sc_trace(mVcdFile, S_ce0, "(port)S_ce0");
    sc_trace(mVcdFile, S_we0, "(port)S_we0");
    sc_trace(mVcdFile, S_d0, "(port)S_d0");
    sc_trace(mVcdFile, S_q0, "(port)S_q0");
    sc_trace(mVcdFile, S_address1, "(port)S_address1");
    sc_trace(mVcdFile, S_ce1, "(port)S_ce1");
    sc_trace(mVcdFile, S_we1, "(port)S_we1");
    sc_trace(mVcdFile, S_d1, "(port)S_d1");
    sc_trace(mVcdFile, S_q1, "(port)S_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, initial_sbox_0_address0, "initial_sbox_0_address0");
    sc_trace(mVcdFile, initial_sbox_0_ce0, "initial_sbox_0_ce0");
    sc_trace(mVcdFile, initial_sbox_0_q0, "initial_sbox_0_q0");
    sc_trace(mVcdFile, initial_sbox_0_address1, "initial_sbox_0_address1");
    sc_trace(mVcdFile, initial_sbox_0_ce1, "initial_sbox_0_ce1");
    sc_trace(mVcdFile, initial_sbox_0_q1, "initial_sbox_0_q1");
    sc_trace(mVcdFile, initial_sbox_1_address0, "initial_sbox_1_address0");
    sc_trace(mVcdFile, initial_sbox_1_ce0, "initial_sbox_1_ce0");
    sc_trace(mVcdFile, initial_sbox_1_q0, "initial_sbox_1_q0");
    sc_trace(mVcdFile, initial_sbox_1_address1, "initial_sbox_1_address1");
    sc_trace(mVcdFile, initial_sbox_1_ce1, "initial_sbox_1_ce1");
    sc_trace(mVcdFile, initial_sbox_1_q1, "initial_sbox_1_q1");
    sc_trace(mVcdFile, initial_sbox_2_address0, "initial_sbox_2_address0");
    sc_trace(mVcdFile, initial_sbox_2_ce0, "initial_sbox_2_ce0");
    sc_trace(mVcdFile, initial_sbox_2_q0, "initial_sbox_2_q0");
    sc_trace(mVcdFile, initial_sbox_2_address1, "initial_sbox_2_address1");
    sc_trace(mVcdFile, initial_sbox_2_ce1, "initial_sbox_2_ce1");
    sc_trace(mVcdFile, initial_sbox_2_q1, "initial_sbox_2_q1");
    sc_trace(mVcdFile, initial_sbox_3_address0, "initial_sbox_3_address0");
    sc_trace(mVcdFile, initial_sbox_3_ce0, "initial_sbox_3_ce0");
    sc_trace(mVcdFile, initial_sbox_3_q0, "initial_sbox_3_q0");
    sc_trace(mVcdFile, initial_sbox_3_address1, "initial_sbox_3_address1");
    sc_trace(mVcdFile, initial_sbox_3_ce1, "initial_sbox_3_ce1");
    sc_trace(mVcdFile, initial_sbox_3_q1, "initial_sbox_3_q1");
    sc_trace(mVcdFile, reg_1014, "reg_1014");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_ap_ready, "grp_Encrypt_SetKey_fu_986_ap_ready");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_ap_done, "grp_Encrypt_SetKey_fu_986_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, reg_1023, "reg_1023");
    sc_trace(mVcdFile, reg_1032, "reg_1032");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, reg_1039, "reg_1039");
    sc_trace(mVcdFile, P_addr_reg_1663, "P_addr_reg_1663");
    sc_trace(mVcdFile, P_addr_18_reg_1668, "P_addr_18_reg_1668");
    sc_trace(mVcdFile, P_addr_19_reg_1673, "P_addr_19_reg_1673");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, P_addr_20_reg_1678, "P_addr_20_reg_1678");
    sc_trace(mVcdFile, P_addr_21_reg_1683, "P_addr_21_reg_1683");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, P_addr_22_reg_1688, "P_addr_22_reg_1688");
    sc_trace(mVcdFile, P_addr_23_reg_1693, "P_addr_23_reg_1693");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, P_addr_24_reg_1698, "P_addr_24_reg_1698");
    sc_trace(mVcdFile, P_addr_25_reg_1703, "P_addr_25_reg_1703");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, P_addr_26_reg_1708, "P_addr_26_reg_1708");
    sc_trace(mVcdFile, P_addr_27_reg_1713, "P_addr_27_reg_1713");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, P_addr_28_reg_1718, "P_addr_28_reg_1718");
    sc_trace(mVcdFile, P_addr_29_reg_1723, "P_addr_29_reg_1723");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, P_addr_30_reg_1728, "P_addr_30_reg_1728");
    sc_trace(mVcdFile, P_addr_31_reg_1733, "P_addr_31_reg_1733");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, P_addr_32_reg_1738, "P_addr_32_reg_1738");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, P_addr_33_reg_1751, "P_addr_33_reg_1751");
    sc_trace(mVcdFile, P_addr_34_reg_1756, "P_addr_34_reg_1756");
    sc_trace(mVcdFile, zext_ln162_fu_1052_p1, "zext_ln162_fu_1052_p1");
    sc_trace(mVcdFile, zext_ln162_reg_1764, "zext_ln162_reg_1764");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln161_fu_1046_p2, "icmp_ln161_fu_1046_p2");
    sc_trace(mVcdFile, empty_28_fu_1057_p1, "empty_28_fu_1057_p1");
    sc_trace(mVcdFile, empty_28_reg_1774, "empty_28_reg_1774");
    sc_trace(mVcdFile, zext_ln162_1_fu_1067_p1, "zext_ln162_1_fu_1067_p1");
    sc_trace(mVcdFile, zext_ln162_1_reg_1780, "zext_ln162_1_reg_1780");
    sc_trace(mVcdFile, add_ln161_fu_1072_p2, "add_ln161_fu_1072_p2");
    sc_trace(mVcdFile, add_ln161_reg_1790, "add_ln161_reg_1790");
    sc_trace(mVcdFile, zext_ln162_2_fu_1083_p1, "zext_ln162_2_fu_1083_p1");
    sc_trace(mVcdFile, zext_ln162_2_reg_1795, "zext_ln162_2_reg_1795");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, zext_ln162_3_fu_1093_p1, "zext_ln162_3_fu_1093_p1");
    sc_trace(mVcdFile, zext_ln162_3_reg_1805, "zext_ln162_3_reg_1805");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, icmp_ln161_1_fu_1098_p2, "icmp_ln161_1_fu_1098_p2");
    sc_trace(mVcdFile, empty_31_fu_1109_p1, "empty_31_fu_1109_p1");
    sc_trace(mVcdFile, empty_31_reg_1823, "empty_31_reg_1823");
    sc_trace(mVcdFile, or_ln161_3_fu_1113_p2, "or_ln161_3_fu_1113_p2");
    sc_trace(mVcdFile, or_ln161_3_reg_1829, "or_ln161_3_reg_1829");
    sc_trace(mVcdFile, or_ln161_4_fu_1147_p2, "or_ln161_4_fu_1147_p2");
    sc_trace(mVcdFile, or_ln161_4_reg_1839, "or_ln161_4_reg_1839");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, or_ln161_5_fu_1157_p2, "or_ln161_5_fu_1157_p2");
    sc_trace(mVcdFile, or_ln161_5_reg_1849, "or_ln161_5_reg_1849");
    sc_trace(mVcdFile, add_ln161_1_fu_1167_p2, "add_ln161_1_fu_1167_p2");
    sc_trace(mVcdFile, add_ln161_1_reg_1859, "add_ln161_1_reg_1859");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, icmp_ln161_2_fu_1189_p2, "icmp_ln161_2_fu_1189_p2");
    sc_trace(mVcdFile, empty_34_fu_1200_p1, "empty_34_fu_1200_p1");
    sc_trace(mVcdFile, empty_34_reg_1872, "empty_34_reg_1872");
    sc_trace(mVcdFile, or_ln161_6_fu_1204_p2, "or_ln161_6_fu_1204_p2");
    sc_trace(mVcdFile, or_ln161_6_reg_1878, "or_ln161_6_reg_1878");
    sc_trace(mVcdFile, or_ln161_7_fu_1232_p2, "or_ln161_7_fu_1232_p2");
    sc_trace(mVcdFile, or_ln161_7_reg_1888, "or_ln161_7_reg_1888");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, or_ln161_8_fu_1242_p2, "or_ln161_8_fu_1242_p2");
    sc_trace(mVcdFile, or_ln161_8_reg_1898, "or_ln161_8_reg_1898");
    sc_trace(mVcdFile, add_ln161_2_fu_1252_p2, "add_ln161_2_fu_1252_p2");
    sc_trace(mVcdFile, add_ln161_2_reg_1908, "add_ln161_2_reg_1908");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, icmp_ln161_3_fu_1274_p2, "icmp_ln161_3_fu_1274_p2");
    sc_trace(mVcdFile, empty_37_fu_1285_p1, "empty_37_fu_1285_p1");
    sc_trace(mVcdFile, empty_37_reg_1921, "empty_37_reg_1921");
    sc_trace(mVcdFile, or_ln161_9_fu_1289_p2, "or_ln161_9_fu_1289_p2");
    sc_trace(mVcdFile, or_ln161_9_reg_1927, "or_ln161_9_reg_1927");
    sc_trace(mVcdFile, or_ln161_10_fu_1323_p2, "or_ln161_10_fu_1323_p2");
    sc_trace(mVcdFile, or_ln161_10_reg_1937, "or_ln161_10_reg_1937");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, or_ln161_11_fu_1333_p2, "or_ln161_11_fu_1333_p2");
    sc_trace(mVcdFile, or_ln161_11_reg_1947, "or_ln161_11_reg_1947");
    sc_trace(mVcdFile, add_ln161_3_fu_1343_p2, "add_ln161_3_fu_1343_p2");
    sc_trace(mVcdFile, add_ln161_3_reg_1957, "add_ln161_3_reg_1957");
    sc_trace(mVcdFile, i_fu_1371_p2, "i_fu_1371_p2");
    sc_trace(mVcdFile, i_reg_1965, "i_reg_1965");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, icmp_ln170_fu_1365_p2, "icmp_ln170_fu_1365_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, grp_fu_1419_p2, "grp_fu_1419_p2");
    sc_trace(mVcdFile, urem_ln174_2_reg_2000, "urem_ln174_2_reg_2000");
    sc_trace(mVcdFile, grp_fu_1434_p2, "grp_fu_1434_p2");
    sc_trace(mVcdFile, urem_ln174_3_reg_2005, "urem_ln174_3_reg_2005");
    sc_trace(mVcdFile, key_load_reg_2010, "key_load_reg_2010");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, key_load_1_reg_2015, "key_load_1_reg_2015");
    sc_trace(mVcdFile, P_addr_35_reg_2030, "P_addr_35_reg_2030");
    sc_trace(mVcdFile, add_ln194_fu_1523_p2, "add_ln194_fu_1523_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, left_ret18_1_reg_2047, "left_ret18_1_reg_2047");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, right_ret19_1_reg_2053, "right_ret19_1_reg_2053");
    sc_trace(mVcdFile, add_ln194_1_fu_1567_p2, "add_ln194_1_fu_1567_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, add_ln194_2_fu_1609_p2, "add_ln194_2_fu_1609_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, add_ln194_3_fu_1657_p2, "add_ln194_3_fu_1657_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_ap_start, "grp_Encrypt_SetKey_fu_986_ap_start");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_ap_idle, "grp_Encrypt_SetKey_fu_986_ap_idle");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_left_read, "grp_Encrypt_SetKey_fu_986_left_read");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_right_read, "grp_Encrypt_SetKey_fu_986_right_read");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_P_address0, "grp_Encrypt_SetKey_fu_986_P_address0");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_P_ce0, "grp_Encrypt_SetKey_fu_986_P_ce0");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_P_address1, "grp_Encrypt_SetKey_fu_986_P_address1");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_P_ce1, "grp_Encrypt_SetKey_fu_986_P_ce1");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_S_address0, "grp_Encrypt_SetKey_fu_986_S_address0");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_S_ce0, "grp_Encrypt_SetKey_fu_986_S_ce0");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_S_address1, "grp_Encrypt_SetKey_fu_986_S_address1");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_S_ce1, "grp_Encrypt_SetKey_fu_986_S_ce1");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_ap_return_0, "grp_Encrypt_SetKey_fu_986_ap_return_0");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_ap_return_1, "grp_Encrypt_SetKey_fu_986_ap_return_1");
    sc_trace(mVcdFile, j_0_0_0_reg_793, "j_0_0_0_reg_793");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, j_0_1_0_reg_804, "j_0_1_0_reg_804");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, j_0_2_0_reg_816, "j_0_2_0_reg_816");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, j_0_3_0_reg_828, "j_0_3_0_reg_828");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, i2_0_reg_840, "i2_0_reg_840");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, right_2_0_reg_852, "right_2_0_reg_852");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, left_2_0_reg_862, "left_2_0_reg_862");
    sc_trace(mVcdFile, j6_0_0_reg_872, "j6_0_0_reg_872");
    sc_trace(mVcdFile, right_2_1_reg_884, "right_2_1_reg_884");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, tmp_1_fu_1495_p3, "tmp_1_fu_1495_p3");
    sc_trace(mVcdFile, left_2_1_reg_895, "left_2_1_reg_895");
    sc_trace(mVcdFile, j6_0_1_reg_906, "j6_0_1_reg_906");
    sc_trace(mVcdFile, right_2_2_reg_918, "right_2_2_reg_918");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, tmp_2_fu_1529_p3, "tmp_2_fu_1529_p3");
    sc_trace(mVcdFile, left_2_2_reg_929, "left_2_2_reg_929");
    sc_trace(mVcdFile, j6_0_2_reg_940, "j6_0_2_reg_940");
    sc_trace(mVcdFile, right_2_3_reg_952, "right_2_3_reg_952");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, tmp_23_fu_1573_p3, "tmp_23_fu_1573_p3");
    sc_trace(mVcdFile, left_2_3_reg_963, "left_2_3_reg_963");
    sc_trace(mVcdFile, j6_0_3_reg_974, "j6_0_3_reg_974");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_986_ap_start_reg, "grp_Encrypt_SetKey_fu_986_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, tmp_24_fu_1615_p3, "tmp_24_fu_1615_p3");
    sc_trace(mVcdFile, zext_ln162_4_fu_1104_p1, "zext_ln162_4_fu_1104_p1");
    sc_trace(mVcdFile, zext_ln162_5_fu_1119_p1, "zext_ln162_5_fu_1119_p1");
    sc_trace(mVcdFile, zext_ln162_17_fu_1134_p1, "zext_ln162_17_fu_1134_p1");
    sc_trace(mVcdFile, tmp_3_fu_1139_p3, "tmp_3_fu_1139_p3");
    sc_trace(mVcdFile, zext_ln162_6_fu_1152_p1, "zext_ln162_6_fu_1152_p1");
    sc_trace(mVcdFile, zext_ln162_7_fu_1162_p1, "zext_ln162_7_fu_1162_p1");
    sc_trace(mVcdFile, tmp_4_fu_1173_p3, "tmp_4_fu_1173_p3");
    sc_trace(mVcdFile, tmp_5_fu_1181_p3, "tmp_5_fu_1181_p3");
    sc_trace(mVcdFile, zext_ln162_8_fu_1195_p1, "zext_ln162_8_fu_1195_p1");
    sc_trace(mVcdFile, zext_ln162_9_fu_1210_p1, "zext_ln162_9_fu_1210_p1");
    sc_trace(mVcdFile, tmp_6_fu_1215_p3, "tmp_6_fu_1215_p3");
    sc_trace(mVcdFile, tmp_7_fu_1224_p3, "tmp_7_fu_1224_p3");
    sc_trace(mVcdFile, zext_ln162_10_fu_1237_p1, "zext_ln162_10_fu_1237_p1");
    sc_trace(mVcdFile, zext_ln162_11_fu_1247_p1, "zext_ln162_11_fu_1247_p1");
    sc_trace(mVcdFile, tmp_8_fu_1258_p3, "tmp_8_fu_1258_p3");
    sc_trace(mVcdFile, tmp_9_fu_1266_p3, "tmp_9_fu_1266_p3");
    sc_trace(mVcdFile, zext_ln162_12_fu_1280_p1, "zext_ln162_12_fu_1280_p1");
    sc_trace(mVcdFile, zext_ln162_13_fu_1295_p1, "zext_ln162_13_fu_1295_p1");
    sc_trace(mVcdFile, zext_ln162_19_fu_1310_p1, "zext_ln162_19_fu_1310_p1");
    sc_trace(mVcdFile, tmp_10_fu_1315_p3, "tmp_10_fu_1315_p3");
    sc_trace(mVcdFile, zext_ln162_14_fu_1328_p1, "zext_ln162_14_fu_1328_p1");
    sc_trace(mVcdFile, zext_ln162_15_fu_1338_p1, "zext_ln162_15_fu_1338_p1");
    sc_trace(mVcdFile, tmp_11_fu_1349_p3, "tmp_11_fu_1349_p3");
    sc_trace(mVcdFile, tmp_12_fu_1357_p3, "tmp_12_fu_1357_p3");
    sc_trace(mVcdFile, zext_ln175_fu_1443_p1, "zext_ln175_fu_1443_p1");
    sc_trace(mVcdFile, zext_ln175_1_fu_1452_p1, "zext_ln175_1_fu_1452_p1");
    sc_trace(mVcdFile, zext_ln175_2_fu_1460_p1, "zext_ln175_2_fu_1460_p1");
    sc_trace(mVcdFile, zext_ln175_3_fu_1468_p1, "zext_ln175_3_fu_1468_p1");
    sc_trace(mVcdFile, zext_ln177_fu_1473_p1, "zext_ln177_fu_1473_p1");
    sc_trace(mVcdFile, zext_ln196_fu_1503_p1, "zext_ln196_fu_1503_p1");
    sc_trace(mVcdFile, zext_ln197_fu_1518_p1, "zext_ln197_fu_1518_p1");
    sc_trace(mVcdFile, zext_ln196_1_fu_1543_p1, "zext_ln196_1_fu_1543_p1");
    sc_trace(mVcdFile, tmp_13_fu_1558_p3, "tmp_13_fu_1558_p3");
    sc_trace(mVcdFile, tmp_14_fu_1581_p3, "tmp_14_fu_1581_p3");
    sc_trace(mVcdFile, tmp_21_fu_1600_p3, "tmp_21_fu_1600_p3");
    sc_trace(mVcdFile, zext_ln196_2_fu_1633_p1, "zext_ln196_2_fu_1633_p1");
    sc_trace(mVcdFile, tmp_22_fu_1648_p3, "tmp_22_fu_1648_p3");
    sc_trace(mVcdFile, xor_ln177_fu_1488_p2, "xor_ln177_fu_1488_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, or_ln161_fu_1061_p2, "or_ln161_fu_1061_p2");
    sc_trace(mVcdFile, or_ln161_1_fu_1078_p2, "or_ln161_1_fu_1078_p2");
    sc_trace(mVcdFile, or_ln161_2_fu_1088_p2, "or_ln161_2_fu_1088_p2");
    sc_trace(mVcdFile, zext_ln162_16_fu_1124_p1, "zext_ln162_16_fu_1124_p1");
    sc_trace(mVcdFile, add_ln162_fu_1128_p2, "add_ln162_fu_1128_p2");
    sc_trace(mVcdFile, zext_ln162_18_fu_1300_p1, "zext_ln162_18_fu_1300_p1");
    sc_trace(mVcdFile, add_ln162_1_fu_1304_p2, "add_ln162_1_fu_1304_p2");
    sc_trace(mVcdFile, shl_ln_fu_1377_p3, "shl_ln_fu_1377_p3");
    sc_trace(mVcdFile, grp_fu_1389_p0, "grp_fu_1389_p0");
    sc_trace(mVcdFile, or_ln174_fu_1394_p2, "or_ln174_fu_1394_p2");
    sc_trace(mVcdFile, grp_fu_1404_p0, "grp_fu_1404_p0");
    sc_trace(mVcdFile, or_ln174_1_fu_1409_p2, "or_ln174_1_fu_1409_p2");
    sc_trace(mVcdFile, grp_fu_1419_p0, "grp_fu_1419_p0");
    sc_trace(mVcdFile, or_ln174_2_fu_1424_p2, "or_ln174_2_fu_1424_p2");
    sc_trace(mVcdFile, grp_fu_1434_p0, "grp_fu_1434_p0");
    sc_trace(mVcdFile, grp_fu_1389_p2, "grp_fu_1389_p2");
    sc_trace(mVcdFile, trunc_ln174_fu_1439_p1, "trunc_ln174_fu_1439_p1");
    sc_trace(mVcdFile, grp_fu_1404_p2, "grp_fu_1404_p2");
    sc_trace(mVcdFile, trunc_ln174_1_fu_1448_p1, "trunc_ln174_1_fu_1448_p1");
    sc_trace(mVcdFile, trunc_ln174_2_fu_1457_p1, "trunc_ln174_2_fu_1457_p1");
    sc_trace(mVcdFile, trunc_ln174_3_fu_1465_p1, "trunc_ln174_3_fu_1465_p1");
    sc_trace(mVcdFile, data_3_fu_1478_p5, "data_3_fu_1478_p5");
    sc_trace(mVcdFile, trunc_ln194_fu_1508_p1, "trunc_ln194_fu_1508_p1");
    sc_trace(mVcdFile, or_ln197_fu_1512_p2, "or_ln197_fu_1512_p2");
    sc_trace(mVcdFile, xor_ln196_fu_1537_p2, "xor_ln196_fu_1537_p2");
    sc_trace(mVcdFile, trunc_ln194_1_fu_1548_p1, "trunc_ln194_1_fu_1548_p1");
    sc_trace(mVcdFile, or_ln197_1_fu_1552_p2, "or_ln197_1_fu_1552_p2");
    sc_trace(mVcdFile, trunc_ln194_2_fu_1590_p1, "trunc_ln194_2_fu_1590_p1");
    sc_trace(mVcdFile, or_ln197_2_fu_1594_p2, "or_ln197_2_fu_1594_p2");
    sc_trace(mVcdFile, xor_ln196_1_fu_1623_p2, "xor_ln196_1_fu_1623_p2");
    sc_trace(mVcdFile, sext_ln196_fu_1629_p1, "sext_ln196_fu_1629_p1");
    sc_trace(mVcdFile, trunc_ln194_3_fu_1638_p1, "trunc_ln194_3_fu_1638_p1");
    sc_trace(mVcdFile, or_ln197_3_fu_1642_p2, "or_ln197_3_fu_1642_p2");
    sc_trace(mVcdFile, grp_fu_1389_ap_start, "grp_fu_1389_ap_start");
    sc_trace(mVcdFile, grp_fu_1389_ap_done, "grp_fu_1389_ap_done");
    sc_trace(mVcdFile, grp_fu_1404_ap_start, "grp_fu_1404_ap_start");
    sc_trace(mVcdFile, grp_fu_1404_ap_done, "grp_fu_1404_ap_done");
    sc_trace(mVcdFile, grp_fu_1419_ap_start, "grp_fu_1419_ap_start");
    sc_trace(mVcdFile, grp_fu_1419_ap_done, "grp_fu_1419_ap_done");
    sc_trace(mVcdFile, grp_fu_1434_ap_start, "grp_fu_1434_ap_start");
    sc_trace(mVcdFile, grp_fu_1434_ap_done, "grp_fu_1434_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_1389_p00, "grp_fu_1389_p00");
    sc_trace(mVcdFile, grp_fu_1404_p00, "grp_fu_1404_p00");
    sc_trace(mVcdFile, grp_fu_1419_p00, "grp_fu_1419_p00");
    sc_trace(mVcdFile, grp_fu_1434_p00, "grp_fu_1434_p00");
#endif

    }
    mHdltvinHandle.open("Blowfish_SetKey.hdltvin.dat");
    mHdltvoutHandle.open("Blowfish_SetKey.hdltvout.dat");
}

Blowfish_SetKey::~Blowfish_SetKey() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete initial_sbox_0_U;
    delete initial_sbox_1_U;
    delete initial_sbox_2_U;
    delete initial_sbox_3_U;
    delete grp_Encrypt_SetKey_fu_986;
    delete Blowfish_SetKey_ufYi_U7;
    delete Blowfish_SetKey_ufYi_U8;
    delete Blowfish_SetKey_ufYi_U9;
    delete Blowfish_SetKey_ufYi_U10;
}

void Blowfish_SetKey::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Blowfish_SetKey::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_Encrypt_SetKey_fu_986_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
              esl_seteq<1,1,1>(icmp_ln170_fu_1365_p2.read(), ap_const_lv1_1)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_1495_p3.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_1529_p3.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_fu_1573_p3.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, tmp_24_fu_1615_p3.read())))) {
            grp_Encrypt_SetKey_fu_986_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_Encrypt_SetKey_fu_986_ap_ready.read())) {
            grp_Encrypt_SetKey_fu_986_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(icmp_ln161_3_fu_1274_p2.read(), ap_const_lv1_1))) {
        i2_0_reg_840 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        i2_0_reg_840 = i_reg_1965.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        j6_0_0_reg_872 = add_ln194_fu_1523_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        j6_0_0_reg_872 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        j6_0_1_reg_906 = add_ln194_1_fu_1567_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_1495_p3.read()))) {
        j6_0_1_reg_906 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        j6_0_2_reg_940 = add_ln194_2_fu_1609_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_1529_p3.read()))) {
        j6_0_2_reg_940 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        j6_0_3_reg_974 = add_ln194_3_fu_1657_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_1573_p3.read()))) {
        j6_0_3_reg_974 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        j_0_0_0_reg_793 = add_ln161_reg_1790.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_0_0_0_reg_793 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        j_0_1_0_reg_804 = add_ln161_1_reg_1859.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(icmp_ln161_fu_1046_p2.read(), ap_const_lv1_1))) {
        j_0_1_0_reg_804 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        j_0_2_0_reg_816 = add_ln161_2_reg_1908.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(icmp_ln161_1_fu_1098_p2.read(), ap_const_lv1_1))) {
        j_0_2_0_reg_816 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        j_0_3_0_reg_828 = add_ln161_3_reg_1957.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                esl_seteq<1,1,1>(icmp_ln161_2_fu_1189_p2.read(), ap_const_lv1_1))) {
        j_0_3_0_reg_828 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        left_2_0_reg_862 = reg_1032.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        left_2_0_reg_862 = reg_1014.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        left_2_1_reg_895 = left_ret18_1_reg_2047.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_1495_p3.read()))) {
        left_2_1_reg_895 = left_2_0_reg_862.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        left_2_2_reg_929 = reg_1014.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_1529_p3.read()))) {
        left_2_2_reg_929 = left_2_1_reg_895.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        left_2_3_reg_963 = reg_1032.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_1573_p3.read()))) {
        left_2_3_reg_963 = left_2_2_reg_929.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        right_2_0_reg_852 = reg_1039.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        right_2_0_reg_852 = reg_1023.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        right_2_1_reg_884 = right_ret19_1_reg_2053.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_1495_p3.read()))) {
        right_2_1_reg_884 = right_2_0_reg_852.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        right_2_2_reg_918 = reg_1023.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_1529_p3.read()))) {
        right_2_2_reg_918 = right_2_1_reg_884.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        right_2_3_reg_952 = reg_1039.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_1573_p3.read()))) {
        right_2_3_reg_952 = right_2_2_reg_918.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        P_addr_35_reg_2030 =  (sc_lv<5>) (zext_ln177_fu_1473_p1.read());
        key_load_1_reg_2015 = key_q1.read();
        key_load_reg_2010 = key_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        add_ln161_1_reg_1859 = add_ln161_1_fu_1167_p2.read();
        or_ln161_4_reg_1839 = or_ln161_4_fu_1147_p2.read();
        or_ln161_5_reg_1849 = or_ln161_5_fu_1157_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        add_ln161_2_reg_1908 = add_ln161_2_fu_1252_p2.read();
        or_ln161_7_reg_1888 = or_ln161_7_fu_1232_p2.read();
        or_ln161_8_reg_1898 = or_ln161_8_fu_1242_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        add_ln161_3_reg_1957 = add_ln161_3_fu_1343_p2.read();
        or_ln161_10_reg_1937 = or_ln161_10_fu_1323_p2.read();
        or_ln161_11_reg_1947 = or_ln161_11_fu_1333_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln161_fu_1046_p2.read(), ap_const_lv1_0))) {
        add_ln161_reg_1790 = add_ln161_fu_1072_p2.read();
        empty_28_reg_1774 = empty_28_fu_1057_p1.read();
        zext_ln162_1_reg_1780 = zext_ln162_1_fu_1067_p1.read();
        zext_ln162_reg_1764 = zext_ln162_fu_1052_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_1_fu_1098_p2.read()))) {
        empty_31_reg_1823 = empty_31_fu_1109_p1.read();
        or_ln161_3_reg_1829 = or_ln161_3_fu_1113_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_2_fu_1189_p2.read()))) {
        empty_34_reg_1872 = empty_34_fu_1200_p1.read();
        or_ln161_6_reg_1878 = or_ln161_6_fu_1204_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln161_3_fu_1274_p2.read()))) {
        empty_37_reg_1921 = empty_37_fu_1285_p1.read();
        or_ln161_9_reg_1927 = or_ln161_9_fu_1289_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        i_reg_1965 = i_fu_1371_p2.read();
    }
    if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        left_ret18_1_reg_2047 = grp_Encrypt_SetKey_fu_986_ap_return_0.read();
        right_ret19_1_reg_2053 = grp_Encrypt_SetKey_fu_986_ap_return_1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
  esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read())) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())))) {
        reg_1014 = grp_Encrypt_SetKey_fu_986_ap_return_0.read();
        reg_1023 = grp_Encrypt_SetKey_fu_986_ap_return_1.read();
    }
    if (((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())))) {
        reg_1032 = grp_Encrypt_SetKey_fu_986_ap_return_0.read();
        reg_1039 = grp_Encrypt_SetKey_fu_986_ap_return_1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        urem_ln174_2_reg_2000 = grp_fu_1419_p2.read();
        urem_ln174_3_reg_2005 = grp_fu_1434_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        zext_ln162_2_reg_1795 = zext_ln162_2_fu_1083_p1.read();
        zext_ln162_3_reg_1805 = zext_ln162_3_fu_1093_p1.read();
    }
}

void Blowfish_SetKey::thread_P_addr_18_reg_1668() {
    P_addr_18_reg_1668 =  (sc_lv<5>) (ap_const_lv64_1);
}

void Blowfish_SetKey::thread_P_addr_19_reg_1673() {
    P_addr_19_reg_1673 =  (sc_lv<5>) (ap_const_lv64_2);
}

void Blowfish_SetKey::thread_P_addr_20_reg_1678() {
    P_addr_20_reg_1678 =  (sc_lv<5>) (ap_const_lv64_3);
}

void Blowfish_SetKey::thread_P_addr_21_reg_1683() {
    P_addr_21_reg_1683 =  (sc_lv<5>) (ap_const_lv64_4);
}

void Blowfish_SetKey::thread_P_addr_22_reg_1688() {
    P_addr_22_reg_1688 =  (sc_lv<5>) (ap_const_lv64_5);
}

void Blowfish_SetKey::thread_P_addr_23_reg_1693() {
    P_addr_23_reg_1693 =  (sc_lv<5>) (ap_const_lv64_6);
}

void Blowfish_SetKey::thread_P_addr_24_reg_1698() {
    P_addr_24_reg_1698 =  (sc_lv<5>) (ap_const_lv64_7);
}

void Blowfish_SetKey::thread_P_addr_25_reg_1703() {
    P_addr_25_reg_1703 =  (sc_lv<5>) (ap_const_lv64_8);
}

void Blowfish_SetKey::thread_P_addr_26_reg_1708() {
    P_addr_26_reg_1708 =  (sc_lv<5>) (ap_const_lv64_9);
}

void Blowfish_SetKey::thread_P_addr_27_reg_1713() {
    P_addr_27_reg_1713 =  (sc_lv<5>) (ap_const_lv64_A);
}

void Blowfish_SetKey::thread_P_addr_28_reg_1718() {
    P_addr_28_reg_1718 =  (sc_lv<5>) (ap_const_lv64_B);
}

void Blowfish_SetKey::thread_P_addr_29_reg_1723() {
    P_addr_29_reg_1723 =  (sc_lv<5>) (ap_const_lv64_C);
}

void Blowfish_SetKey::thread_P_addr_30_reg_1728() {
    P_addr_30_reg_1728 =  (sc_lv<5>) (ap_const_lv64_D);
}

void Blowfish_SetKey::thread_P_addr_31_reg_1733() {
    P_addr_31_reg_1733 =  (sc_lv<5>) (ap_const_lv64_E);
}

void Blowfish_SetKey::thread_P_addr_32_reg_1738() {
    P_addr_32_reg_1738 =  (sc_lv<5>) (ap_const_lv64_F);
}

void Blowfish_SetKey::thread_P_addr_33_reg_1751() {
    P_addr_33_reg_1751 =  (sc_lv<5>) (ap_const_lv64_10);
}

void Blowfish_SetKey::thread_P_addr_34_reg_1756() {
    P_addr_34_reg_1756 =  (sc_lv<5>) (ap_const_lv64_11);
}

void Blowfish_SetKey::thread_P_addr_reg_1663() {
    P_addr_reg_1663 =  (sc_lv<5>) (ap_const_lv64_0);
}

void Blowfish_SetKey::thread_P_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        P_address0 = P_addr_33_reg_1751.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        P_address0 = P_addr_31_reg_1733.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        P_address0 = P_addr_29_reg_1723.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        P_address0 = P_addr_27_reg_1713.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        P_address0 = P_addr_25_reg_1703.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        P_address0 = P_addr_23_reg_1693.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        P_address0 = P_addr_21_reg_1683.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        P_address0 = P_addr_19_reg_1673.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        P_address0 = P_addr_reg_1663.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        P_address0 =  (sc_lv<5>) (zext_ln177_fu_1473_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        P_address0 =  (sc_lv<5>) (ap_const_lv64_10);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        P_address0 =  (sc_lv<5>) (ap_const_lv64_E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        P_address0 =  (sc_lv<5>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        P_address0 =  (sc_lv<5>) (ap_const_lv64_A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        P_address0 =  (sc_lv<5>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        P_address0 =  (sc_lv<5>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        P_address0 =  (sc_lv<5>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        P_address0 =  (sc_lv<5>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        P_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        P_address0 = grp_Encrypt_SetKey_fu_986_P_address0.read();
    } else {
        P_address0 = "XXXXX";
    }
}

void Blowfish_SetKey::thread_P_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        P_address1 = P_addr_34_reg_1756.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        P_address1 = P_addr_32_reg_1738.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        P_address1 = P_addr_30_reg_1728.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        P_address1 = P_addr_28_reg_1718.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        P_address1 = P_addr_26_reg_1708.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        P_address1 = P_addr_24_reg_1698.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        P_address1 = P_addr_22_reg_1688.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        P_address1 = P_addr_20_reg_1678.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        P_address1 = P_addr_18_reg_1668.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        P_address1 = P_addr_35_reg_2030.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        P_address1 =  (sc_lv<5>) (ap_const_lv64_11);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        P_address1 =  (sc_lv<5>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        P_address1 =  (sc_lv<5>) (ap_const_lv64_D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        P_address1 =  (sc_lv<5>) (ap_const_lv64_B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        P_address1 =  (sc_lv<5>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        P_address1 =  (sc_lv<5>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        P_address1 =  (sc_lv<5>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        P_address1 =  (sc_lv<5>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        P_address1 =  (sc_lv<5>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        P_address1 = grp_Encrypt_SetKey_fu_986_P_address1.read();
    } else {
        P_address1 = "XXXXX";
    }
}

void Blowfish_SetKey::thread_P_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        P_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        P_ce0 = grp_Encrypt_SetKey_fu_986_P_ce0.read();
    } else {
        P_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_P_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        P_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        P_ce1 = grp_Encrypt_SetKey_fu_986_P_ce1.read();
    } else {
        P_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_P_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        P_d0 = reg_1014.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        P_d0 = ap_const_lv32_9216D5D9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        P_d0 = ap_const_lv32_3F84D5B5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        P_d0 = ap_const_lv32_C0AC29B7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        P_d0 = ap_const_lv32_BE5466CF;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        P_d0 = ap_const_lv32_452821E6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        P_d0 = ap_const_lv32_82EFA98;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        P_d0 = ap_const_lv32_A4093822;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        P_d0 = ap_const_lv32_13198A2E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        P_d0 = ap_const_lv32_243F6A88;
    } else {
        P_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Blowfish_SetKey::thread_P_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        P_d1 = reg_1023.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        P_d1 = xor_ln177_fu_1488_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        P_d1 = ap_const_lv32_8979FB1B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        P_d1 = ap_const_lv32_B5470917;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        P_d1 = ap_const_lv32_C97C50DD;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        P_d1 = ap_const_lv32_34E90C6C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        P_d1 = ap_const_lv32_38D01377;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        P_d1 = ap_const_lv32_EC4E6C89;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        P_d1 = ap_const_lv32_299F31D0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        P_d1 = ap_const_lv32_3707344;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        P_d1 = ap_const_lv32_85A308D3;
    } else {
        P_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Blowfish_SetKey::thread_P_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        P_we0 = ap_const_logic_1;
    } else {
        P_we0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_P_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        P_we1 = ap_const_logic_1;
    } else {
        P_we1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_S_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        S_address0 =  (sc_lv<10>) (zext_ln196_2_fu_1633_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        S_address0 =  (sc_lv<10>) (tmp_14_fu_1581_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        S_address0 =  (sc_lv<10>) (zext_ln196_1_fu_1543_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        S_address0 =  (sc_lv<10>) (zext_ln196_fu_1503_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        S_address0 =  (sc_lv<10>) (tmp_11_fu_1349_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        S_address0 =  (sc_lv<10>) (zext_ln162_19_fu_1310_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        S_address0 =  (sc_lv<10>) (tmp_8_fu_1258_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        S_address0 =  (sc_lv<10>) (tmp_6_fu_1215_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        S_address0 =  (sc_lv<10>) (tmp_4_fu_1173_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        S_address0 =  (sc_lv<10>) (zext_ln162_17_fu_1134_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        S_address0 =  (sc_lv<10>) (zext_ln162_2_reg_1795.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        S_address0 =  (sc_lv<10>) (zext_ln162_reg_1764.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        S_address0 = grp_Encrypt_SetKey_fu_986_S_address0.read();
    } else {
        S_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void Blowfish_SetKey::thread_S_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        S_address1 =  (sc_lv<10>) (tmp_22_fu_1648_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        S_address1 =  (sc_lv<10>) (tmp_21_fu_1600_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        S_address1 =  (sc_lv<10>) (tmp_13_fu_1558_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        S_address1 =  (sc_lv<10>) (zext_ln197_fu_1518_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        S_address1 =  (sc_lv<10>) (tmp_12_fu_1357_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        S_address1 =  (sc_lv<10>) (tmp_10_fu_1315_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        S_address1 =  (sc_lv<10>) (tmp_9_fu_1266_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        S_address1 =  (sc_lv<10>) (tmp_7_fu_1224_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        S_address1 =  (sc_lv<10>) (tmp_5_fu_1181_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        S_address1 =  (sc_lv<10>) (tmp_3_fu_1139_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        S_address1 =  (sc_lv<10>) (zext_ln162_3_reg_1805.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        S_address1 =  (sc_lv<10>) (zext_ln162_1_reg_1780.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        S_address1 = grp_Encrypt_SetKey_fu_986_S_address1.read();
    } else {
        S_address1 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void Blowfish_SetKey::thread_S_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        S_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        S_ce0 = grp_Encrypt_SetKey_fu_986_S_ce0.read();
    } else {
        S_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_S_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        S_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        S_ce1 = grp_Encrypt_SetKey_fu_986_S_ce1.read();
    } else {
        S_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_S_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        S_d0 = reg_1014.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        S_d0 = left_ret18_1_reg_2047.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()))) {
        S_d0 = reg_1032.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        S_d0 = initial_sbox_3_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        S_d0 = initial_sbox_2_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        S_d0 = initial_sbox_1_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        S_d0 = initial_sbox_0_q0.read();
    } else {
        S_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Blowfish_SetKey::thread_S_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        S_d1 = reg_1023.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read())) {
        S_d1 = right_ret19_1_reg_2053.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()))) {
        S_d1 = reg_1039.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        S_d1 = initial_sbox_3_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        S_d1 = initial_sbox_2_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        S_d1 = initial_sbox_1_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        S_d1 = initial_sbox_0_q1.read();
    } else {
        S_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Blowfish_SetKey::thread_S_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        S_we0 = ap_const_logic_1;
    } else {
        S_we0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_S_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        S_we1 = ap_const_logic_1;
    } else {
        S_we1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_add_ln161_1_fu_1167_p2() {
    add_ln161_1_fu_1167_p2 = (!ap_const_lv9_4.is_01() || !j_0_1_0_reg_804.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_4) + sc_biguint<9>(j_0_1_0_reg_804.read()));
}

void Blowfish_SetKey::thread_add_ln161_2_fu_1252_p2() {
    add_ln161_2_fu_1252_p2 = (!ap_const_lv9_4.is_01() || !j_0_2_0_reg_816.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_4) + sc_biguint<9>(j_0_2_0_reg_816.read()));
}

void Blowfish_SetKey::thread_add_ln161_3_fu_1343_p2() {
    add_ln161_3_fu_1343_p2 = (!ap_const_lv9_4.is_01() || !j_0_3_0_reg_828.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_4) + sc_biguint<9>(j_0_3_0_reg_828.read()));
}

void Blowfish_SetKey::thread_add_ln161_fu_1072_p2() {
    add_ln161_fu_1072_p2 = (!ap_const_lv9_4.is_01() || !j_0_0_0_reg_793.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_4) + sc_biguint<9>(j_0_0_0_reg_793.read()));
}

void Blowfish_SetKey::thread_add_ln162_1_fu_1304_p2() {
    add_ln162_1_fu_1304_p2 = (!ap_const_lv11_300.is_01() || !zext_ln162_18_fu_1300_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_300) + sc_biguint<11>(zext_ln162_18_fu_1300_p1.read()));
}

void Blowfish_SetKey::thread_add_ln162_fu_1128_p2() {
    add_ln162_fu_1128_p2 = (!ap_const_lv10_100.is_01() || !zext_ln162_16_fu_1124_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_100) + sc_biguint<10>(zext_ln162_16_fu_1124_p1.read()));
}

void Blowfish_SetKey::thread_add_ln194_1_fu_1567_p2() {
    add_ln194_1_fu_1567_p2 = (!ap_const_lv9_2.is_01() || !j6_0_1_reg_906.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_2) + sc_biguint<9>(j6_0_1_reg_906.read()));
}

void Blowfish_SetKey::thread_add_ln194_2_fu_1609_p2() {
    add_ln194_2_fu_1609_p2 = (!ap_const_lv9_2.is_01() || !j6_0_2_reg_940.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_2) + sc_biguint<9>(j6_0_2_reg_940.read()));
}

void Blowfish_SetKey::thread_add_ln194_3_fu_1657_p2() {
    add_ln194_3_fu_1657_p2 = (!ap_const_lv9_2.is_01() || !j6_0_3_reg_974.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_2) + sc_biguint<9>(j6_0_3_reg_974.read()));
}

void Blowfish_SetKey::thread_add_ln194_fu_1523_p2() {
    add_ln194_fu_1523_p2 = (!ap_const_lv9_2.is_01() || !j6_0_0_reg_872.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_2) + sc_biguint<9>(j6_0_0_reg_872.read()));
}

void Blowfish_SetKey::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[65];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[66];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[67];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[70];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[71];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Blowfish_SetKey::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Blowfish_SetKey::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_24_fu_1615_p3.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_24_fu_1615_p3.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_data_3_fu_1478_p5() {
    data_3_fu_1478_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(key_load_reg_2010.read(), key_load_1_reg_2015.read()), key_q0.read()), key_q1.read());
}

void Blowfish_SetKey::thread_empty_28_fu_1057_p1() {
    empty_28_fu_1057_p1 = j_0_0_0_reg_793.read().range(8-1, 0);
}

void Blowfish_SetKey::thread_empty_31_fu_1109_p1() {
    empty_31_fu_1109_p1 = j_0_1_0_reg_804.read().range(8-1, 0);
}

void Blowfish_SetKey::thread_empty_34_fu_1200_p1() {
    empty_34_fu_1200_p1 = j_0_2_0_reg_816.read().range(8-1, 0);
}

void Blowfish_SetKey::thread_empty_37_fu_1285_p1() {
    empty_37_fu_1285_p1 = j_0_3_0_reg_828.read().range(8-1, 0);
}

void Blowfish_SetKey::thread_grp_Encrypt_SetKey_fu_986_ap_start() {
    grp_Encrypt_SetKey_fu_986_ap_start = grp_Encrypt_SetKey_fu_986_ap_start_reg.read();
}

void Blowfish_SetKey::thread_grp_Encrypt_SetKey_fu_986_left_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        grp_Encrypt_SetKey_fu_986_left_read = left_2_3_reg_963.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        grp_Encrypt_SetKey_fu_986_left_read = left_2_2_reg_929.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        grp_Encrypt_SetKey_fu_986_left_read = left_2_1_reg_895.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        grp_Encrypt_SetKey_fu_986_left_read = left_2_0_reg_862.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
        grp_Encrypt_SetKey_fu_986_left_read = reg_1014.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_Encrypt_SetKey_fu_986_left_read = ap_const_lv32_0;
    } else {
        grp_Encrypt_SetKey_fu_986_left_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Blowfish_SetKey::thread_grp_Encrypt_SetKey_fu_986_right_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        grp_Encrypt_SetKey_fu_986_right_read = right_2_3_reg_952.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        grp_Encrypt_SetKey_fu_986_right_read = right_2_2_reg_918.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        grp_Encrypt_SetKey_fu_986_right_read = right_2_1_reg_884.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        grp_Encrypt_SetKey_fu_986_right_read = right_2_0_reg_852.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
        grp_Encrypt_SetKey_fu_986_right_read = reg_1023.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_Encrypt_SetKey_fu_986_right_read = ap_const_lv32_0;
    } else {
        grp_Encrypt_SetKey_fu_986_right_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Blowfish_SetKey::thread_grp_fu_1389_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln170_fu_1365_p2.read()))) {
        grp_fu_1389_ap_start = ap_const_logic_1;
    } else {
        grp_fu_1389_ap_start = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_grp_fu_1389_p0() {
    grp_fu_1389_p0 =  (sc_lv<7>) (grp_fu_1389_p00.read());
}

void Blowfish_SetKey::thread_grp_fu_1389_p00() {
    grp_fu_1389_p00 = esl_zext<64,7>(shl_ln_fu_1377_p3.read());
}

void Blowfish_SetKey::thread_grp_fu_1404_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln170_fu_1365_p2.read()))) {
        grp_fu_1404_ap_start = ap_const_logic_1;
    } else {
        grp_fu_1404_ap_start = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_grp_fu_1404_p0() {
    grp_fu_1404_p0 =  (sc_lv<7>) (grp_fu_1404_p00.read());
}

void Blowfish_SetKey::thread_grp_fu_1404_p00() {
    grp_fu_1404_p00 = esl_zext<64,7>(or_ln174_fu_1394_p2.read());
}

void Blowfish_SetKey::thread_grp_fu_1419_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln170_fu_1365_p2.read()))) {
        grp_fu_1419_ap_start = ap_const_logic_1;
    } else {
        grp_fu_1419_ap_start = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_grp_fu_1419_p0() {
    grp_fu_1419_p0 =  (sc_lv<7>) (grp_fu_1419_p00.read());
}

void Blowfish_SetKey::thread_grp_fu_1419_p00() {
    grp_fu_1419_p00 = esl_zext<64,7>(or_ln174_1_fu_1409_p2.read());
}

void Blowfish_SetKey::thread_grp_fu_1434_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln170_fu_1365_p2.read()))) {
        grp_fu_1434_ap_start = ap_const_logic_1;
    } else {
        grp_fu_1434_ap_start = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_grp_fu_1434_p0() {
    grp_fu_1434_p0 =  (sc_lv<7>) (grp_fu_1434_p00.read());
}

void Blowfish_SetKey::thread_grp_fu_1434_p00() {
    grp_fu_1434_p00 = esl_zext<64,7>(or_ln174_2_fu_1424_p2.read());
}

void Blowfish_SetKey::thread_i_fu_1371_p2() {
    i_fu_1371_p2 = (!i2_0_reg_840.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i2_0_reg_840.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Blowfish_SetKey::thread_icmp_ln161_1_fu_1098_p2() {
    icmp_ln161_1_fu_1098_p2 = (!j_0_1_0_reg_804.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(j_0_1_0_reg_804.read() == ap_const_lv9_100);
}

void Blowfish_SetKey::thread_icmp_ln161_2_fu_1189_p2() {
    icmp_ln161_2_fu_1189_p2 = (!j_0_2_0_reg_816.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(j_0_2_0_reg_816.read() == ap_const_lv9_100);
}

void Blowfish_SetKey::thread_icmp_ln161_3_fu_1274_p2() {
    icmp_ln161_3_fu_1274_p2 = (!j_0_3_0_reg_828.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(j_0_3_0_reg_828.read() == ap_const_lv9_100);
}

void Blowfish_SetKey::thread_icmp_ln161_fu_1046_p2() {
    icmp_ln161_fu_1046_p2 = (!j_0_0_0_reg_793.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(j_0_0_0_reg_793.read() == ap_const_lv9_100);
}

void Blowfish_SetKey::thread_icmp_ln170_fu_1365_p2() {
    icmp_ln170_fu_1365_p2 = (!i2_0_reg_840.read().is_01() || !ap_const_lv5_12.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_840.read() == ap_const_lv5_12);
}

void Blowfish_SetKey::thread_initial_sbox_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        initial_sbox_0_address0 =  (sc_lv<8>) (zext_ln162_2_fu_1083_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        initial_sbox_0_address0 =  (sc_lv<8>) (zext_ln162_fu_1052_p1.read());
    } else {
        initial_sbox_0_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Blowfish_SetKey::thread_initial_sbox_0_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        initial_sbox_0_address1 =  (sc_lv<8>) (zext_ln162_3_fu_1093_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        initial_sbox_0_address1 =  (sc_lv<8>) (zext_ln162_1_fu_1067_p1.read());
    } else {
        initial_sbox_0_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Blowfish_SetKey::thread_initial_sbox_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        initial_sbox_0_ce0 = ap_const_logic_1;
    } else {
        initial_sbox_0_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_initial_sbox_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        initial_sbox_0_ce1 = ap_const_logic_1;
    } else {
        initial_sbox_0_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_initial_sbox_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        initial_sbox_1_address0 =  (sc_lv<8>) (zext_ln162_6_fu_1152_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        initial_sbox_1_address0 =  (sc_lv<8>) (zext_ln162_4_fu_1104_p1.read());
    } else {
        initial_sbox_1_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Blowfish_SetKey::thread_initial_sbox_1_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        initial_sbox_1_address1 =  (sc_lv<8>) (zext_ln162_7_fu_1162_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        initial_sbox_1_address1 =  (sc_lv<8>) (zext_ln162_5_fu_1119_p1.read());
    } else {
        initial_sbox_1_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Blowfish_SetKey::thread_initial_sbox_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        initial_sbox_1_ce0 = ap_const_logic_1;
    } else {
        initial_sbox_1_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_initial_sbox_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        initial_sbox_1_ce1 = ap_const_logic_1;
    } else {
        initial_sbox_1_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_initial_sbox_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        initial_sbox_2_address0 =  (sc_lv<8>) (zext_ln162_10_fu_1237_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        initial_sbox_2_address0 =  (sc_lv<8>) (zext_ln162_8_fu_1195_p1.read());
    } else {
        initial_sbox_2_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Blowfish_SetKey::thread_initial_sbox_2_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        initial_sbox_2_address1 =  (sc_lv<8>) (zext_ln162_11_fu_1247_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        initial_sbox_2_address1 =  (sc_lv<8>) (zext_ln162_9_fu_1210_p1.read());
    } else {
        initial_sbox_2_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Blowfish_SetKey::thread_initial_sbox_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        initial_sbox_2_ce0 = ap_const_logic_1;
    } else {
        initial_sbox_2_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_initial_sbox_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        initial_sbox_2_ce1 = ap_const_logic_1;
    } else {
        initial_sbox_2_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_initial_sbox_3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        initial_sbox_3_address0 =  (sc_lv<8>) (zext_ln162_14_fu_1328_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        initial_sbox_3_address0 =  (sc_lv<8>) (zext_ln162_12_fu_1280_p1.read());
    } else {
        initial_sbox_3_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Blowfish_SetKey::thread_initial_sbox_3_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        initial_sbox_3_address1 =  (sc_lv<8>) (zext_ln162_15_fu_1338_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        initial_sbox_3_address1 =  (sc_lv<8>) (zext_ln162_13_fu_1295_p1.read());
    } else {
        initial_sbox_3_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Blowfish_SetKey::thread_initial_sbox_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        initial_sbox_3_ce0 = ap_const_logic_1;
    } else {
        initial_sbox_3_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_initial_sbox_3_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        initial_sbox_3_ce1 = ap_const_logic_1;
    } else {
        initial_sbox_3_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_key_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        key_address0 =  (sc_lv<6>) (zext_ln175_2_fu_1460_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        key_address0 =  (sc_lv<6>) (zext_ln175_fu_1443_p1.read());
    } else {
        key_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void Blowfish_SetKey::thread_key_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        key_address1 =  (sc_lv<6>) (zext_ln175_3_fu_1468_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        key_address1 =  (sc_lv<6>) (zext_ln175_1_fu_1452_p1.read());
    } else {
        key_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void Blowfish_SetKey::thread_key_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        key_ce0 = ap_const_logic_1;
    } else {
        key_ce0 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_key_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        key_ce1 = ap_const_logic_1;
    } else {
        key_ce1 = ap_const_logic_0;
    }
}

void Blowfish_SetKey::thread_or_ln161_10_fu_1323_p2() {
    or_ln161_10_fu_1323_p2 = (empty_37_reg_1921.read() | ap_const_lv8_2);
}

void Blowfish_SetKey::thread_or_ln161_11_fu_1333_p2() {
    or_ln161_11_fu_1333_p2 = (empty_37_reg_1921.read() | ap_const_lv8_3);
}

void Blowfish_SetKey::thread_or_ln161_1_fu_1078_p2() {
    or_ln161_1_fu_1078_p2 = (empty_28_reg_1774.read() | ap_const_lv8_2);
}

void Blowfish_SetKey::thread_or_ln161_2_fu_1088_p2() {
    or_ln161_2_fu_1088_p2 = (empty_28_reg_1774.read() | ap_const_lv8_3);
}

void Blowfish_SetKey::thread_or_ln161_3_fu_1113_p2() {
    or_ln161_3_fu_1113_p2 = (empty_31_fu_1109_p1.read() | ap_const_lv8_1);
}

void Blowfish_SetKey::thread_or_ln161_4_fu_1147_p2() {
    or_ln161_4_fu_1147_p2 = (empty_31_reg_1823.read() | ap_const_lv8_2);
}

void Blowfish_SetKey::thread_or_ln161_5_fu_1157_p2() {
    or_ln161_5_fu_1157_p2 = (empty_31_reg_1823.read() | ap_const_lv8_3);
}

void Blowfish_SetKey::thread_or_ln161_6_fu_1204_p2() {
    or_ln161_6_fu_1204_p2 = (empty_34_fu_1200_p1.read() | ap_const_lv8_1);
}

void Blowfish_SetKey::thread_or_ln161_7_fu_1232_p2() {
    or_ln161_7_fu_1232_p2 = (empty_34_reg_1872.read() | ap_const_lv8_2);
}

void Blowfish_SetKey::thread_or_ln161_8_fu_1242_p2() {
    or_ln161_8_fu_1242_p2 = (empty_34_reg_1872.read() | ap_const_lv8_3);
}

void Blowfish_SetKey::thread_or_ln161_9_fu_1289_p2() {
    or_ln161_9_fu_1289_p2 = (empty_37_fu_1285_p1.read() | ap_const_lv8_1);
}

void Blowfish_SetKey::thread_or_ln161_fu_1061_p2() {
    or_ln161_fu_1061_p2 = (empty_28_fu_1057_p1.read() | ap_const_lv8_1);
}

void Blowfish_SetKey::thread_or_ln174_1_fu_1409_p2() {
    or_ln174_1_fu_1409_p2 = (shl_ln_fu_1377_p3.read() | ap_const_lv7_2);
}

void Blowfish_SetKey::thread_or_ln174_2_fu_1424_p2() {
    or_ln174_2_fu_1424_p2 = (shl_ln_fu_1377_p3.read() | ap_const_lv7_3);
}

void Blowfish_SetKey::thread_or_ln174_fu_1394_p2() {
    or_ln174_fu_1394_p2 = (shl_ln_fu_1377_p3.read() | ap_const_lv7_1);
}

void Blowfish_SetKey::thread_or_ln197_1_fu_1552_p2() {
    or_ln197_1_fu_1552_p2 = (trunc_ln194_1_fu_1548_p1.read() | ap_const_lv8_1);
}

void Blowfish_SetKey::thread_or_ln197_2_fu_1594_p2() {
    or_ln197_2_fu_1594_p2 = (trunc_ln194_2_fu_1590_p1.read() | ap_const_lv8_1);
}

void Blowfish_SetKey::thread_or_ln197_3_fu_1642_p2() {
    or_ln197_3_fu_1642_p2 = (trunc_ln194_3_fu_1638_p1.read() | ap_const_lv8_1);
}

void Blowfish_SetKey::thread_or_ln197_fu_1512_p2() {
    or_ln197_fu_1512_p2 = (trunc_ln194_fu_1508_p1.read() | ap_const_lv8_1);
}

void Blowfish_SetKey::thread_sext_ln196_fu_1629_p1() {
    sext_ln196_fu_1629_p1 = esl_sext<10,9>(xor_ln196_1_fu_1623_p2.read());
}

void Blowfish_SetKey::thread_shl_ln_fu_1377_p3() {
    shl_ln_fu_1377_p3 = esl_concat<5,2>(i2_0_reg_840.read(), ap_const_lv2_0);
}

void Blowfish_SetKey::thread_tmp_10_fu_1315_p3() {
    tmp_10_fu_1315_p3 = esl_concat<56,8>(ap_const_lv56_3, or_ln161_9_reg_1927.read());
}

void Blowfish_SetKey::thread_tmp_11_fu_1349_p3() {
    tmp_11_fu_1349_p3 = esl_concat<56,8>(ap_const_lv56_3, or_ln161_10_reg_1937.read());
}

void Blowfish_SetKey::thread_tmp_12_fu_1357_p3() {
    tmp_12_fu_1357_p3 = esl_concat<56,8>(ap_const_lv56_3, or_ln161_11_reg_1947.read());
}

void Blowfish_SetKey::thread_tmp_13_fu_1558_p3() {
    tmp_13_fu_1558_p3 = esl_concat<56,8>(ap_const_lv56_1, or_ln197_1_fu_1552_p2.read());
}

void Blowfish_SetKey::thread_tmp_14_fu_1581_p3() {
    tmp_14_fu_1581_p3 = esl_concat<55,9>(ap_const_lv55_1, j6_0_2_reg_940.read());
}

void Blowfish_SetKey::thread_tmp_1_fu_1495_p3() {
    tmp_1_fu_1495_p3 = j6_0_0_reg_872.read().range(8, 8);
}

void Blowfish_SetKey::thread_tmp_21_fu_1600_p3() {
    tmp_21_fu_1600_p3 = esl_concat<56,8>(ap_const_lv56_2, or_ln197_2_fu_1594_p2.read());
}

void Blowfish_SetKey::thread_tmp_22_fu_1648_p3() {
    tmp_22_fu_1648_p3 = esl_concat<56,8>(ap_const_lv56_3, or_ln197_3_fu_1642_p2.read());
}

void Blowfish_SetKey::thread_tmp_23_fu_1573_p3() {
    tmp_23_fu_1573_p3 = j6_0_2_reg_940.read().range(8, 8);
}

void Blowfish_SetKey::thread_tmp_24_fu_1615_p3() {
    tmp_24_fu_1615_p3 = j6_0_3_reg_974.read().range(8, 8);
}

void Blowfish_SetKey::thread_tmp_2_fu_1529_p3() {
    tmp_2_fu_1529_p3 = j6_0_1_reg_906.read().range(8, 8);
}

void Blowfish_SetKey::thread_tmp_3_fu_1139_p3() {
    tmp_3_fu_1139_p3 = esl_concat<56,8>(ap_const_lv56_1, or_ln161_3_reg_1829.read());
}

void Blowfish_SetKey::thread_tmp_4_fu_1173_p3() {
    tmp_4_fu_1173_p3 = esl_concat<56,8>(ap_const_lv56_1, or_ln161_4_reg_1839.read());
}

void Blowfish_SetKey::thread_tmp_5_fu_1181_p3() {
    tmp_5_fu_1181_p3 = esl_concat<56,8>(ap_const_lv56_1, or_ln161_5_reg_1849.read());
}

void Blowfish_SetKey::thread_tmp_6_fu_1215_p3() {
    tmp_6_fu_1215_p3 = esl_concat<55,9>(ap_const_lv55_1, j_0_2_0_reg_816.read());
}

void Blowfish_SetKey::thread_tmp_7_fu_1224_p3() {
    tmp_7_fu_1224_p3 = esl_concat<56,8>(ap_const_lv56_2, or_ln161_6_reg_1878.read());
}

void Blowfish_SetKey::thread_tmp_8_fu_1258_p3() {
    tmp_8_fu_1258_p3 = esl_concat<56,8>(ap_const_lv56_2, or_ln161_7_reg_1888.read());
}

void Blowfish_SetKey::thread_tmp_9_fu_1266_p3() {
    tmp_9_fu_1266_p3 = esl_concat<56,8>(ap_const_lv56_2, or_ln161_8_reg_1898.read());
}

void Blowfish_SetKey::thread_trunc_ln174_1_fu_1448_p1() {
    trunc_ln174_1_fu_1448_p1 = grp_fu_1404_p2.read().range(32-1, 0);
}

void Blowfish_SetKey::thread_trunc_ln174_2_fu_1457_p1() {
    trunc_ln174_2_fu_1457_p1 = urem_ln174_2_reg_2000.read().range(32-1, 0);
}

void Blowfish_SetKey::thread_trunc_ln174_3_fu_1465_p1() {
    trunc_ln174_3_fu_1465_p1 = urem_ln174_3_reg_2005.read().range(32-1, 0);
}

void Blowfish_SetKey::thread_trunc_ln174_fu_1439_p1() {
    trunc_ln174_fu_1439_p1 = grp_fu_1389_p2.read().range(32-1, 0);
}

void Blowfish_SetKey::thread_trunc_ln194_1_fu_1548_p1() {
    trunc_ln194_1_fu_1548_p1 = j6_0_1_reg_906.read().range(8-1, 0);
}

void Blowfish_SetKey::thread_trunc_ln194_2_fu_1590_p1() {
    trunc_ln194_2_fu_1590_p1 = j6_0_2_reg_940.read().range(8-1, 0);
}

void Blowfish_SetKey::thread_trunc_ln194_3_fu_1638_p1() {
    trunc_ln194_3_fu_1638_p1 = j6_0_3_reg_974.read().range(8-1, 0);
}

void Blowfish_SetKey::thread_trunc_ln194_fu_1508_p1() {
    trunc_ln194_fu_1508_p1 = j6_0_0_reg_872.read().range(8-1, 0);
}

void Blowfish_SetKey::thread_xor_ln177_fu_1488_p2() {
    xor_ln177_fu_1488_p2 = (P_q0.read() ^ data_3_fu_1478_p5.read());
}

void Blowfish_SetKey::thread_xor_ln196_1_fu_1623_p2() {
    xor_ln196_1_fu_1623_p2 = (j6_0_3_reg_974.read() ^ ap_const_lv9_100);
}

void Blowfish_SetKey::thread_xor_ln196_fu_1537_p2() {
    xor_ln196_fu_1537_p2 = (j6_0_1_reg_906.read() ^ ap_const_lv9_100);
}

void Blowfish_SetKey::thread_zext_ln162_10_fu_1237_p1() {
    zext_ln162_10_fu_1237_p1 = esl_zext<64,8>(or_ln161_7_fu_1232_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_11_fu_1247_p1() {
    zext_ln162_11_fu_1247_p1 = esl_zext<64,8>(or_ln161_8_fu_1242_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_12_fu_1280_p1() {
    zext_ln162_12_fu_1280_p1 = esl_zext<64,9>(j_0_3_0_reg_828.read());
}

void Blowfish_SetKey::thread_zext_ln162_13_fu_1295_p1() {
    zext_ln162_13_fu_1295_p1 = esl_zext<64,8>(or_ln161_9_fu_1289_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_14_fu_1328_p1() {
    zext_ln162_14_fu_1328_p1 = esl_zext<64,8>(or_ln161_10_fu_1323_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_15_fu_1338_p1() {
    zext_ln162_15_fu_1338_p1 = esl_zext<64,8>(or_ln161_11_fu_1333_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_16_fu_1124_p1() {
    zext_ln162_16_fu_1124_p1 = esl_zext<10,9>(j_0_1_0_reg_804.read());
}

void Blowfish_SetKey::thread_zext_ln162_17_fu_1134_p1() {
    zext_ln162_17_fu_1134_p1 = esl_zext<64,10>(add_ln162_fu_1128_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_18_fu_1300_p1() {
    zext_ln162_18_fu_1300_p1 = esl_zext<11,9>(j_0_3_0_reg_828.read());
}

void Blowfish_SetKey::thread_zext_ln162_19_fu_1310_p1() {
    zext_ln162_19_fu_1310_p1 = esl_zext<64,11>(add_ln162_1_fu_1304_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_1_fu_1067_p1() {
    zext_ln162_1_fu_1067_p1 = esl_zext<64,8>(or_ln161_fu_1061_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_2_fu_1083_p1() {
    zext_ln162_2_fu_1083_p1 = esl_zext<64,8>(or_ln161_1_fu_1078_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_3_fu_1093_p1() {
    zext_ln162_3_fu_1093_p1 = esl_zext<64,8>(or_ln161_2_fu_1088_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_4_fu_1104_p1() {
    zext_ln162_4_fu_1104_p1 = esl_zext<64,9>(j_0_1_0_reg_804.read());
}

void Blowfish_SetKey::thread_zext_ln162_5_fu_1119_p1() {
    zext_ln162_5_fu_1119_p1 = esl_zext<64,8>(or_ln161_3_fu_1113_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_6_fu_1152_p1() {
    zext_ln162_6_fu_1152_p1 = esl_zext<64,8>(or_ln161_4_fu_1147_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_7_fu_1162_p1() {
    zext_ln162_7_fu_1162_p1 = esl_zext<64,8>(or_ln161_5_fu_1157_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_8_fu_1195_p1() {
    zext_ln162_8_fu_1195_p1 = esl_zext<64,9>(j_0_2_0_reg_816.read());
}

void Blowfish_SetKey::thread_zext_ln162_9_fu_1210_p1() {
    zext_ln162_9_fu_1210_p1 = esl_zext<64,8>(or_ln161_6_fu_1204_p2.read());
}

void Blowfish_SetKey::thread_zext_ln162_fu_1052_p1() {
    zext_ln162_fu_1052_p1 = esl_zext<64,9>(j_0_0_0_reg_793.read());
}

void Blowfish_SetKey::thread_zext_ln175_1_fu_1452_p1() {
    zext_ln175_1_fu_1452_p1 = esl_zext<64,32>(trunc_ln174_1_fu_1448_p1.read());
}

void Blowfish_SetKey::thread_zext_ln175_2_fu_1460_p1() {
    zext_ln175_2_fu_1460_p1 = esl_zext<64,32>(trunc_ln174_2_fu_1457_p1.read());
}

void Blowfish_SetKey::thread_zext_ln175_3_fu_1468_p1() {
    zext_ln175_3_fu_1468_p1 = esl_zext<64,32>(trunc_ln174_3_fu_1465_p1.read());
}

void Blowfish_SetKey::thread_zext_ln175_fu_1443_p1() {
    zext_ln175_fu_1443_p1 = esl_zext<64,32>(trunc_ln174_fu_1439_p1.read());
}

void Blowfish_SetKey::thread_zext_ln177_fu_1473_p1() {
    zext_ln177_fu_1473_p1 = esl_zext<64,5>(i2_0_reg_840.read());
}

void Blowfish_SetKey::thread_zext_ln196_1_fu_1543_p1() {
    zext_ln196_1_fu_1543_p1 = esl_zext<64,9>(xor_ln196_fu_1537_p2.read());
}

void Blowfish_SetKey::thread_zext_ln196_2_fu_1633_p1() {
    zext_ln196_2_fu_1633_p1 = esl_zext<64,10>(sext_ln196_fu_1629_p1.read());
}

void Blowfish_SetKey::thread_zext_ln196_fu_1503_p1() {
    zext_ln196_fu_1503_p1 = esl_zext<64,9>(j6_0_0_reg_872.read());
}

void Blowfish_SetKey::thread_zext_ln197_fu_1518_p1() {
    zext_ln197_fu_1518_p1 = esl_zext<64,8>(or_ln197_fu_1512_p2.read());
}

void Blowfish_SetKey::thread_ap_NS_fsm() {
    if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln161_fu_1046_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state13;
        } else {
            ap_NS_fsm = ap_ST_fsm_state11;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(icmp_ln161_1_fu_1098_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state16;
        } else {
            ap_NS_fsm = ap_ST_fsm_state14;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(icmp_ln161_2_fu_1189_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state19;
        } else {
            ap_NS_fsm = ap_ST_fsm_state17;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(icmp_ln161_3_fu_1274_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state22;
        } else {
            ap_NS_fsm = ap_ST_fsm_state20;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(icmp_ln170_fu_1365_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state35;
        } else {
            ap_NS_fsm = ap_ST_fsm_state23;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state36;
        } else {
            ap_NS_fsm = ap_ST_fsm_state35;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
            ap_NS_fsm = ap_ST_fsm_state39;
        } else {
            ap_NS_fsm = ap_ST_fsm_state38;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
            ap_NS_fsm = ap_ST_fsm_state42;
        } else {
            ap_NS_fsm = ap_ST_fsm_state41;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
            ap_NS_fsm = ap_ST_fsm_state45;
        } else {
            ap_NS_fsm = ap_ST_fsm_state44;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
            ap_NS_fsm = ap_ST_fsm_state48;
        } else {
            ap_NS_fsm = ap_ST_fsm_state47;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()))) {
            ap_NS_fsm = ap_ST_fsm_state51;
        } else {
            ap_NS_fsm = ap_ST_fsm_state50;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()))) {
            ap_NS_fsm = ap_ST_fsm_state54;
        } else {
            ap_NS_fsm = ap_ST_fsm_state53;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()))) {
            ap_NS_fsm = ap_ST_fsm_state57;
        } else {
            ap_NS_fsm = ap_ST_fsm_state56;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
            ap_NS_fsm = ap_ST_fsm_state60;
        } else {
            ap_NS_fsm = ap_ST_fsm_state59;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_1495_p3.read()))) {
            ap_NS_fsm = ap_ST_fsm_state64;
        } else {
            ap_NS_fsm = ap_ST_fsm_state62;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()))) {
            ap_NS_fsm = ap_ST_fsm_state63;
        } else {
            ap_NS_fsm = ap_ST_fsm_state62;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_1529_p3.read()))) {
            ap_NS_fsm = ap_ST_fsm_state67;
        } else {
            ap_NS_fsm = ap_ST_fsm_state65;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
            ap_NS_fsm = ap_ST_fsm_state66;
        } else {
            ap_NS_fsm = ap_ST_fsm_state65;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_23_fu_1573_p3.read()))) {
            ap_NS_fsm = ap_ST_fsm_state70;
        } else {
            ap_NS_fsm = ap_ST_fsm_state68;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()))) {
            ap_NS_fsm = ap_ST_fsm_state69;
        } else {
            ap_NS_fsm = ap_ST_fsm_state68;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_24_fu_1615_p3.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state71;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_986_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()))) {
            ap_NS_fsm = ap_ST_fsm_state72;
        } else {
            ap_NS_fsm = ap_ST_fsm_state71;
        }
    }
    else if (esl_seteq<1,72,72>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<72>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void Blowfish_SetKey::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"key_address0\" :  \"" << key_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"key_ce0\" :  \"" << key_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key_q0\" :  \"" << key_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"key_address1\" :  \"" << key_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"key_ce1\" :  \"" << key_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key_q1\" :  \"" << key_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key_size\" :  \"" << key_size.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_address0\" :  \"" << P_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_ce0\" :  \"" << P_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_we0\" :  \"" << P_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_d0\" :  \"" << P_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_q0\" :  \"" << P_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_address1\" :  \"" << P_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_ce1\" :  \"" << P_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_we1\" :  \"" << P_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"P_d1\" :  \"" << P_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"P_q1\" :  \"" << P_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_address0\" :  \"" << S_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_ce0\" :  \"" << S_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_we0\" :  \"" << S_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_d0\" :  \"" << S_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_q0\" :  \"" << S_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_address1\" :  \"" << S_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_ce1\" :  \"" << S_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_we1\" :  \"" << S_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"S_d1\" :  \"" << S_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"S_q1\" :  \"" << S_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

