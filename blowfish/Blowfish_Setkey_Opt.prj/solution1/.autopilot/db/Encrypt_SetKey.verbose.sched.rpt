

================================================================
== Vivado HLS Report for 'Encrypt_SetKey'
================================================================
* Date:           Wed Nov 20 20:44:18 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        Blowfish_Setkey_Opt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.005 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       49|       49| 0.490 us | 0.490 us |   49|   49|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 50
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.32>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%P_addr = getelementptr [18 x i32]* %P, i64 0, i64 0" [blowfish.cpp:57]   --->   Operation 51 'getelementptr' 'P_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [2/2] (2.32ns)   --->   "%P_load_2 = load i32* %P_addr, align 4" [blowfish.cpp:57]   --->   Operation 52 'load' 'P_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 2 <SV = 1> <Delay = 2.32>
ST_2 : Operation 53 [1/2] (2.32ns)   --->   "%P_load_2 = load i32* %P_addr, align 4" [blowfish.cpp:57]   --->   Operation 53 'load' 'P_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 3 <SV = 2> <Delay = 6.44>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%left_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %left_read)" [blowfish.cpp:48]   --->   Operation 54 'read' 'left_read_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.99ns)   --->   "%xor_ln57 = xor i32 %P_load_2, %left_read_1" [blowfish.cpp:57]   --->   Operation 55 'xor' 'xor_ln57' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [3/3] (5.45ns)   --->   "%tmp = call fastcc i32 @feistel(i32 %xor_ln57, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 56 'call' 'tmp' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 8.00>
ST_4 : Operation 57 [2/3] (8.00ns)   --->   "%tmp = call fastcc i32 @feistel(i32 %xor_ln57, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 57 'call' 'tmp' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%P_addr_1 = getelementptr [18 x i32]* %P, i64 0, i64 1" [blowfish.cpp:57]   --->   Operation 58 'getelementptr' 'P_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [2/2] (2.32ns)   --->   "%P_load_3 = load i32* %P_addr_1, align 4" [blowfish.cpp:57]   --->   Operation 59 'load' 'P_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 5 <SV = 4> <Delay = 6.79>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%right_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %right_read)" [blowfish.cpp:48]   --->   Operation 60 'read' 'right_read_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/3] (5.80ns)   --->   "%tmp = call fastcc i32 @feistel(i32 %xor_ln57, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 61 'call' 'tmp' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 62 [1/2] (2.32ns)   --->   "%P_load_3 = load i32* %P_addr_1, align 4" [blowfish.cpp:57]   --->   Operation 62 'load' 'P_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_5 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_1)   --->   "%xor_ln57_15 = xor i32 %tmp, %right_read_1" [blowfish.cpp:57]   --->   Operation 63 'xor' 'xor_ln57_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_1 = xor i32 %xor_ln57_15, %P_load_3" [blowfish.cpp:57]   --->   Operation 64 'xor' 'xor_ln57_1' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.45>
ST_6 : Operation 65 [3/3] (5.45ns)   --->   "%tmp_s = call fastcc i32 @feistel(i32 %xor_ln57_1, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 65 'call' 'tmp_s' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 8.00>
ST_7 : Operation 66 [2/3] (8.00ns)   --->   "%tmp_s = call fastcc i32 @feistel(i32 %xor_ln57_1, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 66 'call' 'tmp_s' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "%P_addr_2 = getelementptr [18 x i32]* %P, i64 0, i64 2" [blowfish.cpp:57]   --->   Operation 67 'getelementptr' 'P_addr_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 68 [2/2] (2.32ns)   --->   "%P_load_4 = load i32* %P_addr_2, align 4" [blowfish.cpp:57]   --->   Operation 68 'load' 'P_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 8 <SV = 7> <Delay = 6.79>
ST_8 : Operation 69 [1/3] (5.80ns)   --->   "%tmp_s = call fastcc i32 @feistel(i32 %xor_ln57_1, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 69 'call' 'tmp_s' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 70 [1/2] (2.32ns)   --->   "%P_load_4 = load i32* %P_addr_2, align 4" [blowfish.cpp:57]   --->   Operation 70 'load' 'P_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_8 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_2)   --->   "%xor_ln57_16 = xor i32 %xor_ln57, %tmp_s" [blowfish.cpp:57]   --->   Operation 71 'xor' 'xor_ln57_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 72 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_2 = xor i32 %xor_ln57_16, %P_load_4" [blowfish.cpp:57]   --->   Operation 72 'xor' 'xor_ln57_2' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 5.45>
ST_9 : Operation 73 [3/3] (5.45ns)   --->   "%tmp_1 = call fastcc i32 @feistel(i32 %xor_ln57_2, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 73 'call' 'tmp_1' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 8.00>
ST_10 : Operation 74 [2/3] (8.00ns)   --->   "%tmp_1 = call fastcc i32 @feistel(i32 %xor_ln57_2, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 74 'call' 'tmp_1' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%P_addr_3 = getelementptr [18 x i32]* %P, i64 0, i64 3" [blowfish.cpp:57]   --->   Operation 75 'getelementptr' 'P_addr_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 76 [2/2] (2.32ns)   --->   "%P_load_5 = load i32* %P_addr_3, align 4" [blowfish.cpp:57]   --->   Operation 76 'load' 'P_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 11 <SV = 10> <Delay = 6.79>
ST_11 : Operation 77 [1/3] (5.80ns)   --->   "%tmp_1 = call fastcc i32 @feistel(i32 %xor_ln57_2, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 77 'call' 'tmp_1' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 78 [1/2] (2.32ns)   --->   "%P_load_5 = load i32* %P_addr_3, align 4" [blowfish.cpp:57]   --->   Operation 78 'load' 'P_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_11 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_3)   --->   "%xor_ln57_17 = xor i32 %xor_ln57_1, %tmp_1" [blowfish.cpp:57]   --->   Operation 79 'xor' 'xor_ln57_17' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 80 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_3 = xor i32 %xor_ln57_17, %P_load_5" [blowfish.cpp:57]   --->   Operation 80 'xor' 'xor_ln57_3' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 5.45>
ST_12 : Operation 81 [3/3] (5.45ns)   --->   "%tmp_2 = call fastcc i32 @feistel(i32 %xor_ln57_3, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 81 'call' 'tmp_2' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 8.00>
ST_13 : Operation 82 [2/3] (8.00ns)   --->   "%tmp_2 = call fastcc i32 @feistel(i32 %xor_ln57_3, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 82 'call' 'tmp_2' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 83 [1/1] (0.00ns)   --->   "%P_addr_4 = getelementptr [18 x i32]* %P, i64 0, i64 4" [blowfish.cpp:57]   --->   Operation 83 'getelementptr' 'P_addr_4' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 84 [2/2] (2.32ns)   --->   "%P_load_6 = load i32* %P_addr_4, align 4" [blowfish.cpp:57]   --->   Operation 84 'load' 'P_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 14 <SV = 13> <Delay = 6.79>
ST_14 : Operation 85 [1/3] (5.80ns)   --->   "%tmp_2 = call fastcc i32 @feistel(i32 %xor_ln57_3, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 85 'call' 'tmp_2' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 86 [1/2] (2.32ns)   --->   "%P_load_6 = load i32* %P_addr_4, align 4" [blowfish.cpp:57]   --->   Operation 86 'load' 'P_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_14 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_4)   --->   "%xor_ln57_18 = xor i32 %xor_ln57_2, %tmp_2" [blowfish.cpp:57]   --->   Operation 87 'xor' 'xor_ln57_18' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 88 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_4 = xor i32 %xor_ln57_18, %P_load_6" [blowfish.cpp:57]   --->   Operation 88 'xor' 'xor_ln57_4' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 5.45>
ST_15 : Operation 89 [3/3] (5.45ns)   --->   "%tmp_3 = call fastcc i32 @feistel(i32 %xor_ln57_4, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 89 'call' 'tmp_3' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 8.00>
ST_16 : Operation 90 [2/3] (8.00ns)   --->   "%tmp_3 = call fastcc i32 @feistel(i32 %xor_ln57_4, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 90 'call' 'tmp_3' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 91 [1/1] (0.00ns)   --->   "%P_addr_5 = getelementptr [18 x i32]* %P, i64 0, i64 5" [blowfish.cpp:57]   --->   Operation 91 'getelementptr' 'P_addr_5' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 92 [2/2] (2.32ns)   --->   "%P_load_7 = load i32* %P_addr_5, align 4" [blowfish.cpp:57]   --->   Operation 92 'load' 'P_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 17 <SV = 16> <Delay = 6.79>
ST_17 : Operation 93 [1/3] (5.80ns)   --->   "%tmp_3 = call fastcc i32 @feistel(i32 %xor_ln57_4, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 93 'call' 'tmp_3' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 94 [1/2] (2.32ns)   --->   "%P_load_7 = load i32* %P_addr_5, align 4" [blowfish.cpp:57]   --->   Operation 94 'load' 'P_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_17 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_5)   --->   "%xor_ln57_19 = xor i32 %xor_ln57_3, %tmp_3" [blowfish.cpp:57]   --->   Operation 95 'xor' 'xor_ln57_19' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 96 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_5 = xor i32 %xor_ln57_19, %P_load_7" [blowfish.cpp:57]   --->   Operation 96 'xor' 'xor_ln57_5' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 5.45>
ST_18 : Operation 97 [3/3] (5.45ns)   --->   "%tmp_4 = call fastcc i32 @feistel(i32 %xor_ln57_5, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 97 'call' 'tmp_4' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 18> <Delay = 8.00>
ST_19 : Operation 98 [2/3] (8.00ns)   --->   "%tmp_4 = call fastcc i32 @feistel(i32 %xor_ln57_5, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 98 'call' 'tmp_4' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 99 [1/1] (0.00ns)   --->   "%P_addr_6 = getelementptr [18 x i32]* %P, i64 0, i64 6" [blowfish.cpp:57]   --->   Operation 99 'getelementptr' 'P_addr_6' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 100 [2/2] (2.32ns)   --->   "%P_load_8 = load i32* %P_addr_6, align 4" [blowfish.cpp:57]   --->   Operation 100 'load' 'P_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 20 <SV = 19> <Delay = 6.79>
ST_20 : Operation 101 [1/3] (5.80ns)   --->   "%tmp_4 = call fastcc i32 @feistel(i32 %xor_ln57_5, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 101 'call' 'tmp_4' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 102 [1/2] (2.32ns)   --->   "%P_load_8 = load i32* %P_addr_6, align 4" [blowfish.cpp:57]   --->   Operation 102 'load' 'P_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_20 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_6)   --->   "%xor_ln57_20 = xor i32 %xor_ln57_4, %tmp_4" [blowfish.cpp:57]   --->   Operation 103 'xor' 'xor_ln57_20' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 104 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_6 = xor i32 %xor_ln57_20, %P_load_8" [blowfish.cpp:57]   --->   Operation 104 'xor' 'xor_ln57_6' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 5.45>
ST_21 : Operation 105 [3/3] (5.45ns)   --->   "%tmp_5 = call fastcc i32 @feistel(i32 %xor_ln57_6, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 105 'call' 'tmp_5' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 8.00>
ST_22 : Operation 106 [2/3] (8.00ns)   --->   "%tmp_5 = call fastcc i32 @feistel(i32 %xor_ln57_6, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 106 'call' 'tmp_5' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 107 [1/1] (0.00ns)   --->   "%P_addr_7 = getelementptr [18 x i32]* %P, i64 0, i64 7" [blowfish.cpp:57]   --->   Operation 107 'getelementptr' 'P_addr_7' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 108 [2/2] (2.32ns)   --->   "%P_load_9 = load i32* %P_addr_7, align 4" [blowfish.cpp:57]   --->   Operation 108 'load' 'P_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 23 <SV = 22> <Delay = 6.79>
ST_23 : Operation 109 [1/3] (5.80ns)   --->   "%tmp_5 = call fastcc i32 @feistel(i32 %xor_ln57_6, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 109 'call' 'tmp_5' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_23 : Operation 110 [1/2] (2.32ns)   --->   "%P_load_9 = load i32* %P_addr_7, align 4" [blowfish.cpp:57]   --->   Operation 110 'load' 'P_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_23 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_7)   --->   "%xor_ln57_21 = xor i32 %xor_ln57_5, %tmp_5" [blowfish.cpp:57]   --->   Operation 111 'xor' 'xor_ln57_21' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 112 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_7 = xor i32 %xor_ln57_21, %P_load_9" [blowfish.cpp:57]   --->   Operation 112 'xor' 'xor_ln57_7' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 5.45>
ST_24 : Operation 113 [3/3] (5.45ns)   --->   "%tmp_6 = call fastcc i32 @feistel(i32 %xor_ln57_7, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 113 'call' 'tmp_6' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 24> <Delay = 8.00>
ST_25 : Operation 114 [2/3] (8.00ns)   --->   "%tmp_6 = call fastcc i32 @feistel(i32 %xor_ln57_7, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 114 'call' 'tmp_6' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_25 : Operation 115 [1/1] (0.00ns)   --->   "%P_addr_8 = getelementptr [18 x i32]* %P, i64 0, i64 8" [blowfish.cpp:57]   --->   Operation 115 'getelementptr' 'P_addr_8' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 116 [2/2] (2.32ns)   --->   "%P_load_10 = load i32* %P_addr_8, align 4" [blowfish.cpp:57]   --->   Operation 116 'load' 'P_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 26 <SV = 25> <Delay = 6.79>
ST_26 : Operation 117 [1/3] (5.80ns)   --->   "%tmp_6 = call fastcc i32 @feistel(i32 %xor_ln57_7, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 117 'call' 'tmp_6' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_26 : Operation 118 [1/2] (2.32ns)   --->   "%P_load_10 = load i32* %P_addr_8, align 4" [blowfish.cpp:57]   --->   Operation 118 'load' 'P_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_26 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_8)   --->   "%xor_ln57_22 = xor i32 %xor_ln57_6, %tmp_6" [blowfish.cpp:57]   --->   Operation 119 'xor' 'xor_ln57_22' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 120 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_8 = xor i32 %xor_ln57_22, %P_load_10" [blowfish.cpp:57]   --->   Operation 120 'xor' 'xor_ln57_8' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 5.45>
ST_27 : Operation 121 [3/3] (5.45ns)   --->   "%tmp_7 = call fastcc i32 @feistel(i32 %xor_ln57_8, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 121 'call' 'tmp_7' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 27> <Delay = 8.00>
ST_28 : Operation 122 [2/3] (8.00ns)   --->   "%tmp_7 = call fastcc i32 @feistel(i32 %xor_ln57_8, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 122 'call' 'tmp_7' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_28 : Operation 123 [1/1] (0.00ns)   --->   "%P_addr_9 = getelementptr [18 x i32]* %P, i64 0, i64 9" [blowfish.cpp:57]   --->   Operation 123 'getelementptr' 'P_addr_9' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 124 [2/2] (2.32ns)   --->   "%P_load_11 = load i32* %P_addr_9, align 4" [blowfish.cpp:57]   --->   Operation 124 'load' 'P_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 29 <SV = 28> <Delay = 6.79>
ST_29 : Operation 125 [1/3] (5.80ns)   --->   "%tmp_7 = call fastcc i32 @feistel(i32 %xor_ln57_8, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 125 'call' 'tmp_7' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_29 : Operation 126 [1/2] (2.32ns)   --->   "%P_load_11 = load i32* %P_addr_9, align 4" [blowfish.cpp:57]   --->   Operation 126 'load' 'P_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_29 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_9)   --->   "%xor_ln57_23 = xor i32 %xor_ln57_7, %tmp_7" [blowfish.cpp:57]   --->   Operation 127 'xor' 'xor_ln57_23' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 128 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_9 = xor i32 %xor_ln57_23, %P_load_11" [blowfish.cpp:57]   --->   Operation 128 'xor' 'xor_ln57_9' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 5.45>
ST_30 : Operation 129 [3/3] (5.45ns)   --->   "%tmp_8 = call fastcc i32 @feistel(i32 %xor_ln57_9, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 129 'call' 'tmp_8' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 31 <SV = 30> <Delay = 8.00>
ST_31 : Operation 130 [2/3] (8.00ns)   --->   "%tmp_8 = call fastcc i32 @feistel(i32 %xor_ln57_9, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 130 'call' 'tmp_8' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_31 : Operation 131 [1/1] (0.00ns)   --->   "%P_addr_10 = getelementptr [18 x i32]* %P, i64 0, i64 10" [blowfish.cpp:57]   --->   Operation 131 'getelementptr' 'P_addr_10' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 132 [2/2] (2.32ns)   --->   "%P_load_12 = load i32* %P_addr_10, align 4" [blowfish.cpp:57]   --->   Operation 132 'load' 'P_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 32 <SV = 31> <Delay = 6.79>
ST_32 : Operation 133 [1/3] (5.80ns)   --->   "%tmp_8 = call fastcc i32 @feistel(i32 %xor_ln57_9, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 133 'call' 'tmp_8' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_32 : Operation 134 [1/2] (2.32ns)   --->   "%P_load_12 = load i32* %P_addr_10, align 4" [blowfish.cpp:57]   --->   Operation 134 'load' 'P_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_32 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_10)   --->   "%xor_ln57_24 = xor i32 %xor_ln57_8, %tmp_8" [blowfish.cpp:57]   --->   Operation 135 'xor' 'xor_ln57_24' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 136 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_10 = xor i32 %xor_ln57_24, %P_load_12" [blowfish.cpp:57]   --->   Operation 136 'xor' 'xor_ln57_10' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 5.45>
ST_33 : Operation 137 [3/3] (5.45ns)   --->   "%tmp_9 = call fastcc i32 @feistel(i32 %xor_ln57_10, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 137 'call' 'tmp_9' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 34 <SV = 33> <Delay = 8.00>
ST_34 : Operation 138 [2/3] (8.00ns)   --->   "%tmp_9 = call fastcc i32 @feistel(i32 %xor_ln57_10, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 138 'call' 'tmp_9' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_34 : Operation 139 [1/1] (0.00ns)   --->   "%P_addr_11 = getelementptr [18 x i32]* %P, i64 0, i64 11" [blowfish.cpp:57]   --->   Operation 139 'getelementptr' 'P_addr_11' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 140 [2/2] (2.32ns)   --->   "%P_load_13 = load i32* %P_addr_11, align 4" [blowfish.cpp:57]   --->   Operation 140 'load' 'P_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 35 <SV = 34> <Delay = 6.79>
ST_35 : Operation 141 [1/3] (5.80ns)   --->   "%tmp_9 = call fastcc i32 @feistel(i32 %xor_ln57_10, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 141 'call' 'tmp_9' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_35 : Operation 142 [1/2] (2.32ns)   --->   "%P_load_13 = load i32* %P_addr_11, align 4" [blowfish.cpp:57]   --->   Operation 142 'load' 'P_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_35 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_11)   --->   "%xor_ln57_25 = xor i32 %xor_ln57_9, %tmp_9" [blowfish.cpp:57]   --->   Operation 143 'xor' 'xor_ln57_25' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 144 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_11 = xor i32 %xor_ln57_25, %P_load_13" [blowfish.cpp:57]   --->   Operation 144 'xor' 'xor_ln57_11' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 5.45>
ST_36 : Operation 145 [3/3] (5.45ns)   --->   "%tmp_10 = call fastcc i32 @feistel(i32 %xor_ln57_11, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 145 'call' 'tmp_10' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 37 <SV = 36> <Delay = 8.00>
ST_37 : Operation 146 [2/3] (8.00ns)   --->   "%tmp_10 = call fastcc i32 @feistel(i32 %xor_ln57_11, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 146 'call' 'tmp_10' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_37 : Operation 147 [1/1] (0.00ns)   --->   "%P_addr_12 = getelementptr [18 x i32]* %P, i64 0, i64 12" [blowfish.cpp:57]   --->   Operation 147 'getelementptr' 'P_addr_12' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 148 [2/2] (2.32ns)   --->   "%P_load_14 = load i32* %P_addr_12, align 4" [blowfish.cpp:57]   --->   Operation 148 'load' 'P_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 38 <SV = 37> <Delay = 6.79>
ST_38 : Operation 149 [1/3] (5.80ns)   --->   "%tmp_10 = call fastcc i32 @feistel(i32 %xor_ln57_11, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 149 'call' 'tmp_10' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_38 : Operation 150 [1/2] (2.32ns)   --->   "%P_load_14 = load i32* %P_addr_12, align 4" [blowfish.cpp:57]   --->   Operation 150 'load' 'P_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_38 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_12)   --->   "%xor_ln57_26 = xor i32 %xor_ln57_10, %tmp_10" [blowfish.cpp:57]   --->   Operation 151 'xor' 'xor_ln57_26' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 152 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_12 = xor i32 %xor_ln57_26, %P_load_14" [blowfish.cpp:57]   --->   Operation 152 'xor' 'xor_ln57_12' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 5.45>
ST_39 : Operation 153 [3/3] (5.45ns)   --->   "%tmp_11 = call fastcc i32 @feistel(i32 %xor_ln57_12, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 153 'call' 'tmp_11' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 40 <SV = 39> <Delay = 8.00>
ST_40 : Operation 154 [2/3] (8.00ns)   --->   "%tmp_11 = call fastcc i32 @feistel(i32 %xor_ln57_12, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 154 'call' 'tmp_11' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_40 : Operation 155 [1/1] (0.00ns)   --->   "%P_addr_14 = getelementptr [18 x i32]* %P, i64 0, i64 13" [blowfish.cpp:57]   --->   Operation 155 'getelementptr' 'P_addr_14' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 156 [2/2] (2.32ns)   --->   "%P_load_15 = load i32* %P_addr_14, align 4" [blowfish.cpp:57]   --->   Operation 156 'load' 'P_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 41 <SV = 40> <Delay = 6.79>
ST_41 : Operation 157 [1/3] (5.80ns)   --->   "%tmp_11 = call fastcc i32 @feistel(i32 %xor_ln57_12, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 157 'call' 'tmp_11' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_41 : Operation 158 [1/2] (2.32ns)   --->   "%P_load_15 = load i32* %P_addr_14, align 4" [blowfish.cpp:57]   --->   Operation 158 'load' 'P_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_41 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_13)   --->   "%xor_ln57_27 = xor i32 %xor_ln57_11, %tmp_11" [blowfish.cpp:57]   --->   Operation 159 'xor' 'xor_ln57_27' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 160 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_13 = xor i32 %xor_ln57_27, %P_load_15" [blowfish.cpp:57]   --->   Operation 160 'xor' 'xor_ln57_13' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 41> <Delay = 5.45>
ST_42 : Operation 161 [3/3] (5.45ns)   --->   "%tmp_12 = call fastcc i32 @feistel(i32 %xor_ln57_13, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 161 'call' 'tmp_12' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 43 <SV = 42> <Delay = 8.00>
ST_43 : Operation 162 [2/3] (8.00ns)   --->   "%tmp_12 = call fastcc i32 @feistel(i32 %xor_ln57_13, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 162 'call' 'tmp_12' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_43 : Operation 163 [1/1] (0.00ns)   --->   "%P_addr_15 = getelementptr [18 x i32]* %P, i64 0, i64 14" [blowfish.cpp:57]   --->   Operation 163 'getelementptr' 'P_addr_15' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 164 [2/2] (2.32ns)   --->   "%P_load_16 = load i32* %P_addr_15, align 4" [blowfish.cpp:57]   --->   Operation 164 'load' 'P_load_16' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 44 <SV = 43> <Delay = 6.79>
ST_44 : Operation 165 [1/3] (5.80ns)   --->   "%tmp_12 = call fastcc i32 @feistel(i32 %xor_ln57_13, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 165 'call' 'tmp_12' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_44 : Operation 166 [1/2] (2.32ns)   --->   "%P_load_16 = load i32* %P_addr_15, align 4" [blowfish.cpp:57]   --->   Operation 166 'load' 'P_load_16' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_44 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_14)   --->   "%xor_ln57_28 = xor i32 %xor_ln57_12, %tmp_12" [blowfish.cpp:57]   --->   Operation 167 'xor' 'xor_ln57_28' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 168 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_14 = xor i32 %xor_ln57_28, %P_load_16" [blowfish.cpp:57]   --->   Operation 168 'xor' 'xor_ln57_14' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 44> <Delay = 5.45>
ST_45 : Operation 169 [3/3] (5.45ns)   --->   "%tmp_13 = call fastcc i32 @feistel(i32 %xor_ln57_14, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 169 'call' 'tmp_13' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 46 <SV = 45> <Delay = 8.00>
ST_46 : Operation 170 [2/3] (8.00ns)   --->   "%tmp_13 = call fastcc i32 @feistel(i32 %xor_ln57_14, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 170 'call' 'tmp_13' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_46 : Operation 171 [1/1] (0.00ns)   --->   "%P_addr_16 = getelementptr [18 x i32]* %P, i64 0, i64 15" [blowfish.cpp:57]   --->   Operation 171 'getelementptr' 'P_addr_16' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 172 [2/2] (2.32ns)   --->   "%P_load_17 = load i32* %P_addr_16, align 4" [blowfish.cpp:57]   --->   Operation 172 'load' 'P_load_17' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 47 <SV = 46> <Delay = 6.79>
ST_47 : Operation 173 [1/3] (5.80ns)   --->   "%tmp_13 = call fastcc i32 @feistel(i32 %xor_ln57_14, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 173 'call' 'tmp_13' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_47 : Operation 174 [1/2] (2.32ns)   --->   "%P_load_17 = load i32* %P_addr_16, align 4" [blowfish.cpp:57]   --->   Operation 174 'load' 'P_load_17' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_47 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node xor_ln57_30)   --->   "%xor_ln57_29 = xor i32 %xor_ln57_13, %tmp_13" [blowfish.cpp:57]   --->   Operation 175 'xor' 'xor_ln57_29' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 176 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln57_30 = xor i32 %xor_ln57_29, %P_load_17" [blowfish.cpp:57]   --->   Operation 176 'xor' 'xor_ln57_30' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 47> <Delay = 5.45>
ST_48 : Operation 177 [3/3] (5.45ns)   --->   "%tmp_14 = call fastcc i32 @feistel(i32 %xor_ln57_30, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 177 'call' 'tmp_14' <Predicate = true> <Delay = 5.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 49 <SV = 48> <Delay = 8.00>
ST_49 : Operation 178 [2/3] (8.00ns)   --->   "%tmp_14 = call fastcc i32 @feistel(i32 %xor_ln57_30, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 178 'call' 'tmp_14' <Predicate = true> <Delay = 8.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_49 : Operation 179 [1/1] (0.00ns)   --->   "%P_addr_17 = getelementptr [18 x i32]* %P, i64 0, i64 16" [blowfish.cpp:64]   --->   Operation 179 'getelementptr' 'P_addr_17' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 180 [2/2] (2.32ns)   --->   "%P_load = load i32* %P_addr_17, align 4" [blowfish.cpp:64]   --->   Operation 180 'load' 'P_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_49 : Operation 181 [1/1] (0.00ns)   --->   "%P_addr_13 = getelementptr [18 x i32]* %P, i64 0, i64 17" [blowfish.cpp:65]   --->   Operation 181 'getelementptr' 'P_addr_13' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 182 [2/2] (2.32ns)   --->   "%P_load_1 = load i32* %P_addr_13, align 4" [blowfish.cpp:65]   --->   Operation 182 'load' 'P_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 50 <SV = 49> <Delay = 6.79>
ST_50 : Operation 183 [1/3] (5.80ns)   --->   "%tmp_14 = call fastcc i32 @feistel(i32 %xor_ln57_30, [1024 x i32]* %S)" [blowfish.cpp:58]   --->   Operation 183 'call' 'tmp_14' <Predicate = true> <Delay = 5.80> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_50 : Operation 184 [1/2] (2.32ns)   --->   "%P_load = load i32* %P_addr_17, align 4" [blowfish.cpp:64]   --->   Operation 184 'load' 'P_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_50 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node xor_ln64)   --->   "%xor_ln64_1 = xor i32 %xor_ln57_14, %tmp_14" [blowfish.cpp:64]   --->   Operation 185 'xor' 'xor_ln64_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 186 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln64 = xor i32 %xor_ln64_1, %P_load" [blowfish.cpp:64]   --->   Operation 186 'xor' 'xor_ln64' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 187 [1/2] (2.32ns)   --->   "%P_load_1 = load i32* %P_addr_13, align 4" [blowfish.cpp:65]   --->   Operation 187 'load' 'P_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_50 : Operation 188 [1/1] (0.99ns)   --->   "%xor_ln65 = xor i32 %P_load_1, %xor_ln57_30" [blowfish.cpp:65]   --->   Operation 188 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 189 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i32, i32 } undef, i32 %xor_ln65, 0" [blowfish.cpp:66]   --->   Operation 189 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 190 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i32, i32 } %mrv, i32 %xor_ln64, 1" [blowfish.cpp:66]   --->   Operation 190 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 191 [1/1] (0.00ns)   --->   "ret { i32, i32 } %mrv_1" [blowfish.cpp:66]   --->   Operation 191 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('P_addr', blowfish.cpp:57) [7]  (0 ns)
	'load' operation ('P_load_2', blowfish.cpp:57) on array 'P' [8]  (2.32 ns)

 <State 2>: 2.32ns
The critical path consists of the following:
	'load' operation ('P_load_2', blowfish.cpp:57) on array 'P' [8]  (2.32 ns)

 <State 3>: 6.45ns
The critical path consists of the following:
	wire read on port 'left_read' (blowfish.cpp:48) [6]  (0 ns)
	'xor' operation ('xor_ln57', blowfish.cpp:57) [9]  (0.993 ns)
	'call' operation ('tmp', blowfish.cpp:58) to 'feistel' [10]  (5.45 ns)

 <State 4>: 8ns
The critical path consists of the following:
	'call' operation ('tmp', blowfish.cpp:58) to 'feistel' [10]  (8 ns)

 <State 5>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp', blowfish.cpp:58) to 'feistel' [10]  (5.81 ns)
	'xor' operation ('xor_ln57_15', blowfish.cpp:57) [13]  (0 ns)
	'xor' operation ('xor_ln57_1', blowfish.cpp:57) [14]  (0.993 ns)

 <State 6>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_s', blowfish.cpp:58) to 'feistel' [15]  (5.45 ns)

 <State 7>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_s', blowfish.cpp:58) to 'feistel' [15]  (8 ns)

 <State 8>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_s', blowfish.cpp:58) to 'feistel' [15]  (5.81 ns)
	'xor' operation ('xor_ln57_16', blowfish.cpp:57) [18]  (0 ns)
	'xor' operation ('xor_ln57_2', blowfish.cpp:57) [19]  (0.993 ns)

 <State 9>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_1', blowfish.cpp:58) to 'feistel' [20]  (5.45 ns)

 <State 10>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_1', blowfish.cpp:58) to 'feistel' [20]  (8 ns)

 <State 11>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_1', blowfish.cpp:58) to 'feistel' [20]  (5.81 ns)
	'xor' operation ('xor_ln57_17', blowfish.cpp:57) [23]  (0 ns)
	'xor' operation ('xor_ln57_3', blowfish.cpp:57) [24]  (0.993 ns)

 <State 12>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_2', blowfish.cpp:58) to 'feistel' [25]  (5.45 ns)

 <State 13>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_2', blowfish.cpp:58) to 'feistel' [25]  (8 ns)

 <State 14>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_2', blowfish.cpp:58) to 'feistel' [25]  (5.81 ns)
	'xor' operation ('xor_ln57_18', blowfish.cpp:57) [28]  (0 ns)
	'xor' operation ('xor_ln57_4', blowfish.cpp:57) [29]  (0.993 ns)

 <State 15>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_3', blowfish.cpp:58) to 'feistel' [30]  (5.45 ns)

 <State 16>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_3', blowfish.cpp:58) to 'feistel' [30]  (8 ns)

 <State 17>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_3', blowfish.cpp:58) to 'feistel' [30]  (5.81 ns)
	'xor' operation ('xor_ln57_19', blowfish.cpp:57) [33]  (0 ns)
	'xor' operation ('xor_ln57_5', blowfish.cpp:57) [34]  (0.993 ns)

 <State 18>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_4', blowfish.cpp:58) to 'feistel' [35]  (5.45 ns)

 <State 19>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_4', blowfish.cpp:58) to 'feistel' [35]  (8 ns)

 <State 20>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_4', blowfish.cpp:58) to 'feistel' [35]  (5.81 ns)
	'xor' operation ('xor_ln57_20', blowfish.cpp:57) [38]  (0 ns)
	'xor' operation ('xor_ln57_6', blowfish.cpp:57) [39]  (0.993 ns)

 <State 21>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_5', blowfish.cpp:58) to 'feistel' [40]  (5.45 ns)

 <State 22>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_5', blowfish.cpp:58) to 'feistel' [40]  (8 ns)

 <State 23>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_5', blowfish.cpp:58) to 'feistel' [40]  (5.81 ns)
	'xor' operation ('xor_ln57_21', blowfish.cpp:57) [43]  (0 ns)
	'xor' operation ('xor_ln57_7', blowfish.cpp:57) [44]  (0.993 ns)

 <State 24>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_6', blowfish.cpp:58) to 'feistel' [45]  (5.45 ns)

 <State 25>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_6', blowfish.cpp:58) to 'feistel' [45]  (8 ns)

 <State 26>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_6', blowfish.cpp:58) to 'feistel' [45]  (5.81 ns)
	'xor' operation ('xor_ln57_22', blowfish.cpp:57) [48]  (0 ns)
	'xor' operation ('xor_ln57_8', blowfish.cpp:57) [49]  (0.993 ns)

 <State 27>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_7', blowfish.cpp:58) to 'feistel' [50]  (5.45 ns)

 <State 28>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_7', blowfish.cpp:58) to 'feistel' [50]  (8 ns)

 <State 29>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_7', blowfish.cpp:58) to 'feistel' [50]  (5.81 ns)
	'xor' operation ('xor_ln57_23', blowfish.cpp:57) [53]  (0 ns)
	'xor' operation ('xor_ln57_9', blowfish.cpp:57) [54]  (0.993 ns)

 <State 30>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_8', blowfish.cpp:58) to 'feistel' [55]  (5.45 ns)

 <State 31>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_8', blowfish.cpp:58) to 'feistel' [55]  (8 ns)

 <State 32>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_8', blowfish.cpp:58) to 'feistel' [55]  (5.81 ns)
	'xor' operation ('xor_ln57_24', blowfish.cpp:57) [58]  (0 ns)
	'xor' operation ('xor_ln57_10', blowfish.cpp:57) [59]  (0.993 ns)

 <State 33>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_9', blowfish.cpp:58) to 'feistel' [60]  (5.45 ns)

 <State 34>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_9', blowfish.cpp:58) to 'feistel' [60]  (8 ns)

 <State 35>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_9', blowfish.cpp:58) to 'feistel' [60]  (5.81 ns)
	'xor' operation ('xor_ln57_25', blowfish.cpp:57) [63]  (0 ns)
	'xor' operation ('xor_ln57_11', blowfish.cpp:57) [64]  (0.993 ns)

 <State 36>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_10', blowfish.cpp:58) to 'feistel' [65]  (5.45 ns)

 <State 37>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_10', blowfish.cpp:58) to 'feistel' [65]  (8 ns)

 <State 38>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_10', blowfish.cpp:58) to 'feistel' [65]  (5.81 ns)
	'xor' operation ('xor_ln57_26', blowfish.cpp:57) [68]  (0 ns)
	'xor' operation ('xor_ln57_12', blowfish.cpp:57) [69]  (0.993 ns)

 <State 39>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_11', blowfish.cpp:58) to 'feistel' [70]  (5.45 ns)

 <State 40>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_11', blowfish.cpp:58) to 'feistel' [70]  (8 ns)

 <State 41>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_11', blowfish.cpp:58) to 'feistel' [70]  (5.81 ns)
	'xor' operation ('xor_ln57_27', blowfish.cpp:57) [73]  (0 ns)
	'xor' operation ('xor_ln57_13', blowfish.cpp:57) [74]  (0.993 ns)

 <State 42>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_12', blowfish.cpp:58) to 'feistel' [75]  (5.45 ns)

 <State 43>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_12', blowfish.cpp:58) to 'feistel' [75]  (8 ns)

 <State 44>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_12', blowfish.cpp:58) to 'feistel' [75]  (5.81 ns)
	'xor' operation ('xor_ln57_28', blowfish.cpp:57) [78]  (0 ns)
	'xor' operation ('xor_ln57_14', blowfish.cpp:57) [79]  (0.993 ns)

 <State 45>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_13', blowfish.cpp:58) to 'feistel' [80]  (5.45 ns)

 <State 46>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_13', blowfish.cpp:58) to 'feistel' [80]  (8 ns)

 <State 47>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_13', blowfish.cpp:58) to 'feistel' [80]  (5.81 ns)
	'xor' operation ('xor_ln57_29', blowfish.cpp:57) [83]  (0 ns)
	'xor' operation ('__b', blowfish.cpp:57) [84]  (0.993 ns)

 <State 48>: 5.45ns
The critical path consists of the following:
	'call' operation ('tmp_14', blowfish.cpp:58) to 'feistel' [85]  (5.45 ns)

 <State 49>: 8ns
The critical path consists of the following:
	'call' operation ('tmp_14', blowfish.cpp:58) to 'feistel' [85]  (8 ns)

 <State 50>: 6.8ns
The critical path consists of the following:
	'call' operation ('tmp_14', blowfish.cpp:58) to 'feistel' [85]  (5.81 ns)
	'xor' operation ('xor_ln64_1', blowfish.cpp:64) [88]  (0 ns)
	'xor' operation ('xor_ln64', blowfish.cpp:64) [89]  (0.993 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
