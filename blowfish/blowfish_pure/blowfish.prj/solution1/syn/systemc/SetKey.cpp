// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "SetKey.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic SetKey::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic SetKey::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<83> SetKey::ap_ST_fsm_state1 = "1";
const sc_lv<83> SetKey::ap_ST_fsm_state2 = "10";
const sc_lv<83> SetKey::ap_ST_fsm_state3 = "100";
const sc_lv<83> SetKey::ap_ST_fsm_state4 = "1000";
const sc_lv<83> SetKey::ap_ST_fsm_state5 = "10000";
const sc_lv<83> SetKey::ap_ST_fsm_state6 = "100000";
const sc_lv<83> SetKey::ap_ST_fsm_state7 = "1000000";
const sc_lv<83> SetKey::ap_ST_fsm_state8 = "10000000";
const sc_lv<83> SetKey::ap_ST_fsm_state9 = "100000000";
const sc_lv<83> SetKey::ap_ST_fsm_state10 = "1000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state11 = "10000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state12 = "100000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<83> SetKey::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> SetKey::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> SetKey::ap_const_lv32_4D = "1001101";
const sc_lv<32> SetKey::ap_const_lv32_51 = "1010001";
const sc_lv<32> SetKey::ap_const_lv32_1 = "1";
const sc_lv<1> SetKey::ap_const_lv1_0 = "0";
const sc_lv<32> SetKey::ap_const_lv32_3 = "11";
const sc_lv<32> SetKey::ap_const_lv32_4 = "100";
const sc_lv<32> SetKey::ap_const_lv32_6 = "110";
const sc_lv<32> SetKey::ap_const_lv32_7 = "111";
const sc_lv<1> SetKey::ap_const_lv1_1 = "1";
const sc_lv<32> SetKey::ap_const_lv32_8 = "1000";
const sc_lv<32> SetKey::ap_const_lv32_4E = "1001110";
const sc_lv<32> SetKey::ap_const_lv32_4F = "1001111";
const sc_lv<32> SetKey::ap_const_lv32_50 = "1010000";
const sc_lv<5> SetKey::ap_const_lv5_0 = "00000";
const sc_lv<32> SetKey::ap_const_lv32_2 = "10";
const sc_lv<3> SetKey::ap_const_lv3_0 = "000";
const sc_lv<32> SetKey::ap_const_lv32_5 = "101";
const sc_lv<9> SetKey::ap_const_lv9_0 = "000000000";
const sc_lv<32> SetKey::ap_const_lv32_4B = "1001011";
const sc_lv<32> SetKey::ap_const_lv32_4A = "1001010";
const sc_lv<32> SetKey::ap_const_lv32_4C = "1001100";
const sc_lv<32> SetKey::ap_const_lv32_52 = "1010010";
const sc_lv<64> SetKey::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<5> SetKey::ap_const_lv5_12 = "10010";
const sc_lv<5> SetKey::ap_const_lv5_1 = "1";
const sc_lv<3> SetKey::ap_const_lv3_4 = "100";
const sc_lv<3> SetKey::ap_const_lv3_1 = "1";
const sc_lv<8> SetKey::ap_const_lv8_0 = "00000000";
const sc_lv<9> SetKey::ap_const_lv9_100 = "100000000";
const sc_lv<9> SetKey::ap_const_lv9_1 = "1";
const sc_lv<64> SetKey::ap_const_lv64_1 = "1";
const sc_lv<5> SetKey::ap_const_lv5_2 = "10";
const sc_lv<9> SetKey::ap_const_lv9_2 = "10";
const sc_lv<8> SetKey::ap_const_lv8_1 = "1";
const bool SetKey::ap_const_boolean_1 = true;

SetKey::SetKey(sc_module_name name) : sc_module(name), mVcdFile(0) {
    initial_parray_U = new SetKey_initial_pabkb("initial_parray_U");
    initial_parray_U->clk(ap_clk);
    initial_parray_U->reset(ap_rst);
    initial_parray_U->address0(initial_parray_address0);
    initial_parray_U->ce0(initial_parray_ce0);
    initial_parray_U->q0(initial_parray_q0);
    initial_sbox_U = new SetKey_initial_sbox("initial_sbox_U");
    initial_sbox_U->clk(ap_clk);
    initial_sbox_U->reset(ap_rst);
    initial_sbox_U->address0(initial_sbox_address0);
    initial_sbox_U->ce0(initial_sbox_ce0);
    initial_sbox_U->q0(initial_sbox_q0);
    grp_Encrypt_SetKey_fu_330 = new Encrypt_SetKey("grp_Encrypt_SetKey_fu_330");
    grp_Encrypt_SetKey_fu_330->ap_clk(ap_clk);
    grp_Encrypt_SetKey_fu_330->ap_rst(ap_rst);
    grp_Encrypt_SetKey_fu_330->ap_start(grp_Encrypt_SetKey_fu_330_ap_start);
    grp_Encrypt_SetKey_fu_330->ap_done(grp_Encrypt_SetKey_fu_330_ap_done);
    grp_Encrypt_SetKey_fu_330->ap_idle(grp_Encrypt_SetKey_fu_330_ap_idle);
    grp_Encrypt_SetKey_fu_330->ap_ready(grp_Encrypt_SetKey_fu_330_ap_ready);
    grp_Encrypt_SetKey_fu_330->left_read(grp_Encrypt_SetKey_fu_330_left_read);
    grp_Encrypt_SetKey_fu_330->right_read(grp_Encrypt_SetKey_fu_330_right_read);
    grp_Encrypt_SetKey_fu_330->P_address0(grp_Encrypt_SetKey_fu_330_P_address0);
    grp_Encrypt_SetKey_fu_330->P_ce0(grp_Encrypt_SetKey_fu_330_P_ce0);
    grp_Encrypt_SetKey_fu_330->P_q0(P_q0);
    grp_Encrypt_SetKey_fu_330->P_address1(grp_Encrypt_SetKey_fu_330_P_address1);
    grp_Encrypt_SetKey_fu_330->P_ce1(grp_Encrypt_SetKey_fu_330_P_ce1);
    grp_Encrypt_SetKey_fu_330->P_q1(P_q1);
    grp_Encrypt_SetKey_fu_330->S_address0(grp_Encrypt_SetKey_fu_330_S_address0);
    grp_Encrypt_SetKey_fu_330->S_ce0(grp_Encrypt_SetKey_fu_330_S_ce0);
    grp_Encrypt_SetKey_fu_330->S_q0(S_q0);
    grp_Encrypt_SetKey_fu_330->S_address1(grp_Encrypt_SetKey_fu_330_S_address1);
    grp_Encrypt_SetKey_fu_330->S_ce1(grp_Encrypt_SetKey_fu_330_S_ce1);
    grp_Encrypt_SetKey_fu_330->S_q1(S_q1);
    grp_Encrypt_SetKey_fu_330->ap_return_0(grp_Encrypt_SetKey_fu_330_ap_return_0);
    grp_Encrypt_SetKey_fu_330->ap_return_1(grp_Encrypt_SetKey_fu_330_ap_return_1);
    SetKey_Encrypt_urcud_U5 = new SetKey_Encrypt_urcud<1,68,64,64,64>("SetKey_Encrypt_urcud_U5");
    SetKey_Encrypt_urcud_U5->clk(ap_clk);
    SetKey_Encrypt_urcud_U5->reset(ap_rst);
    SetKey_Encrypt_urcud_U5->start(grp_fu_470_ap_start);
    SetKey_Encrypt_urcud_U5->done(grp_fu_470_ap_done);
    SetKey_Encrypt_urcud_U5->din0(grp_fu_470_p0);
    SetKey_Encrypt_urcud_U5->din1(key_size);
    SetKey_Encrypt_urcud_U5->ce(ap_var_for_const0);
    SetKey_Encrypt_urcud_U5->dout(grp_fu_470_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_P_address0);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( zext_ln69_reg_646 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( P_addr_3_reg_720 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( grp_Encrypt_SetKey_fu_330_P_address0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( zext_ln88_fu_475_p1 );
    sensitive << ( zext_ln96_fu_520_p1 );

    SC_METHOD(thread_P_address1);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( grp_Encrypt_SetKey_fu_330_P_address1 );
    sensitive << ( zext_ln97_fu_531_p1 );

    SC_METHOD(thread_P_ce0);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( grp_Encrypt_SetKey_fu_330_P_ce0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state76 );

    SC_METHOD(thread_P_ce1);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( grp_Encrypt_SetKey_fu_330_P_ce1 );

    SC_METHOD(thread_P_d0);
    sensitive << ( initial_parray_q0 );
    sensitive << ( reg_350 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( xor_ln88_fu_497_p2 );

    SC_METHOD(thread_P_d1);
    sensitive << ( reg_357 );
    sensitive << ( ap_CS_fsm_state79 );

    SC_METHOD(thread_P_we0);
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state76 );

    SC_METHOD(thread_P_we1);
    sensitive << ( ap_CS_fsm_state79 );

    SC_METHOD(thread_S_address0);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( zext_ln75_1_reg_684 );
    sensitive << ( grp_Encrypt_SetKey_fu_330_S_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( zext_ln104_1_fu_611_p1 );

    SC_METHOD(thread_S_address1);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( grp_Encrypt_SetKey_fu_330_S_address1 );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( zext_ln105_fu_628_p1 );

    SC_METHOD(thread_S_ce0);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( grp_Encrypt_SetKey_fu_330_S_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state83 );

    SC_METHOD(thread_S_ce1);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( grp_Encrypt_SetKey_fu_330_S_ce1 );
    sensitive << ( ap_CS_fsm_state83 );

    SC_METHOD(thread_S_d0);
    sensitive << ( initial_sbox_q0 );
    sensitive << ( reg_350 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state83 );

    SC_METHOD(thread_S_d1);
    sensitive << ( reg_357 );
    sensitive << ( ap_CS_fsm_state83 );

    SC_METHOD(thread_S_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state83 );

    SC_METHOD(thread_S_we1);
    sensitive << ( ap_CS_fsm_state83 );

    SC_METHOD(thread_add_ln104_fu_586_p2);
    sensitive << ( zext_ln102_reg_760 );
    sensitive << ( zext_ln104_fu_582_p1 );

    SC_METHOD(thread_add_ln75_fu_426_p2);
    sensitive << ( zext_ln74_reg_664 );
    sensitive << ( zext_ln75_fu_422_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state83);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( icmp_ln101_fu_542_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( icmp_ln101_fu_542_p2 );

    SC_METHOD(thread_data_fu_484_p3);
    sensitive << ( key_q0 );
    sensitive << ( trunc_ln85_fu_480_p1 );

    SC_METHOD(thread_grp_Encrypt_SetKey_fu_330_ap_start);
    sensitive << ( grp_Encrypt_SetKey_fu_330_ap_start_reg );

    SC_METHOD(thread_grp_Encrypt_SetKey_fu_330_left_read);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( left_0_reg_283 );
    sensitive << ( left_1_fu_74 );

    SC_METHOD(thread_grp_Encrypt_SetKey_fu_330_right_read);
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( right_0_reg_271 );
    sensitive << ( right_1_fu_78 );

    SC_METHOD(thread_grp_fu_470_ap_start);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln84_fu_448_p2 );

    SC_METHOD(thread_grp_fu_470_p0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( keyIndex_1_fu_70 );

    SC_METHOD(thread_i_1_fu_387_p2);
    sensitive << ( i1_0_reg_214 );

    SC_METHOD(thread_i_2_fu_536_p2);
    sensitive << ( i4_0_reg_295 );

    SC_METHOD(thread_i_3_fu_442_p2);
    sensitive << ( i2_0_reg_236 );

    SC_METHOD(thread_i_4_fu_548_p2);
    sensitive << ( i5_0_reg_307 );

    SC_METHOD(thread_i_fu_370_p2);
    sensitive << ( i_0_reg_203 );

    SC_METHOD(thread_icmp_ln101_fu_542_p2);
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( i5_0_reg_307 );

    SC_METHOD(thread_icmp_ln68_fu_364_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_203 );

    SC_METHOD(thread_icmp_ln73_fu_381_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i1_0_reg_214 );

    SC_METHOD(thread_icmp_ln74_fu_410_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_0_reg_225 );

    SC_METHOD(thread_icmp_ln82_fu_436_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i2_0_reg_236 );

    SC_METHOD(thread_icmp_ln84_fu_448_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( j3_0_reg_260 );

    SC_METHOD(thread_icmp_ln94_fu_504_p2);
    sensitive << ( i4_0_reg_295 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_initial_parray_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln69_fu_376_p1 );

    SC_METHOD(thread_initial_parray_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_initial_sbox_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln75_1_fu_431_p1 );

    SC_METHOD(thread_initial_sbox_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_j_1_fu_454_p2);
    sensitive << ( j3_0_reg_260 );

    SC_METHOD(thread_j_2_fu_595_p2);
    sensitive << ( j6_0_reg_319 );

    SC_METHOD(thread_j_fu_416_p2);
    sensitive << ( j_0_reg_225 );

    SC_METHOD(thread_key_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( keyIndex_1_fu_70 );

    SC_METHOD(thread_key_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_or_ln105_fu_615_p2);
    sensitive << ( trunc_ln102_reg_783 );

    SC_METHOD(thread_or_ln97_fu_525_p2);
    sensitive << ( i4_0_reg_295 );

    SC_METHOD(thread_tmp_1_fu_393_p3);
    sensitive << ( i1_0_reg_214 );

    SC_METHOD(thread_tmp_2_fu_554_p3);
    sensitive << ( i5_0_reg_307 );

    SC_METHOD(thread_tmp_3_fu_620_p3);
    sensitive << ( i5_0_reg_307 );
    sensitive << ( or_ln105_fu_615_p2 );

    SC_METHOD(thread_tmp_fu_566_p3);
    sensitive << ( j6_0_reg_319 );

    SC_METHOD(thread_trunc_ln102_fu_591_p1);
    sensitive << ( j6_0_reg_319 );

    SC_METHOD(thread_trunc_ln85_fu_480_p1);
    sensitive << ( data_0_reg_248 );

    SC_METHOD(thread_xor_ln88_fu_497_p2);
    sensitive << ( P_q0 );
    sensitive << ( data_0_reg_248 );

    SC_METHOD(thread_zext_ln102_fu_562_p1);
    sensitive << ( tmp_2_fu_554_p3 );

    SC_METHOD(thread_zext_ln104_1_fu_611_p1);
    sensitive << ( add_ln104_reg_778 );

    SC_METHOD(thread_zext_ln104_fu_582_p1);
    sensitive << ( j6_0_reg_319 );

    SC_METHOD(thread_zext_ln105_fu_628_p1);
    sensitive << ( tmp_3_fu_620_p3 );

    SC_METHOD(thread_zext_ln69_fu_376_p1);
    sensitive << ( i_0_reg_203 );

    SC_METHOD(thread_zext_ln74_fu_401_p1);
    sensitive << ( tmp_1_fu_393_p3 );

    SC_METHOD(thread_zext_ln75_1_fu_431_p1);
    sensitive << ( add_ln75_fu_426_p2 );

    SC_METHOD(thread_zext_ln75_fu_422_p1);
    sensitive << ( j_0_reg_225 );

    SC_METHOD(thread_zext_ln88_fu_475_p1);
    sensitive << ( i2_0_reg_236 );

    SC_METHOD(thread_zext_ln96_fu_520_p1);
    sensitive << ( i4_0_reg_295 );

    SC_METHOD(thread_zext_ln97_fu_531_p1);
    sensitive << ( or_ln97_fu_525_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( grp_Encrypt_SetKey_fu_330_ap_done );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln68_fu_364_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln73_fu_381_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln74_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln84_fu_448_p2 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( icmp_ln101_fu_542_p2 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( tmp_fu_566_p3 );
    sensitive << ( icmp_ln82_fu_436_p2 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( icmp_ln94_fu_504_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    grp_Encrypt_SetKey_fu_330_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "SetKey_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, key_address0, "(port)key_address0");
    sc_trace(mVcdFile, key_ce0, "(port)key_ce0");
    sc_trace(mVcdFile, key_q0, "(port)key_q0");
    sc_trace(mVcdFile, key_size, "(port)key_size");
    sc_trace(mVcdFile, P_address0, "(port)P_address0");
    sc_trace(mVcdFile, P_ce0, "(port)P_ce0");
    sc_trace(mVcdFile, P_we0, "(port)P_we0");
    sc_trace(mVcdFile, P_d0, "(port)P_d0");
    sc_trace(mVcdFile, P_q0, "(port)P_q0");
    sc_trace(mVcdFile, P_address1, "(port)P_address1");
    sc_trace(mVcdFile, P_ce1, "(port)P_ce1");
    sc_trace(mVcdFile, P_we1, "(port)P_we1");
    sc_trace(mVcdFile, P_d1, "(port)P_d1");
    sc_trace(mVcdFile, P_q1, "(port)P_q1");
    sc_trace(mVcdFile, S_address0, "(port)S_address0");
    sc_trace(mVcdFile, S_ce0, "(port)S_ce0");
    sc_trace(mVcdFile, S_we0, "(port)S_we0");
    sc_trace(mVcdFile, S_d0, "(port)S_d0");
    sc_trace(mVcdFile, S_q0, "(port)S_q0");
    sc_trace(mVcdFile, S_address1, "(port)S_address1");
    sc_trace(mVcdFile, S_ce1, "(port)S_ce1");
    sc_trace(mVcdFile, S_we1, "(port)S_we1");
    sc_trace(mVcdFile, S_d1, "(port)S_d1");
    sc_trace(mVcdFile, S_q1, "(port)S_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, initial_parray_address0, "initial_parray_address0");
    sc_trace(mVcdFile, initial_parray_ce0, "initial_parray_ce0");
    sc_trace(mVcdFile, initial_parray_q0, "initial_parray_q0");
    sc_trace(mVcdFile, initial_sbox_address0, "initial_sbox_address0");
    sc_trace(mVcdFile, initial_sbox_ce0, "initial_sbox_ce0");
    sc_trace(mVcdFile, initial_sbox_q0, "initial_sbox_q0");
    sc_trace(mVcdFile, reg_350, "reg_350");
    sc_trace(mVcdFile, ap_CS_fsm_state78, "ap_CS_fsm_state78");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_ap_ready, "grp_Encrypt_SetKey_fu_330_ap_ready");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_ap_done, "grp_Encrypt_SetKey_fu_330_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state82, "ap_CS_fsm_state82");
    sc_trace(mVcdFile, reg_357, "reg_357");
    sc_trace(mVcdFile, i_fu_370_p2, "i_fu_370_p2");
    sc_trace(mVcdFile, i_reg_641, "i_reg_641");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln69_fu_376_p1, "zext_ln69_fu_376_p1");
    sc_trace(mVcdFile, zext_ln69_reg_646, "zext_ln69_reg_646");
    sc_trace(mVcdFile, icmp_ln68_fu_364_p2, "icmp_ln68_fu_364_p2");
    sc_trace(mVcdFile, i_1_fu_387_p2, "i_1_fu_387_p2");
    sc_trace(mVcdFile, i_1_reg_659, "i_1_reg_659");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln74_fu_401_p1, "zext_ln74_fu_401_p1");
    sc_trace(mVcdFile, zext_ln74_reg_664, "zext_ln74_reg_664");
    sc_trace(mVcdFile, icmp_ln73_fu_381_p2, "icmp_ln73_fu_381_p2");
    sc_trace(mVcdFile, j_fu_416_p2, "j_fu_416_p2");
    sc_trace(mVcdFile, j_reg_679, "j_reg_679");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln75_1_fu_431_p1, "zext_ln75_1_fu_431_p1");
    sc_trace(mVcdFile, zext_ln75_1_reg_684, "zext_ln75_1_reg_684");
    sc_trace(mVcdFile, icmp_ln74_fu_410_p2, "icmp_ln74_fu_410_p2");
    sc_trace(mVcdFile, i_3_fu_442_p2, "i_3_fu_442_p2");
    sc_trace(mVcdFile, i_3_reg_697, "i_3_reg_697");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, j_1_fu_454_p2, "j_1_fu_454_p2");
    sc_trace(mVcdFile, j_1_reg_705, "j_1_reg_705");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln84_fu_448_p2, "icmp_ln84_fu_448_p2");
    sc_trace(mVcdFile, P_addr_3_reg_720, "P_addr_3_reg_720");
    sc_trace(mVcdFile, data_fu_484_p3, "data_fu_484_p3");
    sc_trace(mVcdFile, data_reg_725, "data_reg_725");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_2_fu_536_p2, "i_2_fu_536_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state79, "ap_CS_fsm_state79");
    sc_trace(mVcdFile, i_4_fu_548_p2, "i_4_fu_548_p2");
    sc_trace(mVcdFile, i_4_reg_755, "i_4_reg_755");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, zext_ln102_fu_562_p1, "zext_ln102_fu_562_p1");
    sc_trace(mVcdFile, zext_ln102_reg_760, "zext_ln102_reg_760");
    sc_trace(mVcdFile, icmp_ln101_fu_542_p2, "icmp_ln101_fu_542_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state81, "ap_CS_fsm_state81");
    sc_trace(mVcdFile, tmp_fu_566_p3, "tmp_fu_566_p3");
    sc_trace(mVcdFile, add_ln104_fu_586_p2, "add_ln104_fu_586_p2");
    sc_trace(mVcdFile, add_ln104_reg_778, "add_ln104_reg_778");
    sc_trace(mVcdFile, trunc_ln102_fu_591_p1, "trunc_ln102_fu_591_p1");
    sc_trace(mVcdFile, trunc_ln102_reg_783, "trunc_ln102_reg_783");
    sc_trace(mVcdFile, j_2_fu_595_p2, "j_2_fu_595_p2");
    sc_trace(mVcdFile, j_2_reg_788, "j_2_reg_788");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_ap_start, "grp_Encrypt_SetKey_fu_330_ap_start");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_ap_idle, "grp_Encrypt_SetKey_fu_330_ap_idle");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_left_read, "grp_Encrypt_SetKey_fu_330_left_read");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_right_read, "grp_Encrypt_SetKey_fu_330_right_read");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_P_address0, "grp_Encrypt_SetKey_fu_330_P_address0");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_P_ce0, "grp_Encrypt_SetKey_fu_330_P_ce0");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_P_address1, "grp_Encrypt_SetKey_fu_330_P_address1");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_P_ce1, "grp_Encrypt_SetKey_fu_330_P_ce1");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_S_address0, "grp_Encrypt_SetKey_fu_330_S_address0");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_S_ce0, "grp_Encrypt_SetKey_fu_330_S_ce0");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_S_address1, "grp_Encrypt_SetKey_fu_330_S_address1");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_S_ce1, "grp_Encrypt_SetKey_fu_330_S_ce1");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_ap_return_0, "grp_Encrypt_SetKey_fu_330_ap_return_0");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_ap_return_1, "grp_Encrypt_SetKey_fu_330_ap_return_1");
    sc_trace(mVcdFile, i_0_reg_203, "i_0_reg_203");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i1_0_reg_214, "i1_0_reg_214");
    sc_trace(mVcdFile, j_0_reg_225, "j_0_reg_225");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i2_0_reg_236, "i2_0_reg_236");
    sc_trace(mVcdFile, ap_CS_fsm_state76, "ap_CS_fsm_state76");
    sc_trace(mVcdFile, data_0_reg_248, "data_0_reg_248");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, icmp_ln82_fu_436_p2, "icmp_ln82_fu_436_p2");
    sc_trace(mVcdFile, j3_0_reg_260, "j3_0_reg_260");
    sc_trace(mVcdFile, right_0_reg_271, "right_0_reg_271");
    sc_trace(mVcdFile, left_0_reg_283, "left_0_reg_283");
    sc_trace(mVcdFile, i4_0_reg_295, "i4_0_reg_295");
    sc_trace(mVcdFile, i5_0_reg_307, "i5_0_reg_307");
    sc_trace(mVcdFile, ap_CS_fsm_state77, "ap_CS_fsm_state77");
    sc_trace(mVcdFile, icmp_ln94_fu_504_p2, "icmp_ln94_fu_504_p2");
    sc_trace(mVcdFile, j6_0_reg_319, "j6_0_reg_319");
    sc_trace(mVcdFile, ap_CS_fsm_state83, "ap_CS_fsm_state83");
    sc_trace(mVcdFile, grp_Encrypt_SetKey_fu_330_ap_start_reg, "grp_Encrypt_SetKey_fu_330_ap_start_reg");
    sc_trace(mVcdFile, zext_ln88_fu_475_p1, "zext_ln88_fu_475_p1");
    sc_trace(mVcdFile, zext_ln96_fu_520_p1, "zext_ln96_fu_520_p1");
    sc_trace(mVcdFile, zext_ln97_fu_531_p1, "zext_ln97_fu_531_p1");
    sc_trace(mVcdFile, zext_ln104_1_fu_611_p1, "zext_ln104_1_fu_611_p1");
    sc_trace(mVcdFile, zext_ln105_fu_628_p1, "zext_ln105_fu_628_p1");
    sc_trace(mVcdFile, keyIndex_1_fu_70, "keyIndex_1_fu_70");
    sc_trace(mVcdFile, grp_fu_470_p2, "grp_fu_470_p2");
    sc_trace(mVcdFile, left_1_fu_74, "left_1_fu_74");
    sc_trace(mVcdFile, right_1_fu_78, "right_1_fu_78");
    sc_trace(mVcdFile, xor_ln88_fu_497_p2, "xor_ln88_fu_497_p2");
    sc_trace(mVcdFile, tmp_1_fu_393_p3, "tmp_1_fu_393_p3");
    sc_trace(mVcdFile, zext_ln75_fu_422_p1, "zext_ln75_fu_422_p1");
    sc_trace(mVcdFile, add_ln75_fu_426_p2, "add_ln75_fu_426_p2");
    sc_trace(mVcdFile, grp_fu_470_p0, "grp_fu_470_p0");
    sc_trace(mVcdFile, trunc_ln85_fu_480_p1, "trunc_ln85_fu_480_p1");
    sc_trace(mVcdFile, or_ln97_fu_525_p2, "or_ln97_fu_525_p2");
    sc_trace(mVcdFile, tmp_2_fu_554_p3, "tmp_2_fu_554_p3");
    sc_trace(mVcdFile, zext_ln104_fu_582_p1, "zext_ln104_fu_582_p1");
    sc_trace(mVcdFile, or_ln105_fu_615_p2, "or_ln105_fu_615_p2");
    sc_trace(mVcdFile, tmp_3_fu_620_p3, "tmp_3_fu_620_p3");
    sc_trace(mVcdFile, grp_fu_470_ap_start, "grp_fu_470_ap_start");
    sc_trace(mVcdFile, grp_fu_470_ap_done, "grp_fu_470_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

SetKey::~SetKey() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete initial_parray_U;
    delete initial_sbox_U;
    delete grp_Encrypt_SetKey_fu_330;
    delete SetKey_Encrypt_urcud_U5;
}

void SetKey::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void SetKey::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln82_fu_436_p2.read()))) {
        data_0_reg_248 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        data_0_reg_248 = data_reg_725.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_Encrypt_SetKey_fu_330_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_566_p3.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln94_fu_504_p2.read())))) {
            grp_Encrypt_SetKey_fu_330_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_Encrypt_SetKey_fu_330_ap_ready.read())) {
            grp_Encrypt_SetKey_fu_330_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln68_fu_364_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_214 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln74_fu_410_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_214 = i_1_reg_659.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln73_fu_381_p2.read(), ap_const_lv1_1))) {
        i2_0_reg_236 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        i2_0_reg_236 = i_3_reg_697.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln82_fu_436_p2.read()))) {
        i4_0_reg_295 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        i4_0_reg_295 = i_2_fu_536_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_566_p3.read()))) {
        i5_0_reg_307 = i_4_reg_755.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_fu_504_p2.read()))) {
        i5_0_reg_307 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_203 = i_reg_641.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_203 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln82_fu_436_p2.read()))) {
        j3_0_reg_260 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        j3_0_reg_260 = j_1_reg_705.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        j6_0_reg_319 = j_2_reg_788.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln101_fu_542_p2.read()))) {
        j6_0_reg_319 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_fu_381_p2.read()))) {
        j_0_reg_225 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_0_reg_225 = j_reg_679.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        keyIndex_1_fu_70 = grp_fu_470_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln73_fu_381_p2.read(), ap_const_lv1_1))) {
        keyIndex_1_fu_70 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln82_fu_436_p2.read()))) {
        left_0_reg_283 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        left_0_reg_283 = reg_350.read();
    }
    if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_330_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        left_1_fu_74 = grp_Encrypt_SetKey_fu_330_ap_return_0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_fu_504_p2.read()))) {
        left_1_fu_74 = left_0_reg_283.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln82_fu_436_p2.read()))) {
        right_0_reg_271 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        right_0_reg_271 = reg_357.read();
    }
    if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_330_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        right_1_fu_78 = grp_Encrypt_SetKey_fu_330_ap_return_1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_fu_504_p2.read()))) {
        right_1_fu_78 = right_0_reg_271.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(icmp_ln84_fu_448_p2.read(), ap_const_lv1_1))) {
        P_addr_3_reg_720 =  (sc_lv<5>) (zext_ln88_fu_475_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_566_p3.read()))) {
        add_ln104_reg_778 = add_ln104_fu_586_p2.read();
        j_2_reg_788 = j_2_fu_595_p2.read();
        trunc_ln102_reg_783 = trunc_ln102_fu_591_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        data_reg_725 = data_fu_484_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_1_reg_659 = i_1_fu_387_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_3_reg_697 = i_3_fu_442_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        i_4_reg_755 = i_4_fu_548_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_641 = i_fu_370_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_1_reg_705 = j_1_fu_454_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_reg_679 = j_fu_416_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && 
  esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_330_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_330_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())))) {
        reg_350 = grp_Encrypt_SetKey_fu_330_ap_return_0.read();
        reg_357 = grp_Encrypt_SetKey_fu_330_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln101_fu_542_p2.read()))) {
        zext_ln102_reg_760 = zext_ln102_fu_562_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln68_fu_364_p2.read(), ap_const_lv1_0))) {
        zext_ln69_reg_646 = zext_ln69_fu_376_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln73_fu_381_p2.read()))) {
        zext_ln74_reg_664 = zext_ln74_fu_401_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln74_fu_410_p2.read()))) {
        zext_ln75_1_reg_684 = zext_ln75_1_fu_431_p1.read();
    }
}

void SetKey::thread_P_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        P_address0 =  (sc_lv<5>) (zext_ln96_fu_520_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        P_address0 = P_addr_3_reg_720.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        P_address0 =  (sc_lv<5>) (zext_ln88_fu_475_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        P_address0 =  (sc_lv<5>) (zext_ln69_reg_646.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        P_address0 = grp_Encrypt_SetKey_fu_330_P_address0.read();
    } else {
        P_address0 = "XXXXX";
    }
}

void SetKey::thread_P_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        P_address1 =  (sc_lv<5>) (zext_ln97_fu_531_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        P_address1 = grp_Encrypt_SetKey_fu_330_P_address1.read();
    } else {
        P_address1 = "XXXXX";
    }
}

void SetKey::thread_P_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()))) {
        P_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        P_ce0 = grp_Encrypt_SetKey_fu_330_P_ce0.read();
    } else {
        P_ce0 = ap_const_logic_0;
    }
}

void SetKey::thread_P_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        P_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        P_ce1 = grp_Encrypt_SetKey_fu_330_P_ce1.read();
    } else {
        P_ce1 = ap_const_logic_0;
    }
}

void SetKey::thread_P_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        P_d0 = reg_350.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read())) {
        P_d0 = xor_ln88_fu_497_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        P_d0 = initial_parray_q0.read();
    } else {
        P_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SetKey::thread_P_d1() {
    P_d1 = reg_357.read();
}

void SetKey::thread_P_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()))) {
        P_we0 = ap_const_logic_1;
    } else {
        P_we0 = ap_const_logic_0;
    }
}

void SetKey::thread_P_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        P_we1 = ap_const_logic_1;
    } else {
        P_we1 = ap_const_logic_0;
    }
}

void SetKey::thread_S_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        S_address0 =  (sc_lv<10>) (zext_ln104_1_fu_611_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        S_address0 =  (sc_lv<10>) (zext_ln75_1_reg_684.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        S_address0 = grp_Encrypt_SetKey_fu_330_S_address0.read();
    } else {
        S_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void SetKey::thread_S_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        S_address1 =  (sc_lv<10>) (zext_ln105_fu_628_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        S_address1 = grp_Encrypt_SetKey_fu_330_S_address1.read();
    } else {
        S_address1 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void SetKey::thread_S_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()))) {
        S_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        S_ce0 = grp_Encrypt_SetKey_fu_330_S_ce0.read();
    } else {
        S_ce0 = ap_const_logic_0;
    }
}

void SetKey::thread_S_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        S_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        S_ce1 = grp_Encrypt_SetKey_fu_330_S_ce1.read();
    } else {
        S_ce1 = ap_const_logic_0;
    }
}

void SetKey::thread_S_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        S_d0 = reg_350.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        S_d0 = initial_sbox_q0.read();
    } else {
        S_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SetKey::thread_S_d1() {
    S_d1 = reg_357.read();
}

void SetKey::thread_S_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()))) {
        S_we0 = ap_const_logic_1;
    } else {
        S_we0 = ap_const_logic_0;
    }
}

void SetKey::thread_S_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        S_we1 = ap_const_logic_1;
    } else {
        S_we1 = ap_const_logic_0;
    }
}

void SetKey::thread_add_ln104_fu_586_p2() {
    add_ln104_fu_586_p2 = (!zext_ln104_fu_582_p1.read().is_01() || !zext_ln102_reg_760.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln104_fu_582_p1.read()) + sc_biguint<12>(zext_ln102_reg_760.read()));
}

void SetKey::thread_add_ln75_fu_426_p2() {
    add_ln75_fu_426_p2 = (!zext_ln74_reg_664.read().is_01() || !zext_ln75_fu_422_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln74_reg_664.read()) + sc_biguint<12>(zext_ln75_fu_422_p1.read()));
}

void SetKey::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void SetKey::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void SetKey::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void SetKey::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void SetKey::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void SetKey::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void SetKey::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void SetKey::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[74];
}

void SetKey::thread_ap_CS_fsm_state76() {
    ap_CS_fsm_state76 = ap_CS_fsm.read()[75];
}

void SetKey::thread_ap_CS_fsm_state77() {
    ap_CS_fsm_state77 = ap_CS_fsm.read()[76];
}

void SetKey::thread_ap_CS_fsm_state78() {
    ap_CS_fsm_state78 = ap_CS_fsm.read()[77];
}

void SetKey::thread_ap_CS_fsm_state79() {
    ap_CS_fsm_state79 = ap_CS_fsm.read()[78];
}

void SetKey::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void SetKey::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[79];
}

void SetKey::thread_ap_CS_fsm_state81() {
    ap_CS_fsm_state81 = ap_CS_fsm.read()[80];
}

void SetKey::thread_ap_CS_fsm_state82() {
    ap_CS_fsm_state82 = ap_CS_fsm.read()[81];
}

void SetKey::thread_ap_CS_fsm_state83() {
    ap_CS_fsm_state83 = ap_CS_fsm.read()[82];
}

void SetKey::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void SetKey::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln101_fu_542_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void SetKey::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void SetKey::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln101_fu_542_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void SetKey::thread_data_fu_484_p3() {
    data_fu_484_p3 = esl_concat<24,8>(trunc_ln85_fu_480_p1.read(), key_q0.read());
}

void SetKey::thread_grp_Encrypt_SetKey_fu_330_ap_start() {
    grp_Encrypt_SetKey_fu_330_ap_start = grp_Encrypt_SetKey_fu_330_ap_start_reg.read();
}

void SetKey::thread_grp_Encrypt_SetKey_fu_330_left_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        grp_Encrypt_SetKey_fu_330_left_read = left_1_fu_74.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        grp_Encrypt_SetKey_fu_330_left_read = left_0_reg_283.read();
    } else {
        grp_Encrypt_SetKey_fu_330_left_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SetKey::thread_grp_Encrypt_SetKey_fu_330_right_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read())) {
        grp_Encrypt_SetKey_fu_330_right_read = right_1_fu_78.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        grp_Encrypt_SetKey_fu_330_right_read = right_0_reg_271.read();
    } else {
        grp_Encrypt_SetKey_fu_330_right_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SetKey::thread_grp_fu_470_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln84_fu_448_p2.read()))) {
        grp_fu_470_ap_start = ap_const_logic_1;
    } else {
        grp_fu_470_ap_start = ap_const_logic_0;
    }
}

void SetKey::thread_grp_fu_470_p0() {
    grp_fu_470_p0 = (!ap_const_lv64_1.is_01() || !keyIndex_1_fu_70.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(keyIndex_1_fu_70.read()));
}

void SetKey::thread_i_1_fu_387_p2() {
    i_1_fu_387_p2 = (!i1_0_reg_214.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i1_0_reg_214.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void SetKey::thread_i_2_fu_536_p2() {
    i_2_fu_536_p2 = (!i4_0_reg_295.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(i4_0_reg_295.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void SetKey::thread_i_3_fu_442_p2() {
    i_3_fu_442_p2 = (!i2_0_reg_236.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i2_0_reg_236.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void SetKey::thread_i_4_fu_548_p2() {
    i_4_fu_548_p2 = (!i5_0_reg_307.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i5_0_reg_307.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void SetKey::thread_i_fu_370_p2() {
    i_fu_370_p2 = (!i_0_reg_203.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_203.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void SetKey::thread_icmp_ln101_fu_542_p2() {
    icmp_ln101_fu_542_p2 = (!i5_0_reg_307.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i5_0_reg_307.read() == ap_const_lv3_4);
}

void SetKey::thread_icmp_ln68_fu_364_p2() {
    icmp_ln68_fu_364_p2 = (!i_0_reg_203.read().is_01() || !ap_const_lv5_12.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_203.read() == ap_const_lv5_12);
}

void SetKey::thread_icmp_ln73_fu_381_p2() {
    icmp_ln73_fu_381_p2 = (!i1_0_reg_214.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_214.read() == ap_const_lv3_4);
}

void SetKey::thread_icmp_ln74_fu_410_p2() {
    icmp_ln74_fu_410_p2 = (!j_0_reg_225.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_225.read() == ap_const_lv9_100);
}

void SetKey::thread_icmp_ln82_fu_436_p2() {
    icmp_ln82_fu_436_p2 = (!i2_0_reg_236.read().is_01() || !ap_const_lv5_12.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_236.read() == ap_const_lv5_12);
}

void SetKey::thread_icmp_ln84_fu_448_p2() {
    icmp_ln84_fu_448_p2 = (!j3_0_reg_260.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j3_0_reg_260.read() == ap_const_lv3_4);
}

void SetKey::thread_icmp_ln94_fu_504_p2() {
    icmp_ln94_fu_504_p2 = (!i4_0_reg_295.read().is_01() || !ap_const_lv5_12.is_01())? sc_lv<1>(): (sc_biguint<5>(i4_0_reg_295.read()) < sc_biguint<5>(ap_const_lv5_12));
}

void SetKey::thread_initial_parray_address0() {
    initial_parray_address0 =  (sc_lv<5>) (zext_ln69_fu_376_p1.read());
}

void SetKey::thread_initial_parray_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        initial_parray_ce0 = ap_const_logic_1;
    } else {
        initial_parray_ce0 = ap_const_logic_0;
    }
}

void SetKey::thread_initial_sbox_address0() {
    initial_sbox_address0 =  (sc_lv<10>) (zext_ln75_1_fu_431_p1.read());
}

void SetKey::thread_initial_sbox_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        initial_sbox_ce0 = ap_const_logic_1;
    } else {
        initial_sbox_ce0 = ap_const_logic_0;
    }
}

void SetKey::thread_j_1_fu_454_p2() {
    j_1_fu_454_p2 = (!j3_0_reg_260.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j3_0_reg_260.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void SetKey::thread_j_2_fu_595_p2() {
    j_2_fu_595_p2 = (!ap_const_lv9_2.is_01() || !j6_0_reg_319.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_2) + sc_biguint<9>(j6_0_reg_319.read()));
}

void SetKey::thread_j_fu_416_p2() {
    j_fu_416_p2 = (!j_0_reg_225.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j_0_reg_225.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void SetKey::thread_key_address0() {
    key_address0 =  (sc_lv<6>) (keyIndex_1_fu_70.read());
}

void SetKey::thread_key_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        key_ce0 = ap_const_logic_1;
    } else {
        key_ce0 = ap_const_logic_0;
    }
}

void SetKey::thread_or_ln105_fu_615_p2() {
    or_ln105_fu_615_p2 = (trunc_ln102_reg_783.read() | ap_const_lv8_1);
}

void SetKey::thread_or_ln97_fu_525_p2() {
    or_ln97_fu_525_p2 = (i4_0_reg_295.read() | ap_const_lv5_1);
}

void SetKey::thread_tmp_1_fu_393_p3() {
    tmp_1_fu_393_p3 = esl_concat<3,8>(i1_0_reg_214.read(), ap_const_lv8_0);
}

void SetKey::thread_tmp_2_fu_554_p3() {
    tmp_2_fu_554_p3 = esl_concat<3,8>(i5_0_reg_307.read(), ap_const_lv8_0);
}

void SetKey::thread_tmp_3_fu_620_p3() {
    tmp_3_fu_620_p3 = esl_concat<3,8>(i5_0_reg_307.read(), or_ln105_fu_615_p2.read());
}

void SetKey::thread_tmp_fu_566_p3() {
    tmp_fu_566_p3 = j6_0_reg_319.read().range(8, 8);
}

void SetKey::thread_trunc_ln102_fu_591_p1() {
    trunc_ln102_fu_591_p1 = j6_0_reg_319.read().range(8-1, 0);
}

void SetKey::thread_trunc_ln85_fu_480_p1() {
    trunc_ln85_fu_480_p1 = data_0_reg_248.read().range(24-1, 0);
}

void SetKey::thread_xor_ln88_fu_497_p2() {
    xor_ln88_fu_497_p2 = (P_q0.read() ^ data_0_reg_248.read());
}

void SetKey::thread_zext_ln102_fu_562_p1() {
    zext_ln102_fu_562_p1 = esl_zext<12,11>(tmp_2_fu_554_p3.read());
}

void SetKey::thread_zext_ln104_1_fu_611_p1() {
    zext_ln104_1_fu_611_p1 = esl_zext<64,12>(add_ln104_reg_778.read());
}

void SetKey::thread_zext_ln104_fu_582_p1() {
    zext_ln104_fu_582_p1 = esl_zext<12,9>(j6_0_reg_319.read());
}

void SetKey::thread_zext_ln105_fu_628_p1() {
    zext_ln105_fu_628_p1 = esl_zext<64,11>(tmp_3_fu_620_p3.read());
}

void SetKey::thread_zext_ln69_fu_376_p1() {
    zext_ln69_fu_376_p1 = esl_zext<64,5>(i_0_reg_203.read());
}

void SetKey::thread_zext_ln74_fu_401_p1() {
    zext_ln74_fu_401_p1 = esl_zext<12,11>(tmp_1_fu_393_p3.read());
}

void SetKey::thread_zext_ln75_1_fu_431_p1() {
    zext_ln75_1_fu_431_p1 = esl_zext<64,12>(add_ln75_fu_426_p2.read());
}

void SetKey::thread_zext_ln75_fu_422_p1() {
    zext_ln75_fu_422_p1 = esl_zext<12,9>(j_0_reg_225.read());
}

void SetKey::thread_zext_ln88_fu_475_p1() {
    zext_ln88_fu_475_p1 = esl_zext<64,5>(i2_0_reg_236.read());
}

void SetKey::thread_zext_ln96_fu_520_p1() {
    zext_ln96_fu_520_p1 = esl_zext<64,5>(i4_0_reg_295.read());
}

void SetKey::thread_zext_ln97_fu_531_p1() {
    zext_ln97_fu_531_p1 = esl_zext<64,5>(or_ln97_fu_525_p2.read());
}

void SetKey::thread_ap_NS_fsm() {
    if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln68_fu_364_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state4;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state2;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln73_fu_381_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state7;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln74_fu_410_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state4;
        } else {
            ap_NS_fsm = ap_ST_fsm_state6;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln82_fu_436_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state77;
        } else {
            ap_NS_fsm = ap_ST_fsm_state8;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(icmp_ln84_fu_448_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state76;
        } else {
            ap_NS_fsm = ap_ST_fsm_state9;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_fu_504_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state80;
        } else {
            ap_NS_fsm = ap_ST_fsm_state78;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_330_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state79;
        } else {
            ap_NS_fsm = ap_ST_fsm_state78;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln101_fu_542_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state81;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_566_p3.read()))) {
            ap_NS_fsm = ap_ST_fsm_state80;
        } else {
            ap_NS_fsm = ap_ST_fsm_state82;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        if ((esl_seteq<1,1,1>(grp_Encrypt_SetKey_fu_330_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
            ap_NS_fsm = ap_ST_fsm_state83;
        } else {
            ap_NS_fsm = ap_ST_fsm_state82;
        }
    }
    else if (esl_seteq<1,83,83>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<83>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
}

