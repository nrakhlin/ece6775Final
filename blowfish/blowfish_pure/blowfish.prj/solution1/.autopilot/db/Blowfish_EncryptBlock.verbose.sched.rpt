

================================================================
== Vivado HLS Report for 'Blowfish_EncryptBlock'
================================================================
* Date:           Wed Nov 13 22:31:05 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        blowfish.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 6.799 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       66|       66| 0.660 us | 0.660 us |   66|   66|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                 |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- ENCRYPTBLOCK1  |       64|       64|         4|          -|          -|    16|    no    |
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 6 
3 --> 4 
4 --> 5 
5 --> 2 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([18 x i32]* %Blowfish_pary_s), !map !28"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1024 x i32]* %Blowfish_sbox_s), !map !34"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %left_r), !map !41"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %right_r), !map !47"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([23 x i8]* @Blowfish_KD_KD_Encr) nounwind"   --->   Operation 11 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.76ns)   --->   "br label %1" [blowfish.cpp:184]   --->   Operation 12 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.32>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 13 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (1.36ns)   --->   "%icmp_ln184 = icmp eq i5 %i_0, -16" [blowfish.cpp:184]   --->   Operation 14 'icmp' 'icmp_ln184' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 15 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (1.78ns)   --->   "%i = add i5 %i_0, 1" [blowfish.cpp:184]   --->   Operation 16 'add' 'i' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "br i1 %icmp_ln184, label %3, label %2" [blowfish.cpp:184]   --->   Operation 17 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln185 = zext i5 %i_0 to i64" [blowfish.cpp:185]   --->   Operation 18 'zext' 'zext_ln185' <Predicate = (!icmp_ln184)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%Blowfish_pary_addr_2 = getelementptr [18 x i32]* %Blowfish_pary_s, i64 0, i64 %zext_ln185" [blowfish.cpp:185]   --->   Operation 19 'getelementptr' 'Blowfish_pary_addr_2' <Predicate = (!icmp_ln184)> <Delay = 0.00>
ST_2 : Operation 20 [2/2] (2.32ns)   --->   "%Blowfish_pary_load_2 = load i32* %Blowfish_pary_addr_2, align 4" [blowfish.cpp:185]   --->   Operation 20 'load' 'Blowfish_pary_load_2' <Predicate = (!icmp_ln184)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%Blowfish_pary_addr = getelementptr [18 x i32]* %Blowfish_pary_s, i64 0, i64 16" [blowfish.cpp:197]   --->   Operation 21 'getelementptr' 'Blowfish_pary_addr' <Predicate = (icmp_ln184)> <Delay = 0.00>
ST_2 : Operation 22 [2/2] (2.32ns)   --->   "%Blowfish_pary_load = load i32* %Blowfish_pary_addr, align 4" [blowfish.cpp:197]   --->   Operation 22 'load' 'Blowfish_pary_load' <Predicate = (icmp_ln184)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%Blowfish_pary_addr_1 = getelementptr [18 x i32]* %Blowfish_pary_s, i64 0, i64 17" [blowfish.cpp:198]   --->   Operation 23 'getelementptr' 'Blowfish_pary_addr_1' <Predicate = (icmp_ln184)> <Delay = 0.00>
ST_2 : Operation 24 [2/2] (2.32ns)   --->   "%Blowfish_pary_load_1 = load i32* %Blowfish_pary_addr_1, align 4" [blowfish.cpp:198]   --->   Operation 24 'load' 'Blowfish_pary_load_1' <Predicate = (icmp_ln184)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 3 <SV = 2> <Delay = 6.61>
ST_3 : Operation 25 [1/2] (2.32ns)   --->   "%Blowfish_pary_load_2 = load i32* %Blowfish_pary_addr_2, align 4" [blowfish.cpp:185]   --->   Operation 25 'load' 'Blowfish_pary_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%left_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %left_r)" [blowfish.cpp:185]   --->   Operation 26 'read' 'left_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln185 = trunc i32 %Blowfish_pary_load_2 to i8" [blowfish.cpp:185]   --->   Operation 27 'trunc' 'trunc_ln185' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln185_1 = trunc i32 %left_read to i8" [blowfish.cpp:185]   --->   Operation 28 'trunc' 'trunc_ln185_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%trunc_ln185_2 = trunc i32 %Blowfish_pary_load_2 to i24" [blowfish.cpp:185]   --->   Operation 29 'trunc' 'trunc_ln185_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln185_3 = trunc i32 %left_read to i24" [blowfish.cpp:185]   --->   Operation 30 'trunc' 'trunc_ln185_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln185_4 = trunc i32 %Blowfish_pary_load_2 to i16" [blowfish.cpp:185]   --->   Operation 31 'trunc' 'trunc_ln185_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln185_5 = trunc i32 %left_read to i16" [blowfish.cpp:185]   --->   Operation 32 'trunc' 'trunc_ln185_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.99ns)   --->   "%temp_1 = xor i32 %left_read, %Blowfish_pary_load_2" [blowfish.cpp:185]   --->   Operation 33 'xor' 'temp_1' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.99ns)   --->   "%xor_ln275 = xor i16 %trunc_ln185_5, %trunc_ln185_4" [blowfish.cpp:275->blowfish.cpp:186]   --->   Operation 34 'xor' 'xor_ln275' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (1.03ns)   --->   "%xor_ln275_1 = xor i24 %trunc_ln185_3, %trunc_ln185_2" [blowfish.cpp:275->blowfish.cpp:186]   --->   Operation 35 'xor' 'xor_ln275_1' <Predicate = true> <Delay = 1.03> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%a = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %temp_1, i32 24, i32 31)" [blowfish.cpp:279->blowfish.cpp:186]   --->   Operation 36 'partselect' 'a' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%b = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %xor_ln275_1, i32 16, i32 23)" [blowfish.cpp:280->blowfish.cpp:186]   --->   Operation 37 'partselect' 'b' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%c = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %xor_ln275, i32 8, i32 15)" [blowfish.cpp:281->blowfish.cpp:186]   --->   Operation 38 'partselect' 'c' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.99ns)   --->   "%d = xor i8 %trunc_ln185_1, %trunc_ln185" [blowfish.cpp:282->blowfish.cpp:186]   --->   Operation 39 'xor' 'd' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln284 = zext i8 %a to i64" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 40 'zext' 'zext_ln284' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%Blowfish_sbox_addr = getelementptr [1024 x i32]* %Blowfish_sbox_s, i64 0, i64 %zext_ln284" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 41 'getelementptr' 'Blowfish_sbox_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [2/2] (3.25ns)   --->   "%Blowfish_sbox_load = load i32* %Blowfish_sbox_addr, align 4" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 42 'load' 'Blowfish_sbox_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%tmp = call i64 @_ssdm_op_BitConcatenate.i64.i56.i8(i56 1, i8 %b)" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 43 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%Blowfish_sbox_addr_1 = getelementptr [1024 x i32]* %Blowfish_sbox_s, i64 0, i64 %tmp" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 44 'getelementptr' 'Blowfish_sbox_addr_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [2/2] (3.25ns)   --->   "%Blowfish_sbox_load_1 = load i32* %Blowfish_sbox_addr_1, align 4" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 45 'load' 'Blowfish_sbox_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 4 <SV = 3> <Delay = 5.80>
ST_4 : Operation 46 [1/2] (3.25ns)   --->   "%Blowfish_sbox_load = load i32* %Blowfish_sbox_addr, align 4" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 46 'load' 'Blowfish_sbox_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_4 : Operation 47 [1/2] (3.25ns)   --->   "%Blowfish_sbox_load_1 = load i32* %Blowfish_sbox_addr_1, align 4" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 47 'load' 'Blowfish_sbox_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_4 : Operation 48 [1/1] (2.55ns)   --->   "%add_ln284 = add i32 %Blowfish_sbox_load, %Blowfish_sbox_load_1" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 48 'add' 'add_ln284' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_1 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i8(i56 2, i8 %c)" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 49 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%Blowfish_sbox_addr_2 = getelementptr [1024 x i32]* %Blowfish_sbox_s, i64 0, i64 %tmp_1" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 50 'getelementptr' 'Blowfish_sbox_addr_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [2/2] (3.25ns)   --->   "%Blowfish_sbox_load_2 = load i32* %Blowfish_sbox_addr_2, align 4" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 51 'load' 'Blowfish_sbox_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_2 = call i64 @_ssdm_op_BitConcatenate.i64.i56.i8(i56 3, i8 %d)" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 52 'bitconcatenate' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%Blowfish_sbox_addr_3 = getelementptr [1024 x i32]* %Blowfish_sbox_s, i64 0, i64 %tmp_2" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 53 'getelementptr' 'Blowfish_sbox_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [2/2] (3.25ns)   --->   "%Blowfish_sbox_load_3 = load i32* %Blowfish_sbox_addr_3, align 4" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 54 'load' 'Blowfish_sbox_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>

State 5 <SV = 4> <Delay = 6.79>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str7) nounwind" [blowfish.cpp:184]   --->   Operation 55 'specloopname' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/2] (3.25ns)   --->   "%Blowfish_sbox_load_2 = load i32* %Blowfish_sbox_addr_2, align 4" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 56 'load' 'Blowfish_sbox_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_5 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node add_ln284_1)   --->   "%xor_ln284 = xor i32 %Blowfish_sbox_load_2, %add_ln284" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 57 'xor' 'xor_ln284' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/2] (3.25ns)   --->   "%Blowfish_sbox_load_3 = load i32* %Blowfish_sbox_addr_3, align 4" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 58 'load' 'Blowfish_sbox_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_5 : Operation 59 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln284_1 = add i32 %Blowfish_sbox_load_3, %xor_ln284" [blowfish.cpp:284->blowfish.cpp:186]   --->   Operation 59 'add' 'add_ln284_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%right_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %right_r)" [blowfish.cpp:186]   --->   Operation 60 'read' 'right_read_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.99ns)   --->   "%xor_ln186 = xor i32 %right_read_1, %add_ln284_1" [blowfish.cpp:186]   --->   Operation 61 'xor' 'xor_ln186' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %left_r, i32 %xor_ln186)" [blowfish.cpp:189]   --->   Operation 62 'write' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %right_r, i32 %temp_1)" [blowfish.cpp:190]   --->   Operation 63 'write' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "br label %1" [blowfish.cpp:184]   --->   Operation 64 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 2> <Delay = 3.31>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%temp = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %left_r)" [blowfish.cpp:193]   --->   Operation 65 'read' 'temp' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%right_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %right_r)" [blowfish.cpp:194]   --->   Operation 66 'read' 'right_read' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/2] (2.32ns)   --->   "%Blowfish_pary_load = load i32* %Blowfish_pary_addr, align 4" [blowfish.cpp:197]   --->   Operation 67 'load' 'Blowfish_pary_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_6 : Operation 68 [1/1] (0.99ns)   --->   "%xor_ln197 = xor i32 %Blowfish_pary_load, %temp" [blowfish.cpp:197]   --->   Operation 68 'xor' 'xor_ln197' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %right_r, i32 %xor_ln197)" [blowfish.cpp:197]   --->   Operation 69 'write' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/2] (2.32ns)   --->   "%Blowfish_pary_load_1 = load i32* %Blowfish_pary_addr_1, align 4" [blowfish.cpp:198]   --->   Operation 70 'load' 'Blowfish_pary_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 18> <RAM>
ST_6 : Operation 71 [1/1] (0.99ns)   --->   "%xor_ln198 = xor i32 %right_read, %Blowfish_pary_load_1" [blowfish.cpp:198]   --->   Operation 71 'xor' 'xor_ln198' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i32P(i32* %left_r, i32 %xor_ln198)" [blowfish.cpp:198]   --->   Operation 72 'write' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "ret void" [blowfish.cpp:199]   --->   Operation 73 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', blowfish.cpp:184) [12]  (1.77 ns)

 <State 2>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', blowfish.cpp:184) [12]  (0 ns)
	'getelementptr' operation ('Blowfish_pary_addr_2', blowfish.cpp:185) [20]  (0 ns)
	'load' operation ('Blowfish_pary_load_2', blowfish.cpp:185) on array 'Blowfish_pary_s' [21]  (2.32 ns)

 <State 3>: 6.61ns
The critical path consists of the following:
	'load' operation ('Blowfish_pary_load_2', blowfish.cpp:185) on array 'Blowfish_pary_s' [21]  (2.32 ns)
	'xor' operation ('xor_ln275_1', blowfish.cpp:275->blowfish.cpp:186) [31]  (1.03 ns)
	'getelementptr' operation ('Blowfish_sbox_addr_1', blowfish.cpp:284->blowfish.cpp:186) [40]  (0 ns)
	'load' operation ('Blowfish_sbox_load_1', blowfish.cpp:284->blowfish.cpp:186) on array 'Blowfish_sbox_s' [41]  (3.25 ns)

 <State 4>: 5.81ns
The critical path consists of the following:
	'load' operation ('Blowfish_sbox_load', blowfish.cpp:284->blowfish.cpp:186) on array 'Blowfish_sbox_s' [38]  (3.25 ns)
	'add' operation ('add_ln284', blowfish.cpp:284->blowfish.cpp:186) [42]  (2.55 ns)

 <State 5>: 6.8ns
The critical path consists of the following:
	'load' operation ('Blowfish_sbox_load_2', blowfish.cpp:284->blowfish.cpp:186) on array 'Blowfish_sbox_s' [45]  (3.25 ns)
	'xor' operation ('xor_ln284', blowfish.cpp:284->blowfish.cpp:186) [46]  (0 ns)
	'add' operation ('add_ln284_1', blowfish.cpp:284->blowfish.cpp:186) [50]  (2.55 ns)
	'xor' operation ('xor_ln186', blowfish.cpp:186) [52]  (0.993 ns)

 <State 6>: 3.31ns
The critical path consists of the following:
	'load' operation ('Blowfish_pary_load', blowfish.cpp:197) on array 'Blowfish_pary_s' [60]  (2.32 ns)
	'xor' operation ('xor_ln197', blowfish.cpp:197) [61]  (0.993 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
