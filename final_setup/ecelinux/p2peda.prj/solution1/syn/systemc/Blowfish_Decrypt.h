// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Blowfish_Decrypt_HH_
#define _Blowfish_Decrypt_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Blowfish_Decrypt_P.h"
#include "Blowfish_Decrypt_g8j.h"
#include "Blowfish_Decrypt_hbi.h"
#include "Blowfish_Decrypt_ibs.h"
#include "Blowfish_Decrypt_jbC.h"

namespace ap_rtl {

struct Blowfish_Decrypt : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > ciphertext_address0;
    sc_out< sc_logic > ciphertext_ce0;
    sc_in< sc_lv<8> > ciphertext_q0;
    sc_out< sc_lv<3> > ciphertext_address1;
    sc_out< sc_logic > ciphertext_ce1;
    sc_in< sc_lv<8> > ciphertext_q1;
    sc_out< sc_lv<3> > decryptedtext_address0;
    sc_out< sc_logic > decryptedtext_ce0;
    sc_out< sc_logic > decryptedtext_we0;
    sc_out< sc_lv<8> > decryptedtext_d0;
    sc_out< sc_lv<3> > decryptedtext_address1;
    sc_out< sc_logic > decryptedtext_ce1;
    sc_out< sc_logic > decryptedtext_we1;
    sc_out< sc_lv<8> > decryptedtext_d1;


    // Module declarations
    Blowfish_Decrypt(sc_module_name name);
    SC_HAS_PROCESS(Blowfish_Decrypt);

    ~Blowfish_Decrypt();

    sc_trace_file* mVcdFile;

    Blowfish_Decrypt_P* P_U;
    Blowfish_Decrypt_g8j* S_0_U;
    Blowfish_Decrypt_hbi* S_1_U;
    Blowfish_Decrypt_ibs* S_2_U;
    Blowfish_Decrypt_jbC* S_3_U;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > P_address0;
    sc_signal< sc_logic > P_ce0;
    sc_signal< sc_lv<32> > P_q0;
    sc_signal< sc_lv<8> > S_0_address0;
    sc_signal< sc_logic > S_0_ce0;
    sc_signal< sc_lv<32> > S_0_q0;
    sc_signal< sc_lv<8> > S_1_address0;
    sc_signal< sc_logic > S_1_ce0;
    sc_signal< sc_lv<32> > S_1_q0;
    sc_signal< sc_lv<8> > S_2_address0;
    sc_signal< sc_logic > S_2_ce0;
    sc_signal< sc_lv<32> > S_2_q0;
    sc_signal< sc_lv<8> > S_3_address0;
    sc_signal< sc_logic > S_3_ce0;
    sc_signal< sc_lv<32> > S_3_q0;
    sc_signal< sc_lv<8> > ciphertext_load_reg_642;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > ciphertext_load_1_reg_647;
    sc_signal< sc_lv<8> > ciphertext_load_2_reg_662;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > ciphertext_load_3_reg_667;
    sc_signal< sc_lv<8> > ciphertext_load_4_reg_682;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > ciphertext_load_5_reg_687;
    sc_signal< sc_lv<32> > left_fu_344_p5;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > right_1_fu_352_p5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln109_fu_372_p2;
    sc_signal< sc_lv<5> > i_fu_383_p2;
    sc_signal< sc_lv<5> > i_reg_720;
    sc_signal< sc_lv<32> > left_4_fu_447_p2;
    sc_signal< sc_lv<32> > left_4_reg_725;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > add_ln140_1_fu_533_p2;
    sc_signal< sc_lv<32> > add_ln140_1_reg_750;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > right_fu_539_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > trunc_ln115_fu_572_p1;
    sc_signal< sc_lv<8> > trunc_ln115_reg_760;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<8> > trunc_ln268_1_reg_765;
    sc_signal< sc_lv<32> > left_1_reg_313;
    sc_signal< sc_lv<32> > right_2_reg_323;
    sc_signal< sc_lv<5> > i_0_reg_333;
    sc_signal< sc_lv<64> > zext_ln110_fu_378_p1;
    sc_signal< sc_lv<64> > zext_ln140_fu_501_p1;
    sc_signal< sc_lv<64> > zext_ln140_1_fu_506_p1;
    sc_signal< sc_lv<64> > zext_ln140_2_fu_511_p1;
    sc_signal< sc_lv<64> > zext_ln140_3_fu_516_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<8> > xor_ln262_fu_399_p2;
    sc_signal< sc_lv<8> > xor_ln263_fu_416_p2;
    sc_signal< sc_lv<8> > xor_ln264_fu_558_p2;
    sc_signal< sc_lv<8> > xor_ln265_fu_565_p2;
    sc_signal< sc_lv<8> > xor_ln266_fu_586_p2;
    sc_signal< sc_lv<8> > xor_ln267_fu_603_p2;
    sc_signal< sc_lv<8> > xor_ln268_fu_620_p2;
    sc_signal< sc_lv<8> > xor_ln269_fu_626_p2;
    sc_signal< sc_lv<4> > tmp_fu_362_p4;
    sc_signal< sc_lv<8> > trunc_ln262_1_fu_389_p4;
    sc_signal< sc_lv<8> > trunc_ln263_1_fu_406_p4;
    sc_signal< sc_lv<16> > trunc_ln110_5_fu_443_p1;
    sc_signal< sc_lv<16> > trunc_ln110_4_fu_439_p1;
    sc_signal< sc_lv<24> > trunc_ln110_3_fu_435_p1;
    sc_signal< sc_lv<24> > trunc_ln110_2_fu_431_p1;
    sc_signal< sc_lv<24> > xor_ln110_2_fu_459_p2;
    sc_signal< sc_lv<16> > xor_ln110_1_fu_453_p2;
    sc_signal< sc_lv<8> > trunc_ln110_1_fu_427_p1;
    sc_signal< sc_lv<8> > trunc_ln110_fu_423_p1;
    sc_signal< sc_lv<8> > a_fu_465_p4;
    sc_signal< sc_lv<8> > b_fu_475_p4;
    sc_signal< sc_lv<8> > c_fu_485_p4;
    sc_signal< sc_lv<8> > d_fu_495_p2;
    sc_signal< sc_lv<32> > add_ln140_fu_521_p2;
    sc_signal< sc_lv<32> > xor_ln140_fu_527_p2;
    sc_signal< sc_lv<8> > trunc_ln264_1_fu_548_p4;
    sc_signal< sc_lv<8> > trunc_ln116_fu_544_p1;
    sc_signal< sc_lv<8> > trunc_ln266_1_fu_576_p4;
    sc_signal< sc_lv<8> > trunc_ln267_1_fu_593_p4;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<8> ap_const_lv8_E1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<8> ap_const_lv8_A0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<8> ap_const_lv8_2D;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<8> ap_const_lv8_E7;
    static const sc_lv<8> ap_const_lv8_61;
    static const sc_lv<8> ap_const_lv8_4F;
    static const sc_lv<8> ap_const_lv8_4D;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_P_address0();
    void thread_P_ce0();
    void thread_S_0_address0();
    void thread_S_0_ce0();
    void thread_S_1_address0();
    void thread_S_1_ce0();
    void thread_S_2_address0();
    void thread_S_2_ce0();
    void thread_S_3_address0();
    void thread_S_3_ce0();
    void thread_a_fu_465_p4();
    void thread_add_ln140_1_fu_533_p2();
    void thread_add_ln140_fu_521_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_b_fu_475_p4();
    void thread_c_fu_485_p4();
    void thread_ciphertext_address0();
    void thread_ciphertext_address1();
    void thread_ciphertext_ce0();
    void thread_ciphertext_ce1();
    void thread_d_fu_495_p2();
    void thread_decryptedtext_address0();
    void thread_decryptedtext_address1();
    void thread_decryptedtext_ce0();
    void thread_decryptedtext_ce1();
    void thread_decryptedtext_d0();
    void thread_decryptedtext_d1();
    void thread_decryptedtext_we0();
    void thread_decryptedtext_we1();
    void thread_i_fu_383_p2();
    void thread_icmp_ln109_fu_372_p2();
    void thread_left_4_fu_447_p2();
    void thread_left_fu_344_p5();
    void thread_right_1_fu_352_p5();
    void thread_right_fu_539_p2();
    void thread_tmp_fu_362_p4();
    void thread_trunc_ln110_1_fu_427_p1();
    void thread_trunc_ln110_2_fu_431_p1();
    void thread_trunc_ln110_3_fu_435_p1();
    void thread_trunc_ln110_4_fu_439_p1();
    void thread_trunc_ln110_5_fu_443_p1();
    void thread_trunc_ln110_fu_423_p1();
    void thread_trunc_ln115_fu_572_p1();
    void thread_trunc_ln116_fu_544_p1();
    void thread_trunc_ln262_1_fu_389_p4();
    void thread_trunc_ln263_1_fu_406_p4();
    void thread_trunc_ln264_1_fu_548_p4();
    void thread_trunc_ln266_1_fu_576_p4();
    void thread_trunc_ln267_1_fu_593_p4();
    void thread_xor_ln110_1_fu_453_p2();
    void thread_xor_ln110_2_fu_459_p2();
    void thread_xor_ln140_fu_527_p2();
    void thread_xor_ln262_fu_399_p2();
    void thread_xor_ln263_fu_416_p2();
    void thread_xor_ln264_fu_558_p2();
    void thread_xor_ln265_fu_565_p2();
    void thread_xor_ln266_fu_586_p2();
    void thread_xor_ln267_fu_603_p2();
    void thread_xor_ln268_fu_620_p2();
    void thread_xor_ln269_fu_626_p2();
    void thread_zext_ln110_fu_378_p1();
    void thread_zext_ln140_1_fu_506_p1();
    void thread_zext_ln140_2_fu_511_p1();
    void thread_zext_ln140_3_fu_516_p1();
    void thread_zext_ln140_fu_501_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
