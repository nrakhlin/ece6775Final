// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "aes_encrypt.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic aes_encrypt::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic aes_encrypt::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> aes_encrypt::ap_ST_fsm_state1 = "1";
const sc_lv<7> aes_encrypt::ap_ST_fsm_state2 = "10";
const sc_lv<7> aes_encrypt::ap_ST_fsm_state3 = "100";
const sc_lv<7> aes_encrypt::ap_ST_fsm_state4 = "1000";
const sc_lv<7> aes_encrypt::ap_ST_fsm_state5 = "10000";
const sc_lv<7> aes_encrypt::ap_ST_fsm_state6 = "100000";
const sc_lv<7> aes_encrypt::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> aes_encrypt::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> aes_encrypt::ap_const_lv32_1 = "1";
const sc_lv<1> aes_encrypt::ap_const_lv1_0 = "0";
const sc_lv<32> aes_encrypt::ap_const_lv32_2 = "10";
const sc_lv<32> aes_encrypt::ap_const_lv32_4 = "100";
const sc_lv<32> aes_encrypt::ap_const_lv32_5 = "101";
const sc_lv<3> aes_encrypt::ap_const_lv3_0 = "000";
const sc_lv<1> aes_encrypt::ap_const_lv1_1 = "1";
const sc_lv<32> aes_encrypt::ap_const_lv32_3 = "11";
const sc_lv<32> aes_encrypt::ap_const_lv32_6 = "110";
const sc_lv<4> aes_encrypt::ap_const_lv4_F = "1111";
const sc_lv<4> aes_encrypt::ap_const_lv4_0 = "0000";
const sc_lv<4> aes_encrypt::ap_const_lv4_E = "1110";
const sc_lv<4> aes_encrypt::ap_const_lv4_D = "1101";
const sc_lv<4> aes_encrypt::ap_const_lv4_1 = "1";
const sc_lv<4> aes_encrypt::ap_const_lv4_C = "1100";
const sc_lv<4> aes_encrypt::ap_const_lv4_B = "1011";
const sc_lv<4> aes_encrypt::ap_const_lv4_2 = "10";
const sc_lv<4> aes_encrypt::ap_const_lv4_A = "1010";
const sc_lv<4> aes_encrypt::ap_const_lv4_9 = "1001";
const sc_lv<4> aes_encrypt::ap_const_lv4_3 = "11";
const sc_lv<4> aes_encrypt::ap_const_lv4_8 = "1000";
const sc_lv<4> aes_encrypt::ap_const_lv4_7 = "111";
const sc_lv<4> aes_encrypt::ap_const_lv4_4 = "100";
const sc_lv<4> aes_encrypt::ap_const_lv4_6 = "110";
const sc_lv<4> aes_encrypt::ap_const_lv4_5 = "101";
const sc_lv<3> aes_encrypt::ap_const_lv3_4 = "100";
const sc_lv<3> aes_encrypt::ap_const_lv3_1 = "1";
const sc_lv<2> aes_encrypt::ap_const_lv2_0 = "00";
const bool aes_encrypt::ap_const_boolean_1 = true;

aes_encrypt::aes_encrypt(sc_module_name name) : sc_module(name), mVcdFile(0) {
    block_U = new aes_encrypt_block("block_U");
    block_U->clk(ap_clk);
    block_U->reset(ap_rst);
    block_U->address0(block_address0);
    block_U->ce0(block_ce0);
    block_U->we0(block_we0);
    block_U->d0(block_d0);
    block_U->q0(block_q0);
    block_U->address1(grp_aes_main_fu_517_state_address1);
    block_U->ce1(block_ce1);
    block_U->we1(block_we1);
    block_U->d1(grp_aes_main_fu_517_state_d1);
    block_U->q1(block_q1);
    grp_aes_main_fu_517 = new aes_main("grp_aes_main_fu_517");
    grp_aes_main_fu_517->ap_clk(ap_clk);
    grp_aes_main_fu_517->ap_rst(ap_rst);
    grp_aes_main_fu_517->ap_start(grp_aes_main_fu_517_ap_start);
    grp_aes_main_fu_517->ap_done(grp_aes_main_fu_517_ap_done);
    grp_aes_main_fu_517->ap_idle(grp_aes_main_fu_517_ap_idle);
    grp_aes_main_fu_517->ap_ready(grp_aes_main_fu_517_ap_ready);
    grp_aes_main_fu_517->state_address0(grp_aes_main_fu_517_state_address0);
    grp_aes_main_fu_517->state_ce0(grp_aes_main_fu_517_state_ce0);
    grp_aes_main_fu_517->state_we0(grp_aes_main_fu_517_state_we0);
    grp_aes_main_fu_517->state_d0(grp_aes_main_fu_517_state_d0);
    grp_aes_main_fu_517->state_q0(block_q0);
    grp_aes_main_fu_517->state_address1(grp_aes_main_fu_517_state_address1);
    grp_aes_main_fu_517->state_ce1(grp_aes_main_fu_517_state_ce1);
    grp_aes_main_fu_517->state_we1(grp_aes_main_fu_517_state_we1);
    grp_aes_main_fu_517->state_d1(grp_aes_main_fu_517_state_d1);
    grp_aes_main_fu_517->state_q1(block_q1);
    dut_mux_164_8_1_1_U304 = new dut_mux_164_8_1_1<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>("dut_mux_164_8_1_1_U304");
    dut_mux_164_8_1_1_U304->din0(input_0_read);
    dut_mux_164_8_1_1_U304->din1(input_1_read);
    dut_mux_164_8_1_1_U304->din2(input_2_read);
    dut_mux_164_8_1_1_U304->din3(input_3_read);
    dut_mux_164_8_1_1_U304->din4(input_4_read);
    dut_mux_164_8_1_1_U304->din5(input_5_read);
    dut_mux_164_8_1_1_U304->din6(input_6_read);
    dut_mux_164_8_1_1_U304->din7(input_7_read);
    dut_mux_164_8_1_1_U304->din8(input_8_read);
    dut_mux_164_8_1_1_U304->din9(input_9_read);
    dut_mux_164_8_1_1_U304->din10(input_10_read);
    dut_mux_164_8_1_1_U304->din11(input_11_read);
    dut_mux_164_8_1_1_U304->din12(input_12_read);
    dut_mux_164_8_1_1_U304->din13(input_13_read);
    dut_mux_164_8_1_1_U304->din14(input_14_read);
    dut_mux_164_8_1_1_U304->din15(input_15_read);
    dut_mux_164_8_1_1_U304->din16(tmp_fu_655_p17);
    dut_mux_164_8_1_1_U304->dout(tmp_fu_655_p18);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln54_1_fu_690_p2);
    sensitive << ( zext_ln49_reg_1395 );
    sensitive << ( shl_ln54_1_fu_682_p3 );

    SC_METHOD(thread_add_ln70_1_fu_1070_p2);
    sensitive << ( shl_ln1_reg_1642 );
    sensitive << ( zext_ln68_fu_1032_p1 );

    SC_METHOD(thread_add_ln70_fu_1060_p2);
    sensitive << ( zext_ln65_reg_1629 );
    sensitive << ( shl_ln70_1_fu_1052_p3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_fu_824_p3 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_1_fu_831_p3 );

    SC_METHOD(thread_ap_return_10);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_10_fu_894_p3 );

    SC_METHOD(thread_ap_return_11);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_11_fu_901_p3 );

    SC_METHOD(thread_ap_return_12);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_12_fu_908_p3 );

    SC_METHOD(thread_ap_return_13);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_13_fu_915_p3 );

    SC_METHOD(thread_ap_return_14);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_14_fu_922_p3 );

    SC_METHOD(thread_ap_return_15);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_15_fu_929_p3 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_2_fu_838_p3 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_3_fu_845_p3 );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_4_fu_852_p3 );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_5_fu_859_p3 );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_6_fu_866_p3 );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_7_fu_873_p3 );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_8_fu_880_p3 );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( select_ln73_9_fu_887_p3 );

    SC_METHOD(thread_block_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_aes_main_fu_517_state_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln54_fu_695_p1 );
    sensitive << ( zext_ln70_fu_1065_p1 );

    SC_METHOD(thread_block_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_aes_main_fu_517_state_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_block_ce1);
    sensitive << ( grp_aes_main_fu_517_state_ce1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_block_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_aes_main_fu_517_state_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_655_p18 );

    SC_METHOD(thread_block_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_aes_main_fu_517_state_we0 );
    sensitive << ( icmp_ln52_fu_638_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_block_we1);
    sensitive << ( grp_aes_main_fu_517_state_we1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_aes_main_fu_517_ap_start);
    sensitive << ( grp_aes_main_fu_517_ap_start_reg );

    SC_METHOD(thread_i_13_fu_710_p2);
    sensitive << ( i_1_reg_495 );

    SC_METHOD(thread_i_fu_536_p2);
    sensitive << ( i_0_reg_473 );

    SC_METHOD(thread_icmp_ln49_fu_530_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_473 );

    SC_METHOD(thread_icmp_ln52_fu_638_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_484 );

    SC_METHOD(thread_icmp_ln65_fu_704_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_1_reg_495 );

    SC_METHOD(thread_icmp_ln68_fu_1036_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j_1_reg_506 );

    SC_METHOD(thread_j_2_fu_1042_p2);
    sensitive << ( j_1_reg_506 );

    SC_METHOD(thread_j_fu_644_p2);
    sensitive << ( j_0_reg_484 );

    SC_METHOD(thread_select_ln73_10_fu_894_p3);
    sensitive << ( output_10_read );
    sensitive << ( output25_023_fu_194 );
    sensitive << ( write_flag30_0_fu_202 );

    SC_METHOD(thread_select_ln73_11_fu_901_p3);
    sensitive << ( output_11_read );
    sensitive << ( output26_022_fu_182 );
    sensitive << ( write_flag33_0_fu_190 );

    SC_METHOD(thread_select_ln73_12_fu_908_p3);
    sensitive << ( output_12_read );
    sensitive << ( output27_020_fu_170 );
    sensitive << ( write_flag36_0_fu_178 );

    SC_METHOD(thread_select_ln73_13_fu_915_p3);
    sensitive << ( output_13_read );
    sensitive << ( output28_019_fu_158 );
    sensitive << ( write_flag39_0_fu_166 );

    SC_METHOD(thread_select_ln73_14_fu_922_p3);
    sensitive << ( output_14_read );
    sensitive << ( output29_017_fu_146 );
    sensitive << ( write_flag42_0_fu_154 );

    SC_METHOD(thread_select_ln73_15_fu_929_p3);
    sensitive << ( output_15_read );
    sensitive << ( output30_016_fu_134 );
    sensitive << ( write_flag45_0_fu_142 );

    SC_METHOD(thread_select_ln73_1_fu_831_p3);
    sensitive << ( output_1_read );
    sensitive << ( write_flag3_0_fu_162 );
    sensitive << ( output16_021_fu_174 );

    SC_METHOD(thread_select_ln73_2_fu_838_p3);
    sensitive << ( output_2_read );
    sensitive << ( write_flag6_0_fu_186 );
    sensitive << ( output17_024_fu_198 );

    SC_METHOD(thread_select_ln73_3_fu_845_p3);
    sensitive << ( output_3_read );
    sensitive << ( write_flag9_0_fu_210 );
    sensitive << ( output18_027_fu_222 );

    SC_METHOD(thread_select_ln73_4_fu_852_p3);
    sensitive << ( output_4_read );
    sensitive << ( write_flag12_0_fu_234 );
    sensitive << ( output19_030_fu_246 );

    SC_METHOD(thread_select_ln73_5_fu_859_p3);
    sensitive << ( output_5_read );
    sensitive << ( output20_031_fu_254 );
    sensitive << ( write_flag15_0_fu_258 );

    SC_METHOD(thread_select_ln73_6_fu_866_p3);
    sensitive << ( output_6_read );
    sensitive << ( output21_029_fu_242 );
    sensitive << ( write_flag18_0_fu_250 );

    SC_METHOD(thread_select_ln73_7_fu_873_p3);
    sensitive << ( output_7_read );
    sensitive << ( output22_028_fu_230 );
    sensitive << ( write_flag21_0_fu_238 );

    SC_METHOD(thread_select_ln73_8_fu_880_p3);
    sensitive << ( output_8_read );
    sensitive << ( output23_026_fu_218 );
    sensitive << ( write_flag24_0_fu_226 );

    SC_METHOD(thread_select_ln73_9_fu_887_p3);
    sensitive << ( output_9_read );
    sensitive << ( output24_025_fu_206 );
    sensitive << ( write_flag27_0_fu_214 );

    SC_METHOD(thread_select_ln73_fu_824_p3);
    sensitive << ( output_0_read );
    sensitive << ( write_flag_0_fu_138 );
    sensitive << ( output_018_fu_150 );

    SC_METHOD(thread_shl_ln1_fu_720_p3);
    sensitive << ( trunc_ln70_fu_716_p1 );

    SC_METHOD(thread_shl_ln54_1_fu_682_p3);
    sensitive << ( trunc_ln54_1_fu_678_p1 );

    SC_METHOD(thread_shl_ln70_1_fu_1052_p3);
    sensitive << ( trunc_ln70_2_fu_1048_p1 );

    SC_METHOD(thread_shl_ln_fu_546_p3);
    sensitive << ( trunc_ln54_fu_542_p1 );

    SC_METHOD(thread_tmp_fu_655_p17);
    sensitive << ( shl_ln_reg_1408 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln52_fu_634_p1 );

    SC_METHOD(thread_trunc_ln54_1_fu_678_p1);
    sensitive << ( j_0_reg_484 );

    SC_METHOD(thread_trunc_ln54_fu_542_p1);
    sensitive << ( i_0_reg_473 );

    SC_METHOD(thread_trunc_ln70_2_fu_1048_p1);
    sensitive << ( j_1_reg_506 );

    SC_METHOD(thread_trunc_ln70_fu_716_p1);
    sensitive << ( i_1_reg_495 );

    SC_METHOD(thread_zext_ln49_fu_526_p1);
    sensitive << ( i_0_reg_473 );

    SC_METHOD(thread_zext_ln52_fu_634_p1);
    sensitive << ( j_0_reg_484 );

    SC_METHOD(thread_zext_ln54_fu_695_p1);
    sensitive << ( add_ln54_1_fu_690_p2 );

    SC_METHOD(thread_zext_ln65_fu_700_p1);
    sensitive << ( i_1_reg_495 );

    SC_METHOD(thread_zext_ln68_fu_1032_p1);
    sensitive << ( j_1_reg_506 );

    SC_METHOD(thread_zext_ln70_fu_1065_p1);
    sensitive << ( add_ln70_fu_1060_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln49_fu_530_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_704_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln68_fu_1036_p2 );
    sensitive << ( grp_aes_main_fu_517_ap_done );
    sensitive << ( icmp_ln52_fu_638_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    ap_CS_fsm = "0000001";
    grp_aes_main_fu_517_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "aes_encrypt_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_read, "(port)input_0_read");
    sc_trace(mVcdFile, input_1_read, "(port)input_1_read");
    sc_trace(mVcdFile, input_2_read, "(port)input_2_read");
    sc_trace(mVcdFile, input_3_read, "(port)input_3_read");
    sc_trace(mVcdFile, input_4_read, "(port)input_4_read");
    sc_trace(mVcdFile, input_5_read, "(port)input_5_read");
    sc_trace(mVcdFile, input_6_read, "(port)input_6_read");
    sc_trace(mVcdFile, input_7_read, "(port)input_7_read");
    sc_trace(mVcdFile, input_8_read, "(port)input_8_read");
    sc_trace(mVcdFile, input_9_read, "(port)input_9_read");
    sc_trace(mVcdFile, input_10_read, "(port)input_10_read");
    sc_trace(mVcdFile, input_11_read, "(port)input_11_read");
    sc_trace(mVcdFile, input_12_read, "(port)input_12_read");
    sc_trace(mVcdFile, input_13_read, "(port)input_13_read");
    sc_trace(mVcdFile, input_14_read, "(port)input_14_read");
    sc_trace(mVcdFile, input_15_read, "(port)input_15_read");
    sc_trace(mVcdFile, output_0_read, "(port)output_0_read");
    sc_trace(mVcdFile, output_1_read, "(port)output_1_read");
    sc_trace(mVcdFile, output_2_read, "(port)output_2_read");
    sc_trace(mVcdFile, output_3_read, "(port)output_3_read");
    sc_trace(mVcdFile, output_4_read, "(port)output_4_read");
    sc_trace(mVcdFile, output_5_read, "(port)output_5_read");
    sc_trace(mVcdFile, output_6_read, "(port)output_6_read");
    sc_trace(mVcdFile, output_7_read, "(port)output_7_read");
    sc_trace(mVcdFile, output_8_read, "(port)output_8_read");
    sc_trace(mVcdFile, output_9_read, "(port)output_9_read");
    sc_trace(mVcdFile, output_10_read, "(port)output_10_read");
    sc_trace(mVcdFile, output_11_read, "(port)output_11_read");
    sc_trace(mVcdFile, output_12_read, "(port)output_12_read");
    sc_trace(mVcdFile, output_13_read, "(port)output_13_read");
    sc_trace(mVcdFile, output_14_read, "(port)output_14_read");
    sc_trace(mVcdFile, output_15_read, "(port)output_15_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
    sc_trace(mVcdFile, ap_return_10, "(port)ap_return_10");
    sc_trace(mVcdFile, ap_return_11, "(port)ap_return_11");
    sc_trace(mVcdFile, ap_return_12, "(port)ap_return_12");
    sc_trace(mVcdFile, ap_return_13, "(port)ap_return_13");
    sc_trace(mVcdFile, ap_return_14, "(port)ap_return_14");
    sc_trace(mVcdFile, ap_return_15, "(port)ap_return_15");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, zext_ln49_fu_526_p1, "zext_ln49_fu_526_p1");
    sc_trace(mVcdFile, zext_ln49_reg_1395, "zext_ln49_reg_1395");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_536_p2, "i_fu_536_p2");
    sc_trace(mVcdFile, i_reg_1403, "i_reg_1403");
    sc_trace(mVcdFile, shl_ln_fu_546_p3, "shl_ln_fu_546_p3");
    sc_trace(mVcdFile, shl_ln_reg_1408, "shl_ln_reg_1408");
    sc_trace(mVcdFile, icmp_ln49_fu_530_p2, "icmp_ln49_fu_530_p2");
    sc_trace(mVcdFile, j_fu_644_p2, "j_fu_644_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln65_fu_700_p1, "zext_ln65_fu_700_p1");
    sc_trace(mVcdFile, zext_ln65_reg_1629, "zext_ln65_reg_1629");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_13_fu_710_p2, "i_13_fu_710_p2");
    sc_trace(mVcdFile, i_13_reg_1637, "i_13_reg_1637");
    sc_trace(mVcdFile, shl_ln1_fu_720_p3, "shl_ln1_fu_720_p3");
    sc_trace(mVcdFile, shl_ln1_reg_1642, "shl_ln1_reg_1642");
    sc_trace(mVcdFile, icmp_ln65_fu_704_p2, "icmp_ln65_fu_704_p2");
    sc_trace(mVcdFile, j_2_fu_1042_p2, "j_2_fu_1042_p2");
    sc_trace(mVcdFile, j_2_reg_1650, "j_2_reg_1650");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln68_fu_1036_p2, "icmp_ln68_fu_1036_p2");
    sc_trace(mVcdFile, add_ln70_1_fu_1070_p2, "add_ln70_1_fu_1070_p2");
    sc_trace(mVcdFile, add_ln70_1_reg_1660, "add_ln70_1_reg_1660");
    sc_trace(mVcdFile, block_address0, "block_address0");
    sc_trace(mVcdFile, block_ce0, "block_ce0");
    sc_trace(mVcdFile, block_we0, "block_we0");
    sc_trace(mVcdFile, block_d0, "block_d0");
    sc_trace(mVcdFile, block_q0, "block_q0");
    sc_trace(mVcdFile, block_ce1, "block_ce1");
    sc_trace(mVcdFile, block_we1, "block_we1");
    sc_trace(mVcdFile, block_q1, "block_q1");
    sc_trace(mVcdFile, grp_aes_main_fu_517_ap_start, "grp_aes_main_fu_517_ap_start");
    sc_trace(mVcdFile, grp_aes_main_fu_517_ap_done, "grp_aes_main_fu_517_ap_done");
    sc_trace(mVcdFile, grp_aes_main_fu_517_ap_idle, "grp_aes_main_fu_517_ap_idle");
    sc_trace(mVcdFile, grp_aes_main_fu_517_ap_ready, "grp_aes_main_fu_517_ap_ready");
    sc_trace(mVcdFile, grp_aes_main_fu_517_state_address0, "grp_aes_main_fu_517_state_address0");
    sc_trace(mVcdFile, grp_aes_main_fu_517_state_ce0, "grp_aes_main_fu_517_state_ce0");
    sc_trace(mVcdFile, grp_aes_main_fu_517_state_we0, "grp_aes_main_fu_517_state_we0");
    sc_trace(mVcdFile, grp_aes_main_fu_517_state_d0, "grp_aes_main_fu_517_state_d0");
    sc_trace(mVcdFile, grp_aes_main_fu_517_state_address1, "grp_aes_main_fu_517_state_address1");
    sc_trace(mVcdFile, grp_aes_main_fu_517_state_ce1, "grp_aes_main_fu_517_state_ce1");
    sc_trace(mVcdFile, grp_aes_main_fu_517_state_we1, "grp_aes_main_fu_517_state_we1");
    sc_trace(mVcdFile, grp_aes_main_fu_517_state_d1, "grp_aes_main_fu_517_state_d1");
    sc_trace(mVcdFile, i_0_reg_473, "i_0_reg_473");
    sc_trace(mVcdFile, icmp_ln52_fu_638_p2, "icmp_ln52_fu_638_p2");
    sc_trace(mVcdFile, j_0_reg_484, "j_0_reg_484");
    sc_trace(mVcdFile, i_1_reg_495, "i_1_reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_1_reg_506, "j_1_reg_506");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_aes_main_fu_517_ap_start_reg, "grp_aes_main_fu_517_ap_start_reg");
    sc_trace(mVcdFile, zext_ln54_fu_695_p1, "zext_ln54_fu_695_p1");
    sc_trace(mVcdFile, zext_ln70_fu_1065_p1, "zext_ln70_fu_1065_p1");
    sc_trace(mVcdFile, output30_016_fu_134, "output30_016_fu_134");
    sc_trace(mVcdFile, write_flag_0_fu_138, "write_flag_0_fu_138");
    sc_trace(mVcdFile, write_flag45_0_fu_142, "write_flag45_0_fu_142");
    sc_trace(mVcdFile, output29_017_fu_146, "output29_017_fu_146");
    sc_trace(mVcdFile, output_018_fu_150, "output_018_fu_150");
    sc_trace(mVcdFile, write_flag42_0_fu_154, "write_flag42_0_fu_154");
    sc_trace(mVcdFile, output28_019_fu_158, "output28_019_fu_158");
    sc_trace(mVcdFile, write_flag3_0_fu_162, "write_flag3_0_fu_162");
    sc_trace(mVcdFile, write_flag39_0_fu_166, "write_flag39_0_fu_166");
    sc_trace(mVcdFile, output27_020_fu_170, "output27_020_fu_170");
    sc_trace(mVcdFile, output16_021_fu_174, "output16_021_fu_174");
    sc_trace(mVcdFile, write_flag36_0_fu_178, "write_flag36_0_fu_178");
    sc_trace(mVcdFile, output26_022_fu_182, "output26_022_fu_182");
    sc_trace(mVcdFile, write_flag6_0_fu_186, "write_flag6_0_fu_186");
    sc_trace(mVcdFile, write_flag33_0_fu_190, "write_flag33_0_fu_190");
    sc_trace(mVcdFile, output25_023_fu_194, "output25_023_fu_194");
    sc_trace(mVcdFile, output17_024_fu_198, "output17_024_fu_198");
    sc_trace(mVcdFile, write_flag30_0_fu_202, "write_flag30_0_fu_202");
    sc_trace(mVcdFile, output24_025_fu_206, "output24_025_fu_206");
    sc_trace(mVcdFile, write_flag9_0_fu_210, "write_flag9_0_fu_210");
    sc_trace(mVcdFile, write_flag27_0_fu_214, "write_flag27_0_fu_214");
    sc_trace(mVcdFile, output23_026_fu_218, "output23_026_fu_218");
    sc_trace(mVcdFile, output18_027_fu_222, "output18_027_fu_222");
    sc_trace(mVcdFile, write_flag24_0_fu_226, "write_flag24_0_fu_226");
    sc_trace(mVcdFile, output22_028_fu_230, "output22_028_fu_230");
    sc_trace(mVcdFile, write_flag12_0_fu_234, "write_flag12_0_fu_234");
    sc_trace(mVcdFile, write_flag21_0_fu_238, "write_flag21_0_fu_238");
    sc_trace(mVcdFile, output21_029_fu_242, "output21_029_fu_242");
    sc_trace(mVcdFile, output19_030_fu_246, "output19_030_fu_246");
    sc_trace(mVcdFile, write_flag18_0_fu_250, "write_flag18_0_fu_250");
    sc_trace(mVcdFile, output20_031_fu_254, "output20_031_fu_254");
    sc_trace(mVcdFile, write_flag15_0_fu_258, "write_flag15_0_fu_258");
    sc_trace(mVcdFile, tmp_fu_655_p18, "tmp_fu_655_p18");
    sc_trace(mVcdFile, trunc_ln54_fu_542_p1, "trunc_ln54_fu_542_p1");
    sc_trace(mVcdFile, zext_ln52_fu_634_p1, "zext_ln52_fu_634_p1");
    sc_trace(mVcdFile, tmp_fu_655_p17, "tmp_fu_655_p17");
    sc_trace(mVcdFile, trunc_ln54_1_fu_678_p1, "trunc_ln54_1_fu_678_p1");
    sc_trace(mVcdFile, shl_ln54_1_fu_682_p3, "shl_ln54_1_fu_682_p3");
    sc_trace(mVcdFile, add_ln54_1_fu_690_p2, "add_ln54_1_fu_690_p2");
    sc_trace(mVcdFile, trunc_ln70_fu_716_p1, "trunc_ln70_fu_716_p1");
    sc_trace(mVcdFile, select_ln73_fu_824_p3, "select_ln73_fu_824_p3");
    sc_trace(mVcdFile, select_ln73_1_fu_831_p3, "select_ln73_1_fu_831_p3");
    sc_trace(mVcdFile, select_ln73_2_fu_838_p3, "select_ln73_2_fu_838_p3");
    sc_trace(mVcdFile, select_ln73_3_fu_845_p3, "select_ln73_3_fu_845_p3");
    sc_trace(mVcdFile, select_ln73_4_fu_852_p3, "select_ln73_4_fu_852_p3");
    sc_trace(mVcdFile, select_ln73_5_fu_859_p3, "select_ln73_5_fu_859_p3");
    sc_trace(mVcdFile, select_ln73_6_fu_866_p3, "select_ln73_6_fu_866_p3");
    sc_trace(mVcdFile, select_ln73_7_fu_873_p3, "select_ln73_7_fu_873_p3");
    sc_trace(mVcdFile, select_ln73_8_fu_880_p3, "select_ln73_8_fu_880_p3");
    sc_trace(mVcdFile, select_ln73_9_fu_887_p3, "select_ln73_9_fu_887_p3");
    sc_trace(mVcdFile, select_ln73_10_fu_894_p3, "select_ln73_10_fu_894_p3");
    sc_trace(mVcdFile, select_ln73_11_fu_901_p3, "select_ln73_11_fu_901_p3");
    sc_trace(mVcdFile, select_ln73_12_fu_908_p3, "select_ln73_12_fu_908_p3");
    sc_trace(mVcdFile, select_ln73_13_fu_915_p3, "select_ln73_13_fu_915_p3");
    sc_trace(mVcdFile, select_ln73_14_fu_922_p3, "select_ln73_14_fu_922_p3");
    sc_trace(mVcdFile, select_ln73_15_fu_929_p3, "select_ln73_15_fu_929_p3");
    sc_trace(mVcdFile, trunc_ln70_2_fu_1048_p1, "trunc_ln70_2_fu_1048_p1");
    sc_trace(mVcdFile, shl_ln70_1_fu_1052_p3, "shl_ln70_1_fu_1052_p3");
    sc_trace(mVcdFile, add_ln70_fu_1060_p2, "add_ln70_fu_1060_p2");
    sc_trace(mVcdFile, zext_ln68_fu_1032_p1, "zext_ln68_fu_1032_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

aes_encrypt::~aes_encrypt() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete block_U;
    delete grp_aes_main_fu_517;
    delete dut_mux_164_8_1_1_U304;
}

void aes_encrypt::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_aes_main_fu_517_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
            grp_aes_main_fu_517_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aes_main_fu_517_ap_ready.read())) {
            grp_aes_main_fu_517_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln52_fu_638_p2.read(), ap_const_lv1_1))) {
        i_0_reg_473 = i_reg_1403.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_473 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln68_fu_1036_p2.read(), ap_const_lv1_1))) {
        i_1_reg_495 = i_13_reg_1637.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(grp_aes_main_fu_517_ap_done.read(), ap_const_logic_1))) {
        i_1_reg_495 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_0))) {
        j_0_reg_484 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_fu_638_p2.read()))) {
        j_0_reg_484 = j_fu_644_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_1_reg_506 = j_2_reg_1650.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_704_p2.read()))) {
        j_1_reg_506 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_4))) {
        write_flag12_0_fu_234 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag12_0_fu_234 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_5))) {
        write_flag15_0_fu_258 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag15_0_fu_258 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_6))) {
        write_flag18_0_fu_250 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag18_0_fu_250 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_7))) {
        write_flag21_0_fu_238 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag21_0_fu_238 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_8))) {
        write_flag24_0_fu_226 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag24_0_fu_226 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_9))) {
        write_flag27_0_fu_214 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag27_0_fu_214 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_A))) {
        write_flag30_0_fu_202 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag30_0_fu_202 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_B))) {
        write_flag33_0_fu_190 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag33_0_fu_190 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_C))) {
        write_flag36_0_fu_178 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag36_0_fu_178 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_D))) {
        write_flag39_0_fu_166 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag39_0_fu_166 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_1))) {
        write_flag3_0_fu_162 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag3_0_fu_162 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_E))) {
        write_flag42_0_fu_154 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag42_0_fu_154 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_F))) {
        write_flag45_0_fu_142 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag45_0_fu_142 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_2))) {
        write_flag6_0_fu_186 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag6_0_fu_186 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_3))) {
        write_flag9_0_fu_210 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag9_0_fu_210 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_0))) {
        write_flag_0_fu_138 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_1))) {
        write_flag_0_fu_138 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln68_fu_1036_p2.read()))) {
        add_ln70_1_reg_1660 = add_ln70_1_fu_1070_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_13_reg_1637 = i_13_fu_710_p2.read();
        zext_ln65_reg_1629 = zext_ln65_fu_700_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_1403 = i_fu_536_p2.read();
        zext_ln49_reg_1395 = zext_ln49_fu_526_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_2_reg_1650 = j_2_fu_1042_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_1))) {
        output16_021_fu_174 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_2))) {
        output17_024_fu_198 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_3))) {
        output18_027_fu_222 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_4))) {
        output19_030_fu_246 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_5))) {
        output20_031_fu_254 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_6))) {
        output21_029_fu_242 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_7))) {
        output22_028_fu_230 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_8))) {
        output23_026_fu_218 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_9))) {
        output24_025_fu_206 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_A))) {
        output25_023_fu_194 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_B))) {
        output26_022_fu_182 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_C))) {
        output27_020_fu_170 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_D))) {
        output28_019_fu_158 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_E))) {
        output29_017_fu_146 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_F))) {
        output30_016_fu_134 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,4,4>(add_ln70_1_reg_1660.read(), ap_const_lv4_0))) {
        output_018_fu_150 = block_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_704_p2.read()))) {
        shl_ln1_reg_1642 = shl_ln1_fu_720_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_0))) {
        shl_ln_reg_1408 = shl_ln_fu_546_p3.read();
    }
}

void aes_encrypt::thread_add_ln54_1_fu_690_p2() {
    add_ln54_1_fu_690_p2 = (!zext_ln49_reg_1395.read().is_01() || !shl_ln54_1_fu_682_p3.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln49_reg_1395.read()) + sc_biguint<4>(shl_ln54_1_fu_682_p3.read()));
}

void aes_encrypt::thread_add_ln70_1_fu_1070_p2() {
    add_ln70_1_fu_1070_p2 = (!zext_ln68_fu_1032_p1.read().is_01() || !shl_ln1_reg_1642.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln68_fu_1032_p1.read()) + sc_biguint<4>(shl_ln1_reg_1642.read()));
}

void aes_encrypt::thread_add_ln70_fu_1060_p2() {
    add_ln70_fu_1060_p2 = (!zext_ln65_reg_1629.read().is_01() || !shl_ln70_1_fu_1052_p3.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln65_reg_1629.read()) + sc_biguint<4>(shl_ln70_1_fu_1052_p3.read()));
}

void aes_encrypt::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void aes_encrypt::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void aes_encrypt::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void aes_encrypt::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void aes_encrypt::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void aes_encrypt::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void aes_encrypt::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void aes_encrypt::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(icmp_ln65_fu_704_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void aes_encrypt::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void aes_encrypt::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln65_fu_704_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void aes_encrypt::thread_ap_return_0() {
    ap_return_0 = select_ln73_fu_824_p3.read();
}

void aes_encrypt::thread_ap_return_1() {
    ap_return_1 = select_ln73_1_fu_831_p3.read();
}

void aes_encrypt::thread_ap_return_10() {
    ap_return_10 = select_ln73_10_fu_894_p3.read();
}

void aes_encrypt::thread_ap_return_11() {
    ap_return_11 = select_ln73_11_fu_901_p3.read();
}

void aes_encrypt::thread_ap_return_12() {
    ap_return_12 = select_ln73_12_fu_908_p3.read();
}

void aes_encrypt::thread_ap_return_13() {
    ap_return_13 = select_ln73_13_fu_915_p3.read();
}

void aes_encrypt::thread_ap_return_14() {
    ap_return_14 = select_ln73_14_fu_922_p3.read();
}

void aes_encrypt::thread_ap_return_15() {
    ap_return_15 = select_ln73_15_fu_929_p3.read();
}

void aes_encrypt::thread_ap_return_2() {
    ap_return_2 = select_ln73_2_fu_838_p3.read();
}

void aes_encrypt::thread_ap_return_3() {
    ap_return_3 = select_ln73_3_fu_845_p3.read();
}

void aes_encrypt::thread_ap_return_4() {
    ap_return_4 = select_ln73_4_fu_852_p3.read();
}

void aes_encrypt::thread_ap_return_5() {
    ap_return_5 = select_ln73_5_fu_859_p3.read();
}

void aes_encrypt::thread_ap_return_6() {
    ap_return_6 = select_ln73_6_fu_866_p3.read();
}

void aes_encrypt::thread_ap_return_7() {
    ap_return_7 = select_ln73_7_fu_873_p3.read();
}

void aes_encrypt::thread_ap_return_8() {
    ap_return_8 = select_ln73_8_fu_880_p3.read();
}

void aes_encrypt::thread_ap_return_9() {
    ap_return_9 = select_ln73_9_fu_887_p3.read();
}

void aes_encrypt::thread_block_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        block_address0 =  (sc_lv<4>) (zext_ln70_fu_1065_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_address0 =  (sc_lv<4>) (zext_ln54_fu_695_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        block_address0 = grp_aes_main_fu_517_state_address0.read();
    } else {
        block_address0 = "XXXX";
    }
}

void aes_encrypt::thread_block_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        block_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        block_ce0 = grp_aes_main_fu_517_state_ce0.read();
    } else {
        block_ce0 = ap_const_logic_0;
    }
}

void aes_encrypt::thread_block_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        block_ce1 = grp_aes_main_fu_517_state_ce1.read();
    } else {
        block_ce1 = ap_const_logic_0;
    }
}

void aes_encrypt::thread_block_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_d0 = tmp_fu_655_p18.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        block_d0 = grp_aes_main_fu_517_state_d0.read();
    } else {
        block_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aes_encrypt::thread_block_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_fu_638_p2.read()))) {
        block_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        block_we0 = grp_aes_main_fu_517_state_we0.read();
    } else {
        block_we0 = ap_const_logic_0;
    }
}

void aes_encrypt::thread_block_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        block_we1 = grp_aes_main_fu_517_state_we1.read();
    } else {
        block_we1 = ap_const_logic_0;
    }
}

void aes_encrypt::thread_grp_aes_main_fu_517_ap_start() {
    grp_aes_main_fu_517_ap_start = grp_aes_main_fu_517_ap_start_reg.read();
}

void aes_encrypt::thread_i_13_fu_710_p2() {
    i_13_fu_710_p2 = (!i_1_reg_495.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_495.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aes_encrypt::thread_i_fu_536_p2() {
    i_fu_536_p2 = (!i_0_reg_473.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_473.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aes_encrypt::thread_icmp_ln49_fu_530_p2() {
    icmp_ln49_fu_530_p2 = (!i_0_reg_473.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_473.read() == ap_const_lv3_4);
}

void aes_encrypt::thread_icmp_ln52_fu_638_p2() {
    icmp_ln52_fu_638_p2 = (!j_0_reg_484.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_484.read() == ap_const_lv3_4);
}

void aes_encrypt::thread_icmp_ln65_fu_704_p2() {
    icmp_ln65_fu_704_p2 = (!i_1_reg_495.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_495.read() == ap_const_lv3_4);
}

void aes_encrypt::thread_icmp_ln68_fu_1036_p2() {
    icmp_ln68_fu_1036_p2 = (!j_1_reg_506.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_506.read() == ap_const_lv3_4);
}

void aes_encrypt::thread_j_2_fu_1042_p2() {
    j_2_fu_1042_p2 = (!j_1_reg_506.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_1_reg_506.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aes_encrypt::thread_j_fu_644_p2() {
    j_fu_644_p2 = (!j_0_reg_484.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_484.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aes_encrypt::thread_select_ln73_10_fu_894_p3() {
    select_ln73_10_fu_894_p3 = (!write_flag30_0_fu_202.read()[0].is_01())? sc_lv<8>(): ((write_flag30_0_fu_202.read()[0].to_bool())? output25_023_fu_194.read(): output_10_read.read());
}

void aes_encrypt::thread_select_ln73_11_fu_901_p3() {
    select_ln73_11_fu_901_p3 = (!write_flag33_0_fu_190.read()[0].is_01())? sc_lv<8>(): ((write_flag33_0_fu_190.read()[0].to_bool())? output26_022_fu_182.read(): output_11_read.read());
}

void aes_encrypt::thread_select_ln73_12_fu_908_p3() {
    select_ln73_12_fu_908_p3 = (!write_flag36_0_fu_178.read()[0].is_01())? sc_lv<8>(): ((write_flag36_0_fu_178.read()[0].to_bool())? output27_020_fu_170.read(): output_12_read.read());
}

void aes_encrypt::thread_select_ln73_13_fu_915_p3() {
    select_ln73_13_fu_915_p3 = (!write_flag39_0_fu_166.read()[0].is_01())? sc_lv<8>(): ((write_flag39_0_fu_166.read()[0].to_bool())? output28_019_fu_158.read(): output_13_read.read());
}

void aes_encrypt::thread_select_ln73_14_fu_922_p3() {
    select_ln73_14_fu_922_p3 = (!write_flag42_0_fu_154.read()[0].is_01())? sc_lv<8>(): ((write_flag42_0_fu_154.read()[0].to_bool())? output29_017_fu_146.read(): output_14_read.read());
}

void aes_encrypt::thread_select_ln73_15_fu_929_p3() {
    select_ln73_15_fu_929_p3 = (!write_flag45_0_fu_142.read()[0].is_01())? sc_lv<8>(): ((write_flag45_0_fu_142.read()[0].to_bool())? output30_016_fu_134.read(): output_15_read.read());
}

void aes_encrypt::thread_select_ln73_1_fu_831_p3() {
    select_ln73_1_fu_831_p3 = (!write_flag3_0_fu_162.read()[0].is_01())? sc_lv<8>(): ((write_flag3_0_fu_162.read()[0].to_bool())? output16_021_fu_174.read(): output_1_read.read());
}

void aes_encrypt::thread_select_ln73_2_fu_838_p3() {
    select_ln73_2_fu_838_p3 = (!write_flag6_0_fu_186.read()[0].is_01())? sc_lv<8>(): ((write_flag6_0_fu_186.read()[0].to_bool())? output17_024_fu_198.read(): output_2_read.read());
}

void aes_encrypt::thread_select_ln73_3_fu_845_p3() {
    select_ln73_3_fu_845_p3 = (!write_flag9_0_fu_210.read()[0].is_01())? sc_lv<8>(): ((write_flag9_0_fu_210.read()[0].to_bool())? output18_027_fu_222.read(): output_3_read.read());
}

void aes_encrypt::thread_select_ln73_4_fu_852_p3() {
    select_ln73_4_fu_852_p3 = (!write_flag12_0_fu_234.read()[0].is_01())? sc_lv<8>(): ((write_flag12_0_fu_234.read()[0].to_bool())? output19_030_fu_246.read(): output_4_read.read());
}

void aes_encrypt::thread_select_ln73_5_fu_859_p3() {
    select_ln73_5_fu_859_p3 = (!write_flag15_0_fu_258.read()[0].is_01())? sc_lv<8>(): ((write_flag15_0_fu_258.read()[0].to_bool())? output20_031_fu_254.read(): output_5_read.read());
}

void aes_encrypt::thread_select_ln73_6_fu_866_p3() {
    select_ln73_6_fu_866_p3 = (!write_flag18_0_fu_250.read()[0].is_01())? sc_lv<8>(): ((write_flag18_0_fu_250.read()[0].to_bool())? output21_029_fu_242.read(): output_6_read.read());
}

void aes_encrypt::thread_select_ln73_7_fu_873_p3() {
    select_ln73_7_fu_873_p3 = (!write_flag21_0_fu_238.read()[0].is_01())? sc_lv<8>(): ((write_flag21_0_fu_238.read()[0].to_bool())? output22_028_fu_230.read(): output_7_read.read());
}

void aes_encrypt::thread_select_ln73_8_fu_880_p3() {
    select_ln73_8_fu_880_p3 = (!write_flag24_0_fu_226.read()[0].is_01())? sc_lv<8>(): ((write_flag24_0_fu_226.read()[0].to_bool())? output23_026_fu_218.read(): output_8_read.read());
}

void aes_encrypt::thread_select_ln73_9_fu_887_p3() {
    select_ln73_9_fu_887_p3 = (!write_flag27_0_fu_214.read()[0].is_01())? sc_lv<8>(): ((write_flag27_0_fu_214.read()[0].to_bool())? output24_025_fu_206.read(): output_9_read.read());
}

void aes_encrypt::thread_select_ln73_fu_824_p3() {
    select_ln73_fu_824_p3 = (!write_flag_0_fu_138.read()[0].is_01())? sc_lv<8>(): ((write_flag_0_fu_138.read()[0].to_bool())? output_018_fu_150.read(): output_0_read.read());
}

void aes_encrypt::thread_shl_ln1_fu_720_p3() {
    shl_ln1_fu_720_p3 = esl_concat<2,2>(trunc_ln70_fu_716_p1.read(), ap_const_lv2_0);
}

void aes_encrypt::thread_shl_ln54_1_fu_682_p3() {
    shl_ln54_1_fu_682_p3 = esl_concat<2,2>(trunc_ln54_1_fu_678_p1.read(), ap_const_lv2_0);
}

void aes_encrypt::thread_shl_ln70_1_fu_1052_p3() {
    shl_ln70_1_fu_1052_p3 = esl_concat<2,2>(trunc_ln70_2_fu_1048_p1.read(), ap_const_lv2_0);
}

void aes_encrypt::thread_shl_ln_fu_546_p3() {
    shl_ln_fu_546_p3 = esl_concat<2,2>(trunc_ln54_fu_542_p1.read(), ap_const_lv2_0);
}

void aes_encrypt::thread_tmp_fu_655_p17() {
    tmp_fu_655_p17 = (!zext_ln52_fu_634_p1.read().is_01() || !shl_ln_reg_1408.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln52_fu_634_p1.read()) + sc_biguint<4>(shl_ln_reg_1408.read()));
}

void aes_encrypt::thread_trunc_ln54_1_fu_678_p1() {
    trunc_ln54_1_fu_678_p1 = j_0_reg_484.read().range(2-1, 0);
}

void aes_encrypt::thread_trunc_ln54_fu_542_p1() {
    trunc_ln54_fu_542_p1 = i_0_reg_473.read().range(2-1, 0);
}

void aes_encrypt::thread_trunc_ln70_2_fu_1048_p1() {
    trunc_ln70_2_fu_1048_p1 = j_1_reg_506.read().range(2-1, 0);
}

void aes_encrypt::thread_trunc_ln70_fu_716_p1() {
    trunc_ln70_fu_716_p1 = i_1_reg_495.read().range(2-1, 0);
}

void aes_encrypt::thread_zext_ln49_fu_526_p1() {
    zext_ln49_fu_526_p1 = esl_zext<4,3>(i_0_reg_473.read());
}

void aes_encrypt::thread_zext_ln52_fu_634_p1() {
    zext_ln52_fu_634_p1 = esl_zext<4,3>(j_0_reg_484.read());
}

void aes_encrypt::thread_zext_ln54_fu_695_p1() {
    zext_ln54_fu_695_p1 = esl_zext<64,4>(add_ln54_1_fu_690_p2.read());
}

void aes_encrypt::thread_zext_ln65_fu_700_p1() {
    zext_ln65_fu_700_p1 = esl_zext<4,3>(i_1_reg_495.read());
}

void aes_encrypt::thread_zext_ln68_fu_1032_p1() {
    zext_ln68_fu_1032_p1 = esl_zext<4,3>(j_1_reg_506.read());
}

void aes_encrypt::thread_zext_ln70_fu_1065_p1() {
    zext_ln70_fu_1065_p1 = esl_zext<64,4>(add_ln70_fu_1060_p2.read());
}

void aes_encrypt::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln49_fu_530_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln52_fu_638_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_aes_main_fu_517_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln65_fu_704_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln68_fu_1036_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

