// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes_invMain_HH_
#define _aes_invMain_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aes_invRound.h"
#include "createRoundKey.h"
#include "aes_invMain_expandEe.h"
#include "aes_invRound_rsbox.h"
#include "aes_main_roundKey.h"

namespace ap_rtl {

struct aes_invMain : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > state_address0;
    sc_out< sc_logic > state_ce0;
    sc_out< sc_logic > state_we0;
    sc_out< sc_lv<8> > state_d0;
    sc_in< sc_lv<8> > state_q0;
    sc_out< sc_lv<4> > state_address1;
    sc_out< sc_logic > state_ce1;
    sc_out< sc_logic > state_we1;
    sc_out< sc_lv<8> > state_d1;
    sc_in< sc_lv<8> > state_q1;


    // Module declarations
    aes_invMain(sc_module_name name);
    SC_HAS_PROCESS(aes_invMain);

    ~aes_invMain();

    sc_trace_file* mVcdFile;

    aes_invMain_expandEe* expandedKey23_U;
    aes_invRound_rsbox* rsbox_U;
    aes_main_roundKey* roundKey_U;
    aes_invRound* grp_aes_invRound_fu_289;
    createRoundKey* grp_createRoundKey_fu_298;
    sc_signal< sc_lv<22> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > expandedKey23_ce0;
    sc_signal< sc_lv<8> > expandedKey23_q0;
    sc_signal< sc_lv<8> > rsbox_address0;
    sc_signal< sc_logic > rsbox_ce0;
    sc_signal< sc_lv<8> > rsbox_q0;
    sc_signal< sc_lv<8> > reg_317;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<8> > reg_323;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<5> > i_10_fu_335_p2;
    sc_signal< sc_lv<5> > i_10_reg_415;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > state_addr_reg_420;
    sc_signal< sc_lv<1> > icmp_ln225_fu_329_p2;
    sc_signal< sc_lv<9> > zext_ln36_fu_361_p1;
    sc_signal< sc_lv<9> > zext_ln36_reg_433;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln34_fu_347_p2;
    sc_signal< sc_lv<4> > add_ln34_fu_366_p2;
    sc_signal< sc_lv<4> > add_ln34_reg_438;
    sc_signal< sc_lv<4> > state_addr_45_reg_455;
    sc_signal< sc_lv<8> > state_load_42_reg_465;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<8> > state_load_45_reg_492;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<8> > state_load_46_reg_497;
    sc_signal< sc_lv<8> > tmp_16_reg_514;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<4> > state_addr_54_reg_524;
    sc_signal< sc_lv<5> > i_11_fu_378_p2;
    sc_signal< sc_lv<5> > i_11_reg_532;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<4> > state_addr_55_reg_537;
    sc_signal< sc_lv<1> > icmp_ln319_fu_372_p2;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<5> > i_12_fu_400_p2;
    sc_signal< sc_lv<5> > i_12_reg_550;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<4> > state_addr_56_reg_555;
    sc_signal< sc_lv<1> > icmp_ln225_2_fu_394_p2;
    sc_signal< sc_lv<4> > roundKey_address0;
    sc_signal< sc_logic > roundKey_ce0;
    sc_signal< sc_logic > roundKey_we0;
    sc_signal< sc_lv<8> > roundKey_q0;
    sc_signal< sc_logic > grp_aes_invRound_fu_289_ap_start;
    sc_signal< sc_logic > grp_aes_invRound_fu_289_ap_done;
    sc_signal< sc_logic > grp_aes_invRound_fu_289_ap_idle;
    sc_signal< sc_logic > grp_aes_invRound_fu_289_ap_ready;
    sc_signal< sc_lv<4> > grp_aes_invRound_fu_289_state_address0;
    sc_signal< sc_logic > grp_aes_invRound_fu_289_state_ce0;
    sc_signal< sc_logic > grp_aes_invRound_fu_289_state_we0;
    sc_signal< sc_lv<8> > grp_aes_invRound_fu_289_state_d0;
    sc_signal< sc_lv<4> > grp_aes_invRound_fu_289_state_address1;
    sc_signal< sc_logic > grp_aes_invRound_fu_289_state_ce1;
    sc_signal< sc_logic > grp_aes_invRound_fu_289_state_we1;
    sc_signal< sc_lv<8> > grp_aes_invRound_fu_289_state_d1;
    sc_signal< sc_lv<4> > grp_aes_invRound_fu_289_roundKey_address0;
    sc_signal< sc_logic > grp_aes_invRound_fu_289_roundKey_ce0;
    sc_signal< sc_logic > grp_createRoundKey_fu_298_ap_start;
    sc_signal< sc_logic > grp_createRoundKey_fu_298_ap_done;
    sc_signal< sc_logic > grp_createRoundKey_fu_298_ap_idle;
    sc_signal< sc_logic > grp_createRoundKey_fu_298_ap_ready;
    sc_signal< sc_lv<8> > grp_createRoundKey_fu_298_expandedKey_address0;
    sc_signal< sc_logic > grp_createRoundKey_fu_298_expandedKey_ce0;
    sc_signal< sc_lv<4> > grp_createRoundKey_fu_298_roundKey_address0;
    sc_signal< sc_logic > grp_createRoundKey_fu_298_roundKey_ce0;
    sc_signal< sc_logic > grp_createRoundKey_fu_298_roundKey_we0;
    sc_signal< sc_lv<8> > grp_createRoundKey_fu_298_roundKey_d0;
    sc_signal< sc_lv<9> > grp_createRoundKey_fu_298_ptr;
    sc_signal< sc_lv<5> > i_0_i_reg_245;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > i_reg_256;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > i_0_i3_reg_267;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<5> > i_0_i7_reg_278;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > grp_aes_invRound_fu_289_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_createRoundKey_fu_298_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > zext_ln226_fu_341_p1;
    sc_signal< sc_lv<64> > zext_ln321_fu_384_p1;
    sc_signal< sc_lv<64> > zext_ln48_fu_389_p1;
    sc_signal< sc_lv<64> > zext_ln226_2_fu_406_p1;
    sc_signal< sc_lv<8> > grp_fu_309_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<8> > shl_ln_fu_353_p3;
    sc_signal< sc_lv<22> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<22> ap_ST_fsm_state1;
    static const sc_lv<22> ap_ST_fsm_state2;
    static const sc_lv<22> ap_ST_fsm_state3;
    static const sc_lv<22> ap_ST_fsm_state4;
    static const sc_lv<22> ap_ST_fsm_state5;
    static const sc_lv<22> ap_ST_fsm_state6;
    static const sc_lv<22> ap_ST_fsm_state7;
    static const sc_lv<22> ap_ST_fsm_state8;
    static const sc_lv<22> ap_ST_fsm_state9;
    static const sc_lv<22> ap_ST_fsm_state10;
    static const sc_lv<22> ap_ST_fsm_state11;
    static const sc_lv<22> ap_ST_fsm_state12;
    static const sc_lv<22> ap_ST_fsm_state13;
    static const sc_lv<22> ap_ST_fsm_state14;
    static const sc_lv<22> ap_ST_fsm_state15;
    static const sc_lv<22> ap_ST_fsm_state16;
    static const sc_lv<22> ap_ST_fsm_state17;
    static const sc_lv<22> ap_ST_fsm_state18;
    static const sc_lv<22> ap_ST_fsm_state19;
    static const sc_lv<22> ap_ST_fsm_state20;
    static const sc_lv<22> ap_ST_fsm_state21;
    static const sc_lv<22> ap_ST_fsm_state22;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<9> ap_const_lv9_A0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln34_fu_366_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_expandedKey23_ce0();
    void thread_grp_aes_invRound_fu_289_ap_start();
    void thread_grp_createRoundKey_fu_298_ap_start();
    void thread_grp_createRoundKey_fu_298_ptr();
    void thread_grp_fu_309_p2();
    void thread_i_10_fu_335_p2();
    void thread_i_11_fu_378_p2();
    void thread_i_12_fu_400_p2();
    void thread_icmp_ln225_2_fu_394_p2();
    void thread_icmp_ln225_fu_329_p2();
    void thread_icmp_ln319_fu_372_p2();
    void thread_icmp_ln34_fu_347_p2();
    void thread_roundKey_address0();
    void thread_roundKey_ce0();
    void thread_roundKey_we0();
    void thread_rsbox_address0();
    void thread_rsbox_ce0();
    void thread_shl_ln_fu_353_p3();
    void thread_state_addr_45_reg_455();
    void thread_state_addr_54_reg_524();
    void thread_state_address0();
    void thread_state_address1();
    void thread_state_ce0();
    void thread_state_ce1();
    void thread_state_d0();
    void thread_state_d1();
    void thread_state_we0();
    void thread_state_we1();
    void thread_zext_ln226_2_fu_406_p1();
    void thread_zext_ln226_fu_341_p1();
    void thread_zext_ln321_fu_384_p1();
    void thread_zext_ln36_fu_361_p1();
    void thread_zext_ln48_fu_389_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
