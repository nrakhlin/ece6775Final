// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "decrypt_aes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic decrypt_aes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic decrypt_aes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> decrypt_aes::ap_ST_fsm_state1 = "1";
const sc_lv<8> decrypt_aes::ap_ST_fsm_state2 = "10";
const sc_lv<8> decrypt_aes::ap_ST_fsm_state3 = "100";
const sc_lv<8> decrypt_aes::ap_ST_fsm_state4 = "1000";
const sc_lv<8> decrypt_aes::ap_ST_fsm_state5 = "10000";
const sc_lv<8> decrypt_aes::ap_ST_fsm_state6 = "100000";
const sc_lv<8> decrypt_aes::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> decrypt_aes::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> decrypt_aes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> decrypt_aes::ap_const_lv32_1 = "1";
const sc_lv<32> decrypt_aes::ap_const_lv32_2 = "10";
const sc_lv<32> decrypt_aes::ap_const_lv32_3 = "11";
const sc_lv<1> decrypt_aes::ap_const_lv1_0 = "0";
const sc_lv<32> decrypt_aes::ap_const_lv32_6 = "110";
const sc_lv<32> decrypt_aes::ap_const_lv32_7 = "111";
const sc_lv<4> decrypt_aes::ap_const_lv4_0 = "0000";
const sc_lv<1> decrypt_aes::ap_const_lv1_1 = "1";
const sc_lv<32> decrypt_aes::ap_const_lv32_4 = "100";
const sc_lv<5> decrypt_aes::ap_const_lv5_0 = "00000";
const sc_lv<32> decrypt_aes::ap_const_lv32_5 = "101";
const sc_lv<8> decrypt_aes::ap_const_lv8_0 = "00000000";
const sc_lv<4> decrypt_aes::ap_const_lv4_1 = "1";
const sc_lv<4> decrypt_aes::ap_const_lv4_F = "1111";
const sc_lv<5> decrypt_aes::ap_const_lv5_10 = "10000";
const sc_lv<5> decrypt_aes::ap_const_lv5_1 = "1";
const sc_lv<3> decrypt_aes::ap_const_lv3_0 = "000";
const sc_lv<7> decrypt_aes::ap_const_lv7_7 = "111";
const sc_lv<32> decrypt_aes::ap_const_lv32_7F = "1111111";
const sc_lv<8> decrypt_aes::ap_const_lv8_7F = "1111111";
const sc_lv<128> decrypt_aes::ap_const_lv128_lc_1 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<128> decrypt_aes::ap_const_lv128_lc_2 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const bool decrypt_aes::ap_const_boolean_1 = true;

decrypt_aes::decrypt_aes(sc_module_name name) : sc_module(name), mVcdFile(0) {
    aes_input_U = new aes_main_roundKey("aes_input_U");
    aes_input_U->clk(ap_clk);
    aes_input_U->reset(ap_rst);
    aes_input_U->address0(aes_input_address0);
    aes_input_U->ce0(aes_input_ce0);
    aes_input_U->we0(aes_input_we0);
    aes_input_U->d0(aes_input_d0);
    aes_input_U->q0(aes_input_q0);
    output_U = new aes_main_roundKey("output_U");
    output_U->clk(ap_clk);
    output_U->reset(ap_rst);
    output_U->address0(output_address0);
    output_U->ce0(output_ce0);
    output_U->we0(output_we0);
    output_U->d0(output_d0);
    output_U->q0(output_q0);
    grp_aes_decrypt_fu_167 = new aes_decrypt("grp_aes_decrypt_fu_167");
    grp_aes_decrypt_fu_167->ap_clk(ap_clk);
    grp_aes_decrypt_fu_167->ap_rst(ap_rst);
    grp_aes_decrypt_fu_167->ap_start(grp_aes_decrypt_fu_167_ap_start);
    grp_aes_decrypt_fu_167->ap_done(grp_aes_decrypt_fu_167_ap_done);
    grp_aes_decrypt_fu_167->ap_idle(grp_aes_decrypt_fu_167_ap_idle);
    grp_aes_decrypt_fu_167->ap_ready(grp_aes_decrypt_fu_167_ap_ready);
    grp_aes_decrypt_fu_167->input_r_address0(grp_aes_decrypt_fu_167_input_r_address0);
    grp_aes_decrypt_fu_167->input_r_ce0(grp_aes_decrypt_fu_167_input_r_ce0);
    grp_aes_decrypt_fu_167->input_r_q0(aes_input_q0);
    grp_aes_decrypt_fu_167->output_r_address0(grp_aes_decrypt_fu_167_output_r_address0);
    grp_aes_decrypt_fu_167->output_r_ce0(grp_aes_decrypt_fu_167_output_r_ce0);
    grp_aes_decrypt_fu_167->output_r_we0(grp_aes_decrypt_fu_167_output_r_we0);
    grp_aes_decrypt_fu_167->output_r_d0(grp_aes_decrypt_fu_167_output_r_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Lo_assign_6_fu_366_p3);
    sensitive << ( trunc_ln56_reg_559 );

    SC_METHOD(thread_Lo_assign_fu_227_p3);
    sensitive << ( trunc_ln50_fu_223_p1 );

    SC_METHOD(thread_add_ln46_fu_177_p2);
    sensitive << ( phi_ln46_reg_110 );

    SC_METHOD(thread_add_ln47_fu_194_p2);
    sensitive << ( phi_ln47_reg_121 );

    SC_METHOD(thread_aes_input_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_aes_decrypt_fu_167_input_r_address0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln46_fu_183_p1 );
    sensitive << ( zext_ln50_fu_340_p1 );

    SC_METHOD(thread_aes_input_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_aes_decrypt_fu_167_input_r_ce0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_aes_input_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln50_1_fu_335_p1 );

    SC_METHOD(thread_aes_input_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_and_ln388_3_fu_493_p2);
    sensitive << ( p_Val2_s_reg_144 );
    sensitive << ( xor_ln388_4_fu_487_p2 );

    SC_METHOD(thread_and_ln388_4_fu_499_p2);
    sensitive << ( and_ln388_fu_481_p2 );
    sensitive << ( select_ln388_6_fu_461_p3 );

    SC_METHOD(thread_and_ln388_fu_481_p2);
    sensitive << ( shl_ln388_2_fu_469_p2 );
    sensitive << ( lshr_ln388_fu_475_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln55_fu_345_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln55_fu_345_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln55_fu_345_p2 );
    sensitive << ( p_Val2_s_reg_144 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_grp_aes_decrypt_fu_167_ap_start);
    sensitive << ( grp_aes_decrypt_fu_167_ap_start_reg );

    SC_METHOD(thread_i_6_fu_351_p2);
    sensitive << ( i1_0_reg_156 );

    SC_METHOD(thread_i_fu_217_p2);
    sensitive << ( i_0_reg_132 );

    SC_METHOD(thread_icmp_ln388_fu_383_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( Lo_assign_6_fu_366_p3 );
    sensitive << ( or_ln56_fu_373_p2 );

    SC_METHOD(thread_icmp_ln46_fu_188_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln46_reg_110 );

    SC_METHOD(thread_icmp_ln47_fu_205_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( phi_ln47_reg_121 );

    SC_METHOD(thread_icmp_ln49_fu_211_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_132 );

    SC_METHOD(thread_icmp_ln55_fu_345_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i1_0_reg_156 );

    SC_METHOD(thread_icmp_ln681_fu_241_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln49_fu_211_p2 );
    sensitive << ( Lo_assign_fu_227_p3 );
    sensitive << ( or_ln50_fu_235_p2 );

    SC_METHOD(thread_lshr_ln388_fu_475_p2);
    sensitive << ( zext_ln388_8_fu_441_p1 );

    SC_METHOD(thread_lshr_ln681_5_fu_324_p2);
    sensitive << ( zext_ln681_13_fu_321_p1 );

    SC_METHOD(thread_lshr_ln681_fu_315_p2);
    sensitive << ( select_ln681_8_fu_290_p3 );
    sensitive << ( zext_ln681_12_fu_311_p1 );

    SC_METHOD(thread_or_ln50_fu_235_p2);
    sensitive << ( Lo_assign_fu_227_p3 );

    SC_METHOD(thread_or_ln56_fu_373_p2);
    sensitive << ( Lo_assign_6_fu_366_p3 );

    SC_METHOD(thread_output_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_aes_decrypt_fu_167_output_r_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln47_fu_200_p1 );
    sensitive << ( zext_ln56_fu_361_p1 );

    SC_METHOD(thread_output_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_aes_decrypt_fu_167_output_r_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_aes_decrypt_fu_167_output_r_d0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_output_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_aes_decrypt_fu_167_output_r_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p_Result_17_fu_505_p2);
    sensitive << ( and_ln388_3_fu_493_p2 );
    sensitive << ( and_ln388_4_fu_499_p2 );

    SC_METHOD(thread_p_Result_s_fu_330_p2);
    sensitive << ( lshr_ln681_reg_546 );
    sensitive << ( lshr_ln681_5_fu_324_p2 );

    SC_METHOD(thread_select_ln388_4_fu_411_p3);
    sensitive << ( zext_ln388_fu_389_p1 );
    sensitive << ( icmp_ln388_fu_383_p2 );
    sensitive << ( zext_ln388_5_fu_393_p1 );

    SC_METHOD(thread_select_ln388_5_fu_419_p3);
    sensitive << ( zext_ln388_fu_389_p1 );
    sensitive << ( icmp_ln388_fu_383_p2 );
    sensitive << ( xor_ln388_fu_397_p2 );

    SC_METHOD(thread_select_ln388_6_fu_461_p3);
    sensitive << ( icmp_ln388_fu_383_p2 );
    sensitive << ( shl_ln388_fu_445_p2 );
    sensitive << ( tmp_6_fu_451_p4 );

    SC_METHOD(thread_select_ln388_fu_403_p3);
    sensitive << ( zext_ln388_fu_389_p1 );
    sensitive << ( icmp_ln388_fu_383_p2 );
    sensitive << ( zext_ln388_5_fu_393_p1 );

    SC_METHOD(thread_select_ln681_8_fu_290_p3);
    sensitive << ( ciphertext_V );
    sensitive << ( icmp_ln681_fu_241_p2 );
    sensitive << ( tmp_fu_255_p4 );

    SC_METHOD(thread_select_ln681_9_fu_297_p3);
    sensitive << ( zext_ln681_fu_247_p1 );
    sensitive << ( icmp_ln681_fu_241_p2 );
    sensitive << ( xor_ln681_fu_270_p2 );

    SC_METHOD(thread_select_ln681_fu_282_p3);
    sensitive << ( icmp_ln681_fu_241_p2 );
    sensitive << ( sub_ln681_fu_264_p2 );
    sensitive << ( sub_ln681_8_fu_276_p2 );

    SC_METHOD(thread_shl_ln388_2_fu_469_p2);
    sensitive << ( zext_ln388_7_fu_437_p1 );

    SC_METHOD(thread_shl_ln388_fu_445_p2);
    sensitive << ( tmp_V_fu_379_p1 );
    sensitive << ( zext_ln388_6_fu_433_p1 );

    SC_METHOD(thread_sub_ln681_8_fu_276_p2);
    sensitive << ( zext_ln681_fu_247_p1 );
    sensitive << ( zext_ln681_11_fu_251_p1 );

    SC_METHOD(thread_sub_ln681_9_fu_305_p2);
    sensitive << ( select_ln681_fu_282_p3 );

    SC_METHOD(thread_sub_ln681_fu_264_p2);
    sensitive << ( zext_ln681_fu_247_p1 );
    sensitive << ( zext_ln681_11_fu_251_p1 );

    SC_METHOD(thread_tmp_6_fu_451_p4);
    sensitive << ( shl_ln388_fu_445_p2 );

    SC_METHOD(thread_tmp_V_fu_379_p1);
    sensitive << ( output_q0 );

    SC_METHOD(thread_tmp_fu_255_p4);
    sensitive << ( ciphertext_V );

    SC_METHOD(thread_trunc_ln50_1_fu_335_p1);
    sensitive << ( p_Result_s_fu_330_p2 );

    SC_METHOD(thread_trunc_ln50_fu_223_p1);
    sensitive << ( i_0_reg_132 );

    SC_METHOD(thread_trunc_ln56_fu_357_p1);
    sensitive << ( i1_0_reg_156 );

    SC_METHOD(thread_xor_ln388_3_fu_427_p2);
    sensitive << ( select_ln388_fu_403_p3 );

    SC_METHOD(thread_xor_ln388_4_fu_487_p2);
    sensitive << ( and_ln388_fu_481_p2 );

    SC_METHOD(thread_xor_ln388_fu_397_p2);
    sensitive << ( zext_ln388_fu_389_p1 );

    SC_METHOD(thread_xor_ln681_fu_270_p2);
    sensitive << ( zext_ln681_fu_247_p1 );

    SC_METHOD(thread_zext_ln388_5_fu_393_p1);
    sensitive << ( or_ln56_fu_373_p2 );

    SC_METHOD(thread_zext_ln388_6_fu_433_p1);
    sensitive << ( select_ln388_5_fu_419_p3 );

    SC_METHOD(thread_zext_ln388_7_fu_437_p1);
    sensitive << ( select_ln388_4_fu_411_p3 );

    SC_METHOD(thread_zext_ln388_8_fu_441_p1);
    sensitive << ( xor_ln388_3_fu_427_p2 );

    SC_METHOD(thread_zext_ln388_fu_389_p1);
    sensitive << ( Lo_assign_6_fu_366_p3 );

    SC_METHOD(thread_zext_ln46_fu_183_p1);
    sensitive << ( phi_ln46_reg_110 );

    SC_METHOD(thread_zext_ln47_fu_200_p1);
    sensitive << ( phi_ln47_reg_121 );

    SC_METHOD(thread_zext_ln50_fu_340_p1);
    sensitive << ( i_0_reg_132 );

    SC_METHOD(thread_zext_ln56_fu_361_p1);
    sensitive << ( i1_0_reg_156 );

    SC_METHOD(thread_zext_ln681_11_fu_251_p1);
    sensitive << ( or_ln50_fu_235_p2 );

    SC_METHOD(thread_zext_ln681_12_fu_311_p1);
    sensitive << ( select_ln681_9_fu_297_p3 );

    SC_METHOD(thread_zext_ln681_13_fu_321_p1);
    sensitive << ( sub_ln681_9_reg_541 );

    SC_METHOD(thread_zext_ln681_fu_247_p1);
    sensitive << ( Lo_assign_fu_227_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln49_fu_211_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln55_fu_345_p2 );
    sensitive << ( grp_aes_decrypt_fu_167_ap_done );
    sensitive << ( icmp_ln46_fu_188_p2 );
    sensitive << ( icmp_ln47_fu_205_p2 );
    sensitive << ( ap_CS_fsm_state6 );

    ap_CS_fsm = "00000001";
    grp_aes_decrypt_fu_167_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "decrypt_aes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ciphertext_V, "(port)ciphertext_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln46_fu_177_p2, "add_ln46_fu_177_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln47_fu_194_p2, "add_ln47_fu_194_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_fu_217_p2, "i_fu_217_p2");
    sc_trace(mVcdFile, i_reg_536, "i_reg_536");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, sub_ln681_9_fu_305_p2, "sub_ln681_9_fu_305_p2");
    sc_trace(mVcdFile, sub_ln681_9_reg_541, "sub_ln681_9_reg_541");
    sc_trace(mVcdFile, icmp_ln49_fu_211_p2, "icmp_ln49_fu_211_p2");
    sc_trace(mVcdFile, lshr_ln681_fu_315_p2, "lshr_ln681_fu_315_p2");
    sc_trace(mVcdFile, lshr_ln681_reg_546, "lshr_ln681_reg_546");
    sc_trace(mVcdFile, i_6_fu_351_p2, "i_6_fu_351_p2");
    sc_trace(mVcdFile, i_6_reg_554, "i_6_reg_554");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, trunc_ln56_fu_357_p1, "trunc_ln56_fu_357_p1");
    sc_trace(mVcdFile, trunc_ln56_reg_559, "trunc_ln56_reg_559");
    sc_trace(mVcdFile, icmp_ln55_fu_345_p2, "icmp_ln55_fu_345_p2");
    sc_trace(mVcdFile, p_Result_17_fu_505_p2, "p_Result_17_fu_505_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, aes_input_address0, "aes_input_address0");
    sc_trace(mVcdFile, aes_input_ce0, "aes_input_ce0");
    sc_trace(mVcdFile, aes_input_we0, "aes_input_we0");
    sc_trace(mVcdFile, aes_input_d0, "aes_input_d0");
    sc_trace(mVcdFile, aes_input_q0, "aes_input_q0");
    sc_trace(mVcdFile, output_address0, "output_address0");
    sc_trace(mVcdFile, output_ce0, "output_ce0");
    sc_trace(mVcdFile, output_we0, "output_we0");
    sc_trace(mVcdFile, output_d0, "output_d0");
    sc_trace(mVcdFile, output_q0, "output_q0");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_ap_start, "grp_aes_decrypt_fu_167_ap_start");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_ap_done, "grp_aes_decrypt_fu_167_ap_done");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_ap_idle, "grp_aes_decrypt_fu_167_ap_idle");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_ap_ready, "grp_aes_decrypt_fu_167_ap_ready");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_input_r_address0, "grp_aes_decrypt_fu_167_input_r_address0");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_input_r_ce0, "grp_aes_decrypt_fu_167_input_r_ce0");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_output_r_address0, "grp_aes_decrypt_fu_167_output_r_address0");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_output_r_ce0, "grp_aes_decrypt_fu_167_output_r_ce0");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_output_r_we0, "grp_aes_decrypt_fu_167_output_r_we0");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_output_r_d0, "grp_aes_decrypt_fu_167_output_r_d0");
    sc_trace(mVcdFile, phi_ln46_reg_110, "phi_ln46_reg_110");
    sc_trace(mVcdFile, icmp_ln46_fu_188_p2, "icmp_ln46_fu_188_p2");
    sc_trace(mVcdFile, phi_ln47_reg_121, "phi_ln47_reg_121");
    sc_trace(mVcdFile, icmp_ln47_fu_205_p2, "icmp_ln47_fu_205_p2");
    sc_trace(mVcdFile, i_0_reg_132, "i_0_reg_132");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, p_Val2_s_reg_144, "p_Val2_s_reg_144");
    sc_trace(mVcdFile, i1_0_reg_156, "i1_0_reg_156");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_aes_decrypt_fu_167_ap_start_reg, "grp_aes_decrypt_fu_167_ap_start_reg");
    sc_trace(mVcdFile, zext_ln46_fu_183_p1, "zext_ln46_fu_183_p1");
    sc_trace(mVcdFile, zext_ln47_fu_200_p1, "zext_ln47_fu_200_p1");
    sc_trace(mVcdFile, zext_ln50_fu_340_p1, "zext_ln50_fu_340_p1");
    sc_trace(mVcdFile, zext_ln56_fu_361_p1, "zext_ln56_fu_361_p1");
    sc_trace(mVcdFile, trunc_ln50_1_fu_335_p1, "trunc_ln50_1_fu_335_p1");
    sc_trace(mVcdFile, trunc_ln50_fu_223_p1, "trunc_ln50_fu_223_p1");
    sc_trace(mVcdFile, Lo_assign_fu_227_p3, "Lo_assign_fu_227_p3");
    sc_trace(mVcdFile, or_ln50_fu_235_p2, "or_ln50_fu_235_p2");
    sc_trace(mVcdFile, zext_ln681_fu_247_p1, "zext_ln681_fu_247_p1");
    sc_trace(mVcdFile, zext_ln681_11_fu_251_p1, "zext_ln681_11_fu_251_p1");
    sc_trace(mVcdFile, icmp_ln681_fu_241_p2, "icmp_ln681_fu_241_p2");
    sc_trace(mVcdFile, sub_ln681_fu_264_p2, "sub_ln681_fu_264_p2");
    sc_trace(mVcdFile, sub_ln681_8_fu_276_p2, "sub_ln681_8_fu_276_p2");
    sc_trace(mVcdFile, tmp_fu_255_p4, "tmp_fu_255_p4");
    sc_trace(mVcdFile, xor_ln681_fu_270_p2, "xor_ln681_fu_270_p2");
    sc_trace(mVcdFile, select_ln681_fu_282_p3, "select_ln681_fu_282_p3");
    sc_trace(mVcdFile, select_ln681_9_fu_297_p3, "select_ln681_9_fu_297_p3");
    sc_trace(mVcdFile, select_ln681_8_fu_290_p3, "select_ln681_8_fu_290_p3");
    sc_trace(mVcdFile, zext_ln681_12_fu_311_p1, "zext_ln681_12_fu_311_p1");
    sc_trace(mVcdFile, zext_ln681_13_fu_321_p1, "zext_ln681_13_fu_321_p1");
    sc_trace(mVcdFile, lshr_ln681_5_fu_324_p2, "lshr_ln681_5_fu_324_p2");
    sc_trace(mVcdFile, p_Result_s_fu_330_p2, "p_Result_s_fu_330_p2");
    sc_trace(mVcdFile, Lo_assign_6_fu_366_p3, "Lo_assign_6_fu_366_p3");
    sc_trace(mVcdFile, or_ln56_fu_373_p2, "or_ln56_fu_373_p2");
    sc_trace(mVcdFile, zext_ln388_fu_389_p1, "zext_ln388_fu_389_p1");
    sc_trace(mVcdFile, icmp_ln388_fu_383_p2, "icmp_ln388_fu_383_p2");
    sc_trace(mVcdFile, zext_ln388_5_fu_393_p1, "zext_ln388_5_fu_393_p1");
    sc_trace(mVcdFile, xor_ln388_fu_397_p2, "xor_ln388_fu_397_p2");
    sc_trace(mVcdFile, select_ln388_fu_403_p3, "select_ln388_fu_403_p3");
    sc_trace(mVcdFile, select_ln388_5_fu_419_p3, "select_ln388_5_fu_419_p3");
    sc_trace(mVcdFile, select_ln388_4_fu_411_p3, "select_ln388_4_fu_411_p3");
    sc_trace(mVcdFile, xor_ln388_3_fu_427_p2, "xor_ln388_3_fu_427_p2");
    sc_trace(mVcdFile, tmp_V_fu_379_p1, "tmp_V_fu_379_p1");
    sc_trace(mVcdFile, zext_ln388_6_fu_433_p1, "zext_ln388_6_fu_433_p1");
    sc_trace(mVcdFile, shl_ln388_fu_445_p2, "shl_ln388_fu_445_p2");
    sc_trace(mVcdFile, tmp_6_fu_451_p4, "tmp_6_fu_451_p4");
    sc_trace(mVcdFile, zext_ln388_7_fu_437_p1, "zext_ln388_7_fu_437_p1");
    sc_trace(mVcdFile, zext_ln388_8_fu_441_p1, "zext_ln388_8_fu_441_p1");
    sc_trace(mVcdFile, shl_ln388_2_fu_469_p2, "shl_ln388_2_fu_469_p2");
    sc_trace(mVcdFile, lshr_ln388_fu_475_p2, "lshr_ln388_fu_475_p2");
    sc_trace(mVcdFile, and_ln388_fu_481_p2, "and_ln388_fu_481_p2");
    sc_trace(mVcdFile, xor_ln388_4_fu_487_p2, "xor_ln388_4_fu_487_p2");
    sc_trace(mVcdFile, select_ln388_6_fu_461_p3, "select_ln388_6_fu_461_p3");
    sc_trace(mVcdFile, and_ln388_3_fu_493_p2, "and_ln388_3_fu_493_p2");
    sc_trace(mVcdFile, and_ln388_4_fu_499_p2, "and_ln388_4_fu_499_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

decrypt_aes::~decrypt_aes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete aes_input_U;
    delete output_U;
    delete grp_aes_decrypt_fu_167;
}

void decrypt_aes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv128_lc_2;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
             esl_seteq<1,1,1>(icmp_ln55_fu_345_p2.read(), ap_const_lv1_1))) {
            ap_return_preg = p_Val2_s_reg_144.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_aes_decrypt_fu_167_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
             esl_seteq<1,1,1>(icmp_ln49_fu_211_p2.read(), ap_const_lv1_1))) {
            grp_aes_decrypt_fu_167_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aes_decrypt_fu_167_ap_ready.read())) {
            grp_aes_decrypt_fu_167_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i1_0_reg_156 = i_6_reg_554.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(grp_aes_decrypt_fu_167_ap_done.read(), ap_const_logic_1))) {
        i1_0_reg_156 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln47_fu_205_p2.read(), ap_const_lv1_1))) {
        i_0_reg_132 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_reg_132 = i_reg_536.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln46_fu_188_p2.read()))) {
        phi_ln46_reg_110 = add_ln46_fu_177_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln46_reg_110 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln46_fu_188_p2.read(), ap_const_lv1_1))) {
        phi_ln47_reg_121 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln47_fu_205_p2.read()))) {
        phi_ln47_reg_121 = add_ln47_fu_194_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_6_reg_554 = i_6_fu_351_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_536 = i_fu_217_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln49_fu_211_p2.read(), ap_const_lv1_0))) {
        lshr_ln681_reg_546 = lshr_ln681_fu_315_p2.read();
        sub_ln681_9_reg_541 = sub_ln681_9_fu_305_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_Val2_s_reg_144 = p_Result_17_fu_505_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln55_fu_345_p2.read()))) {
        trunc_ln56_reg_559 = trunc_ln56_fu_357_p1.read();
    }
}

void decrypt_aes::thread_Lo_assign_6_fu_366_p3() {
    Lo_assign_6_fu_366_p3 = esl_concat<4,3>(trunc_ln56_reg_559.read(), ap_const_lv3_0);
}

void decrypt_aes::thread_Lo_assign_fu_227_p3() {
    Lo_assign_fu_227_p3 = esl_concat<4,3>(trunc_ln50_fu_223_p1.read(), ap_const_lv3_0);
}

void decrypt_aes::thread_add_ln46_fu_177_p2() {
    add_ln46_fu_177_p2 = (!phi_ln46_reg_110.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(phi_ln46_reg_110.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void decrypt_aes::thread_add_ln47_fu_194_p2() {
    add_ln47_fu_194_p2 = (!phi_ln47_reg_121.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(phi_ln47_reg_121.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void decrypt_aes::thread_aes_input_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        aes_input_address0 =  (sc_lv<4>) (zext_ln50_fu_340_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        aes_input_address0 =  (sc_lv<4>) (zext_ln46_fu_183_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        aes_input_address0 = grp_aes_decrypt_fu_167_input_r_address0.read();
    } else {
        aes_input_address0 = "XXXX";
    }
}

void decrypt_aes::thread_aes_input_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        aes_input_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        aes_input_ce0 = grp_aes_decrypt_fu_167_input_r_ce0.read();
    } else {
        aes_input_ce0 = ap_const_logic_0;
    }
}

void decrypt_aes::thread_aes_input_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        aes_input_d0 = trunc_ln50_1_fu_335_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        aes_input_d0 = ap_const_lv8_0;
    } else {
        aes_input_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void decrypt_aes::thread_aes_input_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        aes_input_we0 = ap_const_logic_1;
    } else {
        aes_input_we0 = ap_const_logic_0;
    }
}

void decrypt_aes::thread_and_ln388_3_fu_493_p2() {
    and_ln388_3_fu_493_p2 = (p_Val2_s_reg_144.read() & xor_ln388_4_fu_487_p2.read());
}

void decrypt_aes::thread_and_ln388_4_fu_499_p2() {
    and_ln388_4_fu_499_p2 = (select_ln388_6_fu_461_p3.read() & and_ln388_fu_481_p2.read());
}

void decrypt_aes::thread_and_ln388_fu_481_p2() {
    and_ln388_fu_481_p2 = (shl_ln388_2_fu_469_p2.read() & lshr_ln388_fu_475_p2.read());
}

void decrypt_aes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void decrypt_aes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void decrypt_aes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void decrypt_aes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void decrypt_aes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void decrypt_aes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void decrypt_aes::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void decrypt_aes::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void decrypt_aes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(icmp_ln55_fu_345_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void decrypt_aes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void decrypt_aes::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln55_fu_345_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void decrypt_aes::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln55_fu_345_p2.read(), ap_const_lv1_1))) {
        ap_return = p_Val2_s_reg_144.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void decrypt_aes::thread_grp_aes_decrypt_fu_167_ap_start() {
    grp_aes_decrypt_fu_167_ap_start = grp_aes_decrypt_fu_167_ap_start_reg.read();
}

void decrypt_aes::thread_i_6_fu_351_p2() {
    i_6_fu_351_p2 = (!i1_0_reg_156.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i1_0_reg_156.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void decrypt_aes::thread_i_fu_217_p2() {
    i_fu_217_p2 = (!i_0_reg_132.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_132.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void decrypt_aes::thread_icmp_ln388_fu_383_p2() {
    icmp_ln388_fu_383_p2 = (!Lo_assign_6_fu_366_p3.read().is_01() || !or_ln56_fu_373_p2.read().is_01())? sc_lv<1>(): (sc_biguint<7>(Lo_assign_6_fu_366_p3.read()) > sc_biguint<7>(or_ln56_fu_373_p2.read()));
}

void decrypt_aes::thread_icmp_ln46_fu_188_p2() {
    icmp_ln46_fu_188_p2 = (!phi_ln46_reg_110.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln46_reg_110.read() == ap_const_lv4_F);
}

void decrypt_aes::thread_icmp_ln47_fu_205_p2() {
    icmp_ln47_fu_205_p2 = (!phi_ln47_reg_121.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln47_reg_121.read() == ap_const_lv4_F);
}

void decrypt_aes::thread_icmp_ln49_fu_211_p2() {
    icmp_ln49_fu_211_p2 = (!i_0_reg_132.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_132.read() == ap_const_lv5_10);
}

void decrypt_aes::thread_icmp_ln55_fu_345_p2() {
    icmp_ln55_fu_345_p2 = (!i1_0_reg_156.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_156.read() == ap_const_lv5_10);
}

void decrypt_aes::thread_icmp_ln681_fu_241_p2() {
    icmp_ln681_fu_241_p2 = (!Lo_assign_fu_227_p3.read().is_01() || !or_ln50_fu_235_p2.read().is_01())? sc_lv<1>(): (sc_biguint<7>(Lo_assign_fu_227_p3.read()) > sc_biguint<7>(or_ln50_fu_235_p2.read()));
}

void decrypt_aes::thread_lshr_ln388_fu_475_p2() {
    lshr_ln388_fu_475_p2 = (!zext_ln388_8_fu_441_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_1 >> (unsigned short)zext_ln388_8_fu_441_p1.read().to_uint();
}

void decrypt_aes::thread_lshr_ln681_5_fu_324_p2() {
    lshr_ln681_5_fu_324_p2 = (!zext_ln681_13_fu_321_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_1 >> (unsigned short)zext_ln681_13_fu_321_p1.read().to_uint();
}

void decrypt_aes::thread_lshr_ln681_fu_315_p2() {
    lshr_ln681_fu_315_p2 = (!zext_ln681_12_fu_311_p1.read().is_01())? sc_lv<128>(): select_ln681_8_fu_290_p3.read() >> (unsigned short)zext_ln681_12_fu_311_p1.read().to_uint();
}

void decrypt_aes::thread_or_ln50_fu_235_p2() {
    or_ln50_fu_235_p2 = (Lo_assign_fu_227_p3.read() | ap_const_lv7_7);
}

void decrypt_aes::thread_or_ln56_fu_373_p2() {
    or_ln56_fu_373_p2 = (Lo_assign_6_fu_366_p3.read() | ap_const_lv7_7);
}

void decrypt_aes::thread_output_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_address0 =  (sc_lv<4>) (zext_ln56_fu_361_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_address0 =  (sc_lv<4>) (zext_ln47_fu_200_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_address0 = grp_aes_decrypt_fu_167_output_r_address0.read();
    } else {
        output_address0 = "XXXX";
    }
}

void decrypt_aes::thread_output_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        output_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_ce0 = grp_aes_decrypt_fu_167_output_r_ce0.read();
    } else {
        output_ce0 = ap_const_logic_0;
    }
}

void decrypt_aes::thread_output_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_d0 = grp_aes_decrypt_fu_167_output_r_d0.read();
    } else {
        output_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void decrypt_aes::thread_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_we0 = grp_aes_decrypt_fu_167_output_r_we0.read();
    } else {
        output_we0 = ap_const_logic_0;
    }
}

void decrypt_aes::thread_p_Result_17_fu_505_p2() {
    p_Result_17_fu_505_p2 = (and_ln388_3_fu_493_p2.read() | and_ln388_4_fu_499_p2.read());
}

void decrypt_aes::thread_p_Result_s_fu_330_p2() {
    p_Result_s_fu_330_p2 = (lshr_ln681_reg_546.read() & lshr_ln681_5_fu_324_p2.read());
}

void decrypt_aes::thread_select_ln388_4_fu_411_p3() {
    select_ln388_4_fu_411_p3 = (!icmp_ln388_fu_383_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln388_fu_383_p2.read()[0].to_bool())? zext_ln388_5_fu_393_p1.read(): zext_ln388_fu_389_p1.read());
}

void decrypt_aes::thread_select_ln388_5_fu_419_p3() {
    select_ln388_5_fu_419_p3 = (!icmp_ln388_fu_383_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln388_fu_383_p2.read()[0].to_bool())? xor_ln388_fu_397_p2.read(): zext_ln388_fu_389_p1.read());
}

void decrypt_aes::thread_select_ln388_6_fu_461_p3() {
    select_ln388_6_fu_461_p3 = (!icmp_ln388_fu_383_p2.read()[0].is_01())? sc_lv<128>(): ((icmp_ln388_fu_383_p2.read()[0].to_bool())? tmp_6_fu_451_p4.read(): shl_ln388_fu_445_p2.read());
}

void decrypt_aes::thread_select_ln388_fu_403_p3() {
    select_ln388_fu_403_p3 = (!icmp_ln388_fu_383_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln388_fu_383_p2.read()[0].to_bool())? zext_ln388_fu_389_p1.read(): zext_ln388_5_fu_393_p1.read());
}

void decrypt_aes::thread_select_ln681_8_fu_290_p3() {
    select_ln681_8_fu_290_p3 = (!icmp_ln681_fu_241_p2.read()[0].is_01())? sc_lv<128>(): ((icmp_ln681_fu_241_p2.read()[0].to_bool())? tmp_fu_255_p4.read(): ciphertext_V.read());
}

void decrypt_aes::thread_select_ln681_9_fu_297_p3() {
    select_ln681_9_fu_297_p3 = (!icmp_ln681_fu_241_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln681_fu_241_p2.read()[0].to_bool())? xor_ln681_fu_270_p2.read(): zext_ln681_fu_247_p1.read());
}

void decrypt_aes::thread_select_ln681_fu_282_p3() {
    select_ln681_fu_282_p3 = (!icmp_ln681_fu_241_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln681_fu_241_p2.read()[0].to_bool())? sub_ln681_fu_264_p2.read(): sub_ln681_8_fu_276_p2.read());
}

void decrypt_aes::thread_shl_ln388_2_fu_469_p2() {
    shl_ln388_2_fu_469_p2 = (!zext_ln388_7_fu_437_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_1 << (unsigned short)zext_ln388_7_fu_437_p1.read().to_uint();
}

void decrypt_aes::thread_shl_ln388_fu_445_p2() {
    shl_ln388_fu_445_p2 = (!zext_ln388_6_fu_433_p1.read().is_01())? sc_lv<128>(): tmp_V_fu_379_p1.read() << (unsigned short)zext_ln388_6_fu_433_p1.read().to_uint();
}

void decrypt_aes::thread_sub_ln681_8_fu_276_p2() {
    sub_ln681_8_fu_276_p2 = (!zext_ln681_11_fu_251_p1.read().is_01() || !zext_ln681_fu_247_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln681_11_fu_251_p1.read()) - sc_biguint<8>(zext_ln681_fu_247_p1.read()));
}

void decrypt_aes::thread_sub_ln681_9_fu_305_p2() {
    sub_ln681_9_fu_305_p2 = (!ap_const_lv8_7F.is_01() || !select_ln681_fu_282_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(select_ln681_fu_282_p3.read()));
}

void decrypt_aes::thread_sub_ln681_fu_264_p2() {
    sub_ln681_fu_264_p2 = (!zext_ln681_fu_247_p1.read().is_01() || !zext_ln681_11_fu_251_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln681_fu_247_p1.read()) - sc_biguint<8>(zext_ln681_11_fu_251_p1.read()));
}

void decrypt_aes::thread_tmp_6_fu_451_p4() {
    tmp_6_fu_451_p4 = shl_ln388_fu_445_p2.read().range(0, 127);
}

void decrypt_aes::thread_tmp_V_fu_379_p1() {
    tmp_V_fu_379_p1 = esl_zext<128,8>(output_q0.read());
}

void decrypt_aes::thread_tmp_fu_255_p4() {
    tmp_fu_255_p4 = ciphertext_V.read().range(0, 127);
}

void decrypt_aes::thread_trunc_ln50_1_fu_335_p1() {
    trunc_ln50_1_fu_335_p1 = p_Result_s_fu_330_p2.read().range(8-1, 0);
}

void decrypt_aes::thread_trunc_ln50_fu_223_p1() {
    trunc_ln50_fu_223_p1 = i_0_reg_132.read().range(4-1, 0);
}

void decrypt_aes::thread_trunc_ln56_fu_357_p1() {
    trunc_ln56_fu_357_p1 = i1_0_reg_156.read().range(4-1, 0);
}

void decrypt_aes::thread_xor_ln388_3_fu_427_p2() {
    xor_ln388_3_fu_427_p2 = (select_ln388_fu_403_p3.read() ^ ap_const_lv8_7F);
}

void decrypt_aes::thread_xor_ln388_4_fu_487_p2() {
    xor_ln388_4_fu_487_p2 = (and_ln388_fu_481_p2.read() ^ ap_const_lv128_lc_1);
}

void decrypt_aes::thread_xor_ln388_fu_397_p2() {
    xor_ln388_fu_397_p2 = (zext_ln388_fu_389_p1.read() ^ ap_const_lv8_7F);
}

void decrypt_aes::thread_xor_ln681_fu_270_p2() {
    xor_ln681_fu_270_p2 = (zext_ln681_fu_247_p1.read() ^ ap_const_lv8_7F);
}

void decrypt_aes::thread_zext_ln388_5_fu_393_p1() {
    zext_ln388_5_fu_393_p1 = esl_zext<8,7>(or_ln56_fu_373_p2.read());
}

void decrypt_aes::thread_zext_ln388_6_fu_433_p1() {
    zext_ln388_6_fu_433_p1 = esl_zext<128,8>(select_ln388_5_fu_419_p3.read());
}

void decrypt_aes::thread_zext_ln388_7_fu_437_p1() {
    zext_ln388_7_fu_437_p1 = esl_zext<128,8>(select_ln388_4_fu_411_p3.read());
}

void decrypt_aes::thread_zext_ln388_8_fu_441_p1() {
    zext_ln388_8_fu_441_p1 = esl_zext<128,8>(xor_ln388_3_fu_427_p2.read());
}

void decrypt_aes::thread_zext_ln388_fu_389_p1() {
    zext_ln388_fu_389_p1 = esl_zext<8,7>(Lo_assign_6_fu_366_p3.read());
}

void decrypt_aes::thread_zext_ln46_fu_183_p1() {
    zext_ln46_fu_183_p1 = esl_zext<64,4>(phi_ln46_reg_110.read());
}

void decrypt_aes::thread_zext_ln47_fu_200_p1() {
    zext_ln47_fu_200_p1 = esl_zext<64,4>(phi_ln47_reg_121.read());
}

void decrypt_aes::thread_zext_ln50_fu_340_p1() {
    zext_ln50_fu_340_p1 = esl_zext<64,5>(i_0_reg_132.read());
}

void decrypt_aes::thread_zext_ln56_fu_361_p1() {
    zext_ln56_fu_361_p1 = esl_zext<64,5>(i1_0_reg_156.read());
}

void decrypt_aes::thread_zext_ln681_11_fu_251_p1() {
    zext_ln681_11_fu_251_p1 = esl_zext<8,7>(or_ln50_fu_235_p2.read());
}

void decrypt_aes::thread_zext_ln681_12_fu_311_p1() {
    zext_ln681_12_fu_311_p1 = esl_zext<128,8>(select_ln681_9_fu_297_p3.read());
}

void decrypt_aes::thread_zext_ln681_13_fu_321_p1() {
    zext_ln681_13_fu_321_p1 = esl_zext<128,8>(sub_ln681_9_reg_541.read());
}

void decrypt_aes::thread_zext_ln681_fu_247_p1() {
    zext_ln681_fu_247_p1 = esl_zext<8,7>(Lo_assign_fu_227_p3.read());
}

void decrypt_aes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln46_fu_188_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln47_fu_205_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln49_fu_211_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_aes_decrypt_fu_167_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln55_fu_345_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

