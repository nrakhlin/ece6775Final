// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> dut::ap_ST_fsm_state1 = "1";
const sc_lv<8> dut::ap_ST_fsm_state2 = "10";
const sc_lv<8> dut::ap_ST_fsm_state3 = "100";
const sc_lv<8> dut::ap_ST_fsm_state4 = "1000";
const sc_lv<8> dut::ap_ST_fsm_state5 = "10000";
const sc_lv<8> dut::ap_ST_fsm_state6 = "100000";
const sc_lv<8> dut::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> dut::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> dut::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool dut::ap_const_boolean_1 = true;
const sc_lv<1> dut::ap_const_lv1_0 = "0";
const sc_lv<32> dut::ap_const_lv32_1 = "1";
const sc_lv<1> dut::ap_const_lv1_1 = "1";
const sc_lv<32> dut::ap_const_lv32_5 = "101";
const sc_lv<32> dut::ap_const_lv32_7 = "111";
const sc_lv<32> dut::ap_const_lv32_3 = "11";
const sc_lv<32> dut::ap_const_lv32_4 = "100";
const sc_lv<32> dut::ap_const_lv32_6 = "110";
const sc_lv<3> dut::ap_const_lv3_0 = "000";
const sc_lv<32> dut::ap_const_lv32_2 = "10";
const sc_lv<8> dut::ap_const_lv8_0 = "00000000";
const sc_lv<128> dut::ap_const_lv128_lc_2 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<3> dut::ap_const_lv3_5 = "101";
const sc_lv<3> dut::ap_const_lv3_1 = "1";
const sc_lv<8> dut::ap_const_lv8_1D = "11101";
const sc_lv<32> dut::ap_const_lv32_1D = "11101";
const sc_lv<3> dut::ap_const_lv3_4 = "100";
const sc_lv<7> dut::ap_const_lv7_1C = "11100";
const sc_lv<8> dut::ap_const_lv8_7F = "1111111";
const sc_lv<32> dut::ap_const_lv32_74 = "1110100";
const sc_lv<32> dut::ap_const_lv32_7F = "1111111";
const sc_lv<32> dut::ap_const_lv32_1E = "11110";
const sc_lv<128> dut::ap_const_lv128_lc_1 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<3> dut::ap_const_lv3_3 = "11";
const sc_lv<3> dut::ap_const_lv3_2 = "10";

dut::dut(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_decrypt_aes_fu_182 = new decrypt_aes("grp_decrypt_aes_fu_182");
    grp_decrypt_aes_fu_182->ap_clk(ap_clk);
    grp_decrypt_aes_fu_182->ap_rst(ap_rst);
    grp_decrypt_aes_fu_182->ap_start(grp_decrypt_aes_fu_182_ap_start);
    grp_decrypt_aes_fu_182->ap_done(grp_decrypt_aes_fu_182_ap_done);
    grp_decrypt_aes_fu_182->ap_idle(grp_decrypt_aes_fu_182_ap_idle);
    grp_decrypt_aes_fu_182->ap_ready(grp_decrypt_aes_fu_182_ap_ready);
    grp_decrypt_aes_fu_182->ciphertext_V(reg_205);
    grp_decrypt_aes_fu_182->ap_return(grp_decrypt_aes_fu_182_ap_return);
    grp_encrypt_aes_fu_191 = new encrypt_aes("grp_encrypt_aes_fu_191");
    grp_encrypt_aes_fu_191->ap_clk(ap_clk);
    grp_encrypt_aes_fu_191->ap_rst(ap_rst);
    grp_encrypt_aes_fu_191->ap_start(grp_encrypt_aes_fu_191_ap_start);
    grp_encrypt_aes_fu_191->ap_done(grp_encrypt_aes_fu_191_ap_done);
    grp_encrypt_aes_fu_191->ap_idle(grp_encrypt_aes_fu_191_ap_idle);
    grp_encrypt_aes_fu_191->ap_ready(grp_encrypt_aes_fu_191_ap_ready);
    grp_encrypt_aes_fu_191->plaintext_V(reg_205);
    grp_encrypt_aes_fu_191->ap_return(grp_encrypt_aes_fu_191_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln106_fu_285_p2);
    sensitive << ( trunc_ln106_fu_277_p1 );

    SC_METHOD(thread_add_ln135_fu_496_p2);
    sensitive << ( phi_mul3_reg_149 );

    SC_METHOD(thread_add_ln164_fu_570_p2);
    sensitive << ( phi_mul5_reg_171 );

    SC_METHOD(thread_add_ln96_fu_241_p2);
    sensitive << ( phi_mul_reg_126 );

    SC_METHOD(thread_and_ln414_1_fu_434_p2);
    sensitive << ( reg_205 );
    sensitive << ( xor_ln414_fu_428_p2 );

    SC_METHOD(thread_and_ln414_2_fu_440_p2);
    sensitive << ( and_ln414_fu_422_p2 );
    sensitive << ( select_ln414_3_fu_403_p3 );

    SC_METHOD(thread_and_ln414_fu_422_p2);
    sensitive << ( shl_ln414_1_fu_410_p2 );
    sensitive << ( lshr_ln414_fu_416_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_predicate_op30_read_state2 );

    SC_METHOD(thread_ap_block_state2_ignore_call0);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_predicate_op30_read_state2 );

    SC_METHOD(thread_ap_block_state2_ignore_call3);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_predicate_op30_read_state2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( tmp_reg_691 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln126_fu_457_p2 );
    sensitive << ( icmp_ln155_fu_531_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op30_read_state2);
    sensitive << ( icmp_ln95_fu_226_p2 );
    sensitive << ( reading_0_fu_90 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_reg_691 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln126_fu_457_p2 );
    sensitive << ( icmp_ln155_fu_531_p2 );

    SC_METHOD(thread_grp_decrypt_aes_fu_182_ap_start);
    sensitive << ( grp_decrypt_aes_fu_182_ap_start_reg );

    SC_METHOD(thread_grp_encrypt_aes_fu_191_ap_start);
    sensitive << ( grp_encrypt_aes_fu_191_ap_start_reg );

    SC_METHOD(thread_i_2_fu_537_p2);
    sensitive << ( i2_0_reg_160 );

    SC_METHOD(thread_i_3_fu_463_p2);
    sensitive << ( i1_0_reg_138 );

    SC_METHOD(thread_i_fu_232_p2);
    sensitive << ( i_0_reg_115 );

    SC_METHOD(thread_icmp_ln102_fu_261_p2);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln95_fu_226_p2 );
    sensitive << ( ap_predicate_op30_read_state2 );
    sensitive << ( i_0_reg_115 );
    sensitive << ( reading_0_fu_90 );

    SC_METHOD(thread_icmp_ln126_fu_457_p2);
    sensitive << ( tmp_reg_691 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_0_reg_138 );

    SC_METHOD(thread_icmp_ln129_fu_469_p2);
    sensitive << ( tmp_reg_691 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln126_fu_457_p2 );
    sensitive << ( i1_0_reg_138 );

    SC_METHOD(thread_icmp_ln155_fu_531_p2);
    sensitive << ( tmp_reg_691 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i2_0_reg_160 );

    SC_METHOD(thread_icmp_ln158_fu_543_p2);
    sensitive << ( tmp_reg_691 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln155_fu_531_p2 );
    sensitive << ( i2_0_reg_160 );

    SC_METHOD(thread_icmp_ln414_fu_295_p2);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln95_fu_226_p2 );
    sensitive << ( ap_predicate_op30_read_state2 );
    sensitive << ( icmp_ln102_fu_261_p2 );
    sensitive << ( reading_0_fu_90 );
    sensitive << ( zext_ln106_fu_281_p1 );
    sensitive << ( zext_ln106_1_fu_291_p1 );

    SC_METHOD(thread_icmp_ln95_fu_226_p2);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op30_read_state2 );
    sensitive << ( i_0_reg_115 );

    SC_METHOD(thread_lshr_ln414_fu_416_p2);
    sensitive << ( zext_ln414_3_fu_384_p1 );

    SC_METHOD(thread_lshr_ln647_1_fu_506_p2);
    sensitive << ( output_message_V_reg_695 );
    sensitive << ( zext_ln647_1_fu_502_p1 );

    SC_METHOD(thread_lshr_ln647_fu_580_p2);
    sensitive << ( output_message_V_2_reg_737 );
    sensitive << ( zext_ln647_fu_576_p1 );

    SC_METHOD(thread_output_word_V_6_fu_597_p3);
    sensitive << ( icmp_ln158_fu_543_p2 );
    sensitive << ( p_Result_7_fu_562_p3 );
    sensitive << ( p_Result_8_fu_589_p3 );

    SC_METHOD(thread_output_word_V_fu_523_p3);
    sensitive << ( icmp_ln129_fu_469_p2 );
    sensitive << ( p_Result_4_fu_488_p3 );
    sensitive << ( p_Result_6_fu_515_p3 );

    SC_METHOD(thread_p_Result_3_fu_446_p2);
    sensitive << ( and_ln414_1_fu_434_p2 );
    sensitive << ( and_ln414_2_fu_440_p2 );

    SC_METHOD(thread_p_Result_4_fu_488_p3);
    sensitive << ( zext_ln215_1_fu_484_p1 );

    SC_METHOD(thread_p_Result_5_fu_549_p4);
    sensitive << ( output_message_V_2_reg_737 );

    SC_METHOD(thread_p_Result_6_fu_515_p3);
    sensitive << ( trunc_ln215_1_fu_511_p1 );

    SC_METHOD(thread_p_Result_7_fu_562_p3);
    sensitive << ( zext_ln215_fu_558_p1 );

    SC_METHOD(thread_p_Result_8_fu_589_p3);
    sensitive << ( trunc_ln215_fu_585_p1 );

    SC_METHOD(thread_p_Result_9_fu_475_p4);
    sensitive << ( output_message_V_reg_695 );

    SC_METHOD(thread_p_Result_s_fu_329_p5);
    sensitive << ( p_Val2_1_fu_98 );
    sensitive << ( trunc_ln647_fu_325_p1 );

    SC_METHOD(thread_select_ln414_1_fu_364_p3);
    sensitive << ( icmp_ln414_reg_669 );
    sensitive << ( zext_ln414_reg_676 );
    sensitive << ( phi_mul_reg_126 );

    SC_METHOD(thread_select_ln414_2_fu_370_p3);
    sensitive << ( icmp_ln414_reg_669 );
    sensitive << ( sub_ln414_reg_681 );
    sensitive << ( phi_mul_reg_126 );

    SC_METHOD(thread_select_ln414_3_fu_403_p3);
    sensitive << ( icmp_ln414_reg_669 );
    sensitive << ( shl_ln414_fu_387_p2 );
    sensitive << ( tmp_3_fu_393_p4 );

    SC_METHOD(thread_select_ln414_fu_311_p3);
    sensitive << ( icmp_ln414_fu_295_p2 );
    sensitive << ( zext_ln414_fu_301_p1 );
    sensitive << ( phi_mul_reg_126 );

    SC_METHOD(thread_shl_ln414_1_fu_410_p2);
    sensitive << ( zext_ln414_2_fu_380_p1 );

    SC_METHOD(thread_shl_ln414_fu_387_p2);
    sensitive << ( tmp_V_3_fu_360_p1 );
    sensitive << ( zext_ln414_1_fu_376_p1 );

    SC_METHOD(thread_strm_in_V_V_blk_n);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln95_fu_226_p2 );
    sensitive << ( reading_0_fu_90 );

    SC_METHOD(thread_strm_in_V_V_read);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_predicate_op30_read_state2 );

    SC_METHOD(thread_strm_out_V_V_blk_n);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_strm_out_V_V_din);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( output_word_V_reg_714 );
    sensitive << ( output_word_V_6_reg_732 );

    SC_METHOD(thread_strm_out_V_V_write);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_sub_ln414_1_fu_319_p2);
    sensitive << ( select_ln414_fu_311_p3 );

    SC_METHOD(thread_sub_ln414_fu_305_p2);
    sensitive << ( phi_mul_reg_126 );

    SC_METHOD(thread_tmp_2_fu_247_p3);
    sensitive << ( strm_in_V_V_dout );

    SC_METHOD(thread_tmp_3_fu_393_p4);
    sensitive << ( shl_ln414_fu_387_p2 );

    SC_METHOD(thread_tmp_V_3_fu_360_p1);
    sensitive << ( trunc_ln647_1_fu_357_p1 );

    SC_METHOD(thread_tmp_fu_349_p3);
    sensitive << ( p_Val2_s_fu_94 );

    SC_METHOD(thread_trunc_ln106_fu_277_p1);
    sensitive << ( phi_mul_reg_126 );

    SC_METHOD(thread_trunc_ln215_1_fu_511_p1);
    sensitive << ( lshr_ln647_1_fu_506_p2 );

    SC_METHOD(thread_trunc_ln215_fu_585_p1);
    sensitive << ( lshr_ln647_fu_580_p2 );

    SC_METHOD(thread_trunc_ln647_1_fu_357_p1);
    sensitive << ( tmp_V_2_reg_660 );

    SC_METHOD(thread_trunc_ln647_fu_325_p1);
    sensitive << ( strm_in_V_V_dout );

    SC_METHOD(thread_xor_ln142_fu_609_p2);
    sensitive << ( lfsr_decrypt );

    SC_METHOD(thread_xor_ln414_fu_428_p2);
    sensitive << ( and_ln414_fu_422_p2 );

    SC_METHOD(thread_xor_ln99_fu_255_p2);
    sensitive << ( tmp_2_fu_247_p3 );

    SC_METHOD(thread_zext_ln106_1_fu_291_p1);
    sensitive << ( add_ln106_fu_285_p2 );

    SC_METHOD(thread_zext_ln106_fu_281_p1);
    sensitive << ( phi_mul_reg_126 );

    SC_METHOD(thread_zext_ln215_1_fu_484_p1);
    sensitive << ( p_Result_9_fu_475_p4 );

    SC_METHOD(thread_zext_ln215_fu_558_p1);
    sensitive << ( p_Result_5_fu_549_p4 );

    SC_METHOD(thread_zext_ln414_1_fu_376_p1);
    sensitive << ( select_ln414_2_fu_370_p3 );

    SC_METHOD(thread_zext_ln414_2_fu_380_p1);
    sensitive << ( select_ln414_1_fu_364_p3 );

    SC_METHOD(thread_zext_ln414_3_fu_384_p1);
    sensitive << ( sub_ln414_1_reg_686 );

    SC_METHOD(thread_zext_ln414_fu_301_p1);
    sensitive << ( add_ln106_fu_285_p2 );

    SC_METHOD(thread_zext_ln647_1_fu_502_p1);
    sensitive << ( phi_mul3_reg_149 );

    SC_METHOD(thread_zext_ln647_fu_576_p1);
    sensitive << ( phi_mul5_reg_171 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln95_fu_226_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_predicate_op30_read_state2 );
    sensitive << ( tmp_fu_349_p3 );
    sensitive << ( tmp_reg_691 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_encrypt_aes_fu_191_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln126_fu_457_p2 );
    sensitive << ( icmp_ln155_fu_531_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_decrypt_aes_fu_182_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000001";
    lfsr_decrypt = "0";
    grp_decrypt_aes_fu_182_ap_start_reg = SC_LOGIC_0;
    grp_encrypt_aes_fu_191_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, strm_in_V_V_dout, "(port)strm_in_V_V_dout");
    sc_trace(mVcdFile, strm_in_V_V_empty_n, "(port)strm_in_V_V_empty_n");
    sc_trace(mVcdFile, strm_in_V_V_read, "(port)strm_in_V_V_read");
    sc_trace(mVcdFile, strm_out_V_V_din, "(port)strm_out_V_V_din");
    sc_trace(mVcdFile, strm_out_V_V_full_n, "(port)strm_out_V_V_full_n");
    sc_trace(mVcdFile, strm_out_V_V_write, "(port)strm_out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, lfsr_decrypt, "lfsr_decrypt");
    sc_trace(mVcdFile, strm_in_V_V_blk_n, "strm_in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln95_fu_226_p2, "icmp_ln95_fu_226_p2");
    sc_trace(mVcdFile, strm_out_V_V_blk_n, "strm_out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, reg_205, "reg_205");
    sc_trace(mVcdFile, ap_predicate_op30_read_state2, "ap_predicate_op30_read_state2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, i_fu_232_p2, "i_fu_232_p2");
    sc_trace(mVcdFile, i_reg_646, "i_reg_646");
    sc_trace(mVcdFile, reading_0_load_reg_651, "reading_0_load_reg_651");
    sc_trace(mVcdFile, add_ln96_fu_241_p2, "add_ln96_fu_241_p2");
    sc_trace(mVcdFile, add_ln96_reg_655, "add_ln96_reg_655");
    sc_trace(mVcdFile, tmp_V_2_reg_660, "tmp_V_2_reg_660");
    sc_trace(mVcdFile, icmp_ln102_fu_261_p2, "icmp_ln102_fu_261_p2");
    sc_trace(mVcdFile, icmp_ln102_reg_665, "icmp_ln102_reg_665");
    sc_trace(mVcdFile, icmp_ln414_fu_295_p2, "icmp_ln414_fu_295_p2");
    sc_trace(mVcdFile, icmp_ln414_reg_669, "icmp_ln414_reg_669");
    sc_trace(mVcdFile, zext_ln414_fu_301_p1, "zext_ln414_fu_301_p1");
    sc_trace(mVcdFile, zext_ln414_reg_676, "zext_ln414_reg_676");
    sc_trace(mVcdFile, sub_ln414_fu_305_p2, "sub_ln414_fu_305_p2");
    sc_trace(mVcdFile, sub_ln414_reg_681, "sub_ln414_reg_681");
    sc_trace(mVcdFile, sub_ln414_1_fu_319_p2, "sub_ln414_1_fu_319_p2");
    sc_trace(mVcdFile, sub_ln414_1_reg_686, "sub_ln414_1_reg_686");
    sc_trace(mVcdFile, tmp_fu_349_p3, "tmp_fu_349_p3");
    sc_trace(mVcdFile, tmp_reg_691, "tmp_reg_691");
    sc_trace(mVcdFile, grp_encrypt_aes_fu_191_ap_return, "grp_encrypt_aes_fu_191_ap_return");
    sc_trace(mVcdFile, output_message_V_reg_695, "output_message_V_reg_695");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_encrypt_aes_fu_191_ap_ready, "grp_encrypt_aes_fu_191_ap_ready");
    sc_trace(mVcdFile, grp_encrypt_aes_fu_191_ap_done, "grp_encrypt_aes_fu_191_ap_done");
    sc_trace(mVcdFile, i_3_fu_463_p2, "i_3_fu_463_p2");
    sc_trace(mVcdFile, i_3_reg_704, "i_3_reg_704");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln135_fu_496_p2, "add_ln135_fu_496_p2");
    sc_trace(mVcdFile, add_ln135_reg_709, "add_ln135_reg_709");
    sc_trace(mVcdFile, icmp_ln126_fu_457_p2, "icmp_ln126_fu_457_p2");
    sc_trace(mVcdFile, output_word_V_fu_523_p3, "output_word_V_fu_523_p3");
    sc_trace(mVcdFile, output_word_V_reg_714, "output_word_V_reg_714");
    sc_trace(mVcdFile, i_2_fu_537_p2, "i_2_fu_537_p2");
    sc_trace(mVcdFile, i_2_reg_722, "i_2_reg_722");
    sc_trace(mVcdFile, add_ln164_fu_570_p2, "add_ln164_fu_570_p2");
    sc_trace(mVcdFile, add_ln164_reg_727, "add_ln164_reg_727");
    sc_trace(mVcdFile, icmp_ln155_fu_531_p2, "icmp_ln155_fu_531_p2");
    sc_trace(mVcdFile, output_word_V_6_fu_597_p3, "output_word_V_6_fu_597_p3");
    sc_trace(mVcdFile, output_word_V_6_reg_732, "output_word_V_6_reg_732");
    sc_trace(mVcdFile, grp_decrypt_aes_fu_182_ap_return, "grp_decrypt_aes_fu_182_ap_return");
    sc_trace(mVcdFile, output_message_V_2_reg_737, "output_message_V_2_reg_737");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_decrypt_aes_fu_182_ap_ready, "grp_decrypt_aes_fu_182_ap_ready");
    sc_trace(mVcdFile, grp_decrypt_aes_fu_182_ap_done, "grp_decrypt_aes_fu_182_ap_done");
    sc_trace(mVcdFile, grp_decrypt_aes_fu_182_ap_start, "grp_decrypt_aes_fu_182_ap_start");
    sc_trace(mVcdFile, grp_decrypt_aes_fu_182_ap_idle, "grp_decrypt_aes_fu_182_ap_idle");
    sc_trace(mVcdFile, grp_encrypt_aes_fu_191_ap_start, "grp_encrypt_aes_fu_191_ap_start");
    sc_trace(mVcdFile, grp_encrypt_aes_fu_191_ap_idle, "grp_encrypt_aes_fu_191_ap_idle");
    sc_trace(mVcdFile, i_0_reg_115, "i_0_reg_115");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, phi_mul_reg_126, "phi_mul_reg_126");
    sc_trace(mVcdFile, i1_0_reg_138, "i1_0_reg_138");
    sc_trace(mVcdFile, phi_mul3_reg_149, "phi_mul3_reg_149");
    sc_trace(mVcdFile, i2_0_reg_160, "i2_0_reg_160");
    sc_trace(mVcdFile, phi_mul5_reg_171, "phi_mul5_reg_171");
    sc_trace(mVcdFile, grp_decrypt_aes_fu_182_ap_start_reg, "grp_decrypt_aes_fu_182_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state2_ignore_call3, "ap_block_state2_ignore_call3");
    sc_trace(mVcdFile, grp_encrypt_aes_fu_191_ap_start_reg, "grp_encrypt_aes_fu_191_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state2_ignore_call0, "ap_block_state2_ignore_call0");
    sc_trace(mVcdFile, xor_ln142_fu_609_p2, "xor_ln142_fu_609_p2");
    sc_trace(mVcdFile, reading_0_fu_90, "reading_0_fu_90");
    sc_trace(mVcdFile, xor_ln99_fu_255_p2, "xor_ln99_fu_255_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_94, "p_Val2_s_fu_94");
    sc_trace(mVcdFile, p_Val2_1_fu_98, "p_Val2_1_fu_98");
    sc_trace(mVcdFile, p_Result_s_fu_329_p5, "p_Result_s_fu_329_p5");
    sc_trace(mVcdFile, p_Result_3_fu_446_p2, "p_Result_3_fu_446_p2");
    sc_trace(mVcdFile, tmp_2_fu_247_p3, "tmp_2_fu_247_p3");
    sc_trace(mVcdFile, trunc_ln106_fu_277_p1, "trunc_ln106_fu_277_p1");
    sc_trace(mVcdFile, add_ln106_fu_285_p2, "add_ln106_fu_285_p2");
    sc_trace(mVcdFile, zext_ln106_fu_281_p1, "zext_ln106_fu_281_p1");
    sc_trace(mVcdFile, zext_ln106_1_fu_291_p1, "zext_ln106_1_fu_291_p1");
    sc_trace(mVcdFile, select_ln414_fu_311_p3, "select_ln414_fu_311_p3");
    sc_trace(mVcdFile, trunc_ln647_fu_325_p1, "trunc_ln647_fu_325_p1");
    sc_trace(mVcdFile, trunc_ln647_1_fu_357_p1, "trunc_ln647_1_fu_357_p1");
    sc_trace(mVcdFile, select_ln414_2_fu_370_p3, "select_ln414_2_fu_370_p3");
    sc_trace(mVcdFile, select_ln414_1_fu_364_p3, "select_ln414_1_fu_364_p3");
    sc_trace(mVcdFile, tmp_V_3_fu_360_p1, "tmp_V_3_fu_360_p1");
    sc_trace(mVcdFile, zext_ln414_1_fu_376_p1, "zext_ln414_1_fu_376_p1");
    sc_trace(mVcdFile, shl_ln414_fu_387_p2, "shl_ln414_fu_387_p2");
    sc_trace(mVcdFile, tmp_3_fu_393_p4, "tmp_3_fu_393_p4");
    sc_trace(mVcdFile, zext_ln414_2_fu_380_p1, "zext_ln414_2_fu_380_p1");
    sc_trace(mVcdFile, zext_ln414_3_fu_384_p1, "zext_ln414_3_fu_384_p1");
    sc_trace(mVcdFile, shl_ln414_1_fu_410_p2, "shl_ln414_1_fu_410_p2");
    sc_trace(mVcdFile, lshr_ln414_fu_416_p2, "lshr_ln414_fu_416_p2");
    sc_trace(mVcdFile, and_ln414_fu_422_p2, "and_ln414_fu_422_p2");
    sc_trace(mVcdFile, xor_ln414_fu_428_p2, "xor_ln414_fu_428_p2");
    sc_trace(mVcdFile, select_ln414_3_fu_403_p3, "select_ln414_3_fu_403_p3");
    sc_trace(mVcdFile, and_ln414_1_fu_434_p2, "and_ln414_1_fu_434_p2");
    sc_trace(mVcdFile, and_ln414_2_fu_440_p2, "and_ln414_2_fu_440_p2");
    sc_trace(mVcdFile, p_Result_9_fu_475_p4, "p_Result_9_fu_475_p4");
    sc_trace(mVcdFile, zext_ln215_1_fu_484_p1, "zext_ln215_1_fu_484_p1");
    sc_trace(mVcdFile, zext_ln647_1_fu_502_p1, "zext_ln647_1_fu_502_p1");
    sc_trace(mVcdFile, lshr_ln647_1_fu_506_p2, "lshr_ln647_1_fu_506_p2");
    sc_trace(mVcdFile, trunc_ln215_1_fu_511_p1, "trunc_ln215_1_fu_511_p1");
    sc_trace(mVcdFile, icmp_ln129_fu_469_p2, "icmp_ln129_fu_469_p2");
    sc_trace(mVcdFile, p_Result_4_fu_488_p3, "p_Result_4_fu_488_p3");
    sc_trace(mVcdFile, p_Result_6_fu_515_p3, "p_Result_6_fu_515_p3");
    sc_trace(mVcdFile, p_Result_5_fu_549_p4, "p_Result_5_fu_549_p4");
    sc_trace(mVcdFile, zext_ln215_fu_558_p1, "zext_ln215_fu_558_p1");
    sc_trace(mVcdFile, zext_ln647_fu_576_p1, "zext_ln647_fu_576_p1");
    sc_trace(mVcdFile, lshr_ln647_fu_580_p2, "lshr_ln647_fu_580_p2");
    sc_trace(mVcdFile, trunc_ln215_fu_585_p1, "trunc_ln215_fu_585_p1");
    sc_trace(mVcdFile, icmp_ln158_fu_543_p2, "icmp_ln158_fu_543_p2");
    sc_trace(mVcdFile, p_Result_7_fu_562_p3, "p_Result_7_fu_562_p3");
    sc_trace(mVcdFile, p_Result_8_fu_589_p3, "p_Result_8_fu_589_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("dut.hdltvin.dat");
    mHdltvoutHandle.open("dut.hdltvout.dat");
}

dut::~dut() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_decrypt_aes_fu_182;
    delete grp_encrypt_aes_fu_191;
}

void dut::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_decrypt_aes_fu_182_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())) && 
             esl_seteq<1,1,1>(icmp_ln95_fu_226_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_349_p3.read()))) {
            grp_decrypt_aes_fu_182_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_decrypt_aes_fu_182_ap_ready.read())) {
            grp_decrypt_aes_fu_182_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_encrypt_aes_fu_191_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())) && 
             esl_seteq<1,1,1>(icmp_ln95_fu_226_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_349_p3.read()))) {
            grp_encrypt_aes_fu_191_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_encrypt_aes_fu_191_ap_ready.read())) {
            grp_encrypt_aes_fu_191_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        i1_0_reg_138 = i_3_reg_704.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(grp_encrypt_aes_fu_191_ap_done.read(), ap_const_logic_1))) {
        i1_0_reg_138 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        i2_0_reg_160 = i_2_reg_722.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(grp_decrypt_aes_fu_182_ap_done.read(), ap_const_logic_1))) {
        i2_0_reg_160 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_115 = i_reg_646.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_115 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, reading_0_load_reg_651.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln102_reg_665.read()))) {
        p_Val2_1_fu_98 = p_Result_3_fu_446_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_226_p2.read()) && 
                esl_seteq<1,1,1>(reading_0_fu_90.read(), ap_const_lv1_1) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln102_fu_261_p2.read()))) {
        p_Val2_1_fu_98 = p_Result_s_fu_329_p5.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_Val2_1_fu_98 = ap_const_lv128_lc_2;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_226_p2.read()) && 
         esl_seteq<1,1,1>(reading_0_fu_90.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())))) {
        p_Val2_s_fu_94 = strm_in_V_V_dout.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_Val2_s_fu_94 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        phi_mul3_reg_149 = add_ln135_reg_709.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(grp_encrypt_aes_fu_191_ap_done.read(), ap_const_logic_1))) {
        phi_mul3_reg_149 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        phi_mul5_reg_171 = add_ln164_reg_727.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(grp_decrypt_aes_fu_182_ap_done.read(), ap_const_logic_1))) {
        phi_mul5_reg_171 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        phi_mul_reg_126 = add_ln96_reg_655.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_126 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_226_p2.read()) && 
         esl_seteq<1,1,1>(reading_0_fu_90.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())))) {
        reading_0_fu_90 = xor_ln99_fu_255_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        reading_0_fu_90 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_691.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln126_fu_457_p2.read()))) {
        add_ln135_reg_709 = add_ln135_fu_496_p2.read();
        output_word_V_reg_714 = output_word_V_fu_523_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_691.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_fu_531_p2.read()))) {
        add_ln164_reg_727 = add_ln164_fu_570_p2.read();
        output_word_V_6_reg_732 = output_word_V_6_fu_597_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_226_p2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())))) {
        add_ln96_reg_655 = add_ln96_fu_241_p2.read();
        reading_0_load_reg_651 = reading_0_fu_90.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_691.read()))) {
        i_2_reg_722 = i_2_fu_537_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_691.read()))) {
        i_3_reg_704 = i_3_fu_463_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())))) {
        i_reg_646 = i_fu_232_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_226_p2.read()) && esl_seteq<1,1,1>(reading_0_fu_90.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())))) {
        icmp_ln102_reg_665 = icmp_ln102_fu_261_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_226_p2.read()) && esl_seteq<1,1,1>(reading_0_fu_90.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln102_fu_261_p2.read()))) {
        icmp_ln414_reg_669 = icmp_ln414_fu_295_p2.read();
        sub_ln414_1_reg_686 = sub_ln414_1_fu_319_p2.read();
        sub_ln414_reg_681 = sub_ln414_fu_305_p2.read();
        zext_ln414_reg_676 = zext_ln414_fu_301_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_decrypt_aes_fu_182_ap_done.read(), ap_const_logic_1))) {
        lfsr_decrypt = xor_ln142_fu_609_p2.read();
        output_message_V_2_reg_737 = grp_decrypt_aes_fu_182_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_encrypt_aes_fu_191_ap_done.read(), ap_const_logic_1))) {
        output_message_V_reg_695 = grp_encrypt_aes_fu_191_ap_return.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_226_p2.read()) && 
  esl_seteq<1,1,1>(reading_0_fu_90.read(), ap_const_lv1_1) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())) && 
  esl_seteq<1,1,1>(icmp_ln95_fu_226_p2.read(), ap_const_lv1_1)))) {
        reg_205 = p_Val2_1_fu_98.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())))) {
        tmp_V_2_reg_660 = strm_in_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())) && esl_seteq<1,1,1>(icmp_ln95_fu_226_p2.read(), ap_const_lv1_1))) {
        tmp_reg_691 = p_Val2_s_fu_94.read().range(30, 30);
    }
}

void dut::thread_add_ln106_fu_285_p2() {
    add_ln106_fu_285_p2 = (!ap_const_lv7_1C.is_01() || !trunc_ln106_fu_277_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1C) + sc_biguint<7>(trunc_ln106_fu_277_p1.read()));
}

void dut::thread_add_ln135_fu_496_p2() {
    add_ln135_fu_496_p2 = (!phi_mul3_reg_149.read().is_01() || !ap_const_lv8_1D.is_01())? sc_lv<8>(): (sc_biguint<8>(phi_mul3_reg_149.read()) + sc_biguint<8>(ap_const_lv8_1D));
}

void dut::thread_add_ln164_fu_570_p2() {
    add_ln164_fu_570_p2 = (!phi_mul5_reg_171.read().is_01() || !ap_const_lv8_1D.is_01())? sc_lv<8>(): (sc_biguint<8>(phi_mul5_reg_171.read()) + sc_biguint<8>(ap_const_lv8_1D));
}

void dut::thread_add_ln96_fu_241_p2() {
    add_ln96_fu_241_p2 = (!phi_mul_reg_126.read().is_01() || !ap_const_lv8_1D.is_01())? sc_lv<8>(): (sc_biguint<8>(phi_mul_reg_126.read()) + sc_biguint<8>(ap_const_lv8_1D));
}

void dut::thread_and_ln414_1_fu_434_p2() {
    and_ln414_1_fu_434_p2 = (reg_205.read() & xor_ln414_fu_428_p2.read());
}

void dut::thread_and_ln414_2_fu_440_p2() {
    and_ln414_2_fu_440_p2 = (select_ln414_3_fu_403_p3.read() & and_ln414_fu_422_p2.read());
}

void dut::thread_and_ln414_fu_422_p2() {
    and_ln414_fu_422_p2 = (shl_ln414_1_fu_410_p2.read() & lshr_ln414_fu_416_p2.read());
}

void dut::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dut::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dut::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dut::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dut::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dut::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dut::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dut::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void dut::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read()));
}

void dut::thread_ap_block_state2_ignore_call0() {
    ap_block_state2_ignore_call0 = (esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read()));
}

void dut::thread_ap_block_state2_ignore_call3() {
    ap_block_state2_ignore_call3 = (esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read()));
}

void dut::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_691.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln155_fu_531_p2.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_691.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln126_fu_457_p2.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut::thread_ap_predicate_op30_read_state2() {
    ap_predicate_op30_read_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_226_p2.read()) && esl_seteq<1,1,1>(reading_0_fu_90.read(), ap_const_lv1_1));
}

void dut::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_691.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln155_fu_531_p2.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_691.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln126_fu_457_p2.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut::thread_grp_decrypt_aes_fu_182_ap_start() {
    grp_decrypt_aes_fu_182_ap_start = grp_decrypt_aes_fu_182_ap_start_reg.read();
}

void dut::thread_grp_encrypt_aes_fu_191_ap_start() {
    grp_encrypt_aes_fu_191_ap_start = grp_encrypt_aes_fu_191_ap_start_reg.read();
}

void dut::thread_i_2_fu_537_p2() {
    i_2_fu_537_p2 = (!i2_0_reg_160.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i2_0_reg_160.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void dut::thread_i_3_fu_463_p2() {
    i_3_fu_463_p2 = (!i1_0_reg_138.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i1_0_reg_138.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void dut::thread_i_fu_232_p2() {
    i_fu_232_p2 = (!i_0_reg_115.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_115.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void dut::thread_icmp_ln102_fu_261_p2() {
    icmp_ln102_fu_261_p2 = (!i_0_reg_115.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_115.read() == ap_const_lv3_4);
}

void dut::thread_icmp_ln126_fu_457_p2() {
    icmp_ln126_fu_457_p2 = (!i1_0_reg_138.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_138.read() == ap_const_lv3_5);
}

void dut::thread_icmp_ln129_fu_469_p2() {
    icmp_ln129_fu_469_p2 = (!i1_0_reg_138.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_138.read() == ap_const_lv3_4);
}

void dut::thread_icmp_ln155_fu_531_p2() {
    icmp_ln155_fu_531_p2 = (!i2_0_reg_160.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_160.read() == ap_const_lv3_5);
}

void dut::thread_icmp_ln158_fu_543_p2() {
    icmp_ln158_fu_543_p2 = (!i2_0_reg_160.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_160.read() == ap_const_lv3_4);
}

void dut::thread_icmp_ln414_fu_295_p2() {
    icmp_ln414_fu_295_p2 = (!zext_ln106_fu_281_p1.read().is_01() || !zext_ln106_1_fu_291_p1.read().is_01())? sc_lv<1>(): (sc_biguint<32>(zext_ln106_fu_281_p1.read()) > sc_biguint<32>(zext_ln106_1_fu_291_p1.read()));
}

void dut::thread_icmp_ln95_fu_226_p2() {
    icmp_ln95_fu_226_p2 = (!i_0_reg_115.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_115.read() == ap_const_lv3_5);
}

void dut::thread_lshr_ln414_fu_416_p2() {
    lshr_ln414_fu_416_p2 = (!zext_ln414_3_fu_384_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_1 >> (unsigned short)zext_ln414_3_fu_384_p1.read().to_uint();
}

void dut::thread_lshr_ln647_1_fu_506_p2() {
    lshr_ln647_1_fu_506_p2 = (!zext_ln647_1_fu_502_p1.read().is_01())? sc_lv<128>(): output_message_V_reg_695.read() >> (unsigned short)zext_ln647_1_fu_502_p1.read().to_uint();
}

void dut::thread_lshr_ln647_fu_580_p2() {
    lshr_ln647_fu_580_p2 = (!zext_ln647_fu_576_p1.read().is_01())? sc_lv<128>(): output_message_V_2_reg_737.read() >> (unsigned short)zext_ln647_fu_576_p1.read().to_uint();
}

void dut::thread_output_word_V_6_fu_597_p3() {
    output_word_V_6_fu_597_p3 = (!icmp_ln158_fu_543_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln158_fu_543_p2.read()[0].to_bool())? p_Result_7_fu_562_p3.read(): p_Result_8_fu_589_p3.read());
}

void dut::thread_output_word_V_fu_523_p3() {
    output_word_V_fu_523_p3 = (!icmp_ln129_fu_469_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln129_fu_469_p2.read()[0].to_bool())? p_Result_4_fu_488_p3.read(): p_Result_6_fu_515_p3.read());
}

void dut::thread_p_Result_3_fu_446_p2() {
    p_Result_3_fu_446_p2 = (and_ln414_1_fu_434_p2.read() | and_ln414_2_fu_440_p2.read());
}

void dut::thread_p_Result_4_fu_488_p3() {
    p_Result_4_fu_488_p3 = esl_concat<3,29>(ap_const_lv3_3, zext_ln215_1_fu_484_p1.read());
}

void dut::thread_p_Result_5_fu_549_p4() {
    p_Result_5_fu_549_p4 = output_message_V_2_reg_737.read().range(127, 116);
}

void dut::thread_p_Result_6_fu_515_p3() {
    p_Result_6_fu_515_p3 = esl_concat<3,29>(ap_const_lv3_2, trunc_ln215_1_fu_511_p1.read());
}

void dut::thread_p_Result_7_fu_562_p3() {
    p_Result_7_fu_562_p3 = esl_concat<3,29>(ap_const_lv3_1, zext_ln215_fu_558_p1.read());
}

void dut::thread_p_Result_8_fu_589_p3() {
    p_Result_8_fu_589_p3 = esl_concat<3,29>(ap_const_lv3_0, trunc_ln215_fu_585_p1.read());
}

void dut::thread_p_Result_9_fu_475_p4() {
    p_Result_9_fu_475_p4 = output_message_V_reg_695.read().range(127, 116);
}

void dut::thread_p_Result_s_fu_329_p5() {
    p_Result_s_fu_329_p5 = esl_partset<128,128,12,32,32>(p_Val2_1_fu_98.read(), trunc_ln647_fu_325_p1.read(), ap_const_lv32_74, ap_const_lv32_7F);
}

void dut::thread_select_ln414_1_fu_364_p3() {
    select_ln414_1_fu_364_p3 = (!icmp_ln414_reg_669.read()[0].is_01())? sc_lv<8>(): ((icmp_ln414_reg_669.read()[0].to_bool())? zext_ln414_reg_676.read(): phi_mul_reg_126.read());
}

void dut::thread_select_ln414_2_fu_370_p3() {
    select_ln414_2_fu_370_p3 = (!icmp_ln414_reg_669.read()[0].is_01())? sc_lv<8>(): ((icmp_ln414_reg_669.read()[0].to_bool())? sub_ln414_reg_681.read(): phi_mul_reg_126.read());
}

void dut::thread_select_ln414_3_fu_403_p3() {
    select_ln414_3_fu_403_p3 = (!icmp_ln414_reg_669.read()[0].is_01())? sc_lv<128>(): ((icmp_ln414_reg_669.read()[0].to_bool())? tmp_3_fu_393_p4.read(): shl_ln414_fu_387_p2.read());
}

void dut::thread_select_ln414_fu_311_p3() {
    select_ln414_fu_311_p3 = (!icmp_ln414_fu_295_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln414_fu_295_p2.read()[0].to_bool())? phi_mul_reg_126.read(): zext_ln414_fu_301_p1.read());
}

void dut::thread_shl_ln414_1_fu_410_p2() {
    shl_ln414_1_fu_410_p2 = (!zext_ln414_2_fu_380_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_1 << (unsigned short)zext_ln414_2_fu_380_p1.read().to_uint();
}

void dut::thread_shl_ln414_fu_387_p2() {
    shl_ln414_fu_387_p2 = (!zext_ln414_1_fu_376_p1.read().is_01())? sc_lv<128>(): tmp_V_3_fu_360_p1.read() << (unsigned short)zext_ln414_1_fu_376_p1.read().to_uint();
}

void dut::thread_strm_in_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_226_p2.read()) && 
         esl_seteq<1,1,1>(reading_0_fu_90.read(), ap_const_lv1_1))) {
        strm_in_V_V_blk_n = strm_in_V_V_empty_n.read();
    } else {
        strm_in_V_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_in_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())))) {
        strm_in_V_V_read = ap_const_logic_1;
    } else {
        strm_in_V_V_read = ap_const_logic_0;
    }
}

void dut::thread_strm_out_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        strm_out_V_V_blk_n = strm_out_V_V_full_n.read();
    } else {
        strm_out_V_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_out_V_V_din() {
    if (esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            strm_out_V_V_din = output_word_V_6_reg_732.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            strm_out_V_V_din = output_word_V_reg_714.read();
        } else {
            strm_out_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        strm_out_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void dut::thread_strm_out_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1)))) {
        strm_out_V_V_write = ap_const_logic_1;
    } else {
        strm_out_V_V_write = ap_const_logic_0;
    }
}

void dut::thread_sub_ln414_1_fu_319_p2() {
    sub_ln414_1_fu_319_p2 = (!ap_const_lv8_7F.is_01() || !select_ln414_fu_311_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(select_ln414_fu_311_p3.read()));
}

void dut::thread_sub_ln414_fu_305_p2() {
    sub_ln414_fu_305_p2 = (!ap_const_lv8_7F.is_01() || !phi_mul_reg_126.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(phi_mul_reg_126.read()));
}

void dut::thread_tmp_2_fu_247_p3() {
    tmp_2_fu_247_p3 = strm_in_V_V_dout.read().range(29, 29);
}

void dut::thread_tmp_3_fu_393_p4() {
    tmp_3_fu_393_p4 = shl_ln414_fu_387_p2.read().range(0, 127);
}

void dut::thread_tmp_V_3_fu_360_p1() {
    tmp_V_3_fu_360_p1 = esl_zext<128,29>(trunc_ln647_1_fu_357_p1.read());
}

void dut::thread_tmp_fu_349_p3() {
    tmp_fu_349_p3 = p_Val2_s_fu_94.read().range(30, 30);
}

void dut::thread_trunc_ln106_fu_277_p1() {
    trunc_ln106_fu_277_p1 = phi_mul_reg_126.read().range(7-1, 0);
}

void dut::thread_trunc_ln215_1_fu_511_p1() {
    trunc_ln215_1_fu_511_p1 = lshr_ln647_1_fu_506_p2.read().range(29-1, 0);
}

void dut::thread_trunc_ln215_fu_585_p1() {
    trunc_ln215_fu_585_p1 = lshr_ln647_fu_580_p2.read().range(29-1, 0);
}

void dut::thread_trunc_ln647_1_fu_357_p1() {
    trunc_ln647_1_fu_357_p1 = tmp_V_2_reg_660.read().range(29-1, 0);
}

void dut::thread_trunc_ln647_fu_325_p1() {
    trunc_ln647_fu_325_p1 = strm_in_V_V_dout.read().range(12-1, 0);
}

void dut::thread_xor_ln142_fu_609_p2() {
    xor_ln142_fu_609_p2 = (lfsr_decrypt.read() ^ ap_const_lv1_1);
}

void dut::thread_xor_ln414_fu_428_p2() {
    xor_ln414_fu_428_p2 = (and_ln414_fu_422_p2.read() ^ ap_const_lv128_lc_1);
}

void dut::thread_xor_ln99_fu_255_p2() {
    xor_ln99_fu_255_p2 = (tmp_2_fu_247_p3.read() ^ ap_const_lv1_1);
}

void dut::thread_zext_ln106_1_fu_291_p1() {
    zext_ln106_1_fu_291_p1 = esl_zext<32,7>(add_ln106_fu_285_p2.read());
}

void dut::thread_zext_ln106_fu_281_p1() {
    zext_ln106_fu_281_p1 = esl_zext<32,8>(phi_mul_reg_126.read());
}

void dut::thread_zext_ln215_1_fu_484_p1() {
    zext_ln215_1_fu_484_p1 = esl_zext<29,12>(p_Result_9_fu_475_p4.read());
}

void dut::thread_zext_ln215_fu_558_p1() {
    zext_ln215_fu_558_p1 = esl_zext<29,12>(p_Result_5_fu_549_p4.read());
}

void dut::thread_zext_ln414_1_fu_376_p1() {
    zext_ln414_1_fu_376_p1 = esl_zext<128,8>(select_ln414_2_fu_370_p3.read());
}

void dut::thread_zext_ln414_2_fu_380_p1() {
    zext_ln414_2_fu_380_p1 = esl_zext<128,8>(select_ln414_1_fu_364_p3.read());
}

void dut::thread_zext_ln414_3_fu_384_p1() {
    zext_ln414_3_fu_384_p1 = esl_zext<128,8>(sub_ln414_1_reg_686.read());
}

void dut::thread_zext_ln414_fu_301_p1() {
    zext_ln414_fu_301_p1 = esl_zext<8,7>(add_ln106_fu_285_p2.read());
}

void dut::thread_zext_ln647_1_fu_502_p1() {
    zext_ln647_1_fu_502_p1 = esl_zext<128,8>(phi_mul3_reg_149.read());
}

void dut::thread_zext_ln647_fu_576_p1() {
    zext_ln647_fu_576_p1 = esl_zext<128,8>(phi_mul5_reg_171.read());
}

void dut::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())) && esl_seteq<1,1,1>(icmp_ln95_fu_226_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_349_p3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())) && esl_seteq<1,1,1>(icmp_ln95_fu_226_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_349_p3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln95_fu_226_p2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_read_state2.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_encrypt_aes_fu_191_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_691.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln155_fu_531_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_691.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln126_fu_457_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_691.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln155_fu_531_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_decrypt_aes_fu_182_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

void dut::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_in_V_V_dout\" :  \"" << strm_in_V_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_in_V_V_empty_n\" :  \"" << strm_in_V_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_in_V_V_read\" :  \"" << strm_in_V_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_V_din\" :  \"" << strm_out_V_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_out_V_V_full_n\" :  \"" << strm_out_V_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_V_write\" :  \"" << strm_out_V_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

