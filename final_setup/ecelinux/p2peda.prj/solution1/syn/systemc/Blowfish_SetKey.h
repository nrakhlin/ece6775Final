// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Blowfish_SetKey_HH_
#define _Blowfish_SetKey_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Encrypt_SetKey.h"
#include "dut_urem_7ns_5ns_bkb.h"

namespace ap_rtl {

struct Blowfish_SetKey : public sc_module {
    // Port declarations 99
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > key_address0;
    sc_out< sc_logic > key_ce0;
    sc_in< sc_lv<7> > key_q0;
    sc_out< sc_lv<8> > S_0_address0;
    sc_out< sc_logic > S_0_ce0;
    sc_out< sc_logic > S_0_we0;
    sc_out< sc_lv<32> > S_0_d0;
    sc_in< sc_lv<32> > S_0_q0;
    sc_out< sc_lv<8> > S_0_address1;
    sc_out< sc_logic > S_0_ce1;
    sc_out< sc_logic > S_0_we1;
    sc_out< sc_lv<32> > S_0_d1;
    sc_out< sc_lv<8> > S_1_address0;
    sc_out< sc_logic > S_1_ce0;
    sc_out< sc_logic > S_1_we0;
    sc_out< sc_lv<32> > S_1_d0;
    sc_in< sc_lv<32> > S_1_q0;
    sc_out< sc_lv<8> > S_1_address1;
    sc_out< sc_logic > S_1_ce1;
    sc_out< sc_logic > S_1_we1;
    sc_out< sc_lv<32> > S_1_d1;
    sc_out< sc_lv<8> > S_2_address0;
    sc_out< sc_logic > S_2_ce0;
    sc_out< sc_logic > S_2_we0;
    sc_out< sc_lv<32> > S_2_d0;
    sc_in< sc_lv<32> > S_2_q0;
    sc_out< sc_lv<8> > S_2_address1;
    sc_out< sc_logic > S_2_ce1;
    sc_out< sc_logic > S_2_we1;
    sc_out< sc_lv<32> > S_2_d1;
    sc_out< sc_lv<8> > S_3_address0;
    sc_out< sc_logic > S_3_ce0;
    sc_out< sc_logic > S_3_we0;
    sc_out< sc_lv<32> > S_3_d0;
    sc_in< sc_lv<32> > S_3_q0;
    sc_out< sc_lv<8> > S_3_address1;
    sc_out< sc_logic > S_3_ce1;
    sc_out< sc_logic > S_3_we1;
    sc_out< sc_lv<32> > S_3_d1;
    sc_in< sc_lv<32> > P_0_i;
    sc_out< sc_lv<32> > P_0_o;
    sc_out< sc_logic > P_0_o_ap_vld;
    sc_in< sc_lv<32> > P_1_i;
    sc_out< sc_lv<32> > P_1_o;
    sc_out< sc_logic > P_1_o_ap_vld;
    sc_in< sc_lv<32> > P_2_i;
    sc_out< sc_lv<32> > P_2_o;
    sc_out< sc_logic > P_2_o_ap_vld;
    sc_in< sc_lv<32> > P_3_i;
    sc_out< sc_lv<32> > P_3_o;
    sc_out< sc_logic > P_3_o_ap_vld;
    sc_in< sc_lv<32> > P_4_i;
    sc_out< sc_lv<32> > P_4_o;
    sc_out< sc_logic > P_4_o_ap_vld;
    sc_in< sc_lv<32> > P_5_i;
    sc_out< sc_lv<32> > P_5_o;
    sc_out< sc_logic > P_5_o_ap_vld;
    sc_in< sc_lv<32> > P_6_i;
    sc_out< sc_lv<32> > P_6_o;
    sc_out< sc_logic > P_6_o_ap_vld;
    sc_in< sc_lv<32> > P_7_i;
    sc_out< sc_lv<32> > P_7_o;
    sc_out< sc_logic > P_7_o_ap_vld;
    sc_in< sc_lv<32> > P_8_i;
    sc_out< sc_lv<32> > P_8_o;
    sc_out< sc_logic > P_8_o_ap_vld;
    sc_in< sc_lv<32> > P_9_i;
    sc_out< sc_lv<32> > P_9_o;
    sc_out< sc_logic > P_9_o_ap_vld;
    sc_in< sc_lv<32> > P_10_i;
    sc_out< sc_lv<32> > P_10_o;
    sc_out< sc_logic > P_10_o_ap_vld;
    sc_in< sc_lv<32> > P_11_i;
    sc_out< sc_lv<32> > P_11_o;
    sc_out< sc_logic > P_11_o_ap_vld;
    sc_in< sc_lv<32> > P_12_i;
    sc_out< sc_lv<32> > P_12_o;
    sc_out< sc_logic > P_12_o_ap_vld;
    sc_in< sc_lv<32> > P_13_i;
    sc_out< sc_lv<32> > P_13_o;
    sc_out< sc_logic > P_13_o_ap_vld;
    sc_in< sc_lv<32> > P_14_i;
    sc_out< sc_lv<32> > P_14_o;
    sc_out< sc_logic > P_14_o_ap_vld;
    sc_in< sc_lv<32> > P_15_i;
    sc_out< sc_lv<32> > P_15_o;
    sc_out< sc_logic > P_15_o_ap_vld;
    sc_in< sc_lv<32> > P_16_i;
    sc_out< sc_lv<32> > P_16_o;
    sc_out< sc_logic > P_16_o_ap_vld;
    sc_in< sc_lv<32> > P_17_i;
    sc_out< sc_lv<32> > P_17_o;
    sc_out< sc_logic > P_17_o_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Blowfish_SetKey(sc_module_name name);
    SC_HAS_PROCESS(Blowfish_SetKey);

    ~Blowfish_SetKey();

    sc_trace_file* mVcdFile;

    Encrypt_SetKey* grp_Encrypt_SetKey_fu_392;
    dut_urem_7ns_5ns_bkb<1,11,7,5,7>* dut_urem_7ns_5ns_bkb_U30;
    sc_signal< sc_lv<24> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln148_fu_674_p2;
    sc_signal< sc_lv<5> > i_0_reg_257;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<1> > icmp_ln159_fu_831_p2;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<1> > tmp_32_fu_983_p3;
    sc_signal< sc_lv<32> > reg_530;
    sc_signal< sc_lv<32> > reg_536;
    sc_signal< sc_lv<32> > reg_542;
    sc_signal< sc_lv<32> > reg_548;
    sc_signal< sc_lv<32> > reg_554;
    sc_signal< sc_lv<32> > reg_560;
    sc_signal< sc_lv<32> > reg_566;
    sc_signal< sc_lv<32> > reg_572;
    sc_signal< sc_lv<32> > reg_578;
    sc_signal< sc_lv<32> > reg_584;
    sc_signal< sc_lv<32> > reg_590;
    sc_signal< sc_lv<32> > reg_596;
    sc_signal< sc_lv<32> > reg_602;
    sc_signal< sc_lv<32> > reg_608;
    sc_signal< sc_lv<32> > reg_614;
    sc_signal< sc_lv<32> > reg_620;
    sc_signal< sc_lv<32> > reg_626;
    sc_signal< sc_lv<32> > reg_632;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_392_ap_ready;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_392_ap_done;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > reg_641;
    sc_signal< sc_lv<5> > i_16_fu_656_p2;
    sc_signal< sc_lv<5> > i_16_reg_1044;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > shl_ln_fu_662_p3;
    sc_signal< sc_lv<7> > shl_ln_reg_1049;
    sc_signal< sc_lv<1> > icmp_ln145_fu_650_p2;
    sc_signal< sc_lv<3> > j_fu_680_p2;
    sc_signal< sc_lv<3> > j_reg_1057;
    sc_signal< sc_lv<24> > trunc_ln150_fu_697_p1;
    sc_signal< sc_lv<24> > trunc_ln150_reg_1067;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > data_fu_710_p3;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<5> > i_fu_961_p2;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<3> > i_15_fu_973_p2;
    sc_signal< sc_lv<3> > i_15_reg_1110;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<2> > trunc_ln171_fu_979_p1;
    sc_signal< sc_lv<2> > trunc_ln171_reg_1115;
    sc_signal< sc_lv<1> > icmp_ln167_fu_967_p2;
    sc_signal< sc_lv<8> > S_0_addr_reg_1132;
    sc_signal< sc_lv<8> > S_1_addr_reg_1137;
    sc_signal< sc_lv<8> > S_2_addr_reg_1142;
    sc_signal< sc_lv<8> > S_3_addr_reg_1147;
    sc_signal< sc_lv<8> > S_0_addr_1_reg_1152;
    sc_signal< sc_lv<8> > S_1_addr_1_reg_1157;
    sc_signal< sc_lv<8> > S_2_addr_1_reg_1162;
    sc_signal< sc_lv<8> > S_3_addr_1_reg_1167;
    sc_signal< sc_lv<9> > j_4_fu_1025_p2;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_392_ap_start;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_392_ap_idle;
    sc_signal< sc_lv<32> > grp_Encrypt_SetKey_fu_392_left_read;
    sc_signal< sc_lv<32> > grp_Encrypt_SetKey_fu_392_right_read;
    sc_signal< sc_lv<8> > grp_Encrypt_SetKey_fu_392_S_0_address0;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_392_S_0_ce0;
    sc_signal< sc_lv<8> > grp_Encrypt_SetKey_fu_392_S_1_address0;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_392_S_1_ce0;
    sc_signal< sc_lv<8> > grp_Encrypt_SetKey_fu_392_S_2_address0;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_392_S_2_ce0;
    sc_signal< sc_lv<8> > grp_Encrypt_SetKey_fu_392_S_3_address0;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_392_S_3_ce0;
    sc_signal< sc_lv<32> > grp_Encrypt_SetKey_fu_392_ap_return_0;
    sc_signal< sc_lv<32> > grp_Encrypt_SetKey_fu_392_ap_return_1;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > data_0_reg_269;
    sc_signal< sc_lv<3> > j_0_reg_281;
    sc_signal< sc_lv<32> > UnifiedRetVal_i_reg_292;
    sc_signal< sc_lv<32> > right_0_reg_333;
    sc_signal< sc_lv<32> > left_0_reg_345;
    sc_signal< sc_lv<5> > i1_0_reg_357;
    sc_signal< sc_lv<3> > i2_0_reg_369;
    sc_signal< sc_lv<9> > j3_0_reg_380;
    sc_signal< sc_logic > grp_Encrypt_SetKey_fu_392_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln150_fu_701_p1;
    sc_signal< sc_lv<64> > zext_ln171_fu_999_p1;
    sc_signal< sc_lv<64> > zext_ln172_fu_1017_p1;
    sc_signal< sc_lv<32> > left_1_fu_144;
    sc_signal< sc_lv<32> > right_1_fu_148;
    sc_signal< sc_lv<32> > xor_ln152_fu_717_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<5> > or_ln162_fu_901_p2;
    sc_signal< sc_lv<7> > zext_ln148_fu_670_p1;
    sc_signal< sc_lv<7> > grp_fu_691_p0;
    sc_signal< sc_lv<5> > grp_fu_691_p1;
    sc_signal< sc_lv<7> > grp_fu_691_p2;
    sc_signal< sc_lv<8> > zext_ln150_1_fu_706_p1;
    sc_signal< sc_lv<8> > trunc_ln169_fu_1007_p1;
    sc_signal< sc_lv<8> > or_ln172_fu_1011_p2;
    sc_signal< sc_logic > grp_fu_691_ap_start;
    sc_signal< sc_logic > grp_fu_691_ap_done;
    sc_signal< sc_lv<24> > ap_NS_fsm;
    sc_signal< bool > ap_condition_888;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<24> ap_ST_fsm_state1;
    static const sc_lv<24> ap_ST_fsm_state2;
    static const sc_lv<24> ap_ST_fsm_state3;
    static const sc_lv<24> ap_ST_fsm_state4;
    static const sc_lv<24> ap_ST_fsm_state5;
    static const sc_lv<24> ap_ST_fsm_state6;
    static const sc_lv<24> ap_ST_fsm_state7;
    static const sc_lv<24> ap_ST_fsm_state8;
    static const sc_lv<24> ap_ST_fsm_state9;
    static const sc_lv<24> ap_ST_fsm_state10;
    static const sc_lv<24> ap_ST_fsm_state11;
    static const sc_lv<24> ap_ST_fsm_state12;
    static const sc_lv<24> ap_ST_fsm_state13;
    static const sc_lv<24> ap_ST_fsm_state14;
    static const sc_lv<24> ap_ST_fsm_state15;
    static const sc_lv<24> ap_ST_fsm_state16;
    static const sc_lv<24> ap_ST_fsm_state17;
    static const sc_lv<24> ap_ST_fsm_state18;
    static const sc_lv<24> ap_ST_fsm_state19;
    static const sc_lv<24> ap_ST_fsm_state20;
    static const sc_lv<24> ap_ST_fsm_state21;
    static const sc_lv<24> ap_ST_fsm_state22;
    static const sc_lv<24> ap_ST_fsm_state23;
    static const sc_lv<24> ap_ST_fsm_state24;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1D;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1B;
    static const sc_lv<5> ap_const_lv5_1A;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_16;
    static const sc_lv<5> ap_const_lv5_15;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<5> ap_const_lv5_13;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<7> ap_const_lv7_9;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<9> ap_const_lv9_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_P_0_o();
    void thread_P_0_o_ap_vld();
    void thread_P_10_o();
    void thread_P_10_o_ap_vld();
    void thread_P_11_o();
    void thread_P_11_o_ap_vld();
    void thread_P_12_o();
    void thread_P_12_o_ap_vld();
    void thread_P_13_o();
    void thread_P_13_o_ap_vld();
    void thread_P_14_o();
    void thread_P_14_o_ap_vld();
    void thread_P_15_o();
    void thread_P_15_o_ap_vld();
    void thread_P_16_o();
    void thread_P_16_o_ap_vld();
    void thread_P_17_o();
    void thread_P_17_o_ap_vld();
    void thread_P_1_o();
    void thread_P_1_o_ap_vld();
    void thread_P_2_o();
    void thread_P_2_o_ap_vld();
    void thread_P_3_o();
    void thread_P_3_o_ap_vld();
    void thread_P_4_o();
    void thread_P_4_o_ap_vld();
    void thread_P_5_o();
    void thread_P_5_o_ap_vld();
    void thread_P_6_o();
    void thread_P_6_o_ap_vld();
    void thread_P_7_o();
    void thread_P_7_o_ap_vld();
    void thread_P_8_o();
    void thread_P_8_o_ap_vld();
    void thread_P_9_o();
    void thread_P_9_o_ap_vld();
    void thread_S_0_address0();
    void thread_S_0_address1();
    void thread_S_0_ce0();
    void thread_S_0_ce1();
    void thread_S_0_d0();
    void thread_S_0_d1();
    void thread_S_0_we0();
    void thread_S_0_we1();
    void thread_S_1_address0();
    void thread_S_1_address1();
    void thread_S_1_ce0();
    void thread_S_1_ce1();
    void thread_S_1_d0();
    void thread_S_1_d1();
    void thread_S_1_we0();
    void thread_S_1_we1();
    void thread_S_2_address0();
    void thread_S_2_address1();
    void thread_S_2_ce0();
    void thread_S_2_ce1();
    void thread_S_2_d0();
    void thread_S_2_d1();
    void thread_S_2_we0();
    void thread_S_2_we1();
    void thread_S_3_address0();
    void thread_S_3_address1();
    void thread_S_3_ce0();
    void thread_S_3_ce1();
    void thread_S_3_d0();
    void thread_S_3_d1();
    void thread_S_3_we0();
    void thread_S_3_we1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_condition_888();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data_fu_710_p3();
    void thread_grp_Encrypt_SetKey_fu_392_ap_start();
    void thread_grp_Encrypt_SetKey_fu_392_left_read();
    void thread_grp_Encrypt_SetKey_fu_392_right_read();
    void thread_grp_fu_691_ap_start();
    void thread_grp_fu_691_p0();
    void thread_grp_fu_691_p1();
    void thread_i_15_fu_973_p2();
    void thread_i_16_fu_656_p2();
    void thread_i_fu_961_p2();
    void thread_icmp_ln145_fu_650_p2();
    void thread_icmp_ln148_fu_674_p2();
    void thread_icmp_ln159_fu_831_p2();
    void thread_icmp_ln167_fu_967_p2();
    void thread_j_4_fu_1025_p2();
    void thread_j_fu_680_p2();
    void thread_key_address0();
    void thread_key_ce0();
    void thread_or_ln162_fu_901_p2();
    void thread_or_ln172_fu_1011_p2();
    void thread_shl_ln_fu_662_p3();
    void thread_tmp_32_fu_983_p3();
    void thread_trunc_ln150_fu_697_p1();
    void thread_trunc_ln169_fu_1007_p1();
    void thread_trunc_ln171_fu_979_p1();
    void thread_xor_ln152_fu_717_p2();
    void thread_zext_ln148_fu_670_p1();
    void thread_zext_ln150_1_fu_706_p1();
    void thread_zext_ln150_fu_701_p1();
    void thread_zext_ln171_fu_999_p1();
    void thread_zext_ln172_fu_1017_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
