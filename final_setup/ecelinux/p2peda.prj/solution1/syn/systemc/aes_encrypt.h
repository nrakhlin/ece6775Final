// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes_encrypt_HH_
#define _aes_encrypt_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aes_main.h"
#include "dut_mux_164_8_1_1.h"
#include "aes_encrypt_block.h"

namespace ap_rtl {

struct aes_encrypt : public sc_module {
    // Port declarations 54
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > input_0_read;
    sc_in< sc_lv<8> > input_1_read;
    sc_in< sc_lv<8> > input_2_read;
    sc_in< sc_lv<8> > input_3_read;
    sc_in< sc_lv<8> > input_4_read;
    sc_in< sc_lv<8> > input_5_read;
    sc_in< sc_lv<8> > input_6_read;
    sc_in< sc_lv<8> > input_7_read;
    sc_in< sc_lv<8> > input_8_read;
    sc_in< sc_lv<8> > input_9_read;
    sc_in< sc_lv<8> > input_10_read;
    sc_in< sc_lv<8> > input_11_read;
    sc_in< sc_lv<8> > input_12_read;
    sc_in< sc_lv<8> > input_13_read;
    sc_in< sc_lv<8> > input_14_read;
    sc_in< sc_lv<8> > input_15_read;
    sc_in< sc_lv<8> > output_0_read;
    sc_in< sc_lv<8> > output_1_read;
    sc_in< sc_lv<8> > output_2_read;
    sc_in< sc_lv<8> > output_3_read;
    sc_in< sc_lv<8> > output_4_read;
    sc_in< sc_lv<8> > output_5_read;
    sc_in< sc_lv<8> > output_6_read;
    sc_in< sc_lv<8> > output_7_read;
    sc_in< sc_lv<8> > output_8_read;
    sc_in< sc_lv<8> > output_9_read;
    sc_in< sc_lv<8> > output_10_read;
    sc_in< sc_lv<8> > output_11_read;
    sc_in< sc_lv<8> > output_12_read;
    sc_in< sc_lv<8> > output_13_read;
    sc_in< sc_lv<8> > output_14_read;
    sc_in< sc_lv<8> > output_15_read;
    sc_out< sc_lv<8> > ap_return_0;
    sc_out< sc_lv<8> > ap_return_1;
    sc_out< sc_lv<8> > ap_return_2;
    sc_out< sc_lv<8> > ap_return_3;
    sc_out< sc_lv<8> > ap_return_4;
    sc_out< sc_lv<8> > ap_return_5;
    sc_out< sc_lv<8> > ap_return_6;
    sc_out< sc_lv<8> > ap_return_7;
    sc_out< sc_lv<8> > ap_return_8;
    sc_out< sc_lv<8> > ap_return_9;
    sc_out< sc_lv<8> > ap_return_10;
    sc_out< sc_lv<8> > ap_return_11;
    sc_out< sc_lv<8> > ap_return_12;
    sc_out< sc_lv<8> > ap_return_13;
    sc_out< sc_lv<8> > ap_return_14;
    sc_out< sc_lv<8> > ap_return_15;


    // Module declarations
    aes_encrypt(sc_module_name name);
    SC_HAS_PROCESS(aes_encrypt);

    ~aes_encrypt();

    sc_trace_file* mVcdFile;

    aes_encrypt_block* block_U;
    aes_main* grp_aes_main_fu_517;
    dut_mux_164_8_1_1<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* dut_mux_164_8_1_1_U304;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > zext_ln49_fu_526_p1;
    sc_signal< sc_lv<4> > zext_ln49_reg_1395;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<3> > i_fu_536_p2;
    sc_signal< sc_lv<3> > i_reg_1403;
    sc_signal< sc_lv<4> > shl_ln_fu_546_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_1408;
    sc_signal< sc_lv<1> > icmp_ln49_fu_530_p2;
    sc_signal< sc_lv<3> > j_fu_644_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > zext_ln65_fu_700_p1;
    sc_signal< sc_lv<4> > zext_ln65_reg_1629;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > i_13_fu_710_p2;
    sc_signal< sc_lv<3> > i_13_reg_1637;
    sc_signal< sc_lv<4> > shl_ln1_fu_720_p3;
    sc_signal< sc_lv<4> > shl_ln1_reg_1642;
    sc_signal< sc_lv<1> > icmp_ln65_fu_704_p2;
    sc_signal< sc_lv<3> > j_2_fu_1042_p2;
    sc_signal< sc_lv<3> > j_2_reg_1650;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln68_fu_1036_p2;
    sc_signal< sc_lv<4> > add_ln70_1_fu_1070_p2;
    sc_signal< sc_lv<4> > add_ln70_1_reg_1660;
    sc_signal< sc_lv<4> > block_address0;
    sc_signal< sc_logic > block_ce0;
    sc_signal< sc_logic > block_we0;
    sc_signal< sc_lv<8> > block_d0;
    sc_signal< sc_lv<8> > block_q0;
    sc_signal< sc_logic > block_ce1;
    sc_signal< sc_logic > block_we1;
    sc_signal< sc_lv<8> > block_q1;
    sc_signal< sc_logic > grp_aes_main_fu_517_ap_start;
    sc_signal< sc_logic > grp_aes_main_fu_517_ap_done;
    sc_signal< sc_logic > grp_aes_main_fu_517_ap_idle;
    sc_signal< sc_logic > grp_aes_main_fu_517_ap_ready;
    sc_signal< sc_lv<4> > grp_aes_main_fu_517_state_address0;
    sc_signal< sc_logic > grp_aes_main_fu_517_state_ce0;
    sc_signal< sc_logic > grp_aes_main_fu_517_state_we0;
    sc_signal< sc_lv<8> > grp_aes_main_fu_517_state_d0;
    sc_signal< sc_lv<4> > grp_aes_main_fu_517_state_address1;
    sc_signal< sc_logic > grp_aes_main_fu_517_state_ce1;
    sc_signal< sc_logic > grp_aes_main_fu_517_state_we1;
    sc_signal< sc_lv<8> > grp_aes_main_fu_517_state_d1;
    sc_signal< sc_lv<3> > i_0_reg_473;
    sc_signal< sc_lv<1> > icmp_ln52_fu_638_p2;
    sc_signal< sc_lv<3> > j_0_reg_484;
    sc_signal< sc_lv<3> > i_1_reg_495;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > j_1_reg_506;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_aes_main_fu_517_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln54_fu_695_p1;
    sc_signal< sc_lv<64> > zext_ln70_fu_1065_p1;
    sc_signal< sc_lv<8> > output30_016_fu_134;
    sc_signal< sc_lv<1> > write_flag_0_fu_138;
    sc_signal< sc_lv<1> > write_flag45_0_fu_142;
    sc_signal< sc_lv<8> > output29_017_fu_146;
    sc_signal< sc_lv<8> > output_018_fu_150;
    sc_signal< sc_lv<1> > write_flag42_0_fu_154;
    sc_signal< sc_lv<8> > output28_019_fu_158;
    sc_signal< sc_lv<1> > write_flag3_0_fu_162;
    sc_signal< sc_lv<1> > write_flag39_0_fu_166;
    sc_signal< sc_lv<8> > output27_020_fu_170;
    sc_signal< sc_lv<8> > output16_021_fu_174;
    sc_signal< sc_lv<1> > write_flag36_0_fu_178;
    sc_signal< sc_lv<8> > output26_022_fu_182;
    sc_signal< sc_lv<1> > write_flag6_0_fu_186;
    sc_signal< sc_lv<1> > write_flag33_0_fu_190;
    sc_signal< sc_lv<8> > output25_023_fu_194;
    sc_signal< sc_lv<8> > output17_024_fu_198;
    sc_signal< sc_lv<1> > write_flag30_0_fu_202;
    sc_signal< sc_lv<8> > output24_025_fu_206;
    sc_signal< sc_lv<1> > write_flag9_0_fu_210;
    sc_signal< sc_lv<1> > write_flag27_0_fu_214;
    sc_signal< sc_lv<8> > output23_026_fu_218;
    sc_signal< sc_lv<8> > output18_027_fu_222;
    sc_signal< sc_lv<1> > write_flag24_0_fu_226;
    sc_signal< sc_lv<8> > output22_028_fu_230;
    sc_signal< sc_lv<1> > write_flag12_0_fu_234;
    sc_signal< sc_lv<1> > write_flag21_0_fu_238;
    sc_signal< sc_lv<8> > output21_029_fu_242;
    sc_signal< sc_lv<8> > output19_030_fu_246;
    sc_signal< sc_lv<1> > write_flag18_0_fu_250;
    sc_signal< sc_lv<8> > output20_031_fu_254;
    sc_signal< sc_lv<1> > write_flag15_0_fu_258;
    sc_signal< sc_lv<8> > tmp_fu_655_p18;
    sc_signal< sc_lv<2> > trunc_ln54_fu_542_p1;
    sc_signal< sc_lv<4> > zext_ln52_fu_634_p1;
    sc_signal< sc_lv<4> > tmp_fu_655_p17;
    sc_signal< sc_lv<2> > trunc_ln54_1_fu_678_p1;
    sc_signal< sc_lv<4> > shl_ln54_1_fu_682_p3;
    sc_signal< sc_lv<4> > add_ln54_1_fu_690_p2;
    sc_signal< sc_lv<2> > trunc_ln70_fu_716_p1;
    sc_signal< sc_lv<8> > select_ln73_fu_824_p3;
    sc_signal< sc_lv<8> > select_ln73_1_fu_831_p3;
    sc_signal< sc_lv<8> > select_ln73_2_fu_838_p3;
    sc_signal< sc_lv<8> > select_ln73_3_fu_845_p3;
    sc_signal< sc_lv<8> > select_ln73_4_fu_852_p3;
    sc_signal< sc_lv<8> > select_ln73_5_fu_859_p3;
    sc_signal< sc_lv<8> > select_ln73_6_fu_866_p3;
    sc_signal< sc_lv<8> > select_ln73_7_fu_873_p3;
    sc_signal< sc_lv<8> > select_ln73_8_fu_880_p3;
    sc_signal< sc_lv<8> > select_ln73_9_fu_887_p3;
    sc_signal< sc_lv<8> > select_ln73_10_fu_894_p3;
    sc_signal< sc_lv<8> > select_ln73_11_fu_901_p3;
    sc_signal< sc_lv<8> > select_ln73_12_fu_908_p3;
    sc_signal< sc_lv<8> > select_ln73_13_fu_915_p3;
    sc_signal< sc_lv<8> > select_ln73_14_fu_922_p3;
    sc_signal< sc_lv<8> > select_ln73_15_fu_929_p3;
    sc_signal< sc_lv<2> > trunc_ln70_2_fu_1048_p1;
    sc_signal< sc_lv<4> > shl_ln70_1_fu_1052_p3;
    sc_signal< sc_lv<4> > add_ln70_fu_1060_p2;
    sc_signal< sc_lv<4> > zext_ln68_fu_1032_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln54_1_fu_690_p2();
    void thread_add_ln70_1_fu_1070_p2();
    void thread_add_ln70_fu_1060_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_14();
    void thread_ap_return_15();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_block_address0();
    void thread_block_ce0();
    void thread_block_ce1();
    void thread_block_d0();
    void thread_block_we0();
    void thread_block_we1();
    void thread_grp_aes_main_fu_517_ap_start();
    void thread_i_13_fu_710_p2();
    void thread_i_fu_536_p2();
    void thread_icmp_ln49_fu_530_p2();
    void thread_icmp_ln52_fu_638_p2();
    void thread_icmp_ln65_fu_704_p2();
    void thread_icmp_ln68_fu_1036_p2();
    void thread_j_2_fu_1042_p2();
    void thread_j_fu_644_p2();
    void thread_select_ln73_10_fu_894_p3();
    void thread_select_ln73_11_fu_901_p3();
    void thread_select_ln73_12_fu_908_p3();
    void thread_select_ln73_13_fu_915_p3();
    void thread_select_ln73_14_fu_922_p3();
    void thread_select_ln73_15_fu_929_p3();
    void thread_select_ln73_1_fu_831_p3();
    void thread_select_ln73_2_fu_838_p3();
    void thread_select_ln73_3_fu_845_p3();
    void thread_select_ln73_4_fu_852_p3();
    void thread_select_ln73_5_fu_859_p3();
    void thread_select_ln73_6_fu_866_p3();
    void thread_select_ln73_7_fu_873_p3();
    void thread_select_ln73_8_fu_880_p3();
    void thread_select_ln73_9_fu_887_p3();
    void thread_select_ln73_fu_824_p3();
    void thread_shl_ln1_fu_720_p3();
    void thread_shl_ln54_1_fu_682_p3();
    void thread_shl_ln70_1_fu_1052_p3();
    void thread_shl_ln_fu_546_p3();
    void thread_tmp_fu_655_p17();
    void thread_trunc_ln54_1_fu_678_p1();
    void thread_trunc_ln54_fu_542_p1();
    void thread_trunc_ln70_2_fu_1048_p1();
    void thread_trunc_ln70_fu_716_p1();
    void thread_zext_ln49_fu_526_p1();
    void thread_zext_ln52_fu_634_p1();
    void thread_zext_ln54_fu_695_p1();
    void thread_zext_ln65_fu_700_p1();
    void thread_zext_ln68_fu_1032_p1();
    void thread_zext_ln70_fu_1065_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
