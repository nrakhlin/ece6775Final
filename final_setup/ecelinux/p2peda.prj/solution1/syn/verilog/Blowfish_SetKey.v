// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Blowfish_SetKey (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        key_address0,
        key_ce0,
        key_q0,
        S_0_address0,
        S_0_ce0,
        S_0_we0,
        S_0_d0,
        S_0_q0,
        S_0_address1,
        S_0_ce1,
        S_0_we1,
        S_0_d1,
        S_1_address0,
        S_1_ce0,
        S_1_we0,
        S_1_d0,
        S_1_q0,
        S_1_address1,
        S_1_ce1,
        S_1_we1,
        S_1_d1,
        S_2_address0,
        S_2_ce0,
        S_2_we0,
        S_2_d0,
        S_2_q0,
        S_2_address1,
        S_2_ce1,
        S_2_we1,
        S_2_d1,
        S_3_address0,
        S_3_ce0,
        S_3_we0,
        S_3_d0,
        S_3_q0,
        S_3_address1,
        S_3_ce1,
        S_3_we1,
        S_3_d1,
        P_0_i,
        P_0_o,
        P_0_o_ap_vld,
        P_1_i,
        P_1_o,
        P_1_o_ap_vld,
        P_2_i,
        P_2_o,
        P_2_o_ap_vld,
        P_3_i,
        P_3_o,
        P_3_o_ap_vld,
        P_4_i,
        P_4_o,
        P_4_o_ap_vld,
        P_5_i,
        P_5_o,
        P_5_o_ap_vld,
        P_6_i,
        P_6_o,
        P_6_o_ap_vld,
        P_7_i,
        P_7_o,
        P_7_o_ap_vld,
        P_8_i,
        P_8_o,
        P_8_o_ap_vld,
        P_9_i,
        P_9_o,
        P_9_o_ap_vld,
        P_10_i,
        P_10_o,
        P_10_o_ap_vld,
        P_11_i,
        P_11_o,
        P_11_o_ap_vld,
        P_12_i,
        P_12_o,
        P_12_o_ap_vld,
        P_13_i,
        P_13_o,
        P_13_o_ap_vld,
        P_14_i,
        P_14_o,
        P_14_o_ap_vld,
        P_15_i,
        P_15_o,
        P_15_o_ap_vld,
        P_16_i,
        P_16_o,
        P_16_o_ap_vld,
        P_17_i,
        P_17_o,
        P_17_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] key_address0;
output   key_ce0;
input  [6:0] key_q0;
output  [7:0] S_0_address0;
output   S_0_ce0;
output   S_0_we0;
output  [31:0] S_0_d0;
input  [31:0] S_0_q0;
output  [7:0] S_0_address1;
output   S_0_ce1;
output   S_0_we1;
output  [31:0] S_0_d1;
output  [7:0] S_1_address0;
output   S_1_ce0;
output   S_1_we0;
output  [31:0] S_1_d0;
input  [31:0] S_1_q0;
output  [7:0] S_1_address1;
output   S_1_ce1;
output   S_1_we1;
output  [31:0] S_1_d1;
output  [7:0] S_2_address0;
output   S_2_ce0;
output   S_2_we0;
output  [31:0] S_2_d0;
input  [31:0] S_2_q0;
output  [7:0] S_2_address1;
output   S_2_ce1;
output   S_2_we1;
output  [31:0] S_2_d1;
output  [7:0] S_3_address0;
output   S_3_ce0;
output   S_3_we0;
output  [31:0] S_3_d0;
input  [31:0] S_3_q0;
output  [7:0] S_3_address1;
output   S_3_ce1;
output   S_3_we1;
output  [31:0] S_3_d1;
input  [31:0] P_0_i;
output  [31:0] P_0_o;
output   P_0_o_ap_vld;
input  [31:0] P_1_i;
output  [31:0] P_1_o;
output   P_1_o_ap_vld;
input  [31:0] P_2_i;
output  [31:0] P_2_o;
output   P_2_o_ap_vld;
input  [31:0] P_3_i;
output  [31:0] P_3_o;
output   P_3_o_ap_vld;
input  [31:0] P_4_i;
output  [31:0] P_4_o;
output   P_4_o_ap_vld;
input  [31:0] P_5_i;
output  [31:0] P_5_o;
output   P_5_o_ap_vld;
input  [31:0] P_6_i;
output  [31:0] P_6_o;
output   P_6_o_ap_vld;
input  [31:0] P_7_i;
output  [31:0] P_7_o;
output   P_7_o_ap_vld;
input  [31:0] P_8_i;
output  [31:0] P_8_o;
output   P_8_o_ap_vld;
input  [31:0] P_9_i;
output  [31:0] P_9_o;
output   P_9_o_ap_vld;
input  [31:0] P_10_i;
output  [31:0] P_10_o;
output   P_10_o_ap_vld;
input  [31:0] P_11_i;
output  [31:0] P_11_o;
output   P_11_o_ap_vld;
input  [31:0] P_12_i;
output  [31:0] P_12_o;
output   P_12_o_ap_vld;
input  [31:0] P_13_i;
output  [31:0] P_13_o;
output   P_13_o_ap_vld;
input  [31:0] P_14_i;
output  [31:0] P_14_o;
output   P_14_o_ap_vld;
input  [31:0] P_15_i;
output  [31:0] P_15_o;
output   P_15_o_ap_vld;
input  [31:0] P_16_i;
output  [31:0] P_16_o;
output   P_16_o_ap_vld;
input  [31:0] P_17_i;
output  [31:0] P_17_o;
output   P_17_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg key_ce0;
reg[7:0] S_0_address0;
reg S_0_ce0;
reg S_0_we0;
reg S_0_ce1;
reg S_0_we1;
reg[7:0] S_1_address0;
reg S_1_ce0;
reg S_1_we0;
reg S_1_ce1;
reg S_1_we1;
reg[7:0] S_2_address0;
reg S_2_ce0;
reg S_2_we0;
reg S_2_ce1;
reg S_2_we1;
reg[7:0] S_3_address0;
reg S_3_ce0;
reg S_3_we0;
reg S_3_ce1;
reg S_3_we1;
reg[31:0] P_0_o;
reg P_0_o_ap_vld;
reg[31:0] P_1_o;
reg P_1_o_ap_vld;
reg[31:0] P_2_o;
reg P_2_o_ap_vld;
reg[31:0] P_3_o;
reg P_3_o_ap_vld;
reg[31:0] P_4_o;
reg P_4_o_ap_vld;
reg[31:0] P_5_o;
reg P_5_o_ap_vld;
reg[31:0] P_6_o;
reg P_6_o_ap_vld;
reg[31:0] P_7_o;
reg P_7_o_ap_vld;
reg[31:0] P_8_o;
reg P_8_o_ap_vld;
reg[31:0] P_9_o;
reg P_9_o_ap_vld;
reg[31:0] P_10_o;
reg P_10_o_ap_vld;
reg[31:0] P_11_o;
reg P_11_o_ap_vld;
reg[31:0] P_12_o;
reg P_12_o_ap_vld;
reg[31:0] P_13_o;
reg P_13_o_ap_vld;
reg[31:0] P_14_o;
reg P_14_o_ap_vld;
reg[31:0] P_15_o;
reg P_15_o_ap_vld;
reg[31:0] P_16_o;
reg P_16_o_ap_vld;
reg[31:0] P_17_o;
reg P_17_o_ap_vld;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_524;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln148_fu_674_p2;
reg   [4:0] i_0_reg_257;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln159_fu_831_p2;
wire    ap_CS_fsm_state22;
wire   [0:0] tmp_32_fu_983_p3;
reg   [31:0] reg_530;
reg   [31:0] reg_536;
reg   [31:0] reg_542;
reg   [31:0] reg_548;
reg   [31:0] reg_554;
reg   [31:0] reg_560;
reg   [31:0] reg_566;
reg   [31:0] reg_572;
reg   [31:0] reg_578;
reg   [31:0] reg_584;
reg   [31:0] reg_590;
reg   [31:0] reg_596;
reg   [31:0] reg_602;
reg   [31:0] reg_608;
reg   [31:0] reg_614;
reg   [31:0] reg_620;
reg   [31:0] reg_626;
reg   [31:0] reg_632;
wire    ap_CS_fsm_state18;
wire    grp_Encrypt_SetKey_fu_392_ap_ready;
wire    grp_Encrypt_SetKey_fu_392_ap_done;
wire    ap_CS_fsm_state23;
reg   [31:0] reg_641;
wire   [4:0] i_16_fu_656_p2;
reg   [4:0] i_16_reg_1044;
wire    ap_CS_fsm_state2;
wire   [6:0] shl_ln_fu_662_p3;
reg   [6:0] shl_ln_reg_1049;
wire   [0:0] icmp_ln145_fu_650_p2;
wire   [2:0] j_fu_680_p2;
reg   [2:0] j_reg_1057;
wire   [23:0] trunc_ln150_fu_697_p1;
reg   [23:0] trunc_ln150_reg_1067;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state13;
wire   [31:0] data_fu_710_p3;
wire    ap_CS_fsm_state14;
wire   [4:0] i_fu_961_p2;
wire    ap_CS_fsm_state20;
wire   [2:0] i_15_fu_973_p2;
reg   [2:0] i_15_reg_1110;
wire    ap_CS_fsm_state21;
wire   [1:0] trunc_ln171_fu_979_p1;
reg   [1:0] trunc_ln171_reg_1115;
wire   [0:0] icmp_ln167_fu_967_p2;
reg   [7:0] S_0_addr_reg_1132;
reg   [7:0] S_1_addr_reg_1137;
reg   [7:0] S_2_addr_reg_1142;
reg   [7:0] S_3_addr_reg_1147;
reg   [7:0] S_0_addr_1_reg_1152;
reg   [7:0] S_1_addr_1_reg_1157;
reg   [7:0] S_2_addr_1_reg_1162;
reg   [7:0] S_3_addr_1_reg_1167;
wire   [8:0] j_4_fu_1025_p2;
wire    ap_CS_fsm_state24;
wire    grp_Encrypt_SetKey_fu_392_ap_start;
wire    grp_Encrypt_SetKey_fu_392_ap_idle;
reg   [31:0] grp_Encrypt_SetKey_fu_392_left_read;
reg   [31:0] grp_Encrypt_SetKey_fu_392_right_read;
wire   [7:0] grp_Encrypt_SetKey_fu_392_S_0_address0;
wire    grp_Encrypt_SetKey_fu_392_S_0_ce0;
wire   [7:0] grp_Encrypt_SetKey_fu_392_S_1_address0;
wire    grp_Encrypt_SetKey_fu_392_S_1_ce0;
wire   [7:0] grp_Encrypt_SetKey_fu_392_S_2_address0;
wire    grp_Encrypt_SetKey_fu_392_S_2_ce0;
wire   [7:0] grp_Encrypt_SetKey_fu_392_S_3_address0;
wire    grp_Encrypt_SetKey_fu_392_S_3_ce0;
wire   [31:0] grp_Encrypt_SetKey_fu_392_ap_return_0;
wire   [31:0] grp_Encrypt_SetKey_fu_392_ap_return_1;
wire    ap_CS_fsm_state16;
reg   [31:0] data_0_reg_269;
reg   [2:0] j_0_reg_281;
reg   [31:0] UnifiedRetVal_i_reg_292;
reg   [31:0] right_0_reg_333;
reg   [31:0] left_0_reg_345;
reg   [4:0] i1_0_reg_357;
reg   [2:0] i2_0_reg_369;
reg   [8:0] j3_0_reg_380;
reg    grp_Encrypt_SetKey_fu_392_ap_start_reg;
wire   [63:0] zext_ln150_fu_701_p1;
wire   [63:0] zext_ln171_fu_999_p1;
wire   [63:0] zext_ln172_fu_1017_p1;
reg   [31:0] left_1_fu_144;
reg   [31:0] right_1_fu_148;
wire   [31:0] xor_ln152_fu_717_p2;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state19;
wire   [4:0] or_ln162_fu_901_p2;
wire   [6:0] zext_ln148_fu_670_p1;
wire   [6:0] grp_fu_691_p0;
wire   [4:0] grp_fu_691_p1;
wire   [6:0] grp_fu_691_p2;
wire   [7:0] zext_ln150_1_fu_706_p1;
wire   [7:0] trunc_ln169_fu_1007_p1;
wire   [7:0] or_ln172_fu_1011_p2;
reg    grp_fu_691_ap_start;
wire    grp_fu_691_ap_done;
reg   [23:0] ap_NS_fsm;
reg    ap_condition_888;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 grp_Encrypt_SetKey_fu_392_ap_start_reg = 1'b0;
end

Encrypt_SetKey grp_Encrypt_SetKey_fu_392(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Encrypt_SetKey_fu_392_ap_start),
    .ap_done(grp_Encrypt_SetKey_fu_392_ap_done),
    .ap_idle(grp_Encrypt_SetKey_fu_392_ap_idle),
    .ap_ready(grp_Encrypt_SetKey_fu_392_ap_ready),
    .left_read(grp_Encrypt_SetKey_fu_392_left_read),
    .right_read(grp_Encrypt_SetKey_fu_392_right_read),
    .P_0_read(reg_620),
    .P_1_read(reg_614),
    .P_2_read(reg_608),
    .P_3_read(reg_602),
    .P_4_read(reg_596),
    .P_5_read(reg_590),
    .P_6_read(reg_584),
    .P_7_read(reg_578),
    .P_8_read(reg_572),
    .P_9_read(reg_566),
    .P_10_read(reg_560),
    .P_11_read(reg_554),
    .P_12_read(reg_548),
    .P_13_read(reg_542),
    .P_14_read(reg_536),
    .P_15_read(reg_530),
    .P_16_read(reg_524),
    .P_17_read(reg_626),
    .S_0_address0(grp_Encrypt_SetKey_fu_392_S_0_address0),
    .S_0_ce0(grp_Encrypt_SetKey_fu_392_S_0_ce0),
    .S_0_q0(S_0_q0),
    .S_1_address0(grp_Encrypt_SetKey_fu_392_S_1_address0),
    .S_1_ce0(grp_Encrypt_SetKey_fu_392_S_1_ce0),
    .S_1_q0(S_1_q0),
    .S_2_address0(grp_Encrypt_SetKey_fu_392_S_2_address0),
    .S_2_ce0(grp_Encrypt_SetKey_fu_392_S_2_ce0),
    .S_2_q0(S_2_q0),
    .S_3_address0(grp_Encrypt_SetKey_fu_392_S_3_address0),
    .S_3_ce0(grp_Encrypt_SetKey_fu_392_S_3_ce0),
    .S_3_q0(S_3_q0),
    .ap_return_0(grp_Encrypt_SetKey_fu_392_ap_return_0),
    .ap_return_1(grp_Encrypt_SetKey_fu_392_ap_return_1)
);

dut_urem_7ns_5ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
dut_urem_7ns_5ns_bkb_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_691_ap_start),
    .done(grp_fu_691_ap_done),
    .din0(grp_fu_691_p0),
    .din1(grp_fu_691_p1),
    .ce(1'b1),
    .dout(grp_fu_691_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Encrypt_SetKey_fu_392_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)))) begin
            grp_Encrypt_SetKey_fu_392_ap_start_reg <= 1'b1;
        end else if ((grp_Encrypt_SetKey_fu_392_ap_ready == 1'b1)) begin
            grp_Encrypt_SetKey_fu_392_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln148_fu_674_p2 == 1'd1))) begin
        if ((1'b1 == ap_condition_888)) begin
            UnifiedRetVal_i_reg_292 <= P_17_i;
        end else if ((i_0_reg_257 == 5'd16)) begin
            UnifiedRetVal_i_reg_292 <= P_16_i;
        end else if ((i_0_reg_257 == 5'd15)) begin
            UnifiedRetVal_i_reg_292 <= P_15_i;
        end else if ((i_0_reg_257 == 5'd14)) begin
            UnifiedRetVal_i_reg_292 <= P_14_i;
        end else if ((i_0_reg_257 == 5'd13)) begin
            UnifiedRetVal_i_reg_292 <= P_13_i;
        end else if ((i_0_reg_257 == 5'd12)) begin
            UnifiedRetVal_i_reg_292 <= P_12_i;
        end else if ((i_0_reg_257 == 5'd11)) begin
            UnifiedRetVal_i_reg_292 <= P_11_i;
        end else if ((i_0_reg_257 == 5'd10)) begin
            UnifiedRetVal_i_reg_292 <= P_10_i;
        end else if ((i_0_reg_257 == 5'd9)) begin
            UnifiedRetVal_i_reg_292 <= P_9_i;
        end else if ((i_0_reg_257 == 5'd8)) begin
            UnifiedRetVal_i_reg_292 <= P_8_i;
        end else if ((i_0_reg_257 == 5'd7)) begin
            UnifiedRetVal_i_reg_292 <= P_7_i;
        end else if ((i_0_reg_257 == 5'd6)) begin
            UnifiedRetVal_i_reg_292 <= P_6_i;
        end else if ((i_0_reg_257 == 5'd5)) begin
            UnifiedRetVal_i_reg_292 <= P_5_i;
        end else if ((i_0_reg_257 == 5'd4)) begin
            UnifiedRetVal_i_reg_292 <= P_4_i;
        end else if ((i_0_reg_257 == 5'd3)) begin
            UnifiedRetVal_i_reg_292 <= P_3_i;
        end else if ((i_0_reg_257 == 5'd2)) begin
            UnifiedRetVal_i_reg_292 <= P_2_i;
        end else if ((i_0_reg_257 == 5'd1)) begin
            UnifiedRetVal_i_reg_292 <= P_1_i;
        end else if ((i_0_reg_257 == 5'd0)) begin
            UnifiedRetVal_i_reg_292 <= P_0_i;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
                data_0_reg_269[6 : 0] <= data_fu_710_p3[6 : 0];
        data_0_reg_269[14 : 8] <= data_fu_710_p3[14 : 8];
        data_0_reg_269[22 : 16] <= data_fu_710_p3[22 : 16];
        data_0_reg_269[30 : 24] <= data_fu_710_p3[30 : 24];
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln145_fu_650_p2 == 1'd0))) begin
                data_0_reg_269[0] <= 1'b0;
        data_0_reg_269[1] <= 1'b0;
        data_0_reg_269[2] <= 1'b0;
        data_0_reg_269[3] <= 1'b0;
        data_0_reg_269[4] <= 1'b0;
        data_0_reg_269[5] <= 1'b0;
        data_0_reg_269[6] <= 1'b0;
        data_0_reg_269[8] <= 1'b0;
        data_0_reg_269[9] <= 1'b0;
        data_0_reg_269[10] <= 1'b0;
        data_0_reg_269[11] <= 1'b0;
        data_0_reg_269[12] <= 1'b0;
        data_0_reg_269[13] <= 1'b0;
        data_0_reg_269[14] <= 1'b0;
        data_0_reg_269[16] <= 1'b0;
        data_0_reg_269[17] <= 1'b0;
        data_0_reg_269[18] <= 1'b0;
        data_0_reg_269[19] <= 1'b0;
        data_0_reg_269[20] <= 1'b0;
        data_0_reg_269[21] <= 1'b0;
        data_0_reg_269[22] <= 1'b0;
        data_0_reg_269[24] <= 1'b0;
        data_0_reg_269[25] <= 1'b0;
        data_0_reg_269[26] <= 1'b0;
        data_0_reg_269[27] <= 1'b0;
        data_0_reg_269[28] <= 1'b0;
        data_0_reg_269[29] <= 1'b0;
        data_0_reg_269[30] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln145_fu_650_p2 == 1'd1))) begin
        i1_0_reg_357 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        i1_0_reg_357 <= i_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd0))) begin
        i2_0_reg_369 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd1))) begin
        i2_0_reg_369 <= i_15_reg_1110;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_0_reg_257 <= i_16_reg_1044;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_257 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        j3_0_reg_380 <= j_4_fu_1025_p2;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln167_fu_967_p2 == 1'd0))) begin
        j3_0_reg_380 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        j_0_reg_281 <= j_reg_1057;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln145_fu_650_p2 == 1'd0))) begin
        j_0_reg_281 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln145_fu_650_p2 == 1'd1))) begin
        left_0_reg_345 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        left_0_reg_345 <= reg_632;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        left_1_fu_144 <= reg_632;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd0))) begin
        left_1_fu_144 <= left_0_reg_345;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln145_fu_650_p2 == 1'd1))) begin
        right_0_reg_333 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        right_0_reg_333 <= reg_641;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        right_1_fu_148 <= reg_641;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd0))) begin
        right_1_fu_148 <= right_0_reg_333;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        S_0_addr_1_reg_1152[7 : 1] <= zext_ln172_fu_1017_p1[7 : 1];
        S_0_addr_reg_1132 <= zext_ln171_fu_999_p1;
        S_1_addr_1_reg_1157[7 : 1] <= zext_ln172_fu_1017_p1[7 : 1];
        S_1_addr_reg_1137 <= zext_ln171_fu_999_p1;
        S_2_addr_1_reg_1162[7 : 1] <= zext_ln172_fu_1017_p1[7 : 1];
        S_2_addr_reg_1142 <= zext_ln171_fu_999_p1;
        S_3_addr_1_reg_1167[7 : 1] <= zext_ln172_fu_1017_p1[7 : 1];
        S_3_addr_reg_1147 <= zext_ln171_fu_999_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_15_reg_1110 <= i_15_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_16_reg_1044 <= i_16_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1057 <= j_fu_680_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd16) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_524 <= P_16_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd15) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_530 <= P_15_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd14) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_536 <= P_14_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd13) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_542 <= P_13_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd12) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_548 <= P_12_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd11) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_554 <= P_11_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd10) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_560 <= P_10_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd9) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_566 <= P_9_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd8) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_572 <= P_8_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd7) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_578 <= P_7_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd6) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_584 <= P_6_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd5) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_590 <= P_5_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd4) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_596 <= P_4_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd3) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_602 <= P_3_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd2) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_608 <= P_2_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd1) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_614 <= P_1_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (i_0_reg_257 == 5'd0) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_620 <= P_0_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd1)) | (~(i_0_reg_257 == 5'd0) & ~(i_0_reg_257 == 5'd1) & ~(i_0_reg_257 == 5'd2) & ~(i_0_reg_257 == 5'd3) & ~(i_0_reg_257 == 5'd4) & ~(i_0_reg_257 == 5'd5) & ~(i_0_reg_257 == 5'd6) & ~(i_0_reg_257 == 5'd7) & ~(i_0_reg_257 == 5'd8) & ~(i_0_reg_257 == 5'd9) & ~(i_0_reg_257 == 5'd10) & ~(i_0_reg_257 == 5'd11) & ~(i_0_reg_257 == 5'd12) & ~(i_0_reg_257 == 5'd13) & ~(i_0_reg_257 == 5'd14) & ~(i_0_reg_257 == 5'd15) & ~(i_0_reg_257 == 5'd16) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln148_fu_674_p2 == 1'd1)))) begin
        reg_626 <= P_17_i;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        reg_632 <= grp_Encrypt_SetKey_fu_392_ap_return_0;
        reg_641 <= grp_Encrypt_SetKey_fu_392_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln145_fu_650_p2 == 1'd0))) begin
        shl_ln_reg_1049[6 : 2] <= shl_ln_fu_662_p3[6 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        trunc_ln150_reg_1067[6 : 0] <= trunc_ln150_fu_697_p1[6 : 0];
trunc_ln150_reg_1067[14 : 8] <= trunc_ln150_fu_697_p1[14 : 8];
trunc_ln150_reg_1067[22 : 16] <= trunc_ln150_fu_697_p1[22 : 16];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln167_fu_967_p2 == 1'd0))) begin
        trunc_ln171_reg_1115 <= trunc_ln171_fu_979_p1;
    end
end

always @ (*) begin
    if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        P_0_o = grp_Encrypt_SetKey_fu_392_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd0))) begin
        P_0_o = xor_ln152_fu_717_p2;
    end else begin
        P_0_o = P_0_i;
    end
end

always @ (*) begin
    if ((((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd0) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd0)))) begin
        P_0_o_ap_vld = 1'b1;
    end else begin
        P_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd10) & (1'b1 == ap_CS_fsm_state18))) begin
        P_10_o = grp_Encrypt_SetKey_fu_392_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd10))) begin
        P_10_o = xor_ln152_fu_717_p2;
    end else begin
        P_10_o = P_10_i;
    end
end

always @ (*) begin
    if ((((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd10) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd10)))) begin
        P_10_o_ap_vld = 1'b1;
    end else begin
        P_10_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln162_fu_901_p2 == 5'd11) & (1'b1 == ap_CS_fsm_state19))) begin
        P_11_o = reg_641;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd11))) begin
        P_11_o = xor_ln152_fu_717_p2;
    end else begin
        P_11_o = P_11_i;
    end
end

always @ (*) begin
    if ((((or_ln162_fu_901_p2 == 5'd11) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd11)))) begin
        P_11_o_ap_vld = 1'b1;
    end else begin
        P_11_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd12) & (1'b1 == ap_CS_fsm_state18))) begin
        P_12_o = grp_Encrypt_SetKey_fu_392_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd12))) begin
        P_12_o = xor_ln152_fu_717_p2;
    end else begin
        P_12_o = P_12_i;
    end
end

always @ (*) begin
    if ((((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd12) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd12)))) begin
        P_12_o_ap_vld = 1'b1;
    end else begin
        P_12_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln162_fu_901_p2 == 5'd13) & (1'b1 == ap_CS_fsm_state19))) begin
        P_13_o = reg_641;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd13))) begin
        P_13_o = xor_ln152_fu_717_p2;
    end else begin
        P_13_o = P_13_i;
    end
end

always @ (*) begin
    if ((((or_ln162_fu_901_p2 == 5'd13) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd13)))) begin
        P_13_o_ap_vld = 1'b1;
    end else begin
        P_13_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18) & (i1_0_reg_357 == 5'd14))) begin
        P_14_o = grp_Encrypt_SetKey_fu_392_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd14))) begin
        P_14_o = xor_ln152_fu_717_p2;
    end else begin
        P_14_o = P_14_i;
    end
end

always @ (*) begin
    if ((((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18) & (i1_0_reg_357 == 5'd14)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd14)))) begin
        P_14_o_ap_vld = 1'b1;
    end else begin
        P_14_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (or_ln162_fu_901_p2 == 5'd15))) begin
        P_15_o = reg_641;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd15))) begin
        P_15_o = xor_ln152_fu_717_p2;
    end else begin
        P_15_o = P_15_i;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state19) & (or_ln162_fu_901_p2 == 5'd15)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd15)))) begin
        P_15_o_ap_vld = 1'b1;
    end else begin
        P_15_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(i1_0_reg_357 == 5'd0) & ~(i1_0_reg_357 == 5'd2) & ~(i1_0_reg_357 == 5'd4) & ~(i1_0_reg_357 == 5'd6) & ~(i1_0_reg_357 == 5'd8) & ~(i1_0_reg_357 == 5'd10) & ~(i1_0_reg_357 == 5'd12) & ~(i1_0_reg_357 == 5'd14) & (grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        P_16_o = grp_Encrypt_SetKey_fu_392_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd16))) begin
        P_16_o = xor_ln152_fu_717_p2;
    end else begin
        P_16_o = P_16_i;
    end
end

always @ (*) begin
    if (((~(i1_0_reg_357 == 5'd0) & ~(i1_0_reg_357 == 5'd2) & ~(i1_0_reg_357 == 5'd4) & ~(i1_0_reg_357 == 5'd6) & ~(i1_0_reg_357 == 5'd8) & ~(i1_0_reg_357 == 5'd10) & ~(i1_0_reg_357 == 5'd12) & ~(i1_0_reg_357 == 5'd14) & (grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd16)))) begin
        P_16_o_ap_vld = 1'b1;
    end else begin
        P_16_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(or_ln162_fu_901_p2 == 5'd1) & ~(or_ln162_fu_901_p2 == 5'd3) & ~(or_ln162_fu_901_p2 == 5'd5) & ~(or_ln162_fu_901_p2 == 5'd7) & ~(or_ln162_fu_901_p2 == 5'd9) & ~(or_ln162_fu_901_p2 == 5'd11) & ~(or_ln162_fu_901_p2 == 5'd13) & ~(or_ln162_fu_901_p2 == 5'd15) & (1'b1 == ap_CS_fsm_state19))) begin
        P_17_o = reg_641;
    end else if (((1'b1 == ap_CS_fsm_state15) & ((i_0_reg_257 == 5'd17) | ((i_0_reg_257 == 5'd18) | ((i_0_reg_257 == 5'd19) | ((i_0_reg_257 == 5'd20) | ((i_0_reg_257 == 5'd21) | ((i_0_reg_257 == 5'd22) | ((i_0_reg_257 == 5'd23) | ((i_0_reg_257 == 5'd24) | ((i_0_reg_257 == 5'd25) | ((i_0_reg_257 == 5'd26) | ((i_0_reg_257 == 5'd27) | ((i_0_reg_257 == 5'd28) | ((i_0_reg_257 == 5'd29) | ((i_0_reg_257 == 5'd30) | (i_0_reg_257 == 5'd31))))))))))))))))) begin
        P_17_o = xor_ln152_fu_717_p2;
    end else begin
        P_17_o = P_17_i;
    end
end

always @ (*) begin
    if (((~(or_ln162_fu_901_p2 == 5'd1) & ~(or_ln162_fu_901_p2 == 5'd3) & ~(or_ln162_fu_901_p2 == 5'd5) & ~(or_ln162_fu_901_p2 == 5'd7) & ~(or_ln162_fu_901_p2 == 5'd9) & ~(or_ln162_fu_901_p2 == 5'd11) & ~(or_ln162_fu_901_p2 == 5'd13) & ~(or_ln162_fu_901_p2 == 5'd15) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state15) & ((i_0_reg_257 == 5'd17) | ((i_0_reg_257 == 5'd18) | ((i_0_reg_257 == 5'd19) | ((i_0_reg_257 == 5'd20) | ((i_0_reg_257 == 5'd21) | ((i_0_reg_257 == 5'd22) | ((i_0_reg_257 == 5'd23) | ((i_0_reg_257 == 5'd24) | ((i_0_reg_257 == 5'd25) | ((i_0_reg_257 == 5'd26) | ((i_0_reg_257 == 5'd27) | ((i_0_reg_257 == 5'd28) | ((i_0_reg_257 == 5'd29) | ((i_0_reg_257 == 5'd30) | (i_0_reg_257 == 5'd31)))))))))))))))))) begin
        P_17_o_ap_vld = 1'b1;
    end else begin
        P_17_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln162_fu_901_p2 == 5'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        P_1_o = reg_641;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd1))) begin
        P_1_o = xor_ln152_fu_717_p2;
    end else begin
        P_1_o = P_1_i;
    end
end

always @ (*) begin
    if ((((or_ln162_fu_901_p2 == 5'd1) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd1)))) begin
        P_1_o_ap_vld = 1'b1;
    end else begin
        P_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd2) & (1'b1 == ap_CS_fsm_state18))) begin
        P_2_o = grp_Encrypt_SetKey_fu_392_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd2))) begin
        P_2_o = xor_ln152_fu_717_p2;
    end else begin
        P_2_o = P_2_i;
    end
end

always @ (*) begin
    if ((((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd2) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd2)))) begin
        P_2_o_ap_vld = 1'b1;
    end else begin
        P_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln162_fu_901_p2 == 5'd3) & (1'b1 == ap_CS_fsm_state19))) begin
        P_3_o = reg_641;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd3))) begin
        P_3_o = xor_ln152_fu_717_p2;
    end else begin
        P_3_o = P_3_i;
    end
end

always @ (*) begin
    if ((((or_ln162_fu_901_p2 == 5'd3) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd3)))) begin
        P_3_o_ap_vld = 1'b1;
    end else begin
        P_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd4) & (1'b1 == ap_CS_fsm_state18))) begin
        P_4_o = grp_Encrypt_SetKey_fu_392_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd4))) begin
        P_4_o = xor_ln152_fu_717_p2;
    end else begin
        P_4_o = P_4_i;
    end
end

always @ (*) begin
    if ((((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd4) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd4)))) begin
        P_4_o_ap_vld = 1'b1;
    end else begin
        P_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln162_fu_901_p2 == 5'd5) & (1'b1 == ap_CS_fsm_state19))) begin
        P_5_o = reg_641;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd5))) begin
        P_5_o = xor_ln152_fu_717_p2;
    end else begin
        P_5_o = P_5_i;
    end
end

always @ (*) begin
    if ((((or_ln162_fu_901_p2 == 5'd5) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd5)))) begin
        P_5_o_ap_vld = 1'b1;
    end else begin
        P_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd6) & (1'b1 == ap_CS_fsm_state18))) begin
        P_6_o = grp_Encrypt_SetKey_fu_392_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd6))) begin
        P_6_o = xor_ln152_fu_717_p2;
    end else begin
        P_6_o = P_6_i;
    end
end

always @ (*) begin
    if ((((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd6) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd6)))) begin
        P_6_o_ap_vld = 1'b1;
    end else begin
        P_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln162_fu_901_p2 == 5'd7) & (1'b1 == ap_CS_fsm_state19))) begin
        P_7_o = reg_641;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd7))) begin
        P_7_o = xor_ln152_fu_717_p2;
    end else begin
        P_7_o = P_7_i;
    end
end

always @ (*) begin
    if ((((or_ln162_fu_901_p2 == 5'd7) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd7)))) begin
        P_7_o_ap_vld = 1'b1;
    end else begin
        P_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd8) & (1'b1 == ap_CS_fsm_state18))) begin
        P_8_o = grp_Encrypt_SetKey_fu_392_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd8))) begin
        P_8_o = xor_ln152_fu_717_p2;
    end else begin
        P_8_o = P_8_i;
    end
end

always @ (*) begin
    if ((((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (i1_0_reg_357 == 5'd8) & (1'b1 == ap_CS_fsm_state18)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd8)))) begin
        P_8_o_ap_vld = 1'b1;
    end else begin
        P_8_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln162_fu_901_p2 == 5'd9) & (1'b1 == ap_CS_fsm_state19))) begin
        P_9_o = reg_641;
    end else if (((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd9))) begin
        P_9_o = xor_ln152_fu_717_p2;
    end else begin
        P_9_o = P_9_i;
    end
end

always @ (*) begin
    if ((((or_ln162_fu_901_p2 == 5'd9) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state15) & (i_0_reg_257 == 5'd9)))) begin
        P_9_o_ap_vld = 1'b1;
    end else begin
        P_9_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_0_address0 = S_0_addr_reg_1132;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18))) begin
        S_0_address0 = grp_Encrypt_SetKey_fu_392_S_0_address0;
    end else begin
        S_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_0_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18))) begin
        S_0_ce0 = grp_Encrypt_SetKey_fu_392_S_0_ce0;
    end else begin
        S_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_0_ce1 = 1'b1;
    end else begin
        S_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln171_reg_1115 == 2'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        S_0_we0 = 1'b1;
    end else begin
        S_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln171_reg_1115 == 2'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        S_0_we1 = 1'b1;
    end else begin
        S_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_1_address0 = S_1_addr_reg_1137;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18))) begin
        S_1_address0 = grp_Encrypt_SetKey_fu_392_S_1_address0;
    end else begin
        S_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18))) begin
        S_1_ce0 = grp_Encrypt_SetKey_fu_392_S_1_ce0;
    end else begin
        S_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_1_ce1 = 1'b1;
    end else begin
        S_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln171_reg_1115 == 2'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        S_1_we0 = 1'b1;
    end else begin
        S_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln171_reg_1115 == 2'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        S_1_we1 = 1'b1;
    end else begin
        S_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_2_address0 = S_2_addr_reg_1142;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18))) begin
        S_2_address0 = grp_Encrypt_SetKey_fu_392_S_2_address0;
    end else begin
        S_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_2_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18))) begin
        S_2_ce0 = grp_Encrypt_SetKey_fu_392_S_2_ce0;
    end else begin
        S_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_2_ce1 = 1'b1;
    end else begin
        S_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln171_reg_1115 == 2'd2) & (1'b1 == ap_CS_fsm_state24))) begin
        S_2_we0 = 1'b1;
    end else begin
        S_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln171_reg_1115 == 2'd2) & (1'b1 == ap_CS_fsm_state24))) begin
        S_2_we1 = 1'b1;
    end else begin
        S_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_3_address0 = S_3_addr_reg_1147;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18))) begin
        S_3_address0 = grp_Encrypt_SetKey_fu_392_S_3_address0;
    end else begin
        S_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_3_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18))) begin
        S_3_ce0 = grp_Encrypt_SetKey_fu_392_S_3_ce0;
    end else begin
        S_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        S_3_ce1 = 1'b1;
    end else begin
        S_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln171_reg_1115 == 2'd3) & (1'b1 == ap_CS_fsm_state24))) begin
        S_3_we0 = 1'b1;
    end else begin
        S_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln171_reg_1115 == 2'd3) & (1'b1 == ap_CS_fsm_state24))) begin
        S_3_we1 = 1'b1;
    end else begin
        S_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & (icmp_ln167_fu_967_p2 == 1'd1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln167_fu_967_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_Encrypt_SetKey_fu_392_left_read = left_1_fu_144;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_Encrypt_SetKey_fu_392_left_read = left_0_reg_345;
    end else begin
        grp_Encrypt_SetKey_fu_392_left_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_Encrypt_SetKey_fu_392_right_read = right_1_fu_148;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_Encrypt_SetKey_fu_392_right_read = right_0_reg_333;
    end else begin
        grp_Encrypt_SetKey_fu_392_right_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln148_fu_674_p2 == 1'd0))) begin
        grp_fu_691_ap_start = 1'b1;
    end else begin
        grp_fu_691_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        key_ce0 = 1'b1;
    end else begin
        key_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln145_fu_650_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln148_fu_674_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln159_fu_831_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln167_fu_967_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (tmp_32_fu_983_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((grp_Encrypt_SetKey_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign S_0_address1 = S_0_addr_1_reg_1152;

assign S_0_d0 = reg_632;

assign S_0_d1 = reg_641;

assign S_1_address1 = S_1_addr_1_reg_1157;

assign S_1_d0 = reg_632;

assign S_1_d1 = reg_641;

assign S_2_address1 = S_2_addr_1_reg_1162;

assign S_2_d0 = reg_632;

assign S_2_d1 = reg_641;

assign S_3_address1 = S_3_addr_1_reg_1167;

assign S_3_d0 = reg_632;

assign S_3_d1 = reg_641;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_condition_888 = (~(i_0_reg_257 == 5'd0) & ~(i_0_reg_257 == 5'd1) & ~(i_0_reg_257 == 5'd2) & ~(i_0_reg_257 == 5'd3) & ~(i_0_reg_257 == 5'd4) & ~(i_0_reg_257 == 5'd5) & ~(i_0_reg_257 == 5'd6) & ~(i_0_reg_257 == 5'd7) & ~(i_0_reg_257 == 5'd8) & ~(i_0_reg_257 == 5'd9) & ~(i_0_reg_257 == 5'd10) & ~(i_0_reg_257 == 5'd11) & ~(i_0_reg_257 == 5'd12) & ~(i_0_reg_257 == 5'd13) & ~(i_0_reg_257 == 5'd14) & ~(i_0_reg_257 == 5'd15) & ~(i_0_reg_257 == 5'd16));
end

assign data_fu_710_p3 = {{trunc_ln150_reg_1067}, {zext_ln150_1_fu_706_p1}};

assign grp_Encrypt_SetKey_fu_392_ap_start = grp_Encrypt_SetKey_fu_392_ap_start_reg;

assign grp_fu_691_p0 = (shl_ln_reg_1049 + zext_ln148_fu_670_p1);

assign grp_fu_691_p1 = 7'd9;

assign i_15_fu_973_p2 = (i2_0_reg_369 + 3'd1);

assign i_16_fu_656_p2 = (i_0_reg_257 + 5'd1);

assign i_fu_961_p2 = (i1_0_reg_357 + 5'd2);

assign icmp_ln145_fu_650_p2 = ((i_0_reg_257 == 5'd18) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_674_p2 = ((j_0_reg_281 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln159_fu_831_p2 = ((i1_0_reg_357 < 5'd18) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_967_p2 = ((i2_0_reg_369 == 3'd4) ? 1'b1 : 1'b0);

assign j_4_fu_1025_p2 = (j3_0_reg_380 + 9'd2);

assign j_fu_680_p2 = (j_0_reg_281 + 3'd1);

assign key_address0 = zext_ln150_fu_701_p1;

assign or_ln162_fu_901_p2 = (i1_0_reg_357 | 5'd1);

assign or_ln172_fu_1011_p2 = (trunc_ln169_fu_1007_p1 | 8'd1);

assign shl_ln_fu_662_p3 = {{i_0_reg_257}, {2'd0}};

assign tmp_32_fu_983_p3 = j3_0_reg_380[32'd8];

assign trunc_ln150_fu_697_p1 = data_0_reg_269[23:0];

assign trunc_ln169_fu_1007_p1 = j3_0_reg_380[7:0];

assign trunc_ln171_fu_979_p1 = i2_0_reg_369[1:0];

assign xor_ln152_fu_717_p2 = (data_0_reg_269 ^ UnifiedRetVal_i_reg_292);

assign zext_ln148_fu_670_p1 = j_0_reg_281;

assign zext_ln150_1_fu_706_p1 = key_q0;

assign zext_ln150_fu_701_p1 = grp_fu_691_p2;

assign zext_ln171_fu_999_p1 = j3_0_reg_380;

assign zext_ln172_fu_1017_p1 = or_ln172_fu_1011_p2;

always @ (posedge ap_clk) begin
    shl_ln_reg_1049[1:0] <= 2'b00;
    trunc_ln150_reg_1067[7] <= 1'b0;
    trunc_ln150_reg_1067[15:15] <= 1'b0;
    trunc_ln150_reg_1067[23] <= 1'b0;
    S_0_addr_1_reg_1152[0] <= 1'b1;
    S_1_addr_1_reg_1157[0] <= 1'b1;
    S_2_addr_1_reg_1162[0] <= 1'b1;
    S_3_addr_1_reg_1167[0] <= 1'b1;
    data_0_reg_269[7] <= 1'b0;
    data_0_reg_269[15:15] <= 1'b0;
    data_0_reg_269[23:23] <= 1'b0;
    data_0_reg_269[31] <= 1'b0;
end

endmodule //Blowfish_SetKey
