// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dut,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.076750,HLS_SYN_LAT=2920,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=3833,HLS_SYN_LUT=17645,HLS_VERSION=2019_2}" *)

module dut (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_V_V_dout,
        strm_in_V_V_empty_n,
        strm_in_V_V_read,
        strm_out_V_V_din,
        strm_out_V_V_full_n,
        strm_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] strm_in_V_V_dout;
input   strm_in_V_V_empty_n;
output   strm_in_V_V_read;
output  [31:0] strm_out_V_V_din;
input   strm_out_V_V_full_n;
output   strm_out_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg strm_in_V_V_read;
reg[31:0] strm_out_V_V_din;
reg strm_out_V_V_write;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] lfsr_decrypt;
reg    strm_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln95_fu_226_p2;
reg    strm_out_V_V_blk_n;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
reg   [127:0] reg_205;
reg    ap_predicate_op30_read_state2;
reg    ap_block_state2;
wire   [2:0] i_fu_232_p2;
reg   [2:0] i_reg_646;
reg   [0:0] reading_0_load_reg_651;
wire   [7:0] add_ln96_fu_241_p2;
reg   [7:0] add_ln96_reg_655;
reg   [31:0] tmp_V_2_reg_660;
wire   [0:0] icmp_ln102_fu_261_p2;
reg   [0:0] icmp_ln102_reg_665;
wire   [0:0] icmp_ln414_fu_295_p2;
reg   [0:0] icmp_ln414_reg_669;
wire   [7:0] zext_ln414_fu_301_p1;
reg   [7:0] zext_ln414_reg_676;
wire   [7:0] sub_ln414_fu_305_p2;
reg   [7:0] sub_ln414_reg_681;
wire   [7:0] sub_ln414_1_fu_319_p2;
reg   [7:0] sub_ln414_1_reg_686;
wire   [0:0] tmp_fu_349_p3;
reg   [0:0] tmp_reg_691;
wire   [127:0] grp_encrypt_aes_fu_191_ap_return;
reg   [127:0] output_message_V_reg_695;
wire    ap_CS_fsm_state4;
wire    grp_encrypt_aes_fu_191_ap_ready;
wire    grp_encrypt_aes_fu_191_ap_done;
wire   [2:0] i_3_fu_463_p2;
reg   [2:0] i_3_reg_704;
wire    ap_CS_fsm_state5;
wire   [7:0] add_ln135_fu_496_p2;
reg   [7:0] add_ln135_reg_709;
wire   [0:0] icmp_ln126_fu_457_p2;
wire   [31:0] output_word_V_fu_523_p3;
reg   [31:0] output_word_V_reg_714;
wire   [2:0] i_2_fu_537_p2;
reg   [2:0] i_2_reg_722;
wire   [7:0] add_ln164_fu_570_p2;
reg   [7:0] add_ln164_reg_727;
wire   [0:0] icmp_ln155_fu_531_p2;
wire   [31:0] output_word_V_6_fu_597_p3;
reg   [31:0] output_word_V_6_reg_732;
wire   [127:0] grp_decrypt_aes_fu_182_ap_return;
reg   [127:0] output_message_V_2_reg_737;
wire    ap_CS_fsm_state7;
wire    grp_decrypt_aes_fu_182_ap_ready;
wire    grp_decrypt_aes_fu_182_ap_done;
wire    grp_decrypt_aes_fu_182_ap_start;
wire    grp_decrypt_aes_fu_182_ap_idle;
wire    grp_encrypt_aes_fu_191_ap_start;
wire    grp_encrypt_aes_fu_191_ap_idle;
reg   [2:0] i_0_reg_115;
wire    ap_CS_fsm_state3;
reg   [7:0] phi_mul_reg_126;
reg   [2:0] i1_0_reg_138;
reg   [7:0] phi_mul3_reg_149;
reg   [2:0] i2_0_reg_160;
reg   [7:0] phi_mul5_reg_171;
reg    grp_decrypt_aes_fu_182_ap_start_reg;
reg    ap_block_state2_ignore_call3;
reg    grp_encrypt_aes_fu_191_ap_start_reg;
reg    ap_block_state2_ignore_call0;
wire   [0:0] xor_ln142_fu_609_p2;
reg   [0:0] reading_0_fu_90;
wire   [0:0] xor_ln99_fu_255_p2;
reg   [31:0] p_Val2_s_fu_94;
reg   [127:0] p_Val2_1_fu_98;
wire   [127:0] p_Result_s_fu_329_p5;
wire   [127:0] p_Result_3_fu_446_p2;
wire   [0:0] tmp_2_fu_247_p3;
wire   [6:0] trunc_ln106_fu_277_p1;
wire   [6:0] add_ln106_fu_285_p2;
wire   [31:0] zext_ln106_fu_281_p1;
wire   [31:0] zext_ln106_1_fu_291_p1;
wire   [7:0] select_ln414_fu_311_p3;
wire   [11:0] trunc_ln647_fu_325_p1;
wire   [28:0] trunc_ln647_1_fu_357_p1;
wire   [7:0] select_ln414_2_fu_370_p3;
wire   [7:0] select_ln414_1_fu_364_p3;
wire   [127:0] tmp_V_3_fu_360_p1;
wire   [127:0] zext_ln414_1_fu_376_p1;
wire   [127:0] shl_ln414_fu_387_p2;
reg   [127:0] tmp_3_fu_393_p4;
wire   [127:0] zext_ln414_2_fu_380_p1;
wire   [127:0] zext_ln414_3_fu_384_p1;
wire   [127:0] shl_ln414_1_fu_410_p2;
wire   [127:0] lshr_ln414_fu_416_p2;
wire   [127:0] and_ln414_fu_422_p2;
wire   [127:0] xor_ln414_fu_428_p2;
wire   [127:0] select_ln414_3_fu_403_p3;
wire   [127:0] and_ln414_1_fu_434_p2;
wire   [127:0] and_ln414_2_fu_440_p2;
wire   [11:0] p_Result_9_fu_475_p4;
wire   [28:0] zext_ln215_1_fu_484_p1;
wire   [127:0] zext_ln647_1_fu_502_p1;
wire   [127:0] lshr_ln647_1_fu_506_p2;
wire   [28:0] trunc_ln215_1_fu_511_p1;
wire   [0:0] icmp_ln129_fu_469_p2;
wire   [31:0] p_Result_4_fu_488_p3;
wire   [31:0] p_Result_6_fu_515_p3;
wire   [11:0] p_Result_5_fu_549_p4;
wire   [28:0] zext_ln215_fu_558_p1;
wire   [127:0] zext_ln647_fu_576_p1;
wire   [127:0] lshr_ln647_fu_580_p2;
wire   [28:0] trunc_ln215_fu_585_p1;
wire   [0:0] icmp_ln158_fu_543_p2;
wire   [31:0] p_Result_7_fu_562_p3;
wire   [31:0] p_Result_8_fu_589_p3;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 lfsr_decrypt = 1'd0;
#0 grp_decrypt_aes_fu_182_ap_start_reg = 1'b0;
#0 grp_encrypt_aes_fu_191_ap_start_reg = 1'b0;
end

decrypt_aes grp_decrypt_aes_fu_182(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_decrypt_aes_fu_182_ap_start),
    .ap_done(grp_decrypt_aes_fu_182_ap_done),
    .ap_idle(grp_decrypt_aes_fu_182_ap_idle),
    .ap_ready(grp_decrypt_aes_fu_182_ap_ready),
    .ciphertext_V(reg_205),
    .ap_return(grp_decrypt_aes_fu_182_ap_return)
);

encrypt_aes grp_encrypt_aes_fu_191(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_encrypt_aes_fu_191_ap_start),
    .ap_done(grp_encrypt_aes_fu_191_ap_done),
    .ap_idle(grp_encrypt_aes_fu_191_ap_idle),
    .ap_ready(grp_encrypt_aes_fu_191_ap_ready),
    .plaintext_V(reg_205),
    .ap_return(grp_encrypt_aes_fu_191_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_decrypt_aes_fu_182_ap_start_reg <= 1'b0;
    end else begin
        if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (tmp_fu_349_p3 == 1'd1) & (icmp_ln95_fu_226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_decrypt_aes_fu_182_ap_start_reg <= 1'b1;
        end else if ((grp_decrypt_aes_fu_182_ap_ready == 1'b1)) begin
            grp_decrypt_aes_fu_182_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_encrypt_aes_fu_191_ap_start_reg <= 1'b0;
    end else begin
        if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (icmp_ln95_fu_226_p2 == 1'd1) & (tmp_fu_349_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_encrypt_aes_fu_191_ap_start_reg <= 1'b1;
        end else if ((grp_encrypt_aes_fu_191_ap_ready == 1'b1)) begin
            grp_encrypt_aes_fu_191_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        i1_0_reg_138 <= i_3_reg_704;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_encrypt_aes_fu_191_ap_done == 1'b1))) begin
        i1_0_reg_138 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        i2_0_reg_160 <= i_2_reg_722;
    end else if (((1'b1 == ap_CS_fsm_state7) & (grp_decrypt_aes_fu_182_ap_done == 1'b1))) begin
        i2_0_reg_160 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_115 <= i_reg_646;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_115 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((reading_0_load_reg_651 == 1'd1) & (icmp_ln102_reg_665 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_Val2_1_fu_98 <= p_Result_3_fu_446_p2;
    end else if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (icmp_ln102_fu_261_p2 == 1'd1) & (reading_0_fu_90 == 1'd1) & (icmp_ln95_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Val2_1_fu_98 <= p_Result_s_fu_329_p5;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_1_fu_98 <= 128'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (reading_0_fu_90 == 1'd1) & (icmp_ln95_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Val2_s_fu_94 <= strm_in_V_V_dout;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_s_fu_94 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul3_reg_149 <= add_ln135_reg_709;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_encrypt_aes_fu_191_ap_done == 1'b1))) begin
        phi_mul3_reg_149 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        phi_mul5_reg_171 <= add_ln164_reg_727;
    end else if (((1'b1 == ap_CS_fsm_state7) & (grp_decrypt_aes_fu_182_ap_done == 1'b1))) begin
        phi_mul5_reg_171 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        phi_mul_reg_126 <= add_ln96_reg_655;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul_reg_126 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (reading_0_fu_90 == 1'd1) & (icmp_ln95_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        reading_0_fu_90 <= xor_ln99_fu_255_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reading_0_fu_90 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_691 == 1'd0) & (icmp_ln126_fu_457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln135_reg_709 <= add_ln135_fu_496_p2;
        output_word_V_reg_714[29 : 0] <= output_word_V_fu_523_p3[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_691 == 1'd1) & (icmp_ln155_fu_531_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln164_reg_727 <= add_ln164_fu_570_p2;
        output_word_V_6_reg_732[29 : 0] <= output_word_V_6_fu_597_p3[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (icmp_ln95_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln96_reg_655 <= add_ln96_fu_241_p2;
        reading_0_load_reg_651 <= reading_0_fu_90;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_691 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        i_2_reg_722 <= i_2_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_691 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i_3_reg_704 <= i_3_fu_463_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_646 <= i_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (reading_0_fu_90 == 1'd1) & (icmp_ln95_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln102_reg_665 <= icmp_ln102_fu_261_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (reading_0_fu_90 == 1'd1) & (icmp_ln102_fu_261_p2 == 1'd0) & (icmp_ln95_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln414_reg_669 <= icmp_ln414_fu_295_p2;
        sub_ln414_1_reg_686 <= sub_ln414_1_fu_319_p2;
        sub_ln414_reg_681 <= sub_ln414_fu_305_p2;
        zext_ln414_reg_676[6 : 0] <= zext_ln414_fu_301_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_decrypt_aes_fu_182_ap_done == 1'b1))) begin
        lfsr_decrypt <= xor_ln142_fu_609_p2;
        output_message_V_2_reg_737 <= grp_decrypt_aes_fu_182_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_encrypt_aes_fu_191_ap_done == 1'b1))) begin
        output_message_V_reg_695 <= grp_encrypt_aes_fu_191_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (icmp_ln95_fu_226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | (~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (reading_0_fu_90 == 1'd1) & (icmp_ln95_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_205 <= p_Val2_1_fu_98;
    end
end

always @ (posedge ap_clk) begin
    if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (ap_predicate_op30_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_2_reg_660 <= strm_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (icmp_ln95_fu_226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_691 <= p_Val2_s_fu_94[32'd30];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (((tmp_reg_691 == 1'd1) & (icmp_ln155_fu_531_p2 == 1'd1)) | ((icmp_ln126_fu_457_p2 == 1'd1) & (tmp_reg_691 == 1'd0))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (((tmp_reg_691 == 1'd1) & (icmp_ln155_fu_531_p2 == 1'd1)) | ((icmp_ln126_fu_457_p2 == 1'd1) & (tmp_reg_691 == 1'd0))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((reading_0_fu_90 == 1'd1) & (icmp_ln95_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        strm_in_V_V_blk_n = strm_in_V_V_empty_n;
    end else begin
        strm_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (ap_predicate_op30_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        strm_in_V_V_read = 1'b1;
    end else begin
        strm_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        strm_out_V_V_blk_n = strm_out_V_V_full_n;
    end else begin
        strm_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((strm_out_V_V_full_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            strm_out_V_V_din = output_word_V_6_reg_732;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            strm_out_V_V_din = output_word_V_reg_714;
        end else begin
            strm_out_V_V_din = 'bx;
        end
    end else begin
        strm_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        strm_out_V_V_write = 1'b1;
    end else begin
        strm_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (tmp_fu_349_p3 == 1'd1) & (icmp_ln95_fu_226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (icmp_ln95_fu_226_p2 == 1'd1) & (tmp_fu_349_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1)) & (icmp_ln95_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_encrypt_aes_fu_191_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (((tmp_reg_691 == 1'd1) & (icmp_ln155_fu_531_p2 == 1'd1)) | ((icmp_ln126_fu_457_p2 == 1'd1) & (tmp_reg_691 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((tmp_reg_691 == 1'd1) & (icmp_ln155_fu_531_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_decrypt_aes_fu_182_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((strm_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln106_fu_285_p2 = (7'd28 + trunc_ln106_fu_277_p1);

assign add_ln135_fu_496_p2 = (phi_mul3_reg_149 + 8'd29);

assign add_ln164_fu_570_p2 = (phi_mul5_reg_171 + 8'd29);

assign add_ln96_fu_241_p2 = (phi_mul_reg_126 + 8'd29);

assign and_ln414_1_fu_434_p2 = (xor_ln414_fu_428_p2 & reg_205);

assign and_ln414_2_fu_440_p2 = (select_ln414_3_fu_403_p3 & and_ln414_fu_422_p2);

assign and_ln414_fu_422_p2 = (shl_ln414_1_fu_410_p2 & lshr_ln414_fu_416_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state2 = ((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state2_ignore_call0 = ((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state2_ignore_call3 = ((strm_in_V_V_empty_n == 1'b0) & (ap_predicate_op30_read_state2 == 1'b1));
end

always @ (*) begin
    ap_predicate_op30_read_state2 = ((reading_0_fu_90 == 1'd1) & (icmp_ln95_fu_226_p2 == 1'd0));
end

assign grp_decrypt_aes_fu_182_ap_start = grp_decrypt_aes_fu_182_ap_start_reg;

assign grp_encrypt_aes_fu_191_ap_start = grp_encrypt_aes_fu_191_ap_start_reg;

assign i_2_fu_537_p2 = (i2_0_reg_160 + 3'd1);

assign i_3_fu_463_p2 = (i1_0_reg_138 + 3'd1);

assign i_fu_232_p2 = (i_0_reg_115 + 3'd1);

assign icmp_ln102_fu_261_p2 = ((i_0_reg_115 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_457_p2 = ((i1_0_reg_138 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_469_p2 = ((i1_0_reg_138 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_531_p2 = ((i2_0_reg_160 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln158_fu_543_p2 = ((i2_0_reg_160 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_295_p2 = ((zext_ln106_fu_281_p1 > zext_ln106_1_fu_291_p1) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_226_p2 = ((i_0_reg_115 == 3'd5) ? 1'b1 : 1'b0);

assign lshr_ln414_fu_416_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln414_3_fu_384_p1;

assign lshr_ln647_1_fu_506_p2 = output_message_V_reg_695 >> zext_ln647_1_fu_502_p1;

assign lshr_ln647_fu_580_p2 = output_message_V_2_reg_737 >> zext_ln647_fu_576_p1;

assign output_word_V_6_fu_597_p3 = ((icmp_ln158_fu_543_p2[0:0] === 1'b1) ? p_Result_7_fu_562_p3 : p_Result_8_fu_589_p3);

assign output_word_V_fu_523_p3 = ((icmp_ln129_fu_469_p2[0:0] === 1'b1) ? p_Result_4_fu_488_p3 : p_Result_6_fu_515_p3);

assign p_Result_3_fu_446_p2 = (and_ln414_2_fu_440_p2 | and_ln414_1_fu_434_p2);

assign p_Result_4_fu_488_p3 = {{3'd3}, {zext_ln215_1_fu_484_p1}};

assign p_Result_5_fu_549_p4 = {{output_message_V_2_reg_737[127:116]}};

assign p_Result_6_fu_515_p3 = {{3'd2}, {trunc_ln215_1_fu_511_p1}};

assign p_Result_7_fu_562_p3 = {{3'd1}, {zext_ln215_fu_558_p1}};

assign p_Result_8_fu_589_p3 = {{3'd0}, {trunc_ln215_fu_585_p1}};

assign p_Result_9_fu_475_p4 = {{output_message_V_reg_695[127:116]}};

assign p_Result_s_fu_329_p5 = {{trunc_ln647_fu_325_p1}, {p_Val2_1_fu_98[115:0]}};

assign select_ln414_1_fu_364_p3 = ((icmp_ln414_reg_669[0:0] === 1'b1) ? zext_ln414_reg_676 : phi_mul_reg_126);

assign select_ln414_2_fu_370_p3 = ((icmp_ln414_reg_669[0:0] === 1'b1) ? sub_ln414_reg_681 : phi_mul_reg_126);

assign select_ln414_3_fu_403_p3 = ((icmp_ln414_reg_669[0:0] === 1'b1) ? tmp_3_fu_393_p4 : shl_ln414_fu_387_p2);

assign select_ln414_fu_311_p3 = ((icmp_ln414_fu_295_p2[0:0] === 1'b1) ? phi_mul_reg_126 : zext_ln414_fu_301_p1);

assign shl_ln414_1_fu_410_p2 = 128'd340282366920938463463374607431768211455 << zext_ln414_2_fu_380_p1;

assign shl_ln414_fu_387_p2 = tmp_V_3_fu_360_p1 << zext_ln414_1_fu_376_p1;

assign sub_ln414_1_fu_319_p2 = (8'd127 - select_ln414_fu_311_p3);

assign sub_ln414_fu_305_p2 = (8'd127 - phi_mul_reg_126);

assign tmp_2_fu_247_p3 = strm_in_V_V_dout[32'd29];

integer ap_tvar_int_0;

always @ (shl_ln414_fu_387_p2) begin
    for (ap_tvar_int_0 = 128 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 127 - 0) begin
            tmp_3_fu_393_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_3_fu_393_p4[ap_tvar_int_0] = shl_ln414_fu_387_p2[127 - ap_tvar_int_0];
        end
    end
end

assign tmp_V_3_fu_360_p1 = trunc_ln647_1_fu_357_p1;

assign tmp_fu_349_p3 = p_Val2_s_fu_94[32'd30];

assign trunc_ln106_fu_277_p1 = phi_mul_reg_126[6:0];

assign trunc_ln215_1_fu_511_p1 = lshr_ln647_1_fu_506_p2[28:0];

assign trunc_ln215_fu_585_p1 = lshr_ln647_fu_580_p2[28:0];

assign trunc_ln647_1_fu_357_p1 = tmp_V_2_reg_660[28:0];

assign trunc_ln647_fu_325_p1 = strm_in_V_V_dout[11:0];

assign xor_ln142_fu_609_p2 = (lfsr_decrypt ^ 1'd1);

assign xor_ln414_fu_428_p2 = (128'd340282366920938463463374607431768211455 ^ and_ln414_fu_422_p2);

assign xor_ln99_fu_255_p2 = (tmp_2_fu_247_p3 ^ 1'd1);

assign zext_ln106_1_fu_291_p1 = add_ln106_fu_285_p2;

assign zext_ln106_fu_281_p1 = phi_mul_reg_126;

assign zext_ln215_1_fu_484_p1 = p_Result_9_fu_475_p4;

assign zext_ln215_fu_558_p1 = p_Result_5_fu_549_p4;

assign zext_ln414_1_fu_376_p1 = select_ln414_2_fu_370_p3;

assign zext_ln414_2_fu_380_p1 = select_ln414_1_fu_364_p3;

assign zext_ln414_3_fu_384_p1 = sub_ln414_1_reg_686;

assign zext_ln414_fu_301_p1 = add_ln106_fu_285_p2;

assign zext_ln647_1_fu_502_p1 = phi_mul3_reg_149;

assign zext_ln647_fu_576_p1 = phi_mul5_reg_171;

always @ (posedge ap_clk) begin
    zext_ln414_reg_676[7] <= 1'b0;
    output_word_V_reg_714[31:30] <= 2'b01;
    output_word_V_6_reg_732[31:30] <= 2'b00;
end

endmodule //dut
