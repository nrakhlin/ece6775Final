-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_V_V_empty_n : IN STD_LOGIC;
    strm_in_V_V_read : OUT STD_LOGIC;
    strm_out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_V_V_full_n : IN STD_LOGIC;
    strm_out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of dut is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dut,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.358000,HLS_SYN_LAT=32878,HLS_SYN_TPT=none,HLS_SYN_MEM=24,HLS_SYN_DSP=0,HLS_SYN_FF=9192,HLS_SYN_LUT=39736,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv8_1D : STD_LOGIC_VECTOR (7 downto 0) := "00011101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv7_1C : STD_LOGIC_VECTOR (6 downto 0) := "0011100";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv128_lc_2 : STD_LOGIC_VECTOR (127 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv10_1F : STD_LOGIC_VECTOR (9 downto 0) := "0000011111";
    constant ap_const_lv10_23F : STD_LOGIC_VECTOR (9 downto 0) := "1000111111";
    constant ap_const_lv576_lc_3 : STD_LOGIC_VECTOR (575 downto 0) := "000100010101011011111100001001001100101100010000110001011010000101110100010100011001100011001000001000101100111000001110110000000100010000011100100100000010010100001011100011001111100110010100000110010101111101110100000100001001000100110110011100100011011101100111100001000001010010100010111011101100100000001011000111001111001101100110001010100111110100110110001100001001011100101100111011011001010000110101000000111011101100001010001111101001001110101101101010110010000111111100111010001001000011100010101011011001101110101011011010000100100111011000110111111001111010010001";
    constant ap_const_lv576_lc_4 : STD_LOGIC_VECTOR (575 downto 0) := "100010010111100111111011000110111001001000010110110101011101100110110101010001110000100100010111001111111000010011010101101101011100100101111100010100001101110111000000101011000010100110110111001101001110100100001100011011001011111001010100011001101100111100111000110100000001001101110111010001010010100000100001111001101110110001001110011011001000100100001000001011101111101010011000001010011001111100110001110100001010010000001001001110000010001000000011011100000111001101000100000100110001100110001010001011101000010110100011000010001101001100100100001111110110101010001000";
    constant ap_const_lv576_lc_5 : STD_LOGIC_VECTOR (575 downto
    constant ap_const_lv7_1F : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dut_stream_stream_s_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dut_stream_stream_s_ce0 : STD_LOGIC;
    signal dut_stream_stream_s_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal initial_sbox_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal initial_sbox_ce0 : STD_LOGIC;
    signal initial_sbox_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal P_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal P_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal S_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_0_ce0 : STD_LOGIC;
    signal S_0_we0 : STD_LOGIC;
    signal S_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_0_ce1 : STD_LOGIC;
    signal S_0_we1 : STD_LOGIC;
    signal S_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_1_ce0 : STD_LOGIC;
    signal S_1_we0 : STD_LOGIC;
    signal S_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_1_ce1 : STD_LOGIC;
    signal S_1_we1 : STD_LOGIC;
    signal S_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_2_ce0 : STD_LOGIC;
    signal S_2_we0 : STD_LOGIC;
    signal S_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_2_ce1 : STD_LOGIC;
    signal S_2_we1 : STD_LOGIC;
    signal S_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_3_ce0 : STD_LOGIC;
    signal S_3_we0 : STD_LOGIC;
    signal S_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal S_3_ce1 : STD_LOGIC;
    signal S_3_we1 : STD_LOGIC;
    signal enc_seed_V : STD_LOGIC_VECTOR (23 downto 0) := "000000001010110011100001";
    signal dec_seed_V : STD_LOGIC_VECTOR (23 downto 0) := "000000001010110011100001";
    signal strm_in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln151_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_out_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal reg_672 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_predicate_op45_read_state2 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_Blowfish_SetKey_fu_618_ap_ready : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_ap_done : STD_LOGIC;
    signal tmp_reg_1673 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_701_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_1628 : STD_LOGIC_VECTOR (2 downto 0);
    signal reading_0_load_reg_1633 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln152_fu_710_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln152_reg_1637 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_3_reg_1642 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln158_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln158_reg_1647 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_reg_1651 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln414_fu_770_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln414_reg_1658 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln414_fu_774_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln414_reg_1663 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln414_1_fu_788_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln414_1_reg_1668 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln173_fu_926_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln173_reg_1677 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln173_fu_932_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_reg_1682 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln173_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln173_reg_1692 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_949_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_5_reg_1699 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_10_fu_955_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_reg_1704 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln177_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln178_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln178_reg_1710 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln178_3_fu_995_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln178_3_reg_1716 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_6_fu_1162_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_6_reg_1724 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal empty_38_fu_1168_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_38_reg_1729 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln183_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1172_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_12_reg_1733 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_39_fu_1180_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_39_reg_1739 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_fu_1192_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_reg_1748 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln185_fu_1186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal S_0_addr_reg_1758 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_1_addr_reg_1763 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_2_addr_reg_1768 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_3_addr_reg_1773 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln186_2_fu_1269_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln186_2_reg_1778 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal lshr_ln186_fu_1279_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln186_reg_1783 : STD_LOGIC_VECTOR (127 downto 0);
    signal feedback_V_1_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal feedback_V_1_reg_1788 : STD_LOGIC_VECTOR (0 downto 0);
    signal feedback_V_fu_1427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal feedback_V_reg_1792 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_decrypt_aes_fu_500_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_decrypt_aes_fu_500_ap_ready : STD_LOGIC;
    signal grp_decrypt_aes_fu_500_ap_done : STD_LOGIC;
    signal i_8_fu_1457_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_8_reg_1804 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal add_ln255_fu_1491_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln255_reg_1809 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln246_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_word_V_6_fu_1519_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_word_V_6_reg_1814 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_fu_1533_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_7_reg_1822 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln222_fu_1567_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln222_reg_1827 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln213_fu_1527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_word_V_fu_1595_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_word_V_reg_1832 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_encrypt_aes_fu_609_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_encrypt_aes_fu_609_ap_ready : STD_LOGIC;
    signal grp_encrypt_aes_fu_609_ap_done : STD_LOGIC;
    signal key_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal key_ce0 : STD_LOGIC;
    signal key_we0 : STD_LOGIC;
    signal key_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_decrypt_aes_fu_500_ap_start : STD_LOGIC;
    signal grp_decrypt_aes_fu_500_ap_idle : STD_LOGIC;
    signal grp_decrypt_bf_fu_509_ap_start : STD_LOGIC;
    signal grp_decrypt_bf_fu_509_ap_done : STD_LOGIC;
    signal grp_decrypt_bf_fu_509_ap_idle : STD_LOGIC;
    signal grp_decrypt_bf_fu_509_ap_ready : STD_LOGIC;
    signal grp_decrypt_bf_fu_509_S_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decrypt_bf_fu_509_S_0_ce0 : STD_LOGIC;
    signal grp_decrypt_bf_fu_509_S_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decrypt_bf_fu_509_S_1_ce0 : STD_LOGIC;
    signal grp_decrypt_bf_fu_509_S_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decrypt_bf_fu_509_S_2_ce0 : STD_LOGIC;
    signal grp_decrypt_bf_fu_509_S_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decrypt_bf_fu_509_S_3_ce0 : STD_LOGIC;
    signal grp_decrypt_bf_fu_509_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_encrypt_bf_fu_559_ap_start : STD_LOGIC;
    signal grp_encrypt_bf_fu_559_ap_done : STD_LOGIC;
    signal grp_encrypt_bf_fu_559_ap_idle : STD_LOGIC;
    signal grp_encrypt_bf_fu_559_ap_ready : STD_LOGIC;
    signal grp_encrypt_bf_fu_559_S_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_encrypt_bf_fu_559_S_0_ce0 : STD_LOGIC;
    signal grp_encrypt_bf_fu_559_S_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_encrypt_bf_fu_559_S_1_ce0 : STD_LOGIC;
    signal grp_encrypt_bf_fu_559_S_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_encrypt_bf_fu_559_S_2_ce0 : STD_LOGIC;
    signal grp_encrypt_bf_fu_559_S_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_encrypt_bf_fu_559_S_3_ce0 : STD_LOGIC;
    signal grp_encrypt_bf_fu_559_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_encrypt_aes_fu_609_ap_start : STD_LOGIC;
    signal grp_encrypt_aes_fu_609_ap_idle : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_ap_start : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_ap_idle : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_key_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Blowfish_SetKey_fu_618_key_ce0 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_0_ce0 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_0_we0 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_0_ce1 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_0_we1 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_1_ce0 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_1_we0 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_1_ce1 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_1_we1 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_2_ce0 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_2_we0 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_2_ce1 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_2_we1 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_3_ce0 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_3_we0 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Blowfish_SetKey_fu_618_S_3_ce1 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_3_we1 : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_S_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_0_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_0_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_1_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_1_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_2_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_2_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_3_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_3_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_4_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_4_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_5_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_5_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_6_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_6_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_7_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_7_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_8_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_8_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_9_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_9_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_10_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_10_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_11_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_11_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_12_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_12_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_13_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_13_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_14_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_14_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_15_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_15_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_16_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_16_o_ap_vld : STD_LOGIC;
    signal grp_Blowfish_SetKey_fu_618_P_17_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Blowfish_SetKey_fu_618_P_17_o_ap_vld : STD_LOGIC;
    signal i_0_reg_368 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal phi_mul_reg_379 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_ln173_reg_391 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i1_0_reg_402 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i2_0_reg_414 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_0_reg_425 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal p_Val2_7_reg_436 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_block_state15_on_subcall_done : BOOLEAN;
    signal i4_0_reg_446 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_mul5_reg_457 : STD_LOGIC_VECTOR (7 downto 0);
    signal i3_0_reg_468 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_block_state20_on_subcall_done : BOOLEAN;
    signal phi_mul3_reg_479 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_6_reg_490 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_decrypt_aes_fu_500_ap_start_reg : STD_LOGIC := '0';
    signal grp_decrypt_bf_fu_509_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_encrypt_bf_fu_559_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_encrypt_aes_fu_609_ap_start_reg : STD_LOGIC := '0';
    signal grp_Blowfish_SetKey_fu_618_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln186_fu_1198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln178_fu_1044_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ret_V_fu_1437_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_2_fu_1365_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal reading_0_fu_252 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln155_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_260 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_s_fu_798_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_8_fu_915_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln186_fu_1299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_716_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln162_fu_746_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln162_fu_754_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln162_fu_750_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln162_1_fu_760_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln414_fu_780_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_fu_794_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln647_1_fu_826_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln414_2_fu_839_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln414_1_fu_833_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_4_fu_829_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln414_1_fu_845_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal shl_ln414_fu_856_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_6_fu_862_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln414_2_fu_849_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln414_3_fu_853_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal shl_ln414_1_fu_879_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln414_fu_885_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal and_ln414_fu_891_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal xor_ln414_fu_897_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal select_ln414_3_fu_872_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal and_ln414_1_fu_903_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal and_ln414_2_fu_909_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal empty_36_fu_963_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln178_fu_975_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln178_2_fu_981_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln178_fu_987_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln178_1_fu_1001_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln178_2_fu_1013_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln178_1_fu_1006_p3 : STD_LOGIC_VECTOR (575 downto 0);
    signal zext_ln178_fu_1019_p1 : STD_LOGIC_VECTOR (575 downto 0);
    signal zext_ln178_1_fu_1023_p1 : STD_LOGIC_VECTOR (575 downto 0);
    signal lshr_ln178_fu_1026_p2 : STD_LOGIC_VECTOR (575 downto 0);
    signal lshr_ln178_1_fu_1032_p2 : STD_LOGIC_VECTOR (575 downto 0);
    signal and_ln178_fu_1038_p2 : STD_LOGIC_VECTOR (575 downto 0);
    signal zext_ln186_1_fu_1211_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln186_2_fu_1214_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln186_fu_1207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln186_fu_1227_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln186_1_fu_1239_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_1217_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal xor_ln186_fu_1233_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln186_fu_1245_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln186_2_fu_1261_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln186_1_fu_1253_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln186_3_fu_1275_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln186_4_fu_1285_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln186_1_fu_1288_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal and_ln186_fu_1294_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_14_fu_1311_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1327_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1319_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1335_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln301_4_fu_1349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln301_3_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1356_1_fu_1361_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_7_fu_1383_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1399_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_1391_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1407_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln301_1_fu_1421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln301_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1356_fu_1433_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_9_fu_1469_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_1_fu_1479_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln647_1_fu_1497_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln647_1_fu_1501_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln215_1_fu_1507_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln249_fu_1463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_12_fu_1483_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_13_fu_1511_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_7_fu_1545_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_fu_1555_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln647_fu_1573_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln647_fu_1577_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln215_fu_1583_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln216_fu_1539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_fu_1559_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_11_fu_1587_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);

    component decrypt_aes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ciphertext_V : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component decrypt_bf IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ciphertext_V : IN STD_LOGIC_VECTOR (127 downto 0);
        P_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_9 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_10 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_11 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_12 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_13 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_14 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_15 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_16 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_17 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_0_ce0 : OUT STD_LOGIC;
        S_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_1_ce0 : OUT STD_LOGIC;
        S_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_2_ce0 : OUT STD_LOGIC;
        S_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_3_ce0 : OUT STD_LOGIC;
        S_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component encrypt_bf IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        plaintext_V : IN STD_LOGIC_VECTOR (127 downto 0);
        P_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_9 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_10 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_11 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_12 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_13 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_14 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_15 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_16 : IN STD_LOGIC_VECTOR (31 downto 0);
        P_17 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_0_ce0 : OUT STD_LOGIC;
        S_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_1_ce0 : OUT STD_LOGIC;
        S_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_2_ce0 : OUT STD_LOGIC;
        S_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_3_ce0 : OUT STD_LOGIC;
        S_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component encrypt_aes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        plaintext_V : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component Blowfish_SetKey IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        key_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        key_ce0 : OUT STD_LOGIC;
        key_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
        S_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_0_ce0 : OUT STD_LOGIC;
        S_0_we0 : OUT STD_LOGIC;
        S_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_0_ce1 : OUT STD_LOGIC;
        S_0_we1 : OUT STD_LOGIC;
        S_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_1_ce0 : OUT STD_LOGIC;
        S_1_we0 : OUT STD_LOGIC;
        S_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_1_ce1 : OUT STD_LOGIC;
        S_1_we1 : OUT STD_LOGIC;
        S_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_2_ce0 : OUT STD_LOGIC;
        S_2_we0 : OUT STD_LOGIC;
        S_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_2_ce1 : OUT STD_LOGIC;
        S_2_we1 : OUT STD_LOGIC;
        S_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_3_ce0 : OUT STD_LOGIC;
        S_3_we0 : OUT STD_LOGIC;
        S_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_3_ce1 : OUT STD_LOGIC;
        S_3_we1 : OUT STD_LOGIC;
        S_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_0_o_ap_vld : OUT STD_LOGIC;
        P_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_1_o_ap_vld : OUT STD_LOGIC;
        P_2_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_2_o_ap_vld : OUT STD_LOGIC;
        P_3_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_3_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_3_o_ap_vld : OUT STD_LOGIC;
        P_4_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_4_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_4_o_ap_vld : OUT STD_LOGIC;
        P_5_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_5_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_5_o_ap_vld : OUT STD_LOGIC;
        P_6_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_6_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_6_o_ap_vld : OUT STD_LOGIC;
        P_7_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_7_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_7_o_ap_vld : OUT STD_LOGIC;
        P_8_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_8_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_8_o_ap_vld : OUT STD_LOGIC;
        P_9_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_9_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_9_o_ap_vld : OUT STD_LOGIC;
        P_10_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_10_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_10_o_ap_vld : OUT STD_LOGIC;
        P_11_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_11_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_11_o_ap_vld : OUT STD_LOGIC;
        P_12_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_12_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_12_o_ap_vld : OUT STD_LOGIC;
        P_13_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_13_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_13_o_ap_vld : OUT STD_LOGIC;
        P_14_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_14_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_14_o_ap_vld : OUT STD_LOGIC;
        P_15_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_15_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_15_o_ap_vld : OUT STD_LOGIC;
        P_16_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_16_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_16_o_ap_vld : OUT STD_LOGIC;
        P_17_i : IN STD_LOGIC_VECTOR (31 downto 0);
        P_17_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        P_17_o_ap_vld : OUT STD_LOGIC );
    end component;


    component dut_dut_stream_stpcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component dut_initial_sbox IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component dut_S_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_key IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (6 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;



begin
    dut_stream_stream_s_U : component dut_dut_stream_stpcA
    generic map (
        DataWidth => 7,
        AddressRange => 56,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dut_stream_stream_s_address0,
        ce0 => dut_stream_stream_s_ce0,
        q0 => dut_stream_stream_s_q0);

    initial_sbox_U : component dut_initial_sbox
    generic map (
        DataWidth => 128,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => initial_sbox_address0,
        ce0 => initial_sbox_ce0,
        q0 => initial_sbox_q0);

    S_0_U : component dut_S_0
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => S_0_address0,
        ce0 => S_0_ce0,
        we0 => S_0_we0,
        d0 => S_0_d0,
        q0 => S_0_q0,
        address1 => grp_Blowfish_SetKey_fu_618_S_0_address1,
        ce1 => S_0_ce1,
        we1 => S_0_we1,
        d1 => grp_Blowfish_SetKey_fu_618_S_0_d1);

    S_1_U : component dut_S_0
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => S_1_address0,
        ce0 => S_1_ce0,
        we0 => S_1_we0,
        d0 => S_1_d0,
        q0 => S_1_q0,
        address1 => grp_Blowfish_SetKey_fu_618_S_1_address1,
        ce1 => S_1_ce1,
        we1 => S_1_we1,
        d1 => grp_Blowfish_SetKey_fu_618_S_1_d1);

    S_2_U : component dut_S_0
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => S_2_address0,
        ce0 => S_2_ce0,
        we0 => S_2_we0,
        d0 => S_2_d0,
        q0 => S_2_q0,
        address1 => grp_Blowfish_SetKey_fu_618_S_2_address1,
        ce1 => S_2_ce1,
        we1 => S_2_we1,
        d1 => grp_Blowfish_SetKey_fu_618_S_2_d1);

    S_3_U : component dut_S_0
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => S_3_address0,
        ce0 => S_3_ce0,
        we0 => S_3_we0,
        d0 => S_3_d0,
        q0 => S_3_q0,
        address1 => grp_Blowfish_SetKey_fu_618_S_3_address1,
        ce1 => S_3_ce1,
        we1 => S_3_we1,
        d1 => grp_Blowfish_SetKey_fu_618_S_3_d1);

    key_U : component dut_key
    generic map (
        DataWidth => 7,
        AddressRange => 56,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => key_address0,
        ce0 => key_ce0,
        we0 => key_we0,
        d0 => dut_stream_stream_s_q0,
        q0 => key_q0);

    grp_decrypt_aes_fu_500 : component decrypt_aes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_decrypt_aes_fu_500_ap_start,
        ap_done => grp_decrypt_aes_fu_500_ap_done,
        ap_idle => grp_decrypt_aes_fu_500_ap_idle,
        ap_ready => grp_decrypt_aes_fu_500_ap_ready,
        ciphertext_V => reg_672,
        ap_return => grp_decrypt_aes_fu_500_ap_return);

    grp_decrypt_bf_fu_509 : component decrypt_bf
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_decrypt_bf_fu_509_ap_start,
        ap_done => grp_decrypt_bf_fu_509_ap_done,
        ap_idle => grp_decrypt_bf_fu_509_ap_idle,
        ap_ready => grp_decrypt_bf_fu_509_ap_ready,
        ciphertext_V => reg_672,
        P_0 => P_0,
        P_1 => P_1,
        P_2 => P_2,
        P_3 => P_3,
        P_4 => P_4,
        P_5 => P_5,
        P_6 => P_6,
        P_7 => P_7,
        P_8 => P_8,
        P_9 => P_9,
        P_10 => P_10,
        P_11 => P_11,
        P_12 => P_12,
        P_13 => P_13,
        P_14 => P_14,
        P_15 => P_15,
        P_16 => P_16,
        P_17 => P_17,
        S_0_address0 => grp_decrypt_bf_fu_509_S_0_address0,
        S_0_ce0 => grp_decrypt_bf_fu_509_S_0_ce0,
        S_0_q0 => S_0_q0,
        S_1_address0 => grp_decrypt_bf_fu_509_S_1_address0,
        S_1_ce0 => grp_decrypt_bf_fu_509_S_1_ce0,
        S_1_q0 => S_1_q0,
        S_2_address0 => grp_decrypt_bf_fu_509_S_2_address0,
        S_2_ce0 => grp_decrypt_bf_fu_509_S_2_ce0,
        S_2_q0 => S_2_q0,
        S_3_address0 => grp_decrypt_bf_fu_509_S_3_address0,
        S_3_ce0 => grp_decrypt_bf_fu_509_S_3_ce0,
        S_3_q0 => S_3_q0,
        ap_return => grp_decrypt_bf_fu_509_ap_return);

    grp_encrypt_bf_fu_559 : component encrypt_bf
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_encrypt_bf_fu_559_ap_start,
        ap_done => grp_encrypt_bf_fu_559_ap_done,
        ap_idle => grp_encrypt_bf_fu_559_ap_idle,
        ap_ready => grp_encrypt_bf_fu_559_ap_ready,
        plaintext_V => reg_672,
        P_0 => P_0,
        P_1 => P_1,
        P_2 => P_2,
        P_3 => P_3,
        P_4 => P_4,
        P_5 => P_5,
        P_6 => P_6,
        P_7 => P_7,
        P_8 => P_8,
        P_9 => P_9,
        P_10 => P_10,
        P_11 => P_11,
        P_12 => P_12,
        P_13 => P_13,
        P_14 => P_14,
        P_15 => P_15,
        P_16 => P_16,
        P_17 => P_17,
        S_0_address0 => grp_encrypt_bf_fu_559_S_0_address0,
        S_0_ce0 => grp_encrypt_bf_fu_559_S_0_ce0,
        S_0_q0 => S_0_q0,
        S_1_address0 => grp_encrypt_bf_fu_559_S_1_address0,
        S_1_ce0 => grp_encrypt_bf_fu_559_S_1_ce0,
        S_1_q0 => S_1_q0,
        S_2_address0 => grp_encrypt_bf_fu_559_S_2_address0,
        S_2_ce0 => grp_encrypt_bf_fu_559_S_2_ce0,
        S_2_q0 => S_2_q0,
        S_3_address0 => grp_encrypt_bf_fu_559_S_3_address0,
        S_3_ce0 => grp_encrypt_bf_fu_559_S_3_ce0,
        S_3_q0 => S_3_q0,
        ap_return => grp_encrypt_bf_fu_559_ap_return);

    grp_encrypt_aes_fu_609 : component encrypt_aes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_encrypt_aes_fu_609_ap_start,
        ap_done => grp_encrypt_aes_fu_609_ap_done,
        ap_idle => grp_encrypt_aes_fu_609_ap_idle,
        ap_ready => grp_encrypt_aes_fu_609_ap_ready,
        plaintext_V => reg_672,
        ap_return => grp_encrypt_aes_fu_609_ap_return);

    grp_Blowfish_SetKey_fu_618 : component Blowfish_SetKey
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Blowfish_SetKey_fu_618_ap_start,
        ap_done => grp_Blowfish_SetKey_fu_618_ap_done,
        ap_idle => grp_Blowfish_SetKey_fu_618_ap_idle,
        ap_ready => grp_Blowfish_SetKey_fu_618_ap_ready,
        key_address0 => grp_Blowfish_SetKey_fu_618_key_address0,
        key_ce0 => grp_Blowfish_SetKey_fu_618_key_ce0,
        key_q0 => key_q0,
        S_0_address0 => grp_Blowfish_SetKey_fu_618_S_0_address0,
        S_0_ce0 => grp_Blowfish_SetKey_fu_618_S_0_ce0,
        S_0_we0 => grp_Blowfish_SetKey_fu_618_S_0_we0,
        S_0_d0 => grp_Blowfish_SetKey_fu_618_S_0_d0,
        S_0_q0 => S_0_q0,
        S_0_address1 => grp_Blowfish_SetKey_fu_618_S_0_address1,
        S_0_ce1 => grp_Blowfish_SetKey_fu_618_S_0_ce1,
        S_0_we1 => grp_Blowfish_SetKey_fu_618_S_0_we1,
        S_0_d1 => grp_Blowfish_SetKey_fu_618_S_0_d1,
        S_1_address0 => grp_Blowfish_SetKey_fu_618_S_1_address0,
        S_1_ce0 => grp_Blowfish_SetKey_fu_618_S_1_ce0,
        S_1_we0 => grp_Blowfish_SetKey_fu_618_S_1_we0,
        S_1_d0 => grp_Blowfish_SetKey_fu_618_S_1_d0,
        S_1_q0 => S_1_q0,
        S_1_address1 => grp_Blowfish_SetKey_fu_618_S_1_address1,
        S_1_ce1 => grp_Blowfish_SetKey_fu_618_S_1_ce1,
        S_1_we1 => grp_Blowfish_SetKey_fu_618_S_1_we1,
        S_1_d1 => grp_Blowfish_SetKey_fu_618_S_1_d1,
        S_2_address0 => grp_Blowfish_SetKey_fu_618_S_2_address0,
        S_2_ce0 => grp_Blowfish_SetKey_fu_618_S_2_ce0,
        S_2_we0 => grp_Blowfish_SetKey_fu_618_S_2_we0,
        S_2_d0 => grp_Blowfish_SetKey_fu_618_S_2_d0,
        S_2_q0 => S_2_q0,
        S_2_address1 => grp_Blowfish_SetKey_fu_618_S_2_address1,
        S_2_ce1 => grp_Blowfish_SetKey_fu_618_S_2_ce1,
        S_2_we1 => grp_Blowfish_SetKey_fu_618_S_2_we1,
        S_2_d1 => grp_Blowfish_SetKey_fu_618_S_2_d1,
        S_3_address0 => grp_Blowfish_SetKey_fu_618_S_3_address0,
        S_3_ce0 => grp_Blowfish_SetKey_fu_618_S_3_ce0,
        S_3_we0 => grp_Blowfish_SetKey_fu_618_S_3_we0,
        S_3_d0 => grp_Blowfish_SetKey_fu_618_S_3_d0,
        S_3_q0 => S_3_q0,
        S_3_address1 => grp_Blowfish_SetKey_fu_618_S_3_address1,
        S_3_ce1 => grp_Blowfish_SetKey_fu_618_S_3_ce1,
        S_3_we1 => grp_Blowfish_SetKey_fu_618_S_3_we1,
        S_3_d1 => grp_Blowfish_SetKey_fu_618_S_3_d1,
        P_0_i => P_0,
        P_0_o => grp_Blowfish_SetKey_fu_618_P_0_o,
        P_0_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_0_o_ap_vld,
        P_1_i => P_1,
        P_1_o => grp_Blowfish_SetKey_fu_618_P_1_o,
        P_1_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_1_o_ap_vld,
        P_2_i => P_2,
        P_2_o => grp_Blowfish_SetKey_fu_618_P_2_o,
        P_2_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_2_o_ap_vld,
        P_3_i => P_3,
        P_3_o => grp_Blowfish_SetKey_fu_618_P_3_o,
        P_3_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_3_o_ap_vld,
        P_4_i => P_4,
        P_4_o => grp_Blowfish_SetKey_fu_618_P_4_o,
        P_4_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_4_o_ap_vld,
        P_5_i => P_5,
        P_5_o => grp_Blowfish_SetKey_fu_618_P_5_o,
        P_5_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_5_o_ap_vld,
        P_6_i => P_6,
        P_6_o => grp_Blowfish_SetKey_fu_618_P_6_o,
        P_6_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_6_o_ap_vld,
        P_7_i => P_7,
        P_7_o => grp_Blowfish_SetKey_fu_618_P_7_o,
        P_7_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_7_o_ap_vld,
        P_8_i => P_8,
        P_8_o => grp_Blowfish_SetKey_fu_618_P_8_o,
        P_8_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_8_o_ap_vld,
        P_9_i => P_9,
        P_9_o => grp_Blowfish_SetKey_fu_618_P_9_o,
        P_9_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_9_o_ap_vld,
        P_10_i => P_10,
        P_10_o => grp_Blowfish_SetKey_fu_618_P_10_o,
        P_10_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_10_o_ap_vld,
        P_11_i => P_11,
        P_11_o => grp_Blowfish_SetKey_fu_618_P_11_o,
        P_11_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_11_o_ap_vld,
        P_12_i => P_12,
        P_12_o => grp_Blowfish_SetKey_fu_618_P_12_o,
        P_12_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_12_o_ap_vld,
        P_13_i => P_13,
        P_13_o => grp_Blowfish_SetKey_fu_618_P_13_o,
        P_13_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_13_o_ap_vld,
        P_14_i => P_14,
        P_14_o => grp_Blowfish_SetKey_fu_618_P_14_o,
        P_14_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_14_o_ap_vld,
        P_15_i => P_15,
        P_15_o => grp_Blowfish_SetKey_fu_618_P_15_o,
        P_15_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_15_o_ap_vld,
        P_16_i => P_16,
        P_16_o => grp_Blowfish_SetKey_fu_618_P_16_o,
        P_16_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_16_o_ap_vld,
        P_17_i => P_17,
        P_17_o => grp_Blowfish_SetKey_fu_618_P_17_o,
        P_17_o_ap_vld => grp_Blowfish_SetKey_fu_618_P_17_o_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Blowfish_SetKey_fu_618_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Blowfish_SetKey_fu_618_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln183_fu_1156_p2 = ap_const_lv1_1))) then 
                    grp_Blowfish_SetKey_fu_618_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Blowfish_SetKey_fu_618_ap_ready = ap_const_logic_1)) then 
                    grp_Blowfish_SetKey_fu_618_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_decrypt_aes_fu_500_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_decrypt_aes_fu_500_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_Blowfish_SetKey_fu_618_ap_done = ap_const_logic_1) and (feedback_V_1_fu_1355_p2 = ap_const_lv1_1) and (tmp_reg_1673 = ap_const_lv1_0))) then 
                    grp_decrypt_aes_fu_500_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decrypt_aes_fu_500_ap_ready = ap_const_logic_1)) then 
                    grp_decrypt_aes_fu_500_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_decrypt_bf_fu_509_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_decrypt_bf_fu_509_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_decrypt_bf_fu_509_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decrypt_bf_fu_509_ap_ready = ap_const_logic_1)) then 
                    grp_decrypt_bf_fu_509_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_encrypt_aes_fu_609_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_encrypt_aes_fu_609_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_Blowfish_SetKey_fu_618_ap_done = ap_const_logic_1) and (feedback_V_fu_1427_p2 = ap_const_lv1_1) and (tmp_reg_1673 = ap_const_lv1_1))) then 
                    grp_encrypt_aes_fu_609_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_encrypt_aes_fu_609_ap_ready = ap_const_logic_1)) then 
                    grp_encrypt_aes_fu_609_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_encrypt_bf_fu_559_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_encrypt_bf_fu_559_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_encrypt_bf_fu_559_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_encrypt_bf_fu_559_ap_ready = ap_const_logic_1)) then 
                    grp_encrypt_bf_fu_559_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    P_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_0 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_0 <= grp_Blowfish_SetKey_fu_618_P_0_o;
            end if; 
        end if;
    end process;

    P_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_1 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_1 <= grp_Blowfish_SetKey_fu_618_P_1_o;
            end if; 
        end if;
    end process;

    P_10_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_A) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_10 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_10_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_10 <= grp_Blowfish_SetKey_fu_618_P_10_o;
            end if; 
        end if;
    end process;

    P_11_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_B) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_11 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_11_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_11 <= grp_Blowfish_SetKey_fu_618_P_11_o;
            end if; 
        end if;
    end process;

    P_12_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_C) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_12 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_12_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_12 <= grp_Blowfish_SetKey_fu_618_P_12_o;
            end if; 
        end if;
    end process;

    P_13_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_D) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_13 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_13_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_13 <= grp_Blowfish_SetKey_fu_618_P_13_o;
            end if; 
        end if;
    end process;

    P_14_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_E) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_14 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_14_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_14 <= grp_Blowfish_SetKey_fu_618_P_14_o;
            end if; 
        end if;
    end process;

    P_15_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_F) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_15 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_15_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_15 <= grp_Blowfish_SetKey_fu_618_P_15_o;
            end if; 
        end if;
    end process;

    P_16_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_10) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_16 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_16_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_16 <= grp_Blowfish_SetKey_fu_618_P_16_o;
            end if; 
        end if;
    end process;

    P_17_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and ((i1_0_reg_402 = ap_const_lv5_11) or ((i1_0_reg_402 = ap_const_lv5_12) or ((i1_0_reg_402 = ap_const_lv5_13) or ((i1_0_reg_402 = ap_const_lv5_14) or ((i1_0_reg_402 = ap_const_lv5_15) or ((i1_0_reg_402 = ap_const_lv5_16) or ((i1_0_reg_402 = ap_const_lv5_17) or ((i1_0_reg_402 = ap_const_lv5_18) or ((i1_0_reg_402 = ap_const_lv5_19) or ((i1_0_reg_402 = ap_const_lv5_1A) or ((i1_0_reg_402 = ap_const_lv5_1B) or ((i1_0_reg_402 = ap_const_lv5_1C) or ((i1_0_reg_402 = ap_const_lv5_1D) or ((i1_0_reg_402 = ap_const_lv5_1E) or (i1_0_reg_402 = ap_const_lv5_1F))))))))))))))))) then 
                P_17 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_17_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_17 <= grp_Blowfish_SetKey_fu_618_P_17_o;
            end if; 
        end if;
    end process;

    P_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_2) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_2 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_2 <= grp_Blowfish_SetKey_fu_618_P_2_o;
            end if; 
        end if;
    end process;

    P_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_3) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_3 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_3 <= grp_Blowfish_SetKey_fu_618_P_3_o;
            end if; 
        end if;
    end process;

    P_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_4) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_4 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_4_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_4 <= grp_Blowfish_SetKey_fu_618_P_4_o;
            end if; 
        end if;
    end process;

    P_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_5) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_5 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_5_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_5 <= grp_Blowfish_SetKey_fu_618_P_5_o;
            end if; 
        end if;
    end process;

    P_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_6) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_6 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_6_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_6 <= grp_Blowfish_SetKey_fu_618_P_6_o;
            end if; 
        end if;
    end process;

    P_7_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_7) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_7 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_7_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_7 <= grp_Blowfish_SetKey_fu_618_P_7_o;
            end if; 
        end if;
    end process;

    P_8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_8) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_8 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_8_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_8 <= grp_Blowfish_SetKey_fu_618_P_8_o;
            end if; 
        end if;
    end process;

    P_9_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i1_0_reg_402 = ap_const_lv5_9) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                P_9 <= trunc_ln178_fu_1044_p1;
            elsif (((grp_Blowfish_SetKey_fu_618_P_9_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                P_9 <= grp_Blowfish_SetKey_fu_618_P_9_o;
            end if; 
        end if;
    end process;

    i1_0_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln173_reg_1692 = ap_const_lv1_1))) then 
                i1_0_reg_402 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i1_0_reg_402 <= i_5_reg_1699;
            end if; 
        end if;
    end process;

    i2_0_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln177_fu_943_p2 = ap_const_lv1_1))) then 
                i2_0_reg_414 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln185_fu_1186_p2 = ap_const_lv1_1))) then 
                i2_0_reg_414 <= i_6_reg_1724;
            end if; 
        end if;
    end process;

    i3_0_reg_468_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                i3_0_reg_468 <= i_7_reg_1822;
            elsif (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                i3_0_reg_468 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i4_0_reg_446_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                i4_0_reg_446 <= i_8_reg_1804;
            elsif (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                i4_0_reg_446 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_reg_368_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_0_reg_368 <= i_reg_1628;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_368 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_0_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                j_0_reg_425 <= j_reg_1748;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln183_fu_1156_p2 = ap_const_lv1_0))) then 
                j_0_reg_425 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    p_Val2_3_fu_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (reading_0_load_reg_1633 = ap_const_lv1_1) and (icmp_ln158_reg_1647 = ap_const_lv1_0))) then 
                p_Val2_3_fu_260 <= p_Result_8_fu_915_p2;
            elsif ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln158_fu_730_p2 = ap_const_lv1_1) and (reading_0_fu_252 = ap_const_lv1_1) and (icmp_ln151_fu_695_p2 = ap_const_lv1_0))) then 
                p_Val2_3_fu_260 <= p_Result_s_fu_798_p5;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_Val2_3_fu_260 <= ap_const_lv128_lc_1;
            end if; 
        end if;
    end process;

    p_Val2_6_reg_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20) and (feedback_V_reg_1792 = ap_const_lv1_0))) then 
                p_Val2_6_reg_490 <= grp_encrypt_bf_fu_559_ap_return;
            elsif (((grp_encrypt_aes_fu_609_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                p_Val2_6_reg_490 <= grp_encrypt_aes_fu_609_ap_return;
            end if; 
        end if;
    end process;

    p_Val2_7_reg_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15) and (feedback_V_1_reg_1788 = ap_const_lv1_0))) then 
                p_Val2_7_reg_436 <= grp_decrypt_bf_fu_509_ap_return;
            elsif (((grp_decrypt_aes_fu_500_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                p_Val2_7_reg_436 <= grp_decrypt_aes_fu_500_ap_return;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (reading_0_fu_252 = ap_const_lv1_1) and (icmp_ln151_fu_695_p2 = ap_const_lv1_0))) then 
                p_Val2_s_fu_256 <= strm_in_V_V_dout;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_Val2_s_fu_256 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_ln173_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln173_reg_1692 = ap_const_lv1_0))) then 
                phi_ln173_reg_391 <= add_ln173_reg_1677;
            elsif ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln151_fu_695_p2 = ap_const_lv1_1))) then 
                phi_ln173_reg_391 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    phi_mul3_reg_479_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                phi_mul3_reg_479 <= add_ln222_reg_1827;
            elsif (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                phi_mul3_reg_479 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    phi_mul5_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                phi_mul5_reg_457 <= add_ln255_reg_1809;
            elsif (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                phi_mul5_reg_457 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_379_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                phi_mul_reg_379 <= add_ln152_reg_1637;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul_reg_379 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    reading_0_fu_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (reading_0_fu_252 = ap_const_lv1_1) and (icmp_ln151_fu_695_p2 = ap_const_lv1_0))) then 
                reading_0_fu_252 <= xor_ln155_fu_724_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reading_0_fu_252 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln185_fu_1186_p2 = ap_const_lv1_0))) then
                S_0_addr_reg_1758 <= zext_ln186_fu_1198_p1(8 - 1 downto 0);
                S_1_addr_reg_1763 <= zext_ln186_fu_1198_p1(8 - 1 downto 0);
                S_2_addr_reg_1768 <= zext_ln186_fu_1198_p1(8 - 1 downto 0);
                S_3_addr_reg_1773 <= zext_ln186_fu_1198_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln151_fu_695_p2 = ap_const_lv1_0))) then
                add_ln152_reg_1637 <= add_ln152_fu_710_p2;
                reading_0_load_reg_1633 <= reading_0_fu_252;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln173_reg_1677 <= add_ln173_fu_926_p2;
                icmp_ln173_reg_1692 <= icmp_ln173_fu_937_p2;
                    zext_ln173_reg_1682(5 downto 0) <= zext_ln173_fu_932_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_1673 = ap_const_lv1_1) and (icmp_ln213_fu_1527_p2 = ap_const_lv1_0))) then
                add_ln222_reg_1827 <= add_ln222_fu_1567_p2;
                    output_word_V_reg_1832(29 downto 0) <= output_word_V_fu_1595_p3(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln246_fu_1451_p2 = ap_const_lv1_0) and (tmp_reg_1673 = ap_const_lv1_0))) then
                add_ln255_reg_1809 <= add_ln255_fu_1491_p2;
                    output_word_V_6_reg_1814(29 downto 0) <= output_word_V_6_fu_1519_p3(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_Blowfish_SetKey_fu_618_ap_done = ap_const_logic_1) and (tmp_reg_1673 = ap_const_lv1_0))) then
                dec_seed_V <= ret_V_2_fu_1365_p3;
                feedback_V_1_reg_1788 <= feedback_V_1_fu_1355_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln183_fu_1156_p2 = ap_const_lv1_0))) then
                empty_38_reg_1729 <= empty_38_fu_1168_p1;
                    empty_39_reg_1739(6 downto 5) <= empty_39_fu_1180_p2(6 downto 5);
                    tmp_12_reg_1733(6 downto 5) <= tmp_12_fu_1172_p3(6 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_Blowfish_SetKey_fu_618_ap_done = ap_const_logic_1) and (tmp_reg_1673 = ap_const_lv1_1))) then
                enc_seed_V <= ret_V_fu_1437_p3;
                feedback_V_reg_1792 <= feedback_V_fu_1427_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                i_5_reg_1699 <= i_5_fu_949_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                i_6_reg_1724 <= i_6_fu_1162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_1673 = ap_const_lv1_1))) then
                i_7_reg_1822 <= i_7_fu_1533_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_1673 = ap_const_lv1_0))) then
                i_8_reg_1804 <= i_8_fu_1457_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_reg_1628 <= i_fu_701_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (reading_0_fu_252 = ap_const_lv1_1) and (icmp_ln151_fu_695_p2 = ap_const_lv1_0))) then
                icmp_ln158_reg_1647 <= icmp_ln158_fu_730_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln177_fu_943_p2 = ap_const_lv1_0))) then
                icmp_ln178_reg_1710 <= icmp_ln178_fu_969_p2;
                    sub_ln178_3_reg_1716(9 downto 1) <= sub_ln178_3_fu_995_p2(9 downto 1);
                    tmp_10_reg_1704(9 downto 5) <= tmp_10_fu_955_p3(9 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (reading_0_fu_252 = ap_const_lv1_1) and (icmp_ln158_fu_730_p2 = ap_const_lv1_0) and (icmp_ln151_fu_695_p2 = ap_const_lv1_0))) then
                icmp_ln414_reg_1651 <= icmp_ln414_fu_764_p2;
                sub_ln414_1_reg_1668 <= sub_ln414_1_fu_788_p2;
                sub_ln414_reg_1663 <= sub_ln414_fu_774_p2;
                    zext_ln414_reg_1658(6 downto 0) <= zext_ln414_fu_770_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                j_reg_1748 <= j_fu_1192_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                lshr_ln186_reg_1783 <= lshr_ln186_fu_1279_p2;
                    sub_ln186_2_reg_1778(7 downto 1) <= sub_ln186_2_fu_1269_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_Blowfish_SetKey_fu_618_ap_done = ap_const_logic_1) and (tmp_reg_1673 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_Blowfish_SetKey_fu_618_ap_done = ap_const_logic_1) and (tmp_reg_1673 = ap_const_lv1_0)) or (not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (reading_0_fu_252 = ap_const_lv1_1) and (icmp_ln151_fu_695_p2 = ap_const_lv1_0)))) then
                reg_672 <= p_Val2_3_fu_260;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_predicate_op45_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_V_3_reg_1642 <= strm_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln151_fu_695_p2 = ap_const_lv1_1))) then
                tmp_reg_1673 <= p_Val2_s_fu_256(30 downto 30);
            end if;
        end if;
    end process;
    zext_ln414_reg_1658(7) <= '0';
    zext_ln173_reg_1682(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    tmp_10_reg_1704(4 downto 0) <= "00000";
    sub_ln178_3_reg_1716(0) <= '0';
    tmp_12_reg_1733(4 downto 0) <= "00000";
    empty_39_reg_1739(4 downto 0) <= "11111";
    sub_ln186_2_reg_1778(0) <= '0';
    output_word_V_6_reg_1814(31 downto 30) <= "00";
    output_word_V_reg_1832(31 downto 30) <= "01";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, strm_in_V_V_empty_n, strm_out_V_V_full_n, ap_CS_fsm_state2, icmp_ln151_fu_695_p2, ap_CS_fsm_state22, ap_CS_fsm_state18, ap_predicate_op45_read_state2, ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_ap_done, tmp_reg_1673, icmp_ln173_reg_1692, ap_CS_fsm_state6, icmp_ln177_fu_943_p2, ap_CS_fsm_state9, icmp_ln183_fu_1156_p2, ap_CS_fsm_state10, icmp_ln185_fu_1186_p2, feedback_V_1_fu_1355_p2, feedback_V_fu_1427_p2, ap_CS_fsm_state16, grp_decrypt_aes_fu_500_ap_done, ap_CS_fsm_state17, icmp_ln246_fu_1451_p2, icmp_ln213_fu_1527_p2, ap_CS_fsm_state21, grp_encrypt_aes_fu_609_ap_done, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_block_state15_on_subcall_done, ap_CS_fsm_state20, ap_block_state20_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln151_fu_695_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln151_fu_695_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln173_reg_1692 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln177_fu_943_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln183_fu_1156_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln185_fu_1186_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_Blowfish_SetKey_fu_618_ap_done = ap_const_logic_1) and (feedback_V_fu_1427_p2 = ap_const_lv1_1) and (tmp_reg_1673 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_Blowfish_SetKey_fu_618_ap_done = ap_const_logic_1) and (tmp_reg_1673 = ap_const_lv1_1) and (feedback_V_fu_1427_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_Blowfish_SetKey_fu_618_ap_done = ap_const_logic_1) and (feedback_V_1_fu_1355_p2 = ap_const_lv1_1) and (tmp_reg_1673 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_Blowfish_SetKey_fu_618_ap_done = ap_const_logic_1) and (feedback_V_1_fu_1355_p2 = ap_const_lv1_0) and (tmp_reg_1673 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((grp_decrypt_aes_fu_500_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((icmp_ln213_fu_1527_p2 = ap_const_lv1_1) and (tmp_reg_1673 = ap_const_lv1_1)) or ((icmp_ln246_fu_1451_p2 = ap_const_lv1_1) and (tmp_reg_1673 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_reg_1673 = ap_const_lv1_1) and (icmp_ln213_fu_1527_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((grp_encrypt_aes_fu_609_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    S_0_address0_assign_proc : process(ap_CS_fsm_state13, S_0_addr_reg_1758, feedback_V_1_reg_1788, feedback_V_reg_1792, grp_decrypt_bf_fu_509_S_0_address0, grp_encrypt_bf_fu_559_S_0_address0, grp_Blowfish_SetKey_fu_618_S_0_address0, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_0_address0 <= S_0_addr_reg_1758;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_0_address0 <= grp_Blowfish_SetKey_fu_618_S_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (feedback_V_reg_1792 = ap_const_lv1_0))) then 
            S_0_address0 <= grp_encrypt_bf_fu_559_S_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (feedback_V_1_reg_1788 = ap_const_lv1_0))) then 
            S_0_address0 <= grp_decrypt_bf_fu_509_S_0_address0;
        else 
            S_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    S_0_ce0_assign_proc : process(ap_CS_fsm_state13, feedback_V_1_reg_1788, feedback_V_reg_1792, grp_decrypt_bf_fu_509_S_0_ce0, grp_encrypt_bf_fu_559_S_0_ce0, grp_Blowfish_SetKey_fu_618_S_0_ce0, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_0_ce0 <= grp_Blowfish_SetKey_fu_618_S_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (feedback_V_reg_1792 = ap_const_lv1_0))) then 
            S_0_ce0 <= grp_encrypt_bf_fu_559_S_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (feedback_V_1_reg_1788 = ap_const_lv1_0))) then 
            S_0_ce0 <= grp_decrypt_bf_fu_509_S_0_ce0;
        else 
            S_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    S_0_ce1_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_0_ce1 <= grp_Blowfish_SetKey_fu_618_S_0_ce1;
        else 
            S_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    S_0_d0_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_0_d0, ap_CS_fsm_state12, trunc_ln186_fu_1299_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_0_d0 <= trunc_ln186_fu_1299_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_0_d0 <= grp_Blowfish_SetKey_fu_618_S_0_d0;
        else 
            S_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    S_0_we0_assign_proc : process(ap_CS_fsm_state13, empty_38_reg_1729, grp_Blowfish_SetKey_fu_618_S_0_we0, ap_CS_fsm_state12)
    begin
        if (((empty_38_reg_1729 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            S_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_0_we0 <= grp_Blowfish_SetKey_fu_618_S_0_we0;
        else 
            S_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    S_0_we1_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_0_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_0_we1 <= grp_Blowfish_SetKey_fu_618_S_0_we1;
        else 
            S_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    S_1_address0_assign_proc : process(ap_CS_fsm_state13, S_1_addr_reg_1763, feedback_V_1_reg_1788, feedback_V_reg_1792, grp_decrypt_bf_fu_509_S_1_address0, grp_encrypt_bf_fu_559_S_1_address0, grp_Blowfish_SetKey_fu_618_S_1_address0, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_1_address0 <= S_1_addr_reg_1763;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_1_address0 <= grp_Blowfish_SetKey_fu_618_S_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (feedback_V_reg_1792 = ap_const_lv1_0))) then 
            S_1_address0 <= grp_encrypt_bf_fu_559_S_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (feedback_V_1_reg_1788 = ap_const_lv1_0))) then 
            S_1_address0 <= grp_decrypt_bf_fu_509_S_1_address0;
        else 
            S_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    S_1_ce0_assign_proc : process(ap_CS_fsm_state13, feedback_V_1_reg_1788, feedback_V_reg_1792, grp_decrypt_bf_fu_509_S_1_ce0, grp_encrypt_bf_fu_559_S_1_ce0, grp_Blowfish_SetKey_fu_618_S_1_ce0, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_1_ce0 <= grp_Blowfish_SetKey_fu_618_S_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (feedback_V_reg_1792 = ap_const_lv1_0))) then 
            S_1_ce0 <= grp_encrypt_bf_fu_559_S_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (feedback_V_1_reg_1788 = ap_const_lv1_0))) then 
            S_1_ce0 <= grp_decrypt_bf_fu_509_S_1_ce0;
        else 
            S_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    S_1_ce1_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_1_ce1 <= grp_Blowfish_SetKey_fu_618_S_1_ce1;
        else 
            S_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    S_1_d0_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_1_d0, ap_CS_fsm_state12, trunc_ln186_fu_1299_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_1_d0 <= trunc_ln186_fu_1299_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_1_d0 <= grp_Blowfish_SetKey_fu_618_S_1_d0;
        else 
            S_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    S_1_we0_assign_proc : process(ap_CS_fsm_state13, empty_38_reg_1729, grp_Blowfish_SetKey_fu_618_S_1_we0, ap_CS_fsm_state12)
    begin
        if (((empty_38_reg_1729 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            S_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_1_we0 <= grp_Blowfish_SetKey_fu_618_S_1_we0;
        else 
            S_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    S_1_we1_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_1_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_1_we1 <= grp_Blowfish_SetKey_fu_618_S_1_we1;
        else 
            S_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    S_2_address0_assign_proc : process(ap_CS_fsm_state13, S_2_addr_reg_1768, feedback_V_1_reg_1788, feedback_V_reg_1792, grp_decrypt_bf_fu_509_S_2_address0, grp_encrypt_bf_fu_559_S_2_address0, grp_Blowfish_SetKey_fu_618_S_2_address0, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_2_address0 <= S_2_addr_reg_1768;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_2_address0 <= grp_Blowfish_SetKey_fu_618_S_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (feedback_V_reg_1792 = ap_const_lv1_0))) then 
            S_2_address0 <= grp_encrypt_bf_fu_559_S_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (feedback_V_1_reg_1788 = ap_const_lv1_0))) then 
            S_2_address0 <= grp_decrypt_bf_fu_509_S_2_address0;
        else 
            S_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    S_2_ce0_assign_proc : process(ap_CS_fsm_state13, feedback_V_1_reg_1788, feedback_V_reg_1792, grp_decrypt_bf_fu_509_S_2_ce0, grp_encrypt_bf_fu_559_S_2_ce0, grp_Blowfish_SetKey_fu_618_S_2_ce0, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_2_ce0 <= grp_Blowfish_SetKey_fu_618_S_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (feedback_V_reg_1792 = ap_const_lv1_0))) then 
            S_2_ce0 <= grp_encrypt_bf_fu_559_S_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (feedback_V_1_reg_1788 = ap_const_lv1_0))) then 
            S_2_ce0 <= grp_decrypt_bf_fu_509_S_2_ce0;
        else 
            S_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    S_2_ce1_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_2_ce1 <= grp_Blowfish_SetKey_fu_618_S_2_ce1;
        else 
            S_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    S_2_d0_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_2_d0, ap_CS_fsm_state12, trunc_ln186_fu_1299_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_2_d0 <= trunc_ln186_fu_1299_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_2_d0 <= grp_Blowfish_SetKey_fu_618_S_2_d0;
        else 
            S_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    S_2_we0_assign_proc : process(ap_CS_fsm_state13, empty_38_reg_1729, grp_Blowfish_SetKey_fu_618_S_2_we0, ap_CS_fsm_state12)
    begin
        if (((empty_38_reg_1729 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            S_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_2_we0 <= grp_Blowfish_SetKey_fu_618_S_2_we0;
        else 
            S_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    S_2_we1_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_2_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_2_we1 <= grp_Blowfish_SetKey_fu_618_S_2_we1;
        else 
            S_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    S_3_address0_assign_proc : process(ap_CS_fsm_state13, S_3_addr_reg_1773, feedback_V_1_reg_1788, feedback_V_reg_1792, grp_decrypt_bf_fu_509_S_3_address0, grp_encrypt_bf_fu_559_S_3_address0, grp_Blowfish_SetKey_fu_618_S_3_address0, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_3_address0 <= S_3_addr_reg_1773;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_3_address0 <= grp_Blowfish_SetKey_fu_618_S_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (feedback_V_reg_1792 = ap_const_lv1_0))) then 
            S_3_address0 <= grp_encrypt_bf_fu_559_S_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (feedback_V_1_reg_1788 = ap_const_lv1_0))) then 
            S_3_address0 <= grp_decrypt_bf_fu_509_S_3_address0;
        else 
            S_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    S_3_ce0_assign_proc : process(ap_CS_fsm_state13, feedback_V_1_reg_1788, feedback_V_reg_1792, grp_decrypt_bf_fu_509_S_3_ce0, grp_encrypt_bf_fu_559_S_3_ce0, grp_Blowfish_SetKey_fu_618_S_3_ce0, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_3_ce0 <= grp_Blowfish_SetKey_fu_618_S_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (feedback_V_reg_1792 = ap_const_lv1_0))) then 
            S_3_ce0 <= grp_encrypt_bf_fu_559_S_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (feedback_V_1_reg_1788 = ap_const_lv1_0))) then 
            S_3_ce0 <= grp_decrypt_bf_fu_509_S_3_ce0;
        else 
            S_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    S_3_ce1_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_3_ce1 <= grp_Blowfish_SetKey_fu_618_S_3_ce1;
        else 
            S_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    S_3_d0_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_3_d0, ap_CS_fsm_state12, trunc_ln186_fu_1299_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            S_3_d0 <= trunc_ln186_fu_1299_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_3_d0 <= grp_Blowfish_SetKey_fu_618_S_3_d0;
        else 
            S_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    S_3_we0_assign_proc : process(ap_CS_fsm_state13, empty_38_reg_1729, grp_Blowfish_SetKey_fu_618_S_3_we0, ap_CS_fsm_state12)
    begin
        if (((empty_38_reg_1729 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            S_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_3_we0 <= grp_Blowfish_SetKey_fu_618_S_3_we0;
        else 
            S_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    S_3_we1_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_S_3_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            S_3_we1 <= grp_Blowfish_SetKey_fu_618_S_3_we1;
        else 
            S_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln152_fu_710_p2 <= std_logic_vector(unsigned(phi_mul_reg_379) + unsigned(ap_const_lv8_1D));
    add_ln162_fu_754_p2 <= std_logic_vector(unsigned(ap_const_lv7_1C) + unsigned(trunc_ln162_fu_746_p1));
    add_ln173_fu_926_p2 <= std_logic_vector(unsigned(phi_ln173_reg_391) + unsigned(ap_const_lv6_1));
    add_ln222_fu_1567_p2 <= std_logic_vector(unsigned(phi_mul3_reg_479) + unsigned(ap_const_lv8_1D));
    add_ln255_fu_1491_p2 <= std_logic_vector(unsigned(phi_mul5_reg_457) + unsigned(ap_const_lv8_1D));
    and_ln178_fu_1038_p2 <= (lshr_ln178_fu_1026_p2 and lshr_ln178_1_fu_1032_p2);
    and_ln186_fu_1294_p2 <= (lshr_ln186_reg_1783 and lshr_ln186_1_fu_1288_p2);
    and_ln414_1_fu_903_p2 <= (xor_ln414_fu_897_p2 and reg_672);
    and_ln414_2_fu_909_p2 <= (select_ln414_3_fu_872_p3 and and_ln414_fu_891_p2);
    and_ln414_fu_891_p2 <= (shl_ln414_1_fu_879_p2 and lshr_ln414_fu_885_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state15_on_subcall_done_assign_proc : process(feedback_V_1_reg_1788, grp_decrypt_bf_fu_509_ap_done)
    begin
                ap_block_state15_on_subcall_done <= ((grp_decrypt_bf_fu_509_ap_done = ap_const_logic_0) and (feedback_V_1_reg_1788 = ap_const_lv1_0));
    end process;


    ap_block_state2_assign_proc : process(strm_in_V_V_empty_n, ap_predicate_op45_read_state2)
    begin
                ap_block_state2 <= ((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state20_on_subcall_done_assign_proc : process(feedback_V_reg_1792, grp_encrypt_bf_fu_559_ap_done)
    begin
                ap_block_state20_on_subcall_done <= ((grp_encrypt_bf_fu_559_ap_done = ap_const_logic_0) and (feedback_V_reg_1792 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(tmp_reg_1673, ap_CS_fsm_state17, icmp_ln246_fu_1451_p2, icmp_ln213_fu_1527_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((icmp_ln213_fu_1527_p2 = ap_const_lv1_1) and (tmp_reg_1673 = ap_const_lv1_1)) or ((icmp_ln246_fu_1451_p2 = ap_const_lv1_1) and (tmp_reg_1673 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op45_read_state2_assign_proc : process(icmp_ln151_fu_695_p2, reading_0_fu_252)
    begin
                ap_predicate_op45_read_state2 <= ((reading_0_fu_252 = ap_const_lv1_1) and (icmp_ln151_fu_695_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(tmp_reg_1673, ap_CS_fsm_state17, icmp_ln246_fu_1451_p2, icmp_ln213_fu_1527_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((icmp_ln213_fu_1527_p2 = ap_const_lv1_1) and (tmp_reg_1673 = ap_const_lv1_1)) or ((icmp_ln246_fu_1451_p2 = ap_const_lv1_1) and (tmp_reg_1673 = ap_const_lv1_0))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    dut_stream_stream_s_address0 <= zext_ln173_fu_932_p1(6 - 1 downto 0);

    dut_stream_stream_s_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dut_stream_stream_s_ce0 <= ap_const_logic_1;
        else 
            dut_stream_stream_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_36_fu_963_p2 <= (tmp_10_fu_955_p3 or ap_const_lv10_1F);
    empty_38_fu_1168_p1 <= i2_0_reg_414(2 - 1 downto 0);
    empty_39_fu_1180_p2 <= (tmp_12_fu_1172_p3 or ap_const_lv7_1F);
    feedback_V_1_fu_1355_p2 <= (xor_ln301_4_fu_1349_p2 xor xor_ln301_3_fu_1343_p2);
    feedback_V_fu_1427_p2 <= (xor_ln301_fu_1415_p2 xor xor_ln301_1_fu_1421_p2);
    grp_Blowfish_SetKey_fu_618_ap_start <= grp_Blowfish_SetKey_fu_618_ap_start_reg;
    grp_decrypt_aes_fu_500_ap_start <= grp_decrypt_aes_fu_500_ap_start_reg;
    grp_decrypt_bf_fu_509_ap_start <= grp_decrypt_bf_fu_509_ap_start_reg;
    grp_encrypt_aes_fu_609_ap_start <= grp_encrypt_aes_fu_609_ap_start_reg;
    grp_encrypt_bf_fu_559_ap_start <= grp_encrypt_bf_fu_559_ap_start_reg;
    i_5_fu_949_p2 <= std_logic_vector(unsigned(i1_0_reg_402) + unsigned(ap_const_lv5_1));
    i_6_fu_1162_p2 <= std_logic_vector(unsigned(i2_0_reg_414) + unsigned(ap_const_lv3_1));
    i_7_fu_1533_p2 <= std_logic_vector(unsigned(i3_0_reg_468) + unsigned(ap_const_lv3_1));
    i_8_fu_1457_p2 <= std_logic_vector(unsigned(i4_0_reg_446) + unsigned(ap_const_lv3_1));
    i_fu_701_p2 <= std_logic_vector(unsigned(i_0_reg_368) + unsigned(ap_const_lv3_1));
    icmp_ln151_fu_695_p2 <= "1" when (i_0_reg_368 = ap_const_lv3_5) else "0";
    icmp_ln158_fu_730_p2 <= "1" when (i_0_reg_368 = ap_const_lv3_4) else "0";
    icmp_ln173_fu_937_p2 <= "1" when (phi_ln173_reg_391 = ap_const_lv6_37) else "0";
    icmp_ln177_fu_943_p2 <= "1" when (i1_0_reg_402 = ap_const_lv5_12) else "0";
    icmp_ln178_fu_969_p2 <= "1" when (unsigned(tmp_10_fu_955_p3) > unsigned(empty_36_fu_963_p2)) else "0";
    icmp_ln183_fu_1156_p2 <= "1" when (i2_0_reg_414 = ap_const_lv3_4) else "0";
    icmp_ln185_fu_1186_p2 <= "1" when (j_0_reg_425 = ap_const_lv9_100) else "0";
    icmp_ln186_fu_1207_p2 <= "1" when (unsigned(tmp_12_reg_1733) > unsigned(empty_39_reg_1739)) else "0";
    icmp_ln213_fu_1527_p2 <= "1" when (i3_0_reg_468 = ap_const_lv3_5) else "0";
    icmp_ln216_fu_1539_p2 <= "1" when (i3_0_reg_468 = ap_const_lv3_4) else "0";
    icmp_ln246_fu_1451_p2 <= "1" when (i4_0_reg_446 = ap_const_lv3_5) else "0";
    icmp_ln249_fu_1463_p2 <= "1" when (i4_0_reg_446 = ap_const_lv3_4) else "0";
    icmp_ln414_fu_764_p2 <= "1" when (unsigned(zext_ln162_fu_750_p1) > unsigned(zext_ln162_1_fu_760_p1)) else "0";
    initial_sbox_address0 <= zext_ln186_fu_1198_p1(8 - 1 downto 0);

    initial_sbox_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            initial_sbox_ce0 <= ap_const_logic_1;
        else 
            initial_sbox_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_1192_p2 <= std_logic_vector(unsigned(j_0_reg_425) + unsigned(ap_const_lv9_1));

    key_address0_assign_proc : process(ap_CS_fsm_state13, zext_ln173_reg_1682, grp_Blowfish_SetKey_fu_618_key_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            key_address0 <= zext_ln173_reg_1682(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            key_address0 <= grp_Blowfish_SetKey_fu_618_key_address0;
        else 
            key_address0 <= "XXXXXX";
        end if; 
    end process;


    key_ce0_assign_proc : process(ap_CS_fsm_state13, grp_Blowfish_SetKey_fu_618_key_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            key_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            key_ce0 <= grp_Blowfish_SetKey_fu_618_key_ce0;
        else 
            key_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    key_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            key_we0 <= ap_const_logic_1;
        else 
            key_we0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln178_1_fu_1032_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv576_lc_5),to_integer(unsigned('0' & zext_ln178_1_fu_1023_p1(31-1 downto 0)))));
    lshr_ln178_fu_1026_p2 <= std_logic_vector(shift_right(unsigned(select_ln178_1_fu_1006_p3),to_integer(unsigned('0' & zext_ln178_fu_1019_p1(31-1 downto 0)))));
    lshr_ln186_1_fu_1288_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv128_lc_2),to_integer(unsigned('0' & zext_ln186_4_fu_1285_p1(31-1 downto 0)))));
    lshr_ln186_fu_1279_p2 <= std_logic_vector(shift_right(unsigned(select_ln186_1_fu_1253_p3),to_integer(unsigned('0' & zext_ln186_3_fu_1275_p1(31-1 downto 0)))));
    lshr_ln414_fu_885_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv128_lc_2),to_integer(unsigned('0' & zext_ln414_3_fu_853_p1(31-1 downto 0)))));
    lshr_ln647_1_fu_1501_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_7_reg_436),to_integer(unsigned('0' & zext_ln647_1_fu_1497_p1(31-1 downto 0)))));
    lshr_ln647_fu_1577_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_6_reg_490),to_integer(unsigned('0' & zext_ln647_fu_1573_p1(31-1 downto 0)))));
    output_word_V_6_fu_1519_p3 <= 
        p_Result_12_fu_1483_p3 when (icmp_ln249_fu_1463_p2(0) = '1') else 
        p_Result_13_fu_1511_p3;
    output_word_V_fu_1595_p3 <= 
        p_Result_10_fu_1559_p3 when (icmp_ln216_fu_1539_p2(0) = '1') else 
        p_Result_11_fu_1587_p3;
    p_Result_10_fu_1559_p3 <= (ap_const_lv3_3 & zext_ln215_fu_1555_p1);
    p_Result_11_fu_1587_p3 <= (ap_const_lv3_2 & trunc_ln215_fu_1583_p1);
    p_Result_12_fu_1483_p3 <= (ap_const_lv3_1 & zext_ln215_1_fu_1479_p1);
    p_Result_13_fu_1511_p3 <= (ap_const_lv3_0 & trunc_ln215_1_fu_1507_p1);
    p_Result_7_fu_1545_p4 <= p_Val2_6_reg_490(127 downto 116);
    p_Result_8_fu_915_p2 <= (and_ln414_2_fu_909_p2 or and_ln414_1_fu_903_p2);
    p_Result_9_fu_1469_p4 <= p_Val2_7_reg_436(127 downto 116);
    p_Result_s_fu_798_p5 <= (trunc_ln647_fu_794_p1 & p_Val2_3_fu_260(115 downto 0));
    ret_V_2_fu_1365_p3 <= (trunc_ln1356_1_fu_1361_p1 & feedback_V_1_fu_1355_p2);
    ret_V_fu_1437_p3 <= (trunc_ln1356_fu_1433_p1 & feedback_V_fu_1427_p2);
    select_ln178_1_fu_1006_p3 <= 
        ap_const_lv576_lc_3 when (icmp_ln178_reg_1710(0) = '1') else 
        ap_const_lv576_lc_4;
    select_ln178_2_fu_1013_p3 <= 
        sub_ln178_1_fu_1001_p2 when (icmp_ln178_reg_1710(0) = '1') else 
        tmp_10_reg_1704;
    select_ln178_fu_987_p3 <= 
        sub_ln178_fu_975_p2 when (icmp_ln178_fu_969_p2(0) = '1') else 
        sub_ln178_2_fu_981_p2;
    select_ln186_1_fu_1253_p3 <= 
        tmp_18_fu_1217_p4 when (icmp_ln186_fu_1207_p2(0) = '1') else 
        initial_sbox_q0;
    select_ln186_2_fu_1261_p3 <= 
        xor_ln186_fu_1233_p2 when (icmp_ln186_fu_1207_p2(0) = '1') else 
        zext_ln186_1_fu_1211_p1;
    select_ln186_fu_1245_p3 <= 
        sub_ln186_fu_1227_p2 when (icmp_ln186_fu_1207_p2(0) = '1') else 
        sub_ln186_1_fu_1239_p2;
    select_ln414_1_fu_833_p3 <= 
        zext_ln414_reg_1658 when (icmp_ln414_reg_1651(0) = '1') else 
        phi_mul_reg_379;
    select_ln414_2_fu_839_p3 <= 
        sub_ln414_reg_1663 when (icmp_ln414_reg_1651(0) = '1') else 
        phi_mul_reg_379;
    select_ln414_3_fu_872_p3 <= 
        tmp_6_fu_862_p4 when (icmp_ln414_reg_1651(0) = '1') else 
        shl_ln414_fu_856_p2;
    select_ln414_fu_780_p3 <= 
        phi_mul_reg_379 when (icmp_ln414_fu_764_p2(0) = '1') else 
        zext_ln414_fu_770_p1;
    shl_ln414_1_fu_879_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv128_lc_2),to_integer(unsigned('0' & zext_ln414_2_fu_849_p1(31-1 downto 0)))));
    shl_ln414_fu_856_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_4_fu_829_p1),to_integer(unsigned('0' & zext_ln414_1_fu_845_p1(31-1 downto 0)))));

    strm_in_V_V_blk_n_assign_proc : process(strm_in_V_V_empty_n, ap_CS_fsm_state2, icmp_ln151_fu_695_p2, reading_0_fu_252)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (reading_0_fu_252 = ap_const_lv1_1) and (icmp_ln151_fu_695_p2 = ap_const_lv1_0))) then 
            strm_in_V_V_blk_n <= strm_in_V_V_empty_n;
        else 
            strm_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_in_V_V_read_assign_proc : process(strm_in_V_V_empty_n, ap_CS_fsm_state2, ap_predicate_op45_read_state2)
    begin
        if ((not(((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (strm_in_V_V_empty_n = ap_const_logic_0))) and (ap_predicate_op45_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            strm_in_V_V_read <= ap_const_logic_1;
        else 
            strm_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_V_V_blk_n_assign_proc : process(strm_out_V_V_full_n, ap_CS_fsm_state22, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            strm_out_V_V_blk_n <= strm_out_V_V_full_n;
        else 
            strm_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_out_V_V_din_assign_proc : process(strm_out_V_V_full_n, ap_CS_fsm_state22, ap_CS_fsm_state18, output_word_V_6_reg_1814, output_word_V_reg_1832)
    begin
        if ((strm_out_V_V_full_n = ap_const_logic_1)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                strm_out_V_V_din <= output_word_V_reg_1832;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                strm_out_V_V_din <= output_word_V_6_reg_1814;
            else 
                strm_out_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            strm_out_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    strm_out_V_V_write_assign_proc : process(strm_out_V_V_full_n, ap_CS_fsm_state22, ap_CS_fsm_state18)
    begin
        if ((((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            strm_out_V_V_write <= ap_const_logic_1;
        else 
            strm_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln178_1_fu_1001_p2 <= std_logic_vector(signed(ap_const_lv10_23F) - signed(tmp_10_reg_1704));
    sub_ln178_2_fu_981_p2 <= std_logic_vector(unsigned(empty_36_fu_963_p2) - unsigned(tmp_10_fu_955_p3));
    sub_ln178_3_fu_995_p2 <= std_logic_vector(signed(ap_const_lv10_23F) - signed(select_ln178_fu_987_p3));
    sub_ln178_fu_975_p2 <= std_logic_vector(unsigned(tmp_10_fu_955_p3) - unsigned(empty_36_fu_963_p2));
    sub_ln186_1_fu_1239_p2 <= std_logic_vector(unsigned(zext_ln186_2_fu_1214_p1) - unsigned(zext_ln186_1_fu_1211_p1));
    sub_ln186_2_fu_1269_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(select_ln186_fu_1245_p3));
    sub_ln186_fu_1227_p2 <= std_logic_vector(unsigned(zext_ln186_1_fu_1211_p1) - unsigned(zext_ln186_2_fu_1214_p1));
    sub_ln414_1_fu_788_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(select_ln414_fu_780_p3));
    sub_ln414_fu_774_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(phi_mul_reg_379));
    tmp_10_fu_955_p3 <= (i1_0_reg_402 & ap_const_lv5_0);
    tmp_11_fu_1399_p3 <= enc_seed_V(23 downto 23);
    tmp_12_fu_1172_p3 <= (empty_38_fu_1168_p1 & ap_const_lv5_0);
    tmp_13_fu_1407_p3 <= enc_seed_V(22 downto 22);
    tmp_14_fu_1311_p3 <= dec_seed_V(16 downto 16);
    tmp_15_fu_1319_p3 <= dec_seed_V(21 downto 21);
    tmp_16_fu_1327_p3 <= dec_seed_V(23 downto 23);
    tmp_17_fu_1335_p3 <= dec_seed_V(22 downto 22);
    
    tmp_18_fu_1217_p4_proc : process(initial_sbox_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_18_fu_1217_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_7F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := initial_sbox_q0;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_7F(7-1 downto 0)));
            for tmp_18_fu_1217_p4_i in 0 to 128-1 loop
                v0_cpy(tmp_18_fu_1217_p4_i) := initial_sbox_q0(128-1-tmp_18_fu_1217_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(128-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_18_fu_1217_p4 <= resvalue(128-1 downto 0);
    end process;

    tmp_5_fu_716_p3 <= strm_in_V_V_dout(29 downto 29);
    
    tmp_6_fu_862_p4_proc : process(shl_ln414_fu_856_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_6_fu_862_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_7F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := shl_ln414_fu_856_p2;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_7F(7-1 downto 0)));
            for tmp_6_fu_862_p4_i in 0 to 128-1 loop
                v0_cpy(tmp_6_fu_862_p4_i) := shl_ln414_fu_856_p2(128-1-tmp_6_fu_862_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(128-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_6_fu_862_p4 <= resvalue(128-1 downto 0);
    end process;

    tmp_7_fu_1383_p3 <= enc_seed_V(16 downto 16);
    tmp_9_fu_1391_p3 <= enc_seed_V(21 downto 21);
    tmp_V_4_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_1_fu_826_p1),128));
    trunc_ln1356_1_fu_1361_p1 <= dec_seed_V(23 - 1 downto 0);
    trunc_ln1356_fu_1433_p1 <= enc_seed_V(23 - 1 downto 0);
    trunc_ln162_fu_746_p1 <= phi_mul_reg_379(7 - 1 downto 0);
    trunc_ln178_fu_1044_p1 <= and_ln178_fu_1038_p2(32 - 1 downto 0);
    trunc_ln186_fu_1299_p1 <= and_ln186_fu_1294_p2(32 - 1 downto 0);
    trunc_ln215_1_fu_1507_p1 <= lshr_ln647_1_fu_1501_p2(29 - 1 downto 0);
    trunc_ln215_fu_1583_p1 <= lshr_ln647_fu_1577_p2(29 - 1 downto 0);
    trunc_ln647_1_fu_826_p1 <= tmp_V_3_reg_1642(29 - 1 downto 0);
    trunc_ln647_fu_794_p1 <= strm_in_V_V_dout(12 - 1 downto 0);
    xor_ln155_fu_724_p2 <= (tmp_5_fu_716_p3 xor ap_const_lv1_1);
    xor_ln186_fu_1233_p2 <= (zext_ln186_1_fu_1211_p1 xor ap_const_lv8_7F);
    xor_ln301_1_fu_1421_p2 <= (tmp_9_fu_1391_p3 xor tmp_13_fu_1407_p3);
    xor_ln301_3_fu_1343_p2 <= (tmp_16_fu_1327_p3 xor tmp_14_fu_1311_p3);
    xor_ln301_4_fu_1349_p2 <= (tmp_17_fu_1335_p3 xor tmp_15_fu_1319_p3);
    xor_ln301_fu_1415_p2 <= (tmp_7_fu_1383_p3 xor tmp_11_fu_1399_p3);
    xor_ln414_fu_897_p2 <= (ap_const_lv128_lc_2 xor and_ln414_fu_891_p2);
    zext_ln162_1_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln162_fu_754_p2),32));
    zext_ln162_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_379),32));
    zext_ln173_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_ln173_reg_391),64));
    zext_ln178_1_fu_1023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln178_3_reg_1716),576));
    zext_ln178_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln178_2_fu_1013_p3),576));
    zext_ln186_1_fu_1211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_reg_1733),8));
    zext_ln186_2_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_39_reg_1739),8));
    zext_ln186_3_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln186_2_fu_1261_p3),128));
    zext_ln186_4_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln186_2_reg_1778),128));
    zext_ln186_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_425),64));
    zext_ln215_1_fu_1479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_fu_1469_p4),29));
    zext_ln215_fu_1555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_7_fu_1545_p4),29));
    zext_ln414_1_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_2_fu_839_p3),128));
    zext_ln414_2_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_1_fu_833_p3),128));
    zext_ln414_3_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_1_reg_1668),128));
    zext_ln414_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln162_fu_754_p2),8));
    zext_ln647_1_fu_1497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul5_reg_457),128));
    zext_ln647_fu_1573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul3_reg_479),128));
end behav;
