-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    strm_in_V_V_empty_n : IN STD_LOGIC;
    strm_in_V_V_read : OUT STD_LOGIC;
    strm_out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    strm_out_V_V_full_n : IN STD_LOGIC;
    strm_out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of dut is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dut,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.076750,HLS_SYN_LAT=2920,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=3833,HLS_SYN_LUT=17645,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv128_lc_2 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv8_1D : STD_LOGIC_VECTOR (7 downto 0) := "00011101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv7_1C : STD_LOGIC_VECTOR (6 downto 0) := "0011100";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal lfsr_decrypt : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal strm_in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln95_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_out_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal reg_205 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_predicate_op30_read_state2 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal i_fu_232_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_646 : STD_LOGIC_VECTOR (2 downto 0);
    signal reading_0_load_reg_651 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln96_fu_241_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln96_reg_655 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_2_reg_660 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln102_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln102_reg_665 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_reg_669 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln414_fu_301_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln414_reg_676 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln414_fu_305_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln414_reg_681 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln414_1_fu_319_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln414_1_reg_686 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_349_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_691 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_encrypt_aes_fu_191_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal output_message_V_reg_695 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_encrypt_aes_fu_191_ap_ready : STD_LOGIC;
    signal grp_encrypt_aes_fu_191_ap_done : STD_LOGIC;
    signal i_3_fu_463_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_3_reg_704 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln135_fu_496_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln135_reg_709 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln126_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_word_V_fu_523_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_word_V_reg_714 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_fu_537_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_2_reg_722 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln164_fu_570_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln164_reg_727 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln155_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_word_V_6_fu_597_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_word_V_6_reg_732 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_decrypt_aes_fu_182_ap_return : STD_LOGIC_VECTOR (127 downto 0);
    signal output_message_V_2_reg_737 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_decrypt_aes_fu_182_ap_ready : STD_LOGIC;
    signal grp_decrypt_aes_fu_182_ap_done : STD_LOGIC;
    signal grp_decrypt_aes_fu_182_ap_start : STD_LOGIC;
    signal grp_decrypt_aes_fu_182_ap_idle : STD_LOGIC;
    signal grp_encrypt_aes_fu_191_ap_start : STD_LOGIC;
    signal grp_encrypt_aes_fu_191_ap_idle : STD_LOGIC;
    signal i_0_reg_115 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal phi_mul_reg_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal i1_0_reg_138 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_mul3_reg_149 : STD_LOGIC_VECTOR (7 downto 0);
    signal i2_0_reg_160 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_mul5_reg_171 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_decrypt_aes_fu_182_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state2_ignore_call3 : BOOLEAN;
    signal grp_encrypt_aes_fu_191_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state2_ignore_call0 : BOOLEAN;
    signal xor_ln142_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reading_0_fu_90 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln99_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_fu_98 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_s_fu_329_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_3_fu_446_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_2_fu_247_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln106_fu_277_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln106_fu_285_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln106_fu_281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln106_1_fu_291_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln414_fu_311_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_fu_325_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln647_1_fu_357_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln414_2_fu_370_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln414_1_fu_364_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_3_fu_360_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln414_1_fu_376_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal shl_ln414_fu_387_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_3_fu_393_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln414_2_fu_380_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln414_3_fu_384_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal shl_ln414_1_fu_410_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln414_fu_416_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal and_ln414_fu_422_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal xor_ln414_fu_428_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal select_ln414_3_fu_403_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal and_ln414_1_fu_434_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal and_ln414_2_fu_440_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Result_9_fu_475_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_1_fu_484_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln647_1_fu_502_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln647_1_fu_506_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln215_1_fu_511_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln129_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_488_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_6_fu_515_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_5_fu_549_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_fu_558_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln647_fu_576_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal lshr_ln647_fu_580_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln215_fu_585_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln158_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_fu_562_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_8_fu_589_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component decrypt_aes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ciphertext_V : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component encrypt_aes IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        plaintext_V : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    grp_decrypt_aes_fu_182 : component decrypt_aes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_decrypt_aes_fu_182_ap_start,
        ap_done => grp_decrypt_aes_fu_182_ap_done,
        ap_idle => grp_decrypt_aes_fu_182_ap_idle,
        ap_ready => grp_decrypt_aes_fu_182_ap_ready,
        ciphertext_V => reg_205,
        ap_return => grp_decrypt_aes_fu_182_ap_return);

    grp_encrypt_aes_fu_191 : component encrypt_aes
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_encrypt_aes_fu_191_ap_start,
        ap_done => grp_encrypt_aes_fu_191_ap_done,
        ap_idle => grp_encrypt_aes_fu_191_ap_idle,
        ap_ready => grp_encrypt_aes_fu_191_ap_ready,
        plaintext_V => reg_205,
        ap_return => grp_encrypt_aes_fu_191_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_decrypt_aes_fu_182_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_decrypt_aes_fu_182_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (tmp_fu_349_p3 = ap_const_lv1_1) and (icmp_ln95_fu_226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_decrypt_aes_fu_182_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_decrypt_aes_fu_182_ap_ready = ap_const_logic_1)) then 
                    grp_decrypt_aes_fu_182_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_encrypt_aes_fu_191_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_encrypt_aes_fu_191_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (icmp_ln95_fu_226_p2 = ap_const_lv1_1) and (tmp_fu_349_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_encrypt_aes_fu_191_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_encrypt_aes_fu_191_ap_ready = ap_const_logic_1)) then 
                    grp_encrypt_aes_fu_191_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_0_reg_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i1_0_reg_138 <= i_3_reg_704;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_encrypt_aes_fu_191_ap_done = ap_const_logic_1))) then 
                i1_0_reg_138 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i2_0_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i2_0_reg_160 <= i_2_reg_722;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_decrypt_aes_fu_182_ap_done = ap_const_logic_1))) then 
                i2_0_reg_160 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_reg_115_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_0_reg_115 <= i_reg_646;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_115 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_Val2_1_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((reading_0_load_reg_651 = ap_const_lv1_1) and (icmp_ln102_reg_665 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_Val2_1_fu_98 <= p_Result_3_fu_446_p2;
            elsif ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (icmp_ln102_fu_261_p2 = ap_const_lv1_1) and (reading_0_fu_90 = ap_const_lv1_1) and (icmp_ln95_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_Val2_1_fu_98 <= p_Result_s_fu_329_p5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_Val2_1_fu_98 <= ap_const_lv128_lc_2;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (reading_0_fu_90 = ap_const_lv1_1) and (icmp_ln95_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_Val2_s_fu_94 <= strm_in_V_V_dout;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_Val2_s_fu_94 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_mul3_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                phi_mul3_reg_149 <= add_ln135_reg_709;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_encrypt_aes_fu_191_ap_done = ap_const_logic_1))) then 
                phi_mul3_reg_149 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    phi_mul5_reg_171_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                phi_mul5_reg_171 <= add_ln164_reg_727;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_decrypt_aes_fu_182_ap_done = ap_const_logic_1))) then 
                phi_mul5_reg_171 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                phi_mul_reg_126 <= add_ln96_reg_655;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul_reg_126 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    reading_0_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (reading_0_fu_90 = ap_const_lv1_1) and (icmp_ln95_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                reading_0_fu_90 <= xor_ln99_fu_255_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                reading_0_fu_90 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_691 = ap_const_lv1_0) and (icmp_ln126_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln135_reg_709 <= add_ln135_fu_496_p2;
                    output_word_V_reg_714(29 downto 0) <= output_word_V_fu_523_p3(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_691 = ap_const_lv1_1) and (icmp_ln155_fu_531_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln164_reg_727 <= add_ln164_fu_570_p2;
                    output_word_V_6_reg_732(29 downto 0) <= output_word_V_6_fu_597_p3(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (icmp_ln95_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln96_reg_655 <= add_ln96_fu_241_p2;
                reading_0_load_reg_651 <= reading_0_fu_90;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_691 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                i_2_reg_722 <= i_2_fu_537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_691 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                i_3_reg_704 <= i_3_fu_463_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_reg_646 <= i_fu_232_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (reading_0_fu_90 = ap_const_lv1_1) and (icmp_ln95_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln102_reg_665 <= icmp_ln102_fu_261_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (reading_0_fu_90 = ap_const_lv1_1) and (icmp_ln102_fu_261_p2 = ap_const_lv1_0) and (icmp_ln95_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln414_reg_669 <= icmp_ln414_fu_295_p2;
                sub_ln414_1_reg_686 <= sub_ln414_1_fu_319_p2;
                sub_ln414_reg_681 <= sub_ln414_fu_305_p2;
                    zext_ln414_reg_676(6 downto 0) <= zext_ln414_fu_301_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_decrypt_aes_fu_182_ap_done = ap_const_logic_1))) then
                lfsr_decrypt <= xor_ln142_fu_609_p2;
                output_message_V_2_reg_737 <= grp_decrypt_aes_fu_182_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_encrypt_aes_fu_191_ap_done = ap_const_logic_1))) then
                output_message_V_reg_695 <= grp_encrypt_aes_fu_191_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (icmp_ln95_fu_226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (reading_0_fu_90 = ap_const_lv1_1) and (icmp_ln95_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then
                reg_205 <= p_Val2_1_fu_98;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (ap_predicate_op30_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_V_2_reg_660 <= strm_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (icmp_ln95_fu_226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_reg_691 <= p_Val2_s_fu_94(30 downto 30);
            end if;
        end if;
    end process;
    zext_ln414_reg_676(7) <= '0';
    output_word_V_reg_714(31 downto 30) <= "01";
    output_word_V_6_reg_732(31 downto 30) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, strm_in_V_V_empty_n, strm_out_V_V_full_n, ap_CS_fsm_state2, icmp_ln95_fu_226_p2, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_predicate_op30_read_state2, tmp_fu_349_p3, tmp_reg_691, ap_CS_fsm_state4, grp_encrypt_aes_fu_191_ap_done, ap_CS_fsm_state5, icmp_ln126_fu_457_p2, icmp_ln155_fu_531_p2, ap_CS_fsm_state7, grp_decrypt_aes_fu_182_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (tmp_fu_349_p3 = ap_const_lv1_1) and (icmp_ln95_fu_226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (icmp_ln95_fu_226_p2 = ap_const_lv1_1) and (tmp_fu_349_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (icmp_ln95_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_encrypt_aes_fu_191_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (((tmp_reg_691 = ap_const_lv1_1) and (icmp_ln155_fu_531_p2 = ap_const_lv1_1)) or ((icmp_ln126_fu_457_p2 = ap_const_lv1_1) and (tmp_reg_691 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((tmp_reg_691 = ap_const_lv1_1) and (icmp_ln155_fu_531_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_decrypt_aes_fu_182_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln106_fu_285_p2 <= std_logic_vector(unsigned(ap_const_lv7_1C) + unsigned(trunc_ln106_fu_277_p1));
    add_ln135_fu_496_p2 <= std_logic_vector(unsigned(phi_mul3_reg_149) + unsigned(ap_const_lv8_1D));
    add_ln164_fu_570_p2 <= std_logic_vector(unsigned(phi_mul5_reg_171) + unsigned(ap_const_lv8_1D));
    add_ln96_fu_241_p2 <= std_logic_vector(unsigned(phi_mul_reg_126) + unsigned(ap_const_lv8_1D));
    and_ln414_1_fu_434_p2 <= (xor_ln414_fu_428_p2 and reg_205);
    and_ln414_2_fu_440_p2 <= (select_ln414_3_fu_403_p3 and and_ln414_fu_422_p2);
    and_ln414_fu_422_p2 <= (shl_ln414_1_fu_410_p2 and lshr_ln414_fu_416_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state2_assign_proc : process(strm_in_V_V_empty_n, ap_predicate_op30_read_state2)
    begin
                ap_block_state2 <= ((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1));
    end process;


    ap_block_state2_ignore_call0_assign_proc : process(strm_in_V_V_empty_n, ap_predicate_op30_read_state2)
    begin
                ap_block_state2_ignore_call0 <= ((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1));
    end process;


    ap_block_state2_ignore_call3_assign_proc : process(strm_in_V_V_empty_n, ap_predicate_op30_read_state2)
    begin
                ap_block_state2_ignore_call3 <= ((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(tmp_reg_691, ap_CS_fsm_state5, icmp_ln126_fu_457_p2, icmp_ln155_fu_531_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (((tmp_reg_691 = ap_const_lv1_1) and (icmp_ln155_fu_531_p2 = ap_const_lv1_1)) or ((icmp_ln126_fu_457_p2 = ap_const_lv1_1) and (tmp_reg_691 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op30_read_state2_assign_proc : process(icmp_ln95_fu_226_p2, reading_0_fu_90)
    begin
                ap_predicate_op30_read_state2 <= ((reading_0_fu_90 = ap_const_lv1_1) and (icmp_ln95_fu_226_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(tmp_reg_691, ap_CS_fsm_state5, icmp_ln126_fu_457_p2, icmp_ln155_fu_531_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (((tmp_reg_691 = ap_const_lv1_1) and (icmp_ln155_fu_531_p2 = ap_const_lv1_1)) or ((icmp_ln126_fu_457_p2 = ap_const_lv1_1) and (tmp_reg_691 = ap_const_lv1_0))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_decrypt_aes_fu_182_ap_start <= grp_decrypt_aes_fu_182_ap_start_reg;
    grp_encrypt_aes_fu_191_ap_start <= grp_encrypt_aes_fu_191_ap_start_reg;
    i_2_fu_537_p2 <= std_logic_vector(unsigned(i2_0_reg_160) + unsigned(ap_const_lv3_1));
    i_3_fu_463_p2 <= std_logic_vector(unsigned(i1_0_reg_138) + unsigned(ap_const_lv3_1));
    i_fu_232_p2 <= std_logic_vector(unsigned(i_0_reg_115) + unsigned(ap_const_lv3_1));
    icmp_ln102_fu_261_p2 <= "1" when (i_0_reg_115 = ap_const_lv3_4) else "0";
    icmp_ln126_fu_457_p2 <= "1" when (i1_0_reg_138 = ap_const_lv3_5) else "0";
    icmp_ln129_fu_469_p2 <= "1" when (i1_0_reg_138 = ap_const_lv3_4) else "0";
    icmp_ln155_fu_531_p2 <= "1" when (i2_0_reg_160 = ap_const_lv3_5) else "0";
    icmp_ln158_fu_543_p2 <= "1" when (i2_0_reg_160 = ap_const_lv3_4) else "0";
    icmp_ln414_fu_295_p2 <= "1" when (unsigned(zext_ln106_fu_281_p1) > unsigned(zext_ln106_1_fu_291_p1)) else "0";
    icmp_ln95_fu_226_p2 <= "1" when (i_0_reg_115 = ap_const_lv3_5) else "0";
    lshr_ln414_fu_416_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv128_lc_1),to_integer(unsigned('0' & zext_ln414_3_fu_384_p1(31-1 downto 0)))));
    lshr_ln647_1_fu_506_p2 <= std_logic_vector(shift_right(unsigned(output_message_V_reg_695),to_integer(unsigned('0' & zext_ln647_1_fu_502_p1(31-1 downto 0)))));
    lshr_ln647_fu_580_p2 <= std_logic_vector(shift_right(unsigned(output_message_V_2_reg_737),to_integer(unsigned('0' & zext_ln647_fu_576_p1(31-1 downto 0)))));
    output_word_V_6_fu_597_p3 <= 
        p_Result_7_fu_562_p3 when (icmp_ln158_fu_543_p2(0) = '1') else 
        p_Result_8_fu_589_p3;
    output_word_V_fu_523_p3 <= 
        p_Result_4_fu_488_p3 when (icmp_ln129_fu_469_p2(0) = '1') else 
        p_Result_6_fu_515_p3;
    p_Result_3_fu_446_p2 <= (and_ln414_2_fu_440_p2 or and_ln414_1_fu_434_p2);
    p_Result_4_fu_488_p3 <= (ap_const_lv3_3 & zext_ln215_1_fu_484_p1);
    p_Result_5_fu_549_p4 <= output_message_V_2_reg_737(127 downto 116);
    p_Result_6_fu_515_p3 <= (ap_const_lv3_2 & trunc_ln215_1_fu_511_p1);
    p_Result_7_fu_562_p3 <= (ap_const_lv3_1 & zext_ln215_fu_558_p1);
    p_Result_8_fu_589_p3 <= (ap_const_lv3_0 & trunc_ln215_fu_585_p1);
    p_Result_9_fu_475_p4 <= output_message_V_reg_695(127 downto 116);
    p_Result_s_fu_329_p5 <= (trunc_ln647_fu_325_p1 & p_Val2_1_fu_98(115 downto 0));
    select_ln414_1_fu_364_p3 <= 
        zext_ln414_reg_676 when (icmp_ln414_reg_669(0) = '1') else 
        phi_mul_reg_126;
    select_ln414_2_fu_370_p3 <= 
        sub_ln414_reg_681 when (icmp_ln414_reg_669(0) = '1') else 
        phi_mul_reg_126;
    select_ln414_3_fu_403_p3 <= 
        tmp_3_fu_393_p4 when (icmp_ln414_reg_669(0) = '1') else 
        shl_ln414_fu_387_p2;
    select_ln414_fu_311_p3 <= 
        phi_mul_reg_126 when (icmp_ln414_fu_295_p2(0) = '1') else 
        zext_ln414_fu_301_p1;
    shl_ln414_1_fu_410_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv128_lc_1),to_integer(unsigned('0' & zext_ln414_2_fu_380_p1(31-1 downto 0)))));
    shl_ln414_fu_387_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_3_fu_360_p1),to_integer(unsigned('0' & zext_ln414_1_fu_376_p1(31-1 downto 0)))));

    strm_in_V_V_blk_n_assign_proc : process(strm_in_V_V_empty_n, ap_CS_fsm_state2, icmp_ln95_fu_226_p2, reading_0_fu_90)
    begin
        if (((reading_0_fu_90 = ap_const_lv1_1) and (icmp_ln95_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            strm_in_V_V_blk_n <= strm_in_V_V_empty_n;
        else 
            strm_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_in_V_V_read_assign_proc : process(strm_in_V_V_empty_n, ap_CS_fsm_state2, ap_predicate_op30_read_state2)
    begin
        if ((not(((strm_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op30_read_state2 = ap_const_boolean_1))) and (ap_predicate_op30_read_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            strm_in_V_V_read <= ap_const_logic_1;
        else 
            strm_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_V_V_blk_n_assign_proc : process(strm_out_V_V_full_n, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            strm_out_V_V_blk_n <= strm_out_V_V_full_n;
        else 
            strm_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    strm_out_V_V_din_assign_proc : process(strm_out_V_V_full_n, ap_CS_fsm_state6, ap_CS_fsm_state8, output_word_V_reg_714, output_word_V_6_reg_732)
    begin
        if ((strm_out_V_V_full_n = ap_const_logic_1)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                strm_out_V_V_din <= output_word_V_6_reg_732;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                strm_out_V_V_din <= output_word_V_reg_714;
            else 
                strm_out_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            strm_out_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    strm_out_V_V_write_assign_proc : process(strm_out_V_V_full_n, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((strm_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            strm_out_V_V_write <= ap_const_logic_1;
        else 
            strm_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln414_1_fu_319_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(select_ln414_fu_311_p3));
    sub_ln414_fu_305_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(phi_mul_reg_126));
    tmp_2_fu_247_p3 <= strm_in_V_V_dout(29 downto 29);
    
    tmp_3_fu_393_p4_proc : process(shl_ln414_fu_387_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(128+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_3_fu_393_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(128 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_7F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := shl_ln414_fu_387_p2;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(128-1-unsigned(ap_const_lv32_7F(7-1 downto 0)));
            for tmp_3_fu_393_p4_i in 0 to 128-1 loop
                v0_cpy(tmp_3_fu_393_p4_i) := shl_ln414_fu_387_p2(128-1-tmp_3_fu_393_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(128-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_3_fu_393_p4 <= resvalue(128-1 downto 0);
    end process;

    tmp_V_3_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_1_fu_357_p1),128));
    tmp_fu_349_p3 <= p_Val2_s_fu_94(30 downto 30);
    trunc_ln106_fu_277_p1 <= phi_mul_reg_126(7 - 1 downto 0);
    trunc_ln215_1_fu_511_p1 <= lshr_ln647_1_fu_506_p2(29 - 1 downto 0);
    trunc_ln215_fu_585_p1 <= lshr_ln647_fu_580_p2(29 - 1 downto 0);
    trunc_ln647_1_fu_357_p1 <= tmp_V_2_reg_660(29 - 1 downto 0);
    trunc_ln647_fu_325_p1 <= strm_in_V_V_dout(12 - 1 downto 0);
    xor_ln142_fu_609_p2 <= (lfsr_decrypt xor ap_const_lv1_1);
    xor_ln414_fu_428_p2 <= (ap_const_lv128_lc_1 xor and_ln414_fu_422_p2);
    xor_ln99_fu_255_p2 <= (tmp_2_fu_247_p3 xor ap_const_lv1_1);
    zext_ln106_1_fu_291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln106_fu_285_p2),32));
    zext_ln106_fu_281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_126),32));
    zext_ln215_1_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_fu_475_p4),29));
    zext_ln215_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_5_fu_549_p4),29));
    zext_ln414_1_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_2_fu_370_p3),128));
    zext_ln414_2_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_1_fu_364_p3),128));
    zext_ln414_3_fu_384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_1_reg_686),128));
    zext_ln414_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln106_fu_285_p2),8));
    zext_ln647_1_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul3_reg_149),128));
    zext_ln647_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul5_reg_171),128));
end behav;
