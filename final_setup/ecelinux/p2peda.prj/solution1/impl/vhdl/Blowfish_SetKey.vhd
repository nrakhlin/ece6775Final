-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Blowfish_SetKey is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    key_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    key_ce0 : OUT STD_LOGIC;
    key_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
    S_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    S_0_ce0 : OUT STD_LOGIC;
    S_0_we0 : OUT STD_LOGIC;
    S_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    S_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    S_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    S_0_ce1 : OUT STD_LOGIC;
    S_0_we1 : OUT STD_LOGIC;
    S_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    S_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    S_1_ce0 : OUT STD_LOGIC;
    S_1_we0 : OUT STD_LOGIC;
    S_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    S_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    S_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    S_1_ce1 : OUT STD_LOGIC;
    S_1_we1 : OUT STD_LOGIC;
    S_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    S_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    S_2_ce0 : OUT STD_LOGIC;
    S_2_we0 : OUT STD_LOGIC;
    S_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    S_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    S_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    S_2_ce1 : OUT STD_LOGIC;
    S_2_we1 : OUT STD_LOGIC;
    S_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    S_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    S_3_ce0 : OUT STD_LOGIC;
    S_3_we0 : OUT STD_LOGIC;
    S_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    S_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    S_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    S_3_ce1 : OUT STD_LOGIC;
    S_3_we1 : OUT STD_LOGIC;
    S_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_0_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_0_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_0_o_ap_vld : OUT STD_LOGIC;
    P_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_1_o_ap_vld : OUT STD_LOGIC;
    P_2_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_2_o_ap_vld : OUT STD_LOGIC;
    P_3_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_3_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_3_o_ap_vld : OUT STD_LOGIC;
    P_4_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_4_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_4_o_ap_vld : OUT STD_LOGIC;
    P_5_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_5_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_5_o_ap_vld : OUT STD_LOGIC;
    P_6_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_6_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_6_o_ap_vld : OUT STD_LOGIC;
    P_7_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_7_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_7_o_ap_vld : OUT STD_LOGIC;
    P_8_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_8_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_8_o_ap_vld : OUT STD_LOGIC;
    P_9_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_9_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_9_o_ap_vld : OUT STD_LOGIC;
    P_10_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_10_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_10_o_ap_vld : OUT STD_LOGIC;
    P_11_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_11_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_11_o_ap_vld : OUT STD_LOGIC;
    P_12_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_12_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_12_o_ap_vld : OUT STD_LOGIC;
    P_13_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_13_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_13_o_ap_vld : OUT STD_LOGIC;
    P_14_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_14_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_14_o_ap_vld : OUT STD_LOGIC;
    P_15_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_15_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_15_o_ap_vld : OUT STD_LOGIC;
    P_16_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_16_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_16_o_ap_vld : OUT STD_LOGIC;
    P_17_i : IN STD_LOGIC_VECTOR (31 downto 0);
    P_17_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    P_17_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of Blowfish_SetKey is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (23 downto 0) := "000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (23 downto 0) := "000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (23 downto 0) := "000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (23 downto 0) := "000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (23 downto 0) := "000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (23 downto 0) := "000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (23 downto 0) := "000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (23 downto 0) := "000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (23 downto 0) := "000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (23 downto 0) := "001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (23 downto 0) := "010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln148_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_reg_257 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln159_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal tmp_32_fu_983_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_530 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_536 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_542 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_560 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_566 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_572 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_578 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_590 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_596 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_602 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_608 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_614 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_620 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_626 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_632 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_Encrypt_SetKey_fu_392_ap_ready : STD_LOGIC;
    signal grp_Encrypt_SetKey_fu_392_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal reg_641 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_16_fu_656_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_16_reg_1044 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal shl_ln_fu_662_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln_reg_1049 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln145_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_680_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_1057 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln150_fu_697_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln150_reg_1067 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal data_fu_710_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal i_fu_961_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal i_15_fu_973_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_15_reg_1110 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal trunc_ln171_fu_979_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln171_reg_1115 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln167_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal S_0_addr_reg_1132 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_1_addr_reg_1137 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_2_addr_reg_1142 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_3_addr_reg_1147 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_0_addr_1_reg_1152 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_1_addr_1_reg_1157 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_2_addr_1_reg_1162 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_3_addr_1_reg_1167 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_4_fu_1025_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_Encrypt_SetKey_fu_392_ap_start : STD_LOGIC;
    signal grp_Encrypt_SetKey_fu_392_ap_idle : STD_LOGIC;
    signal grp_Encrypt_SetKey_fu_392_left_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Encrypt_SetKey_fu_392_right_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Encrypt_SetKey_fu_392_S_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Encrypt_SetKey_fu_392_S_0_ce0 : STD_LOGIC;
    signal grp_Encrypt_SetKey_fu_392_S_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Encrypt_SetKey_fu_392_S_1_ce0 : STD_LOGIC;
    signal grp_Encrypt_SetKey_fu_392_S_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Encrypt_SetKey_fu_392_S_2_ce0 : STD_LOGIC;
    signal grp_Encrypt_SetKey_fu_392_S_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Encrypt_SetKey_fu_392_S_3_ce0 : STD_LOGIC;
    signal grp_Encrypt_SetKey_fu_392_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Encrypt_SetKey_fu_392_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal data_0_reg_269 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_0_reg_281 : STD_LOGIC_VECTOR (2 downto 0);
    signal UnifiedRetVal_i_reg_292 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_0_reg_333 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_0_reg_345 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_0_reg_357 : STD_LOGIC_VECTOR (4 downto 0);
    signal i2_0_reg_369 : STD_LOGIC_VECTOR (2 downto 0);
    signal j3_0_reg_380 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_Encrypt_SetKey_fu_392_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln150_fu_701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln171_fu_999_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln172_fu_1017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal left_1_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_1_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln152_fu_717_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal or_ln162_fu_901_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln148_fu_670_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_691_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_691_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_691_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln150_1_fu_706_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln169_fu_1007_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln172_fu_1011_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_691_ap_start : STD_LOGIC;
    signal grp_fu_691_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_condition_888 : BOOLEAN;

    component Encrypt_SetKey IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        left_read : IN STD_LOGIC_VECTOR (31 downto 0);
        right_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_8_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_9_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_10_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_11_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_12_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_13_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_14_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_15_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_16_read : IN STD_LOGIC_VECTOR (31 downto 0);
        P_17_read : IN STD_LOGIC_VECTOR (31 downto 0);
        S_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_0_ce0 : OUT STD_LOGIC;
        S_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_1_ce0 : OUT STD_LOGIC;
        S_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_2_ce0 : OUT STD_LOGIC;
        S_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        S_3_ce0 : OUT STD_LOGIC;
        S_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dut_urem_7ns_5ns_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;



begin
    grp_Encrypt_SetKey_fu_392 : component Encrypt_SetKey
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Encrypt_SetKey_fu_392_ap_start,
        ap_done => grp_Encrypt_SetKey_fu_392_ap_done,
        ap_idle => grp_Encrypt_SetKey_fu_392_ap_idle,
        ap_ready => grp_Encrypt_SetKey_fu_392_ap_ready,
        left_read => grp_Encrypt_SetKey_fu_392_left_read,
        right_read => grp_Encrypt_SetKey_fu_392_right_read,
        P_0_read => reg_620,
        P_1_read => reg_614,
        P_2_read => reg_608,
        P_3_read => reg_602,
        P_4_read => reg_596,
        P_5_read => reg_590,
        P_6_read => reg_584,
        P_7_read => reg_578,
        P_8_read => reg_572,
        P_9_read => reg_566,
        P_10_read => reg_560,
        P_11_read => reg_554,
        P_12_read => reg_548,
        P_13_read => reg_542,
        P_14_read => reg_536,
        P_15_read => reg_530,
        P_16_read => reg_524,
        P_17_read => reg_626,
        S_0_address0 => grp_Encrypt_SetKey_fu_392_S_0_address0,
        S_0_ce0 => grp_Encrypt_SetKey_fu_392_S_0_ce0,
        S_0_q0 => S_0_q0,
        S_1_address0 => grp_Encrypt_SetKey_fu_392_S_1_address0,
        S_1_ce0 => grp_Encrypt_SetKey_fu_392_S_1_ce0,
        S_1_q0 => S_1_q0,
        S_2_address0 => grp_Encrypt_SetKey_fu_392_S_2_address0,
        S_2_ce0 => grp_Encrypt_SetKey_fu_392_S_2_ce0,
        S_2_q0 => S_2_q0,
        S_3_address0 => grp_Encrypt_SetKey_fu_392_S_3_address0,
        S_3_ce0 => grp_Encrypt_SetKey_fu_392_S_3_ce0,
        S_3_q0 => S_3_q0,
        ap_return_0 => grp_Encrypt_SetKey_fu_392_ap_return_0,
        ap_return_1 => grp_Encrypt_SetKey_fu_392_ap_return_1);

    dut_urem_7ns_5ns_bkb_U30 : component dut_urem_7ns_5ns_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 11,
        din0_WIDTH => 7,
        din1_WIDTH => 5,
        dout_WIDTH => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_691_ap_start,
        done => grp_fu_691_ap_done,
        din0 => grp_fu_691_p0,
        din1 => grp_fu_691_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_691_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Encrypt_SetKey_fu_392_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Encrypt_SetKey_fu_392_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)))) then 
                    grp_Encrypt_SetKey_fu_392_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Encrypt_SetKey_fu_392_ap_ready = ap_const_logic_1)) then 
                    grp_Encrypt_SetKey_fu_392_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    UnifiedRetVal_i_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1))) then
                if ((ap_const_boolean_1 = ap_condition_888)) then 
                    UnifiedRetVal_i_reg_292 <= P_17_i;
                elsif ((i_0_reg_257 = ap_const_lv5_10)) then 
                    UnifiedRetVal_i_reg_292 <= P_16_i;
                elsif ((i_0_reg_257 = ap_const_lv5_F)) then 
                    UnifiedRetVal_i_reg_292 <= P_15_i;
                elsif ((i_0_reg_257 = ap_const_lv5_E)) then 
                    UnifiedRetVal_i_reg_292 <= P_14_i;
                elsif ((i_0_reg_257 = ap_const_lv5_D)) then 
                    UnifiedRetVal_i_reg_292 <= P_13_i;
                elsif ((i_0_reg_257 = ap_const_lv5_C)) then 
                    UnifiedRetVal_i_reg_292 <= P_12_i;
                elsif ((i_0_reg_257 = ap_const_lv5_B)) then 
                    UnifiedRetVal_i_reg_292 <= P_11_i;
                elsif ((i_0_reg_257 = ap_const_lv5_A)) then 
                    UnifiedRetVal_i_reg_292 <= P_10_i;
                elsif ((i_0_reg_257 = ap_const_lv5_9)) then 
                    UnifiedRetVal_i_reg_292 <= P_9_i;
                elsif ((i_0_reg_257 = ap_const_lv5_8)) then 
                    UnifiedRetVal_i_reg_292 <= P_8_i;
                elsif ((i_0_reg_257 = ap_const_lv5_7)) then 
                    UnifiedRetVal_i_reg_292 <= P_7_i;
                elsif ((i_0_reg_257 = ap_const_lv5_6)) then 
                    UnifiedRetVal_i_reg_292 <= P_6_i;
                elsif ((i_0_reg_257 = ap_const_lv5_5)) then 
                    UnifiedRetVal_i_reg_292 <= P_5_i;
                elsif ((i_0_reg_257 = ap_const_lv5_4)) then 
                    UnifiedRetVal_i_reg_292 <= P_4_i;
                elsif ((i_0_reg_257 = ap_const_lv5_3)) then 
                    UnifiedRetVal_i_reg_292 <= P_3_i;
                elsif ((i_0_reg_257 = ap_const_lv5_2)) then 
                    UnifiedRetVal_i_reg_292 <= P_2_i;
                elsif ((i_0_reg_257 = ap_const_lv5_1)) then 
                    UnifiedRetVal_i_reg_292 <= P_1_i;
                elsif ((i_0_reg_257 = ap_const_lv5_0)) then 
                    UnifiedRetVal_i_reg_292 <= P_0_i;
                end if;
            end if; 
        end if;
    end process;

    data_0_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                                data_0_reg_269(6 downto 0) <= data_fu_710_p3(6 downto 0);                data_0_reg_269(14 downto 8) <= data_fu_710_p3(14 downto 8);                data_0_reg_269(22 downto 16) <= data_fu_710_p3(22 downto 16);                data_0_reg_269(30 downto 24) <= data_fu_710_p3(30 downto 24);
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln145_fu_650_p2 = ap_const_lv1_0))) then 
                data_0_reg_269(0) <= '0';
                data_0_reg_269(1) <= '0';
                data_0_reg_269(2) <= '0';
                data_0_reg_269(3) <= '0';
                data_0_reg_269(4) <= '0';
                data_0_reg_269(5) <= '0';
                data_0_reg_269(6) <= '0';
                data_0_reg_269(8) <= '0';
                data_0_reg_269(9) <= '0';
                data_0_reg_269(10) <= '0';
                data_0_reg_269(11) <= '0';
                data_0_reg_269(12) <= '0';
                data_0_reg_269(13) <= '0';
                data_0_reg_269(14) <= '0';
                data_0_reg_269(16) <= '0';
                data_0_reg_269(17) <= '0';
                data_0_reg_269(18) <= '0';
                data_0_reg_269(19) <= '0';
                data_0_reg_269(20) <= '0';
                data_0_reg_269(21) <= '0';
                data_0_reg_269(22) <= '0';
                data_0_reg_269(24) <= '0';
                data_0_reg_269(25) <= '0';
                data_0_reg_269(26) <= '0';
                data_0_reg_269(27) <= '0';
                data_0_reg_269(28) <= '0';
                data_0_reg_269(29) <= '0';
                data_0_reg_269(30) <= '0';
            end if; 
        end if;
    end process;

    i1_0_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln145_fu_650_p2 = ap_const_lv1_1))) then 
                i1_0_reg_357 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i1_0_reg_357 <= i_fu_961_p2;
            end if; 
        end if;
    end process;

    i2_0_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_0))) then 
                i2_0_reg_369 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_1))) then 
                i2_0_reg_369 <= i_15_reg_1110;
            end if; 
        end if;
    end process;

    i_0_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                i_0_reg_257 <= i_16_reg_1044;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_257 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j3_0_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                j3_0_reg_380 <= j_4_fu_1025_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln167_fu_967_p2 = ap_const_lv1_0))) then 
                j3_0_reg_380 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_0_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                j_0_reg_281 <= j_reg_1057;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln145_fu_650_p2 = ap_const_lv1_0))) then 
                j_0_reg_281 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    left_0_reg_345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln145_fu_650_p2 = ap_const_lv1_1))) then 
                left_0_reg_345 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                left_0_reg_345 <= reg_632;
            end if; 
        end if;
    end process;

    left_1_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                left_1_fu_144 <= reg_632;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_0))) then 
                left_1_fu_144 <= left_0_reg_345;
            end if; 
        end if;
    end process;

    right_0_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln145_fu_650_p2 = ap_const_lv1_1))) then 
                right_0_reg_333 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                right_0_reg_333 <= reg_641;
            end if; 
        end if;
    end process;

    right_1_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                right_1_fu_148 <= reg_641;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_0))) then 
                right_1_fu_148 <= right_0_reg_333;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    S_0_addr_1_reg_1152(7 downto 1) <= zext_ln172_fu_1017_p1(8 - 1 downto 0)(7 downto 1);
                S_0_addr_reg_1132 <= zext_ln171_fu_999_p1(8 - 1 downto 0);
                    S_1_addr_1_reg_1157(7 downto 1) <= zext_ln172_fu_1017_p1(8 - 1 downto 0)(7 downto 1);
                S_1_addr_reg_1137 <= zext_ln171_fu_999_p1(8 - 1 downto 0);
                    S_2_addr_1_reg_1162(7 downto 1) <= zext_ln172_fu_1017_p1(8 - 1 downto 0)(7 downto 1);
                S_2_addr_reg_1142 <= zext_ln171_fu_999_p1(8 - 1 downto 0);
                    S_3_addr_1_reg_1167(7 downto 1) <= zext_ln172_fu_1017_p1(8 - 1 downto 0)(7 downto 1);
                S_3_addr_reg_1147 <= zext_ln171_fu_999_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                i_15_reg_1110 <= i_15_fu_973_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_16_reg_1044 <= i_16_fu_656_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                j_reg_1057 <= j_fu_680_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_10) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_524 <= P_16_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_F) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_530 <= P_15_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_E) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_536 <= P_14_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_D) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_542 <= P_13_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_C) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_548 <= P_12_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_B) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_554 <= P_11_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_A) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_560 <= P_10_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_9) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_566 <= P_9_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_8) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_572 <= P_8_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_7) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_578 <= P_7_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_6) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_584 <= P_6_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_5) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_590 <= P_5_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_4) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_596 <= P_4_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_3) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_602 <= P_3_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_2) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_608 <= P_2_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_1) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_614 <= P_1_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (i_0_reg_257 = ap_const_lv5_0) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_620 <= P_0_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_1)) or (not((i_0_reg_257 = ap_const_lv5_0)) and not((i_0_reg_257 = ap_const_lv5_1)) and not((i_0_reg_257 = ap_const_lv5_2)) and not((i_0_reg_257 = ap_const_lv5_3)) and not((i_0_reg_257 = ap_const_lv5_4)) and not((i_0_reg_257 = ap_const_lv5_5)) and not((i_0_reg_257 = ap_const_lv5_6)) and not((i_0_reg_257 = ap_const_lv5_7)) and not((i_0_reg_257 = ap_const_lv5_8)) and not((i_0_reg_257 = ap_const_lv5_9)) and not((i_0_reg_257 = ap_const_lv5_A)) and not((i_0_reg_257 = ap_const_lv5_B)) and not((i_0_reg_257 = ap_const_lv5_C)) and not((i_0_reg_257 = ap_const_lv5_D)) and not((i_0_reg_257 = ap_const_lv5_E)) and not((i_0_reg_257 = ap_const_lv5_F)) and not((i_0_reg_257 = ap_const_lv5_10)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1)))) then
                reg_626 <= P_17_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then
                reg_632 <= grp_Encrypt_SetKey_fu_392_ap_return_0;
                reg_641 <= grp_Encrypt_SetKey_fu_392_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln145_fu_650_p2 = ap_const_lv1_0))) then
                    shl_ln_reg_1049(6 downto 2) <= shl_ln_fu_662_p3(6 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    trunc_ln150_reg_1067(6 downto 0) <= trunc_ln150_fu_697_p1(6 downto 0);    trunc_ln150_reg_1067(14 downto 8) <= trunc_ln150_fu_697_p1(14 downto 8);    trunc_ln150_reg_1067(22 downto 16) <= trunc_ln150_fu_697_p1(22 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln167_fu_967_p2 = ap_const_lv1_0))) then
                trunc_ln171_reg_1115 <= trunc_ln171_fu_979_p1;
            end if;
        end if;
    end process;
    shl_ln_reg_1049(1 downto 0) <= "00";
    trunc_ln150_reg_1067(7) <= '0';
    trunc_ln150_reg_1067(15 downto 15) <= "0";
    trunc_ln150_reg_1067(23) <= '0';
    S_0_addr_1_reg_1152(0) <= '1';
    S_1_addr_1_reg_1157(0) <= '1';
    S_2_addr_1_reg_1162(0) <= '1';
    S_3_addr_1_reg_1167(0) <= '1';
    data_0_reg_269(7) <= '0';
    data_0_reg_269(15 downto 15) <= "0";
    data_0_reg_269(23 downto 23) <= "0";
    data_0_reg_269(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln148_fu_674_p2, ap_CS_fsm_state17, icmp_ln159_fu_831_p2, ap_CS_fsm_state22, tmp_32_fu_983_p3, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, ap_CS_fsm_state23, ap_CS_fsm_state2, icmp_ln145_fu_650_p2, ap_CS_fsm_state21, icmp_ln167_fu_967_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln145_fu_650_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln148_fu_674_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln159_fu_831_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln167_fu_967_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_32_fu_983_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    P_0_o_assign_proc : process(P_0_i, i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, grp_Encrypt_SetKey_fu_392_ap_return_0, i1_0_reg_357, xor_ln152_fu_717_p2, ap_CS_fsm_state15)
    begin
        if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            P_0_o <= grp_Encrypt_SetKey_fu_392_ap_return_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_0))) then 
            P_0_o <= xor_ln152_fu_717_p2;
        else 
            P_0_o <= P_0_i;
        end if; 
    end process;


    P_0_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, i1_0_reg_357, ap_CS_fsm_state15)
    begin
        if ((((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_0) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_0)))) then 
            P_0_o_ap_vld <= ap_const_logic_1;
        else 
            P_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_10_o_assign_proc : process(P_10_i, i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, grp_Encrypt_SetKey_fu_392_ap_return_0, i1_0_reg_357, xor_ln152_fu_717_p2, ap_CS_fsm_state15)
    begin
        if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_A) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            P_10_o <= grp_Encrypt_SetKey_fu_392_ap_return_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_A))) then 
            P_10_o <= xor_ln152_fu_717_p2;
        else 
            P_10_o <= P_10_i;
        end if; 
    end process;


    P_10_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, i1_0_reg_357, ap_CS_fsm_state15)
    begin
        if ((((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_A) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_A)))) then 
            P_10_o_ap_vld <= ap_const_logic_1;
        else 
            P_10_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_11_o_assign_proc : process(P_11_i, i_0_reg_257, reg_641, xor_ln152_fu_717_p2, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if (((or_ln162_fu_901_p2 = ap_const_lv5_B) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            P_11_o <= reg_641;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_B))) then 
            P_11_o <= xor_ln152_fu_717_p2;
        else 
            P_11_o <= P_11_i;
        end if; 
    end process;


    P_11_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if ((((or_ln162_fu_901_p2 = ap_const_lv5_B) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_B)))) then 
            P_11_o_ap_vld <= ap_const_logic_1;
        else 
            P_11_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_12_o_assign_proc : process(P_12_i, i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, grp_Encrypt_SetKey_fu_392_ap_return_0, i1_0_reg_357, xor_ln152_fu_717_p2, ap_CS_fsm_state15)
    begin
        if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_C) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            P_12_o <= grp_Encrypt_SetKey_fu_392_ap_return_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_C))) then 
            P_12_o <= xor_ln152_fu_717_p2;
        else 
            P_12_o <= P_12_i;
        end if; 
    end process;


    P_12_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, i1_0_reg_357, ap_CS_fsm_state15)
    begin
        if ((((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_C) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_C)))) then 
            P_12_o_ap_vld <= ap_const_logic_1;
        else 
            P_12_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_13_o_assign_proc : process(P_13_i, i_0_reg_257, reg_641, xor_ln152_fu_717_p2, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if (((or_ln162_fu_901_p2 = ap_const_lv5_D) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            P_13_o <= reg_641;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_D))) then 
            P_13_o <= xor_ln152_fu_717_p2;
        else 
            P_13_o <= P_13_i;
        end if; 
    end process;


    P_13_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if ((((or_ln162_fu_901_p2 = ap_const_lv5_D) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_D)))) then 
            P_13_o_ap_vld <= ap_const_logic_1;
        else 
            P_13_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_14_o_assign_proc : process(P_14_i, i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, grp_Encrypt_SetKey_fu_392_ap_return_0, i1_0_reg_357, xor_ln152_fu_717_p2, ap_CS_fsm_state15)
    begin
        if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18) and (i1_0_reg_357 = ap_const_lv5_E))) then 
            P_14_o <= grp_Encrypt_SetKey_fu_392_ap_return_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_E))) then 
            P_14_o <= xor_ln152_fu_717_p2;
        else 
            P_14_o <= P_14_i;
        end if; 
    end process;


    P_14_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, i1_0_reg_357, ap_CS_fsm_state15)
    begin
        if ((((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18) and (i1_0_reg_357 = ap_const_lv5_E)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_E)))) then 
            P_14_o_ap_vld <= ap_const_logic_1;
        else 
            P_14_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_15_o_assign_proc : process(P_15_i, i_0_reg_257, reg_641, xor_ln152_fu_717_p2, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (or_ln162_fu_901_p2 = ap_const_lv5_F))) then 
            P_15_o <= reg_641;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_F))) then 
            P_15_o <= xor_ln152_fu_717_p2;
        else 
            P_15_o <= P_15_i;
        end if; 
    end process;


    P_15_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state19) and (or_ln162_fu_901_p2 = ap_const_lv5_F)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_F)))) then 
            P_15_o_ap_vld <= ap_const_logic_1;
        else 
            P_15_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_16_o_assign_proc : process(P_16_i, i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, grp_Encrypt_SetKey_fu_392_ap_return_0, i1_0_reg_357, xor_ln152_fu_717_p2, ap_CS_fsm_state15)
    begin
        if ((not((i1_0_reg_357 = ap_const_lv5_0)) and not((i1_0_reg_357 = ap_const_lv5_2)) and not((i1_0_reg_357 = ap_const_lv5_4)) and not((i1_0_reg_357 = ap_const_lv5_6)) and not((i1_0_reg_357 = ap_const_lv5_8)) and not((i1_0_reg_357 = ap_const_lv5_A)) and not((i1_0_reg_357 = ap_const_lv5_C)) and not((i1_0_reg_357 = ap_const_lv5_E)) and (grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            P_16_o <= grp_Encrypt_SetKey_fu_392_ap_return_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_10))) then 
            P_16_o <= xor_ln152_fu_717_p2;
        else 
            P_16_o <= P_16_i;
        end if; 
    end process;


    P_16_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, i1_0_reg_357, ap_CS_fsm_state15)
    begin
        if (((not((i1_0_reg_357 = ap_const_lv5_0)) and not((i1_0_reg_357 = ap_const_lv5_2)) and not((i1_0_reg_357 = ap_const_lv5_4)) and not((i1_0_reg_357 = ap_const_lv5_6)) and not((i1_0_reg_357 = ap_const_lv5_8)) and not((i1_0_reg_357 = ap_const_lv5_A)) and not((i1_0_reg_357 = ap_const_lv5_C)) and not((i1_0_reg_357 = ap_const_lv5_E)) and (grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_10)))) then 
            P_16_o_ap_vld <= ap_const_logic_1;
        else 
            P_16_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_17_o_assign_proc : process(P_17_i, i_0_reg_257, reg_641, xor_ln152_fu_717_p2, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if ((not((or_ln162_fu_901_p2 = ap_const_lv5_1)) and not((or_ln162_fu_901_p2 = ap_const_lv5_3)) and not((or_ln162_fu_901_p2 = ap_const_lv5_5)) and not((or_ln162_fu_901_p2 = ap_const_lv5_7)) and not((or_ln162_fu_901_p2 = ap_const_lv5_9)) and not((or_ln162_fu_901_p2 = ap_const_lv5_B)) and not((or_ln162_fu_901_p2 = ap_const_lv5_D)) and not((or_ln162_fu_901_p2 = ap_const_lv5_F)) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            P_17_o <= reg_641;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and ((i_0_reg_257 = ap_const_lv5_11) or ((i_0_reg_257 = ap_const_lv5_12) or ((i_0_reg_257 = ap_const_lv5_13) or ((i_0_reg_257 = ap_const_lv5_14) or ((i_0_reg_257 = ap_const_lv5_15) or ((i_0_reg_257 = ap_const_lv5_16) or ((i_0_reg_257 = ap_const_lv5_17) or ((i_0_reg_257 = ap_const_lv5_18) or ((i_0_reg_257 = ap_const_lv5_19) or ((i_0_reg_257 = ap_const_lv5_1A) or ((i_0_reg_257 = ap_const_lv5_1B) or ((i_0_reg_257 = ap_const_lv5_1C) or ((i_0_reg_257 = ap_const_lv5_1D) or ((i_0_reg_257 = ap_const_lv5_1E) or (i_0_reg_257 = ap_const_lv5_1F))))))))))))))))) then 
            P_17_o <= xor_ln152_fu_717_p2;
        else 
            P_17_o <= P_17_i;
        end if; 
    end process;


    P_17_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if (((not((or_ln162_fu_901_p2 = ap_const_lv5_1)) and not((or_ln162_fu_901_p2 = ap_const_lv5_3)) and not((or_ln162_fu_901_p2 = ap_const_lv5_5)) and not((or_ln162_fu_901_p2 = ap_const_lv5_7)) and not((or_ln162_fu_901_p2 = ap_const_lv5_9)) and not((or_ln162_fu_901_p2 = ap_const_lv5_B)) and not((or_ln162_fu_901_p2 = ap_const_lv5_D)) and not((or_ln162_fu_901_p2 = ap_const_lv5_F)) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and ((i_0_reg_257 = ap_const_lv5_11) or ((i_0_reg_257 = ap_const_lv5_12) or ((i_0_reg_257 = ap_const_lv5_13) or ((i_0_reg_257 = ap_const_lv5_14) or ((i_0_reg_257 = ap_const_lv5_15) or ((i_0_reg_257 = ap_const_lv5_16) or ((i_0_reg_257 = ap_const_lv5_17) or ((i_0_reg_257 = ap_const_lv5_18) or ((i_0_reg_257 = ap_const_lv5_19) or ((i_0_reg_257 = ap_const_lv5_1A) or ((i_0_reg_257 = ap_const_lv5_1B) or ((i_0_reg_257 = ap_const_lv5_1C) or ((i_0_reg_257 = ap_const_lv5_1D) or ((i_0_reg_257 = ap_const_lv5_1E) or (i_0_reg_257 = ap_const_lv5_1F)))))))))))))))))) then 
            P_17_o_ap_vld <= ap_const_logic_1;
        else 
            P_17_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_1_o_assign_proc : process(P_1_i, i_0_reg_257, reg_641, xor_ln152_fu_717_p2, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if (((or_ln162_fu_901_p2 = ap_const_lv5_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            P_1_o <= reg_641;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_1))) then 
            P_1_o <= xor_ln152_fu_717_p2;
        else 
            P_1_o <= P_1_i;
        end if; 
    end process;


    P_1_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if ((((or_ln162_fu_901_p2 = ap_const_lv5_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_1)))) then 
            P_1_o_ap_vld <= ap_const_logic_1;
        else 
            P_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_2_o_assign_proc : process(P_2_i, i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, grp_Encrypt_SetKey_fu_392_ap_return_0, i1_0_reg_357, xor_ln152_fu_717_p2, ap_CS_fsm_state15)
    begin
        if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_2) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            P_2_o <= grp_Encrypt_SetKey_fu_392_ap_return_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_2))) then 
            P_2_o <= xor_ln152_fu_717_p2;
        else 
            P_2_o <= P_2_i;
        end if; 
    end process;


    P_2_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, i1_0_reg_357, ap_CS_fsm_state15)
    begin
        if ((((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_2) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_2)))) then 
            P_2_o_ap_vld <= ap_const_logic_1;
        else 
            P_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_3_o_assign_proc : process(P_3_i, i_0_reg_257, reg_641, xor_ln152_fu_717_p2, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if (((or_ln162_fu_901_p2 = ap_const_lv5_3) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            P_3_o <= reg_641;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_3))) then 
            P_3_o <= xor_ln152_fu_717_p2;
        else 
            P_3_o <= P_3_i;
        end if; 
    end process;


    P_3_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if ((((or_ln162_fu_901_p2 = ap_const_lv5_3) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_3)))) then 
            P_3_o_ap_vld <= ap_const_logic_1;
        else 
            P_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_4_o_assign_proc : process(P_4_i, i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, grp_Encrypt_SetKey_fu_392_ap_return_0, i1_0_reg_357, xor_ln152_fu_717_p2, ap_CS_fsm_state15)
    begin
        if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_4) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            P_4_o <= grp_Encrypt_SetKey_fu_392_ap_return_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_4))) then 
            P_4_o <= xor_ln152_fu_717_p2;
        else 
            P_4_o <= P_4_i;
        end if; 
    end process;


    P_4_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, i1_0_reg_357, ap_CS_fsm_state15)
    begin
        if ((((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_4) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_4)))) then 
            P_4_o_ap_vld <= ap_const_logic_1;
        else 
            P_4_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_5_o_assign_proc : process(P_5_i, i_0_reg_257, reg_641, xor_ln152_fu_717_p2, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if (((or_ln162_fu_901_p2 = ap_const_lv5_5) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            P_5_o <= reg_641;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_5))) then 
            P_5_o <= xor_ln152_fu_717_p2;
        else 
            P_5_o <= P_5_i;
        end if; 
    end process;


    P_5_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if ((((or_ln162_fu_901_p2 = ap_const_lv5_5) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_5)))) then 
            P_5_o_ap_vld <= ap_const_logic_1;
        else 
            P_5_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_6_o_assign_proc : process(P_6_i, i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, grp_Encrypt_SetKey_fu_392_ap_return_0, i1_0_reg_357, xor_ln152_fu_717_p2, ap_CS_fsm_state15)
    begin
        if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_6) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            P_6_o <= grp_Encrypt_SetKey_fu_392_ap_return_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_6))) then 
            P_6_o <= xor_ln152_fu_717_p2;
        else 
            P_6_o <= P_6_i;
        end if; 
    end process;


    P_6_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, i1_0_reg_357, ap_CS_fsm_state15)
    begin
        if ((((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_6) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_6)))) then 
            P_6_o_ap_vld <= ap_const_logic_1;
        else 
            P_6_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_7_o_assign_proc : process(P_7_i, i_0_reg_257, reg_641, xor_ln152_fu_717_p2, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if (((or_ln162_fu_901_p2 = ap_const_lv5_7) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            P_7_o <= reg_641;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_7))) then 
            P_7_o <= xor_ln152_fu_717_p2;
        else 
            P_7_o <= P_7_i;
        end if; 
    end process;


    P_7_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if ((((or_ln162_fu_901_p2 = ap_const_lv5_7) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_7)))) then 
            P_7_o_ap_vld <= ap_const_logic_1;
        else 
            P_7_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_8_o_assign_proc : process(P_8_i, i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, grp_Encrypt_SetKey_fu_392_ap_return_0, i1_0_reg_357, xor_ln152_fu_717_p2, ap_CS_fsm_state15)
    begin
        if (((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_8) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            P_8_o <= grp_Encrypt_SetKey_fu_392_ap_return_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_8))) then 
            P_8_o <= xor_ln152_fu_717_p2;
        else 
            P_8_o <= P_8_i;
        end if; 
    end process;


    P_8_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state18, grp_Encrypt_SetKey_fu_392_ap_done, i1_0_reg_357, ap_CS_fsm_state15)
    begin
        if ((((grp_Encrypt_SetKey_fu_392_ap_done = ap_const_logic_1) and (i1_0_reg_357 = ap_const_lv5_8) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_8)))) then 
            P_8_o_ap_vld <= ap_const_logic_1;
        else 
            P_8_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    P_9_o_assign_proc : process(P_9_i, i_0_reg_257, reg_641, xor_ln152_fu_717_p2, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if (((or_ln162_fu_901_p2 = ap_const_lv5_9) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            P_9_o <= reg_641;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_9))) then 
            P_9_o <= xor_ln152_fu_717_p2;
        else 
            P_9_o <= P_9_i;
        end if; 
    end process;


    P_9_o_ap_vld_assign_proc : process(i_0_reg_257, ap_CS_fsm_state15, ap_CS_fsm_state19, or_ln162_fu_901_p2)
    begin
        if ((((or_ln162_fu_901_p2 = ap_const_lv5_9) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (i_0_reg_257 = ap_const_lv5_9)))) then 
            P_9_o_ap_vld <= ap_const_logic_1;
        else 
            P_9_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    S_0_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state23, S_0_addr_reg_1132, ap_CS_fsm_state24, grp_Encrypt_SetKey_fu_392_S_0_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_0_address0 <= S_0_addr_reg_1132;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            S_0_address0 <= grp_Encrypt_SetKey_fu_392_S_0_address0;
        else 
            S_0_address0 <= "XXXXXXXX";
        end if; 
    end process;

    S_0_address1 <= S_0_addr_1_reg_1152;

    S_0_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state24, grp_Encrypt_SetKey_fu_392_S_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            S_0_ce0 <= grp_Encrypt_SetKey_fu_392_S_0_ce0;
        else 
            S_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    S_0_ce1_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_0_ce1 <= ap_const_logic_1;
        else 
            S_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    S_0_d0 <= reg_632;
    S_0_d1 <= reg_641;

    S_0_we0_assign_proc : process(trunc_ln171_reg_1115, ap_CS_fsm_state24)
    begin
        if (((trunc_ln171_reg_1115 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            S_0_we0 <= ap_const_logic_1;
        else 
            S_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    S_0_we1_assign_proc : process(trunc_ln171_reg_1115, ap_CS_fsm_state24)
    begin
        if (((trunc_ln171_reg_1115 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            S_0_we1 <= ap_const_logic_1;
        else 
            S_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    S_1_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state23, S_1_addr_reg_1137, ap_CS_fsm_state24, grp_Encrypt_SetKey_fu_392_S_1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_1_address0 <= S_1_addr_reg_1137;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            S_1_address0 <= grp_Encrypt_SetKey_fu_392_S_1_address0;
        else 
            S_1_address0 <= "XXXXXXXX";
        end if; 
    end process;

    S_1_address1 <= S_1_addr_1_reg_1157;

    S_1_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state24, grp_Encrypt_SetKey_fu_392_S_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            S_1_ce0 <= grp_Encrypt_SetKey_fu_392_S_1_ce0;
        else 
            S_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    S_1_ce1_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_1_ce1 <= ap_const_logic_1;
        else 
            S_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    S_1_d0 <= reg_632;
    S_1_d1 <= reg_641;

    S_1_we0_assign_proc : process(trunc_ln171_reg_1115, ap_CS_fsm_state24)
    begin
        if (((trunc_ln171_reg_1115 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            S_1_we0 <= ap_const_logic_1;
        else 
            S_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    S_1_we1_assign_proc : process(trunc_ln171_reg_1115, ap_CS_fsm_state24)
    begin
        if (((trunc_ln171_reg_1115 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            S_1_we1 <= ap_const_logic_1;
        else 
            S_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    S_2_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state23, S_2_addr_reg_1142, ap_CS_fsm_state24, grp_Encrypt_SetKey_fu_392_S_2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_2_address0 <= S_2_addr_reg_1142;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            S_2_address0 <= grp_Encrypt_SetKey_fu_392_S_2_address0;
        else 
            S_2_address0 <= "XXXXXXXX";
        end if; 
    end process;

    S_2_address1 <= S_2_addr_1_reg_1162;

    S_2_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state24, grp_Encrypt_SetKey_fu_392_S_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            S_2_ce0 <= grp_Encrypt_SetKey_fu_392_S_2_ce0;
        else 
            S_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    S_2_ce1_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_2_ce1 <= ap_const_logic_1;
        else 
            S_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    S_2_d0 <= reg_632;
    S_2_d1 <= reg_641;

    S_2_we0_assign_proc : process(trunc_ln171_reg_1115, ap_CS_fsm_state24)
    begin
        if (((trunc_ln171_reg_1115 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            S_2_we0 <= ap_const_logic_1;
        else 
            S_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    S_2_we1_assign_proc : process(trunc_ln171_reg_1115, ap_CS_fsm_state24)
    begin
        if (((trunc_ln171_reg_1115 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            S_2_we1 <= ap_const_logic_1;
        else 
            S_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    S_3_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state23, S_3_addr_reg_1147, ap_CS_fsm_state24, grp_Encrypt_SetKey_fu_392_S_3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_3_address0 <= S_3_addr_reg_1147;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            S_3_address0 <= grp_Encrypt_SetKey_fu_392_S_3_address0;
        else 
            S_3_address0 <= "XXXXXXXX";
        end if; 
    end process;

    S_3_address1 <= S_3_addr_1_reg_1167;

    S_3_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state24, grp_Encrypt_SetKey_fu_392_S_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            S_3_ce0 <= grp_Encrypt_SetKey_fu_392_S_3_ce0;
        else 
            S_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    S_3_ce1_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            S_3_ce1 <= ap_const_logic_1;
        else 
            S_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    S_3_d0 <= reg_632;
    S_3_d1 <= reg_641;

    S_3_we0_assign_proc : process(trunc_ln171_reg_1115, ap_CS_fsm_state24)
    begin
        if (((trunc_ln171_reg_1115 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            S_3_we0 <= ap_const_logic_1;
        else 
            S_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    S_3_we1_assign_proc : process(trunc_ln171_reg_1115, ap_CS_fsm_state24)
    begin
        if (((trunc_ln171_reg_1115 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            S_3_we1 <= ap_const_logic_1;
        else 
            S_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_condition_888_assign_proc : process(i_0_reg_257)
    begin
                ap_condition_888 <= (not((i_0_reg_257 = ap_const_lv5_0)) and not((i_0_reg_257 = ap_const_lv5_1)) and not((i_0_reg_257 = ap_const_lv5_2)) and not((i_0_reg_257 = ap_const_lv5_3)) and not((i_0_reg_257 = ap_const_lv5_4)) and not((i_0_reg_257 = ap_const_lv5_5)) and not((i_0_reg_257 = ap_const_lv5_6)) and not((i_0_reg_257 = ap_const_lv5_7)) and not((i_0_reg_257 = ap_const_lv5_8)) and not((i_0_reg_257 = ap_const_lv5_9)) and not((i_0_reg_257 = ap_const_lv5_A)) and not((i_0_reg_257 = ap_const_lv5_B)) and not((i_0_reg_257 = ap_const_lv5_C)) and not((i_0_reg_257 = ap_const_lv5_D)) and not((i_0_reg_257 = ap_const_lv5_E)) and not((i_0_reg_257 = ap_const_lv5_F)) and not((i_0_reg_257 = ap_const_lv5_10)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state21, icmp_ln167_fu_967_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln167_fu_967_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state21, icmp_ln167_fu_967_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln167_fu_967_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    data_fu_710_p3 <= (trunc_ln150_reg_1067 & zext_ln150_1_fu_706_p1);
    grp_Encrypt_SetKey_fu_392_ap_start <= grp_Encrypt_SetKey_fu_392_ap_start_reg;

    grp_Encrypt_SetKey_fu_392_left_read_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state23, left_0_reg_345, left_1_fu_144)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_Encrypt_SetKey_fu_392_left_read <= left_1_fu_144;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_Encrypt_SetKey_fu_392_left_read <= left_0_reg_345;
        else 
            grp_Encrypt_SetKey_fu_392_left_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_Encrypt_SetKey_fu_392_right_read_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state23, right_0_reg_333, right_1_fu_148)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_Encrypt_SetKey_fu_392_right_read <= right_1_fu_148;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_Encrypt_SetKey_fu_392_right_read <= right_0_reg_333;
        else 
            grp_Encrypt_SetKey_fu_392_right_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_691_ap_start_assign_proc : process(ap_CS_fsm_state3, icmp_ln148_fu_674_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln148_fu_674_p2 = ap_const_lv1_0))) then 
            grp_fu_691_ap_start <= ap_const_logic_1;
        else 
            grp_fu_691_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_691_p0 <= std_logic_vector(unsigned(shl_ln_reg_1049) + unsigned(zext_ln148_fu_670_p1));
    grp_fu_691_p1 <= ap_const_lv7_9(5 - 1 downto 0);
    i_15_fu_973_p2 <= std_logic_vector(unsigned(i2_0_reg_369) + unsigned(ap_const_lv3_1));
    i_16_fu_656_p2 <= std_logic_vector(unsigned(i_0_reg_257) + unsigned(ap_const_lv5_1));
    i_fu_961_p2 <= std_logic_vector(unsigned(i1_0_reg_357) + unsigned(ap_const_lv5_2));
    icmp_ln145_fu_650_p2 <= "1" when (i_0_reg_257 = ap_const_lv5_12) else "0";
    icmp_ln148_fu_674_p2 <= "1" when (j_0_reg_281 = ap_const_lv3_4) else "0";
    icmp_ln159_fu_831_p2 <= "1" when (unsigned(i1_0_reg_357) < unsigned(ap_const_lv5_12)) else "0";
    icmp_ln167_fu_967_p2 <= "1" when (i2_0_reg_369 = ap_const_lv3_4) else "0";
    j_4_fu_1025_p2 <= std_logic_vector(unsigned(j3_0_reg_380) + unsigned(ap_const_lv9_2));
    j_fu_680_p2 <= std_logic_vector(unsigned(j_0_reg_281) + unsigned(ap_const_lv3_1));
    key_address0 <= zext_ln150_fu_701_p1(6 - 1 downto 0);

    key_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            key_ce0 <= ap_const_logic_1;
        else 
            key_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln162_fu_901_p2 <= (i1_0_reg_357 or ap_const_lv5_1);
    or_ln172_fu_1011_p2 <= (trunc_ln169_fu_1007_p1 or ap_const_lv8_1);
    shl_ln_fu_662_p3 <= (i_0_reg_257 & ap_const_lv2_0);
    tmp_32_fu_983_p3 <= j3_0_reg_380(8 downto 8);
    trunc_ln150_fu_697_p1 <= data_0_reg_269(24 - 1 downto 0);
    trunc_ln169_fu_1007_p1 <= j3_0_reg_380(8 - 1 downto 0);
    trunc_ln171_fu_979_p1 <= i2_0_reg_369(2 - 1 downto 0);
    xor_ln152_fu_717_p2 <= (data_0_reg_269 xor UnifiedRetVal_i_reg_292);
    zext_ln148_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_281),7));
    zext_ln150_1_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(key_q0),8));
    zext_ln150_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_691_p2),64));
    zext_ln171_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j3_0_reg_380),64));
    zext_ln172_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln172_fu_1011_p2),64));
end behav;
