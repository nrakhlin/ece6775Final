// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _lfsr_HH_
#define _lfsr_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct lfsr : public sc_module {
    // Port declarations 6
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<24> > seed_V;
    sc_out< sc_lv<24> > ap_return;
    // Port declarations for the virtual clock. 
    sc_in_clk ap_virtual_clock;


    // Module declarations
    lfsr(sc_module_name name);
    SC_HAS_PROCESS(lfsr);

    ~lfsr();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<1> > tmp_1_fu_38_p3;
    sc_signal< sc_lv<1> > tmp_fu_30_p3;
    sc_signal< sc_lv<1> > tmp_2_fu_46_p3;
    sc_signal< sc_lv<1> > tmp_3_fu_54_p3;
    sc_signal< sc_lv<1> > xor_ln301_1_fu_68_p2;
    sc_signal< sc_lv<1> > xor_ln301_fu_62_p2;
    sc_signal< sc_lv<23> > trunc_ln1356_fu_80_p1;
    sc_signal< sc_lv<1> > feedback_V_fu_74_p2;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_feedback_V_fu_74_p2();
    void thread_tmp_1_fu_38_p3();
    void thread_tmp_2_fu_46_p3();
    void thread_tmp_3_fu_54_p3();
    void thread_tmp_fu_30_p3();
    void thread_trunc_ln1356_fu_80_p1();
    void thread_xor_ln301_1_fu_68_p2();
    void thread_xor_ln301_fu_62_p2();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
