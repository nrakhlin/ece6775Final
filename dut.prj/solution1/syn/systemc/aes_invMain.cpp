// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "aes_invMain.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic aes_invMain::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic aes_invMain::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> aes_invMain::ap_ST_fsm_state1 = "1";
const sc_lv<18> aes_invMain::ap_ST_fsm_state2 = "10";
const sc_lv<18> aes_invMain::ap_ST_fsm_state3 = "100";
const sc_lv<18> aes_invMain::ap_ST_fsm_state4 = "1000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state5 = "10000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state6 = "100000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> aes_invMain::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> aes_invMain::ap_const_lv32_2 = "10";
const sc_lv<1> aes_invMain::ap_const_lv1_0 = "0";
const sc_lv<32> aes_invMain::ap_const_lv32_4 = "100";
const sc_lv<32> aes_invMain::ap_const_lv32_6 = "110";
const sc_lv<32> aes_invMain::ap_const_lv32_7 = "111";
const sc_lv<32> aes_invMain::ap_const_lv32_9 = "1001";
const sc_lv<1> aes_invMain::ap_const_lv1_1 = "1";
const sc_lv<32> aes_invMain::ap_const_lv32_D = "1101";
const sc_lv<32> aes_invMain::ap_const_lv32_E = "1110";
const sc_lv<32> aes_invMain::ap_const_lv32_10 = "10000";
const sc_lv<5> aes_invMain::ap_const_lv5_0 = "00000";
const sc_lv<32> aes_invMain::ap_const_lv32_1 = "1";
const sc_lv<32> aes_invMain::ap_const_lv32_3 = "11";
const sc_lv<32> aes_invMain::ap_const_lv32_B = "1011";
const sc_lv<4> aes_invMain::ap_const_lv4_9 = "1001";
const sc_lv<32> aes_invMain::ap_const_lv32_5 = "101";
const bool aes_invMain::ap_const_boolean_0 = false;
const sc_lv<32> aes_invMain::ap_const_lv32_8 = "1000";
const sc_lv<32> aes_invMain::ap_const_lv32_A = "1010";
const sc_lv<32> aes_invMain::ap_const_lv32_C = "1100";
const sc_lv<32> aes_invMain::ap_const_lv32_F = "1111";
const sc_lv<32> aes_invMain::ap_const_lv32_11 = "10001";
const sc_lv<9> aes_invMain::ap_const_lv9_A0 = "10100000";
const sc_lv<9> aes_invMain::ap_const_lv9_0 = "000000000";
const sc_lv<5> aes_invMain::ap_const_lv5_10 = "10000";
const sc_lv<5> aes_invMain::ap_const_lv5_1 = "1";
const sc_lv<4> aes_invMain::ap_const_lv4_0 = "0000";
const sc_lv<4> aes_invMain::ap_const_lv4_F = "1111";
const bool aes_invMain::ap_const_boolean_1 = true;

aes_invMain::aes_invMain(sc_module_name name) : sc_module(name), mVcdFile(0) {
    rsbox_U = new aes_invMain_rsbox("rsbox_U");
    rsbox_U->clk(ap_clk);
    rsbox_U->reset(ap_rst);
    rsbox_U->address0(rsbox_address0);
    rsbox_U->ce0(rsbox_ce0);
    rsbox_U->q0(rsbox_q0);
    roundKey_U = new aes_invMain_roundcud("roundKey_U");
    roundKey_U->clk(ap_clk);
    roundKey_U->reset(ap_rst);
    roundKey_U->address0(roundKey_address0);
    roundKey_U->ce0(roundKey_ce0);
    roundKey_U->we0(roundKey_we0);
    roundKey_U->d0(grp_createRoundKey_fu_216_roundKey_d0);
    roundKey_U->q0(roundKey_q0);
    grp_invMixColumns_fu_204 = new invMixColumns("grp_invMixColumns_fu_204");
    grp_invMixColumns_fu_204->ap_clk(ap_clk);
    grp_invMixColumns_fu_204->ap_rst(ap_rst);
    grp_invMixColumns_fu_204->ap_start(grp_invMixColumns_fu_204_ap_start);
    grp_invMixColumns_fu_204->ap_done(grp_invMixColumns_fu_204_ap_done);
    grp_invMixColumns_fu_204->ap_idle(grp_invMixColumns_fu_204_ap_idle);
    grp_invMixColumns_fu_204->ap_ready(grp_invMixColumns_fu_204_ap_ready);
    grp_invMixColumns_fu_204->state_address0(grp_invMixColumns_fu_204_state_address0);
    grp_invMixColumns_fu_204->state_ce0(grp_invMixColumns_fu_204_state_ce0);
    grp_invMixColumns_fu_204->state_we0(grp_invMixColumns_fu_204_state_we0);
    grp_invMixColumns_fu_204->state_d0(grp_invMixColumns_fu_204_state_d0);
    grp_invMixColumns_fu_204->state_q0(state_q0);
    grp_invShiftRows_fu_210 = new invShiftRows("grp_invShiftRows_fu_210");
    grp_invShiftRows_fu_210->ap_clk(ap_clk);
    grp_invShiftRows_fu_210->ap_rst(ap_rst);
    grp_invShiftRows_fu_210->ap_start(grp_invShiftRows_fu_210_ap_start);
    grp_invShiftRows_fu_210->ap_done(grp_invShiftRows_fu_210_ap_done);
    grp_invShiftRows_fu_210->ap_idle(grp_invShiftRows_fu_210_ap_idle);
    grp_invShiftRows_fu_210->ap_ready(grp_invShiftRows_fu_210_ap_ready);
    grp_invShiftRows_fu_210->state_address0(grp_invShiftRows_fu_210_state_address0);
    grp_invShiftRows_fu_210->state_ce0(grp_invShiftRows_fu_210_state_ce0);
    grp_invShiftRows_fu_210->state_we0(grp_invShiftRows_fu_210_state_we0);
    grp_invShiftRows_fu_210->state_d0(grp_invShiftRows_fu_210_state_d0);
    grp_invShiftRows_fu_210->state_q0(state_q0);
    grp_createRoundKey_fu_216 = new createRoundKey("grp_createRoundKey_fu_216");
    grp_createRoundKey_fu_216->ap_clk(ap_clk);
    grp_createRoundKey_fu_216->ap_rst(ap_rst);
    grp_createRoundKey_fu_216->ap_start(grp_createRoundKey_fu_216_ap_start);
    grp_createRoundKey_fu_216->ap_done(grp_createRoundKey_fu_216_ap_done);
    grp_createRoundKey_fu_216->ap_idle(grp_createRoundKey_fu_216_ap_idle);
    grp_createRoundKey_fu_216->ap_ready(grp_createRoundKey_fu_216_ap_ready);
    grp_createRoundKey_fu_216->expandedKey_offset(grp_createRoundKey_fu_216_expandedKey_offset);
    grp_createRoundKey_fu_216->roundKey_address0(grp_createRoundKey_fu_216_roundKey_address0);
    grp_createRoundKey_fu_216->roundKey_ce0(grp_createRoundKey_fu_216_roundKey_ce0);
    grp_createRoundKey_fu_216->roundKey_we0(grp_createRoundKey_fu_216_roundKey_we0);
    grp_createRoundKey_fu_216->roundKey_d0(grp_createRoundKey_fu_216_roundKey_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln603_fu_311_p2);
    sensitive << ( i_reg_148 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state13_on_subcall_done);
    sensitive << ( grp_invShiftRows_fu_210_ap_done );
    sensitive << ( grp_createRoundKey_fu_216_ap_done );

    SC_METHOD(thread_ap_block_state6_on_subcall_done);
    sensitive << ( grp_invShiftRows_fu_210_ap_done );
    sensitive << ( grp_createRoundKey_fu_216_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln299_2_fu_339_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln299_2_fu_339_p2 );

    SC_METHOD(thread_grp_createRoundKey_fu_216_ap_start);
    sensitive << ( grp_createRoundKey_fu_216_ap_start_reg );

    SC_METHOD(thread_grp_createRoundKey_fu_216_expandedKey_offset);
    sensitive << ( zext_ln605_reg_378 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_227_p2);
    sensitive << ( state_q0 );
    sensitive << ( roundKey_q0 );

    SC_METHOD(thread_grp_invMixColumns_fu_204_ap_start);
    sensitive << ( grp_invMixColumns_fu_204_ap_start_reg );

    SC_METHOD(thread_grp_invShiftRows_fu_210_ap_start);
    sensitive << ( grp_invShiftRows_fu_210_ap_start_reg );

    SC_METHOD(thread_i_2_fu_240_p2);
    sensitive << ( i_0_i_reg_137 );

    SC_METHOD(thread_i_3_fu_323_p2);
    sensitive << ( i_0_i1_reg_182 );

    SC_METHOD(thread_i_4_fu_277_p2);
    sensitive << ( i_0_i_i_reg_160 );

    SC_METHOD(thread_i_5_fu_345_p2);
    sensitive << ( i_0_i5_reg_193 );

    SC_METHOD(thread_i_6_fu_299_p2);
    sensitive << ( i_0_i2_i_reg_171 );

    SC_METHOD(thread_icmp_ln299_1_fu_293_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_0_i2_i_reg_171 );

    SC_METHOD(thread_icmp_ln299_2_fu_339_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( i_0_i5_reg_193 );

    SC_METHOD(thread_icmp_ln299_fu_234_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_i_reg_137 );

    SC_METHOD(thread_icmp_ln508_1_fu_317_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_0_i1_reg_182 );

    SC_METHOD(thread_icmp_ln508_fu_271_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_0_i_i_reg_160 );

    SC_METHOD(thread_icmp_ln603_fu_252_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_reg_148 );

    SC_METHOD(thread_roundKey_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( grp_createRoundKey_fu_216_roundKey_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln300_fu_246_p1 );
    sensitive << ( zext_ln300_1_fu_305_p1 );
    sensitive << ( zext_ln300_2_fu_351_p1 );

    SC_METHOD(thread_roundKey_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( grp_createRoundKey_fu_216_roundKey_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_roundKey_we0);
    sensitive << ( grp_createRoundKey_fu_216_roundKey_we0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_rsbox_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln164_fu_288_p1 );
    sensitive << ( zext_ln164_1_fu_334_p1 );

    SC_METHOD(thread_rsbox_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_shl_ln_fu_258_p3);
    sensitive << ( i_reg_148 );

    SC_METHOD(thread_state_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_addr_reg_365 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( state_addr_5_reg_391 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( state_addr_7_reg_409 );
    sensitive << ( icmp_ln299_1_fu_293_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( state_addr_6_reg_432 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( state_addr_8_reg_450 );
    sensitive << ( grp_invMixColumns_fu_204_state_address0 );
    sensitive << ( grp_invShiftRows_fu_210_state_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( zext_ln300_fu_246_p1 );
    sensitive << ( zext_ln509_fu_283_p1 );
    sensitive << ( zext_ln300_1_fu_305_p1 );
    sensitive << ( zext_ln509_1_fu_329_p1 );
    sensitive << ( zext_ln300_2_fu_351_p1 );

    SC_METHOD(thread_state_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln299_1_fu_293_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( grp_invMixColumns_fu_204_state_ce0 );
    sensitive << ( grp_invShiftRows_fu_210_state_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_d0);
    sensitive << ( rsbox_q0 );
    sensitive << ( grp_invMixColumns_fu_204_state_d0 );
    sensitive << ( grp_invShiftRows_fu_210_state_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_fu_227_p2 );

    SC_METHOD(thread_state_we0);
    sensitive << ( grp_invMixColumns_fu_204_state_we0 );
    sensitive << ( grp_invShiftRows_fu_210_state_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_zext_ln164_1_fu_334_p1);
    sensitive << ( state_q0 );

    SC_METHOD(thread_zext_ln164_fu_288_p1);
    sensitive << ( state_q0 );

    SC_METHOD(thread_zext_ln300_1_fu_305_p1);
    sensitive << ( i_0_i2_i_reg_171 );

    SC_METHOD(thread_zext_ln300_2_fu_351_p1);
    sensitive << ( i_0_i5_reg_193 );

    SC_METHOD(thread_zext_ln300_fu_246_p1);
    sensitive << ( i_0_i_reg_137 );

    SC_METHOD(thread_zext_ln509_1_fu_329_p1);
    sensitive << ( i_0_i1_reg_182 );

    SC_METHOD(thread_zext_ln509_fu_283_p1);
    sensitive << ( i_0_i_i_reg_160 );

    SC_METHOD(thread_zext_ln605_fu_266_p1);
    sensitive << ( shl_ln_fu_258_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln299_fu_234_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln603_fu_252_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln508_fu_271_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln299_1_fu_293_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln508_1_fu_317_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln299_2_fu_339_p2 );
    sensitive << ( grp_invMixColumns_fu_204_ap_done );
    sensitive << ( grp_createRoundKey_fu_216_ap_done );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_block_state6_on_subcall_done );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_block_state13_on_subcall_done );

    ap_CS_fsm = "000000000000000001";
    grp_invMixColumns_fu_204_ap_start_reg = SC_LOGIC_0;
    grp_invShiftRows_fu_210_ap_start_reg = SC_LOGIC_0;
    grp_createRoundKey_fu_216_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "aes_invMain_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, state_address0, "(port)state_address0");
    sc_trace(mVcdFile, state_ce0, "(port)state_ce0");
    sc_trace(mVcdFile, state_we0, "(port)state_we0");
    sc_trace(mVcdFile, state_d0, "(port)state_d0");
    sc_trace(mVcdFile, state_q0, "(port)state_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, rsbox_address0, "rsbox_address0");
    sc_trace(mVcdFile, rsbox_ce0, "rsbox_ce0");
    sc_trace(mVcdFile, rsbox_q0, "rsbox_q0");
    sc_trace(mVcdFile, i_2_fu_240_p2, "i_2_fu_240_p2");
    sc_trace(mVcdFile, i_2_reg_360, "i_2_reg_360");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, state_addr_reg_365, "state_addr_reg_365");
    sc_trace(mVcdFile, icmp_ln299_fu_234_p2, "icmp_ln299_fu_234_p2");
    sc_trace(mVcdFile, zext_ln605_fu_266_p1, "zext_ln605_fu_266_p1");
    sc_trace(mVcdFile, zext_ln605_reg_378, "zext_ln605_reg_378");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln603_fu_252_p2, "icmp_ln603_fu_252_p2");
    sc_trace(mVcdFile, i_4_fu_277_p2, "i_4_fu_277_p2");
    sc_trace(mVcdFile, i_4_reg_386, "i_4_reg_386");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, state_addr_5_reg_391, "state_addr_5_reg_391");
    sc_trace(mVcdFile, icmp_ln508_fu_271_p2, "icmp_ln508_fu_271_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_6_fu_299_p2, "i_6_fu_299_p2");
    sc_trace(mVcdFile, i_6_reg_404, "i_6_reg_404");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, state_addr_7_reg_409, "state_addr_7_reg_409");
    sc_trace(mVcdFile, icmp_ln299_1_fu_293_p2, "icmp_ln299_1_fu_293_p2");
    sc_trace(mVcdFile, add_ln603_fu_311_p2, "add_ln603_fu_311_p2");
    sc_trace(mVcdFile, add_ln603_reg_419, "add_ln603_reg_419");
    sc_trace(mVcdFile, i_3_fu_323_p2, "i_3_fu_323_p2");
    sc_trace(mVcdFile, i_3_reg_427, "i_3_reg_427");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, state_addr_6_reg_432, "state_addr_6_reg_432");
    sc_trace(mVcdFile, icmp_ln508_1_fu_317_p2, "icmp_ln508_1_fu_317_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, i_5_fu_345_p2, "i_5_fu_345_p2");
    sc_trace(mVcdFile, i_5_reg_445, "i_5_reg_445");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, state_addr_8_reg_450, "state_addr_8_reg_450");
    sc_trace(mVcdFile, icmp_ln299_2_fu_339_p2, "icmp_ln299_2_fu_339_p2");
    sc_trace(mVcdFile, roundKey_address0, "roundKey_address0");
    sc_trace(mVcdFile, roundKey_ce0, "roundKey_ce0");
    sc_trace(mVcdFile, roundKey_we0, "roundKey_we0");
    sc_trace(mVcdFile, roundKey_q0, "roundKey_q0");
    sc_trace(mVcdFile, grp_invMixColumns_fu_204_ap_start, "grp_invMixColumns_fu_204_ap_start");
    sc_trace(mVcdFile, grp_invMixColumns_fu_204_ap_done, "grp_invMixColumns_fu_204_ap_done");
    sc_trace(mVcdFile, grp_invMixColumns_fu_204_ap_idle, "grp_invMixColumns_fu_204_ap_idle");
    sc_trace(mVcdFile, grp_invMixColumns_fu_204_ap_ready, "grp_invMixColumns_fu_204_ap_ready");
    sc_trace(mVcdFile, grp_invMixColumns_fu_204_state_address0, "grp_invMixColumns_fu_204_state_address0");
    sc_trace(mVcdFile, grp_invMixColumns_fu_204_state_ce0, "grp_invMixColumns_fu_204_state_ce0");
    sc_trace(mVcdFile, grp_invMixColumns_fu_204_state_we0, "grp_invMixColumns_fu_204_state_we0");
    sc_trace(mVcdFile, grp_invMixColumns_fu_204_state_d0, "grp_invMixColumns_fu_204_state_d0");
    sc_trace(mVcdFile, grp_invShiftRows_fu_210_ap_start, "grp_invShiftRows_fu_210_ap_start");
    sc_trace(mVcdFile, grp_invShiftRows_fu_210_ap_done, "grp_invShiftRows_fu_210_ap_done");
    sc_trace(mVcdFile, grp_invShiftRows_fu_210_ap_idle, "grp_invShiftRows_fu_210_ap_idle");
    sc_trace(mVcdFile, grp_invShiftRows_fu_210_ap_ready, "grp_invShiftRows_fu_210_ap_ready");
    sc_trace(mVcdFile, grp_invShiftRows_fu_210_state_address0, "grp_invShiftRows_fu_210_state_address0");
    sc_trace(mVcdFile, grp_invShiftRows_fu_210_state_ce0, "grp_invShiftRows_fu_210_state_ce0");
    sc_trace(mVcdFile, grp_invShiftRows_fu_210_state_we0, "grp_invShiftRows_fu_210_state_we0");
    sc_trace(mVcdFile, grp_invShiftRows_fu_210_state_d0, "grp_invShiftRows_fu_210_state_d0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_216_ap_start, "grp_createRoundKey_fu_216_ap_start");
    sc_trace(mVcdFile, grp_createRoundKey_fu_216_ap_done, "grp_createRoundKey_fu_216_ap_done");
    sc_trace(mVcdFile, grp_createRoundKey_fu_216_ap_idle, "grp_createRoundKey_fu_216_ap_idle");
    sc_trace(mVcdFile, grp_createRoundKey_fu_216_ap_ready, "grp_createRoundKey_fu_216_ap_ready");
    sc_trace(mVcdFile, grp_createRoundKey_fu_216_expandedKey_offset, "grp_createRoundKey_fu_216_expandedKey_offset");
    sc_trace(mVcdFile, grp_createRoundKey_fu_216_roundKey_address0, "grp_createRoundKey_fu_216_roundKey_address0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_216_roundKey_ce0, "grp_createRoundKey_fu_216_roundKey_ce0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_216_roundKey_we0, "grp_createRoundKey_fu_216_roundKey_we0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_216_roundKey_d0, "grp_createRoundKey_fu_216_roundKey_d0");
    sc_trace(mVcdFile, i_0_i_reg_137, "i_0_i_reg_137");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_reg_148, "i_reg_148");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i_0_i_i_reg_160, "i_0_i_i_reg_160");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_block_state6_on_subcall_done, "ap_block_state6_on_subcall_done");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_0_i2_i_reg_171, "i_0_i2_i_reg_171");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_0_i1_reg_182, "i_0_i1_reg_182");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_block_state13_on_subcall_done, "ap_block_state13_on_subcall_done");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, i_0_i5_reg_193, "i_0_i5_reg_193");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_invMixColumns_fu_204_ap_start_reg, "grp_invMixColumns_fu_204_ap_start_reg");
    sc_trace(mVcdFile, grp_invShiftRows_fu_210_ap_start_reg, "grp_invShiftRows_fu_210_ap_start_reg");
    sc_trace(mVcdFile, grp_createRoundKey_fu_216_ap_start_reg, "grp_createRoundKey_fu_216_ap_start_reg");
    sc_trace(mVcdFile, zext_ln300_fu_246_p1, "zext_ln300_fu_246_p1");
    sc_trace(mVcdFile, zext_ln509_fu_283_p1, "zext_ln509_fu_283_p1");
    sc_trace(mVcdFile, zext_ln164_fu_288_p1, "zext_ln164_fu_288_p1");
    sc_trace(mVcdFile, zext_ln300_1_fu_305_p1, "zext_ln300_1_fu_305_p1");
    sc_trace(mVcdFile, zext_ln509_1_fu_329_p1, "zext_ln509_1_fu_329_p1");
    sc_trace(mVcdFile, zext_ln164_1_fu_334_p1, "zext_ln164_1_fu_334_p1");
    sc_trace(mVcdFile, zext_ln300_2_fu_351_p1, "zext_ln300_2_fu_351_p1");
    sc_trace(mVcdFile, grp_fu_227_p2, "grp_fu_227_p2");
    sc_trace(mVcdFile, shl_ln_fu_258_p3, "shl_ln_fu_258_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

aes_invMain::~aes_invMain() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete rsbox_U;
    delete roundKey_U;
    delete grp_invMixColumns_fu_204;
    delete grp_invShiftRows_fu_210;
    delete grp_createRoundKey_fu_216;
}

void aes_invMain::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_createRoundKey_fu_216_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln603_fu_252_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
              esl_seteq<1,1,1>(icmp_ln603_fu_252_p2.read(), ap_const_lv1_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
            grp_createRoundKey_fu_216_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_createRoundKey_fu_216_ap_ready.read())) {
            grp_createRoundKey_fu_216_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_invMixColumns_fu_204_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
             esl_seteq<1,1,1>(icmp_ln299_1_fu_293_p2.read(), ap_const_lv1_1))) {
            grp_invMixColumns_fu_204_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_invMixColumns_fu_204_ap_ready.read())) {
            grp_invMixColumns_fu_204_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_invShiftRows_fu_210_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln603_fu_252_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
              esl_seteq<1,1,1>(icmp_ln603_fu_252_p2.read(), ap_const_lv1_1)))) {
            grp_invShiftRows_fu_210_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_invShiftRows_fu_210_ap_ready.read())) {
            grp_invShiftRows_fu_210_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_0_i1_reg_182 = i_3_reg_427.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_block_state13_on_subcall_done.read(), ap_const_boolean_0))) {
        i_0_i1_reg_182 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln508_fu_271_p2.read(), ap_const_lv1_1))) {
        i_0_i2_i_reg_171 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_0_i2_i_reg_171 = i_6_reg_404.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln508_1_fu_317_p2.read()))) {
        i_0_i5_reg_193 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_0_i5_reg_193 = i_5_reg_445.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_0_i_i_reg_160 = i_4_reg_386.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
        i_0_i_i_reg_160 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_0_i_reg_137 = i_2_reg_360.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(grp_createRoundKey_fu_216_ap_done.read(), ap_const_logic_1))) {
        i_0_i_reg_137 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln299_fu_234_p2.read(), ap_const_lv1_1))) {
        i_reg_148 = ap_const_lv4_9;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(grp_invMixColumns_fu_204_ap_done.read(), ap_const_logic_1))) {
        i_reg_148 = add_ln603_reg_419.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln299_1_fu_293_p2.read(), ap_const_lv1_1))) {
        add_ln603_reg_419 = add_ln603_fu_311_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_2_reg_360 = i_2_fu_240_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_3_reg_427 = i_3_fu_323_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_4_reg_386 = i_4_fu_277_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i_5_reg_445 = i_5_fu_345_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_6_reg_404 = i_6_fu_299_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln508_fu_271_p2.read()))) {
        state_addr_5_reg_391 =  (sc_lv<4>) (zext_ln509_fu_283_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln508_1_fu_317_p2.read()))) {
        state_addr_6_reg_432 =  (sc_lv<4>) (zext_ln509_1_fu_329_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_1_fu_293_p2.read()))) {
        state_addr_7_reg_409 =  (sc_lv<4>) (zext_ln300_1_fu_305_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_2_fu_339_p2.read()))) {
        state_addr_8_reg_450 =  (sc_lv<4>) (zext_ln300_2_fu_351_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln299_fu_234_p2.read(), ap_const_lv1_0))) {
        state_addr_reg_365 =  (sc_lv<4>) (zext_ln300_fu_246_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln603_fu_252_p2.read()))) {
        zext_ln605_reg_378 = zext_ln605_fu_266_p1.read();
    }
}

void aes_invMain::thread_add_ln603_fu_311_p2() {
    add_ln603_fu_311_p2 = (!i_reg_148.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_148.read()) + sc_bigint<4>(ap_const_lv4_F));
}

void aes_invMain::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void aes_invMain::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void aes_invMain::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void aes_invMain::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void aes_invMain::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void aes_invMain::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void aes_invMain::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void aes_invMain::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void aes_invMain::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void aes_invMain::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void aes_invMain::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void aes_invMain::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void aes_invMain::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void aes_invMain::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void aes_invMain::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void aes_invMain::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void aes_invMain::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void aes_invMain::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void aes_invMain::thread_ap_block_state13_on_subcall_done() {
    ap_block_state13_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_createRoundKey_fu_216_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_invShiftRows_fu_210_ap_done.read()));
}

void aes_invMain::thread_ap_block_state6_on_subcall_done() {
    ap_block_state6_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_createRoundKey_fu_216_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_invShiftRows_fu_210_ap_done.read()));
}

void aes_invMain::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln299_2_fu_339_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void aes_invMain::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void aes_invMain::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln299_2_fu_339_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void aes_invMain::thread_grp_createRoundKey_fu_216_ap_start() {
    grp_createRoundKey_fu_216_ap_start = grp_createRoundKey_fu_216_ap_start_reg.read();
}

void aes_invMain::thread_grp_createRoundKey_fu_216_expandedKey_offset() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_createRoundKey_fu_216_expandedKey_offset = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_createRoundKey_fu_216_expandedKey_offset = zext_ln605_reg_378.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_createRoundKey_fu_216_expandedKey_offset = ap_const_lv9_A0;
    } else {
        grp_createRoundKey_fu_216_expandedKey_offset = "XXXXXXXXX";
    }
}

void aes_invMain::thread_grp_fu_227_p2() {
    grp_fu_227_p2 = (roundKey_q0.read() ^ state_q0.read());
}

void aes_invMain::thread_grp_invMixColumns_fu_204_ap_start() {
    grp_invMixColumns_fu_204_ap_start = grp_invMixColumns_fu_204_ap_start_reg.read();
}

void aes_invMain::thread_grp_invShiftRows_fu_210_ap_start() {
    grp_invShiftRows_fu_210_ap_start = grp_invShiftRows_fu_210_ap_start_reg.read();
}

void aes_invMain::thread_i_2_fu_240_p2() {
    i_2_fu_240_p2 = (!i_0_i_reg_137.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i_reg_137.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aes_invMain::thread_i_3_fu_323_p2() {
    i_3_fu_323_p2 = (!i_0_i1_reg_182.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i1_reg_182.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aes_invMain::thread_i_4_fu_277_p2() {
    i_4_fu_277_p2 = (!i_0_i_i_reg_160.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i_i_reg_160.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aes_invMain::thread_i_5_fu_345_p2() {
    i_5_fu_345_p2 = (!i_0_i5_reg_193.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i5_reg_193.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aes_invMain::thread_i_6_fu_299_p2() {
    i_6_fu_299_p2 = (!i_0_i2_i_reg_171.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i2_i_reg_171.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aes_invMain::thread_icmp_ln299_1_fu_293_p2() {
    icmp_ln299_1_fu_293_p2 = (!i_0_i2_i_reg_171.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i2_i_reg_171.read() == ap_const_lv5_10);
}

void aes_invMain::thread_icmp_ln299_2_fu_339_p2() {
    icmp_ln299_2_fu_339_p2 = (!i_0_i5_reg_193.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i5_reg_193.read() == ap_const_lv5_10);
}

void aes_invMain::thread_icmp_ln299_fu_234_p2() {
    icmp_ln299_fu_234_p2 = (!i_0_i_reg_137.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_137.read() == ap_const_lv5_10);
}

void aes_invMain::thread_icmp_ln508_1_fu_317_p2() {
    icmp_ln508_1_fu_317_p2 = (!i_0_i1_reg_182.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i1_reg_182.read() == ap_const_lv5_10);
}

void aes_invMain::thread_icmp_ln508_fu_271_p2() {
    icmp_ln508_fu_271_p2 = (!i_0_i_i_reg_160.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_i_reg_160.read() == ap_const_lv5_10);
}

void aes_invMain::thread_icmp_ln603_fu_252_p2() {
    icmp_ln603_fu_252_p2 = (!i_reg_148.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_148.read() == ap_const_lv4_0);
}

void aes_invMain::thread_roundKey_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        roundKey_address0 =  (sc_lv<4>) (zext_ln300_2_fu_351_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        roundKey_address0 =  (sc_lv<4>) (zext_ln300_1_fu_305_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        roundKey_address0 =  (sc_lv<4>) (zext_ln300_fu_246_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        roundKey_address0 = grp_createRoundKey_fu_216_roundKey_address0.read();
    } else {
        roundKey_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void aes_invMain::thread_roundKey_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        roundKey_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        roundKey_ce0 = grp_createRoundKey_fu_216_roundKey_ce0.read();
    } else {
        roundKey_ce0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_roundKey_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        roundKey_we0 = grp_createRoundKey_fu_216_roundKey_we0.read();
    } else {
        roundKey_we0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_rsbox_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        rsbox_address0 =  (sc_lv<8>) (zext_ln164_1_fu_334_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        rsbox_address0 =  (sc_lv<8>) (zext_ln164_fu_288_p1.read());
    } else {
        rsbox_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aes_invMain::thread_rsbox_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        rsbox_ce0 = ap_const_logic_1;
    } else {
        rsbox_ce0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_shl_ln_fu_258_p3() {
    shl_ln_fu_258_p3 = esl_concat<4,4>(i_reg_148.read(), ap_const_lv4_0);
}

void aes_invMain::thread_state_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        state_address0 = state_addr_8_reg_450.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        state_address0 =  (sc_lv<4>) (zext_ln300_2_fu_351_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        state_address0 = state_addr_6_reg_432.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        state_address0 =  (sc_lv<4>) (zext_ln509_1_fu_329_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        state_address0 = state_addr_7_reg_409.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_1_fu_293_p2.read()))) {
        state_address0 =  (sc_lv<4>) (zext_ln300_1_fu_305_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        state_address0 = state_addr_5_reg_391.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_address0 =  (sc_lv<4>) (zext_ln509_fu_283_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        state_address0 = state_addr_reg_365.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_address0 =  (sc_lv<4>) (zext_ln300_fu_246_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        state_address0 = grp_invShiftRows_fu_210_state_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        state_address0 = grp_invMixColumns_fu_204_state_address0.read();
    } else {
        state_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void aes_invMain::thread_state_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln299_1_fu_293_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        state_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        state_ce0 = grp_invShiftRows_fu_210_state_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        state_ce0 = grp_invMixColumns_fu_204_state_ce0.read();
    } else {
        state_ce0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_state_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        state_d0 = rsbox_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        state_d0 = grp_fu_227_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        state_d0 = grp_invShiftRows_fu_210_state_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        state_d0 = grp_invMixColumns_fu_204_state_d0.read();
    } else {
        state_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aes_invMain::thread_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        state_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        state_we0 = grp_invShiftRows_fu_210_state_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        state_we0 = grp_invMixColumns_fu_204_state_we0.read();
    } else {
        state_we0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_zext_ln164_1_fu_334_p1() {
    zext_ln164_1_fu_334_p1 = esl_zext<64,8>(state_q0.read());
}

void aes_invMain::thread_zext_ln164_fu_288_p1() {
    zext_ln164_fu_288_p1 = esl_zext<64,8>(state_q0.read());
}

void aes_invMain::thread_zext_ln300_1_fu_305_p1() {
    zext_ln300_1_fu_305_p1 = esl_zext<64,5>(i_0_i2_i_reg_171.read());
}

void aes_invMain::thread_zext_ln300_2_fu_351_p1() {
    zext_ln300_2_fu_351_p1 = esl_zext<64,5>(i_0_i5_reg_193.read());
}

void aes_invMain::thread_zext_ln300_fu_246_p1() {
    zext_ln300_fu_246_p1 = esl_zext<64,5>(i_0_i_reg_137.read());
}

void aes_invMain::thread_zext_ln509_1_fu_329_p1() {
    zext_ln509_1_fu_329_p1 = esl_zext<64,5>(i_0_i1_reg_182.read());
}

void aes_invMain::thread_zext_ln509_fu_283_p1() {
    zext_ln509_fu_283_p1 = esl_zext<64,5>(i_0_i_i_reg_160.read());
}

void aes_invMain::thread_zext_ln605_fu_266_p1() {
    zext_ln605_fu_266_p1 = esl_zext<9,8>(shl_ln_fu_258_p3.read());
}

void aes_invMain::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_createRoundKey_fu_216_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln299_fu_234_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln603_fu_252_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_block_state6_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln508_fu_271_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln299_1_fu_293_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(grp_invMixColumns_fu_204_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_block_state13_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln508_1_fu_317_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln299_2_fu_339_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

