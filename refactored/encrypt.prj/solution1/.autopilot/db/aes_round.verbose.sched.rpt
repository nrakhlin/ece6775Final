

================================================================
== Vivado HLS Report for 'aes_round'
================================================================
* Date:           Mon Dec  9 22:58:06 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        encrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.804 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+----------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline |
    |   min   |   max   |    min   |    max   | min | max |   Type   |
    +---------+---------+----------+----------+-----+-----+----------+
    |       18|       18| 0.180 us | 0.180 us |   19|   19| function |
    +---------+---------+----------+----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 19, depth = 19


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 1
  Pipeline-0 : II = 19, D = 19, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.32>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%state_addr = getelementptr [16 x i8]* %state, i64 0, i64 0" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 20 'getelementptr' 'state_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [2/2] (2.32ns)   --->   "%state_load = load i8* %state_addr, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 21 'load' 'state_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%state_addr_15 = getelementptr [16 x i8]* %state, i64 0, i64 15" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 22 'getelementptr' 'state_addr_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [2/2] (2.32ns)   --->   "%state_load_15 = load i8* %state_addr_15, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 23 'load' 'state_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 2 <SV = 1> <Delay = 5.57>
ST_2 : Operation 24 [1/2] (2.32ns)   --->   "%state_load = load i8* %state_addr, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 24 'load' 'state_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%state_addr_5 = getelementptr [16 x i8]* %state, i64 0, i64 5" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 25 'getelementptr' 'state_addr_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [2/2] (2.32ns)   --->   "%state_load_5 = load i8* %state_addr_5, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 26 'load' 'state_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%state_addr_10 = getelementptr [16 x i8]* %state, i64 0, i64 10" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 27 'getelementptr' 'state_addr_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [2/2] (2.32ns)   --->   "%state_load_10 = load i8* %state_addr_10, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 28 'load' 'state_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 29 [1/2] (2.32ns)   --->   "%state_load_15 = load i8* %state_addr_15, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 29 'load' 'state_load_15' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln46_18 = zext i8 %state_load_15 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 30 'zext' 'zext_ln46_18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%sbox_addr_18 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_18" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 31 'getelementptr' 'sbox_addr_18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [2/2] (3.25ns)   --->   "%column_3 = load i8* %sbox_addr_18, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 32 'load' 'column_3' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i8 %state_load to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 33 'zext' 'zext_ln46' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%sbox_addr = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 34 'getelementptr' 'sbox_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [2/2] (3.25ns)   --->   "%column_0 = load i8* %sbox_addr, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 35 'load' 'column_0' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%state_addr_3 = getelementptr [16 x i8]* %state, i64 0, i64 3" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 36 'getelementptr' 'state_addr_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [2/2] (2.32ns)   --->   "%state_load_3 = load i8* %state_addr_3, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 37 'load' 'state_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 38 [1/2] (2.32ns)   --->   "%state_load_5 = load i8* %state_addr_5, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 38 'load' 'state_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 39 [1/2] (2.32ns)   --->   "%state_load_10 = load i8* %state_addr_10, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 39 'load' 'state_load_10' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%state_addr_14 = getelementptr [16 x i8]* %state, i64 0, i64 14" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 40 'getelementptr' 'state_addr_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [2/2] (2.32ns)   --->   "%state_load_14 = load i8* %state_addr_14, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 41 'load' 'state_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 42 [1/2] (3.25ns)   --->   "%column_3 = load i8* %sbox_addr_18, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 42 'load' 'column_3' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 43 [1/2] (3.25ns)   --->   "%column_0 = load i8* %sbox_addr, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 43 'load' 'column_0' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_4 : Operation 44 [1/2] (2.32ns)   --->   "%state_load_3 = load i8* %state_addr_3, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 44 'load' 'state_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%state_addr_4 = getelementptr [16 x i8]* %state, i64 0, i64 4" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 45 'getelementptr' 'state_addr_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [2/2] (2.32ns)   --->   "%state_load_4 = load i8* %state_addr_4, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 46 'load' 'state_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%state_addr_9 = getelementptr [16 x i8]* %state, i64 0, i64 9" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 47 'getelementptr' 'state_addr_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [2/2] (2.32ns)   --->   "%state_load_9 = load i8* %state_addr_9, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 48 'load' 'state_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln46_13 = zext i8 %state_load_10 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 49 'zext' 'zext_ln46_13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%sbox_addr_13 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_13" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 50 'getelementptr' 'sbox_addr_13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [2/2] (3.25ns)   --->   "%column_2 = load i8* %sbox_addr_13, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 51 'load' 'column_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_4 : Operation 52 [1/2] (2.32ns)   --->   "%state_load_14 = load i8* %state_addr_14, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 52 'load' 'state_load_14' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 5 <SV = 4> <Delay = 3.25>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%state_addr_2 = getelementptr [16 x i8]* %state, i64 0, i64 2" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 53 'getelementptr' 'state_addr_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [2/2] (2.32ns)   --->   "%state_load_2 = load i8* %state_addr_2, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 54 'load' 'state_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 55 [1/2] (2.32ns)   --->   "%state_load_4 = load i8* %state_addr_4, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 55 'load' 'state_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln46_8 = zext i8 %state_load_5 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 56 'zext' 'zext_ln46_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%sbox_addr_8 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_8" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 57 'getelementptr' 'sbox_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [2/2] (3.25ns)   --->   "%column_1 = load i8* %sbox_addr_8, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 58 'load' 'column_1' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_5 : Operation 59 [1/2] (2.32ns)   --->   "%state_load_9 = load i8* %state_addr_9, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 59 'load' 'state_load_9' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 60 [1/2] (3.25ns)   --->   "%column_2 = load i8* %sbox_addr_13, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 60 'load' 'column_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%state_addr_13 = getelementptr [16 x i8]* %state, i64 0, i64 13" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 61 'getelementptr' 'state_addr_13' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [2/2] (2.32ns)   --->   "%state_load_13 = load i8* %state_addr_13, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 62 'load' 'state_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 6 <SV = 5> <Delay = 8.80>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%roundKey_12_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_12_read)" [encrypt.cpp:7]   --->   Operation 63 'read' 'roundKey_12_read_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%roundKey_8_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_8_read)" [encrypt.cpp:7]   --->   Operation 64 'read' 'roundKey_8_read_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%roundKey_4_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_4_read)" [encrypt.cpp:7]   --->   Operation 65 'read' 'roundKey_4_read_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%roundKey_0_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_0_read)" [encrypt.cpp:7]   --->   Operation 66 'read' 'roundKey_0_read_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/2] (2.32ns)   --->   "%state_load_2 = load i8* %state_addr_2, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 67 'load' 'state_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 68 [1/2] (3.25ns)   --->   "%column_1 = load i8* %sbox_addr_8, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 68 'load' 'column_1' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%state_addr_8 = getelementptr [16 x i8]* %state, i64 0, i64 8" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 69 'getelementptr' 'state_addr_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [2/2] (2.32ns)   --->   "%state_load_8 = load i8* %state_addr_8, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 70 'load' 'state_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%state_addr_12 = getelementptr [16 x i8]* %state, i64 0, i64 12" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 71 'getelementptr' 'state_addr_12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 72 [2/2] (2.32ns)   --->   "%state_load_12 = load i8* %state_addr_12, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 72 'load' 'state_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 73 [1/2] (2.32ns)   --->   "%state_load_13 = load i8* %state_addr_13, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 73 'load' 'state_load_13' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln46_17 = zext i8 %state_load_14 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 74 'zext' 'zext_ln46_17' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%sbox_addr_17 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_17" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 75 'getelementptr' 'sbox_addr_17' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 76 [2/2] (3.25ns)   --->   "%tmp3 = load i8* %sbox_addr_17, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 76 'load' 'tmp3' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_6 : Operation 77 [1/1] (2.23ns)   --->   "%call_ret1_i = call fastcc { i8, i8, i8, i8 } @mixColumn(i8 %column_0, i8 %column_1, i8 %column_2, i8 %column_3)" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 77 'call' 'call_ret1_i' <Predicate = true> <Delay = 2.23> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236)   --->   "%column_0_1 = extractvalue { i8, i8, i8, i8 } %call_ret1_i, 0" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 78 'extractvalue' 'column_0_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_4)   --->   "%column_1_1 = extractvalue { i8, i8, i8, i8 } %call_ret1_i, 1" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 79 'extractvalue' 'column_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_8)   --->   "%column_2_1 = extractvalue { i8, i8, i8, i8 } %call_ret1_i, 2" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 80 'extractvalue' 'column_2_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_12)   --->   "%column_3_1 = extractvalue { i8, i8, i8, i8 } %call_ret1_i, 3" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 81 'extractvalue' 'column_3_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236 = xor i8 %column_0_1, %roundKey_0_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 82 'xor' 'xor_ln236' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_4 = xor i8 %column_1_1, %roundKey_4_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 83 'xor' 'xor_ln236_4' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_8 = xor i8 %column_2_1, %roundKey_8_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 84 'xor' 'xor_ln236_8' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 85 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_8, i8* %state_addr_8, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 85 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 86 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_12 = xor i8 %column_3_1, %roundKey_12_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 86 'xor' 'xor_ln236_12' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_12, i8* %state_addr_12, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 87 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 7 <SV = 6> <Delay = 3.25>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%state_addr_1 = getelementptr [16 x i8]* %state, i64 0, i64 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 88 'getelementptr' 'state_addr_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 89 [2/2] (2.32ns)   --->   "%state_load_1 = load i8* %state_addr_1, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 89 'load' 'state_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln46_6 = zext i8 %state_load_3 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 90 'zext' 'zext_ln46_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%sbox_addr_6 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_6" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 91 'getelementptr' 'sbox_addr_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 92 [2/2] (3.25ns)   --->   "%column_0_6 = load i8* %sbox_addr_6, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 92 'load' 'column_0_6' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%state_addr_7 = getelementptr [16 x i8]* %state, i64 0, i64 7" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 93 'getelementptr' 'state_addr_7' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [2/2] (2.32ns)   --->   "%state_load_7 = load i8* %state_addr_7, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 94 'load' 'state_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 95 [1/2] (2.32ns)   --->   "%state_load_8 = load i8* %state_addr_8, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 95 'load' 'state_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 96 [1/2] (2.32ns)   --->   "%state_load_12 = load i8* %state_addr_12, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 96 'load' 'state_load_12' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 97 [1/2] (3.25ns)   --->   "%tmp3 = load i8* %sbox_addr_17, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 97 'load' 'tmp3' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 8 <SV = 7> <Delay = 3.25>
ST_8 : Operation 98 [1/2] (2.32ns)   --->   "%state_load_1 = load i8* %state_addr_1, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 98 'load' 'state_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 99 [1/2] (3.25ns)   --->   "%column_0_6 = load i8* %sbox_addr_6, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 99 'load' 'column_0_6' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_8 : Operation 100 [1/1] (0.00ns)   --->   "%state_addr_6 = getelementptr [16 x i8]* %state, i64 0, i64 6" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 100 'getelementptr' 'state_addr_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 101 [2/2] (2.32ns)   --->   "%state_load_6 = load i8* %state_addr_6, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 101 'load' 'state_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 102 [1/2] (2.32ns)   --->   "%state_load_7 = load i8* %state_addr_7, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 102 'load' 'state_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln46_12 = zext i8 %state_load_9 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 103 'zext' 'zext_ln46_12' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%sbox_addr_12 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_12" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 104 'getelementptr' 'sbox_addr_12' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 105 [2/2] (3.25ns)   --->   "%tmp2 = load i8* %sbox_addr_12, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 105 'load' 'tmp2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "%state_addr_11 = getelementptr [16 x i8]* %state, i64 0, i64 11" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 106 'getelementptr' 'state_addr_11' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 107 [2/2] (2.32ns)   --->   "%state_load_11 = load i8* %state_addr_11, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 107 'load' 'state_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 9 <SV = 8> <Delay = 3.25>
ST_9 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln46_7 = zext i8 %state_load_4 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 108 'zext' 'zext_ln46_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 109 [1/1] (0.00ns)   --->   "%sbox_addr_7 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_7" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 109 'getelementptr' 'sbox_addr_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 110 [2/2] (3.25ns)   --->   "%tmp = load i8* %sbox_addr_7, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 110 'load' 'tmp' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_9 : Operation 111 [1/2] (2.32ns)   --->   "%state_load_6 = load i8* %state_addr_6, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 111 'load' 'state_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 112 [1/2] (3.25ns)   --->   "%tmp2 = load i8* %sbox_addr_12, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 112 'load' 'tmp2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_9 : Operation 113 [1/2] (2.32ns)   --->   "%state_load_11 = load i8* %state_addr_11, align 1" [helper.cpp:185->encrypt.cpp:9]   --->   Operation 113 'load' 'state_load_11' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 114 [1/1] (2.32ns)   --->   "store i8 %xor_ln236, i8* %state_addr, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 114 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 115 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_4, i8* %state_addr_4, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 115 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 10 <SV = 9> <Delay = 8.80>
ST_10 : Operation 116 [1/1] (0.00ns)   --->   "%roundKey_15_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_15_read)" [encrypt.cpp:7]   --->   Operation 116 'read' 'roundKey_15_read_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 117 [1/1] (0.00ns)   --->   "%roundKey_11_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_11_read)" [encrypt.cpp:7]   --->   Operation 117 'read' 'roundKey_11_read_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 118 [1/1] (0.00ns)   --->   "%roundKey_7_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_7_read)" [encrypt.cpp:7]   --->   Operation 118 'read' 'roundKey_7_read_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 119 [1/1] (0.00ns)   --->   "%roundKey_3_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_3_read)" [encrypt.cpp:7]   --->   Operation 119 'read' 'roundKey_3_read_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 120 [1/2] (3.25ns)   --->   "%tmp = load i8* %sbox_addr_7, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 120 'load' 'tmp' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_10 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln46_16 = zext i8 %state_load_13 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 121 'zext' 'zext_ln46_16' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 122 [1/1] (0.00ns)   --->   "%sbox_addr_16 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_16" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 122 'getelementptr' 'sbox_addr_16' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 123 [2/2] (3.25ns)   --->   "%tmp2_2 = load i8* %sbox_addr_16, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 123 'load' 'tmp2_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_10 : Operation 124 [1/1] (2.23ns)   --->   "%call_ret_i = call fastcc { i8, i8, i8, i8 } @mixColumn(i8 %column_0_6, i8 %tmp, i8 %tmp2, i8 %tmp3)" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 124 'call' 'call_ret_i' <Predicate = true> <Delay = 2.23> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_3)   --->   "%column_0_7 = extractvalue { i8, i8, i8, i8 } %call_ret_i, 0" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 125 'extractvalue' 'column_0_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_7)   --->   "%column_1_7 = extractvalue { i8, i8, i8, i8 } %call_ret_i, 1" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 126 'extractvalue' 'column_1_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_11)   --->   "%column_2_7 = extractvalue { i8, i8, i8, i8 } %call_ret_i, 2" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 127 'extractvalue' 'column_2_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_15)   --->   "%column_3_7 = extractvalue { i8, i8, i8, i8 } %call_ret_i, 3" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 128 'extractvalue' 'column_3_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 129 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_3 = xor i8 %column_0_7, %roundKey_3_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 129 'xor' 'xor_ln236_3' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 130 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_3, i8* %state_addr_3, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 130 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_10 : Operation 131 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_7 = xor i8 %column_1_7, %roundKey_7_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 131 'xor' 'xor_ln236_7' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 132 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_11 = xor i8 %column_2_7, %roundKey_11_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 132 'xor' 'xor_ln236_11' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 133 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_11, i8* %state_addr_11, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 133 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_10 : Operation 134 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_15 = xor i8 %column_3_7, %roundKey_15_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 134 'xor' 'xor_ln236_15' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 3.25>
ST_11 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln46_5 = zext i8 %state_load_2 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 135 'zext' 'zext_ln46_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 136 [1/1] (0.00ns)   --->   "%sbox_addr_5 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_5" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 136 'getelementptr' 'sbox_addr_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 137 [2/2] (3.25ns)   --->   "%column_0_4 = load i8* %sbox_addr_5, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 137 'load' 'column_0_4' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_11 : Operation 138 [1/2] (3.25ns)   --->   "%tmp2_2 = load i8* %sbox_addr_16, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 138 'load' 'tmp2_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_11 : Operation 139 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_7, i8* %state_addr_7, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 139 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_11 : Operation 140 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_15, i8* %state_addr_15, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 140 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 12 <SV = 11> <Delay = 3.25>
ST_12 : Operation 141 [1/2] (3.25ns)   --->   "%column_0_4 = load i8* %sbox_addr_5, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 141 'load' 'column_0_4' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_12 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln46_11 = zext i8 %state_load_8 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 142 'zext' 'zext_ln46_11' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 143 [1/1] (0.00ns)   --->   "%sbox_addr_11 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_11" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 143 'getelementptr' 'sbox_addr_11' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 144 [2/2] (3.25ns)   --->   "%tmp_4 = load i8* %sbox_addr_11, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 144 'load' 'tmp_4' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 13 <SV = 12> <Delay = 3.25>
ST_13 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln46_10 = zext i8 %state_load_7 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 145 'zext' 'zext_ln46_10' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 146 [1/1] (0.00ns)   --->   "%sbox_addr_10 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_10" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 146 'getelementptr' 'sbox_addr_10' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 147 [2/2] (3.25ns)   --->   "%column_1_4 = load i8* %sbox_addr_10, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 147 'load' 'column_1_4' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_13 : Operation 148 [1/2] (3.25ns)   --->   "%tmp_4 = load i8* %sbox_addr_11, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 148 'load' 'tmp_4' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 14 <SV = 13> <Delay = 8.80>
ST_14 : Operation 149 [1/1] (0.00ns)   --->   "%roundKey_14_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_14_read)" [encrypt.cpp:7]   --->   Operation 149 'read' 'roundKey_14_read_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 150 [1/1] (0.00ns)   --->   "%roundKey_10_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_10_read)" [encrypt.cpp:7]   --->   Operation 150 'read' 'roundKey_10_read_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 151 [1/1] (0.00ns)   --->   "%roundKey_6_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_6_read)" [encrypt.cpp:7]   --->   Operation 151 'read' 'roundKey_6_read_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 152 [1/1] (0.00ns)   --->   "%roundKey_2_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_2_read)" [encrypt.cpp:7]   --->   Operation 152 'read' 'roundKey_2_read_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 153 [1/1] (0.00ns)   --->   "%zext_ln46_4 = zext i8 %state_load_1 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 153 'zext' 'zext_ln46_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 154 [1/1] (0.00ns)   --->   "%sbox_addr_4 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_4" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 154 'getelementptr' 'sbox_addr_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 155 [2/2] (3.25ns)   --->   "%column_0_2 = load i8* %sbox_addr_4, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 155 'load' 'column_0_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_14 : Operation 156 [1/2] (3.25ns)   --->   "%column_1_4 = load i8* %sbox_addr_10, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 156 'load' 'column_1_4' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_14 : Operation 157 [1/1] (2.23ns)   --->   "%call_ret3_i = call fastcc { i8, i8, i8, i8 } @mixColumn(i8 %column_0_4, i8 %column_1_4, i8 %tmp_4, i8 %tmp2_2)" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 157 'call' 'call_ret3_i' <Predicate = true> <Delay = 2.23> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_2)   --->   "%column_0_5 = extractvalue { i8, i8, i8, i8 } %call_ret3_i, 0" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 158 'extractvalue' 'column_0_5' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_6)   --->   "%column_1_5 = extractvalue { i8, i8, i8, i8 } %call_ret3_i, 1" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 159 'extractvalue' 'column_1_5' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_10)   --->   "%column_2_5 = extractvalue { i8, i8, i8, i8 } %call_ret3_i, 2" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 160 'extractvalue' 'column_2_5' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_14)   --->   "%column_3_5 = extractvalue { i8, i8, i8, i8 } %call_ret3_i, 3" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 161 'extractvalue' 'column_3_5' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 162 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_2 = xor i8 %column_0_5, %roundKey_2_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 162 'xor' 'xor_ln236_2' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 163 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_2, i8* %state_addr_2, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 163 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_14 : Operation 164 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_6 = xor i8 %column_1_5, %roundKey_6_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 164 'xor' 'xor_ln236_6' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 165 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_10 = xor i8 %column_2_5, %roundKey_10_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 165 'xor' 'xor_ln236_10' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 166 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_10, i8* %state_addr_10, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 166 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_14 : Operation 167 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_14 = xor i8 %column_3_5, %roundKey_14_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 167 'xor' 'xor_ln236_14' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 3.25>
ST_15 : Operation 168 [1/2] (3.25ns)   --->   "%column_0_2 = load i8* %sbox_addr_4, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 168 'load' 'column_0_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_15 : Operation 169 [1/1] (0.00ns)   --->   "%zext_ln46_9 = zext i8 %state_load_6 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 169 'zext' 'zext_ln46_9' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 170 [1/1] (0.00ns)   --->   "%sbox_addr_9 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_9" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 170 'getelementptr' 'sbox_addr_9' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 171 [2/2] (3.25ns)   --->   "%column_1_2 = load i8* %sbox_addr_9, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 171 'load' 'column_1_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_15 : Operation 172 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_6, i8* %state_addr_6, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 172 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_15 : Operation 173 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_14, i8* %state_addr_14, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 173 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 16 <SV = 15> <Delay = 3.25>
ST_16 : Operation 174 [1/2] (3.25ns)   --->   "%column_1_2 = load i8* %sbox_addr_9, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 174 'load' 'column_1_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_16 : Operation 175 [1/1] (0.00ns)   --->   "%zext_ln46_14 = zext i8 %state_load_11 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 175 'zext' 'zext_ln46_14' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 176 [1/1] (0.00ns)   --->   "%sbox_addr_14 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_14" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 176 'getelementptr' 'sbox_addr_14' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 177 [2/2] (3.25ns)   --->   "%column_2_2 = load i8* %sbox_addr_14, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 177 'load' 'column_2_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 17 <SV = 16> <Delay = 3.25>
ST_17 : Operation 178 [1/2] (3.25ns)   --->   "%column_2_2 = load i8* %sbox_addr_14, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 178 'load' 'column_2_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_17 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln46_15 = zext i8 %state_load_12 to i64" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 179 'zext' 'zext_ln46_15' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 180 [1/1] (0.00ns)   --->   "%sbox_addr_15 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_15" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 180 'getelementptr' 'sbox_addr_15' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 181 [2/2] (3.25ns)   --->   "%tmp_5 = load i8* %sbox_addr_15, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 181 'load' 'tmp_5' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 18 <SV = 17> <Delay = 8.80>
ST_18 : Operation 182 [1/1] (0.00ns)   --->   "%roundKey_13_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_13_read)" [encrypt.cpp:7]   --->   Operation 182 'read' 'roundKey_13_read_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 183 [1/1] (0.00ns)   --->   "%roundKey_9_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_9_read)" [encrypt.cpp:7]   --->   Operation 183 'read' 'roundKey_9_read_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 184 [1/1] (0.00ns)   --->   "%roundKey_5_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_5_read)" [encrypt.cpp:7]   --->   Operation 184 'read' 'roundKey_5_read_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 185 [1/1] (0.00ns)   --->   "%roundKey_1_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %roundKey_1_read)" [encrypt.cpp:7]   --->   Operation 185 'read' 'roundKey_1_read_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 186 [1/2] (3.25ns)   --->   "%tmp_5 = load i8* %sbox_addr_15, align 1" [helper.cpp:46->helper.cpp:185->encrypt.cpp:9]   --->   Operation 186 'load' 'tmp_5' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_18 : Operation 187 [1/1] (2.23ns)   --->   "%call_ret2_i = call fastcc { i8, i8, i8, i8 } @mixColumn(i8 %column_0_2, i8 %column_1_2, i8 %column_2_2, i8 %tmp_5)" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 187 'call' 'call_ret2_i' <Predicate = true> <Delay = 2.23> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_1)   --->   "%column_0_3 = extractvalue { i8, i8, i8, i8 } %call_ret2_i, 0" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 188 'extractvalue' 'column_0_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_5)   --->   "%column_1_3 = extractvalue { i8, i8, i8, i8 } %call_ret2_i, 1" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 189 'extractvalue' 'column_1_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_9)   --->   "%column_2_3 = extractvalue { i8, i8, i8, i8 } %call_ret2_i, 2" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 190 'extractvalue' 'column_2_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node xor_ln236_13)   --->   "%column_3_3 = extractvalue { i8, i8, i8, i8 } %call_ret2_i, 3" [helper.cpp:300->encrypt.cpp:11]   --->   Operation 191 'extractvalue' 'column_3_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 192 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_1 = xor i8 %column_0_3, %roundKey_1_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 192 'xor' 'xor_ln236_1' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 193 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_1, i8* %state_addr_1, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 193 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_18 : Operation 194 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_5 = xor i8 %column_1_3, %roundKey_5_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 194 'xor' 'xor_ln236_5' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 195 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_5, i8* %state_addr_5, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 195 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_18 : Operation 196 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_9 = xor i8 %column_2_3, %roundKey_9_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 196 'xor' 'xor_ln236_9' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 197 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln236_13 = xor i8 %column_3_3, %roundKey_13_read_1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 197 'xor' 'xor_ln236_13' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 2.32>
ST_19 : Operation 198 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_9, i8* %state_addr_9, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 198 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_19 : Operation 199 [1/1] (2.32ns)   --->   "store i8 %xor_ln236_13, i8* %state_addr_13, align 1" [helper.cpp:236->encrypt.cpp:12]   --->   Operation 199 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_19 : Operation 200 [1/1] (0.00ns)   --->   "ret void" [encrypt.cpp:13]   --->   Operation 200 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('state_addr', helper.cpp:185->encrypt.cpp:9) [36]  (0 ns)
	'load' operation ('num', helper.cpp:185->encrypt.cpp:9) on array 'state' [37]  (2.32 ns)

 <State 2>: 5.58ns
The critical path consists of the following:
	'load' operation ('num', helper.cpp:185->encrypt.cpp:9) on array 'state' [112]  (2.32 ns)
	'getelementptr' operation ('sbox_addr_18', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) [114]  (0 ns)
	'load' operation ('column[3]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [115]  (3.25 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('sbox_addr', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) [39]  (0 ns)
	'load' operation ('column[0]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [40]  (3.25 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('column[0]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [40]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('sbox_addr_8', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) [64]  (0 ns)
	'load' operation ('column[1]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [65]  (3.25 ns)

 <State 6>: 8.8ns
The critical path consists of the following:
	'load' operation ('column[1]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [65]  (3.25 ns)
	'call' operation ('call_ret1_i', helper.cpp:300->encrypt.cpp:11) to 'mixColumn' [116]  (2.24 ns)
	'xor' operation ('xor_ln236_8', helper.cpp:236->encrypt.cpp:12) [152]  (0.99 ns)
	'store' operation ('store_ln236', helper.cpp:236->encrypt.cpp:12) of variable 'xor_ln236_8', helper.cpp:236->encrypt.cpp:12 on array 'state' [153]  (2.32 ns)

 <State 7>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('sbox_addr_6', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) [54]  (0 ns)
	'load' operation ('column[0]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [55]  (3.25 ns)

 <State 8>: 3.25ns
The critical path consists of the following:
	'load' operation ('column[0]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [55]  (3.25 ns)

 <State 9>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('sbox_addr_7', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) [59]  (0 ns)
	'load' operation ('tmp', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [60]  (3.25 ns)

 <State 10>: 8.8ns
The critical path consists of the following:
	'load' operation ('tmp', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [60]  (3.25 ns)
	'call' operation ('call_ret_i', helper.cpp:300->encrypt.cpp:11) to 'mixColumn' [131]  (2.24 ns)
	'xor' operation ('xor_ln236_3', helper.cpp:236->encrypt.cpp:12) [142]  (0.99 ns)
	'store' operation ('store_ln236', helper.cpp:236->encrypt.cpp:12) of variable 'xor_ln236_3', helper.cpp:236->encrypt.cpp:12 on array 'state' [143]  (2.32 ns)

 <State 11>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('sbox_addr_5', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) [49]  (0 ns)
	'load' operation ('column[0]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [50]  (3.25 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'load' operation ('column[0]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [50]  (3.25 ns)

 <State 13>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('sbox_addr_10', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) [74]  (0 ns)
	'load' operation ('column[1]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [75]  (3.25 ns)

 <State 14>: 8.8ns
The critical path consists of the following:
	'load' operation ('column[1]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [75]  (3.25 ns)
	'call' operation ('call_ret3_i', helper.cpp:300->encrypt.cpp:11) to 'mixColumn' [126]  (2.24 ns)
	'xor' operation ('xor_ln236_2', helper.cpp:236->encrypt.cpp:12) [140]  (0.99 ns)
	'store' operation ('store_ln236', helper.cpp:236->encrypt.cpp:12) of variable 'xor_ln236_2', helper.cpp:236->encrypt.cpp:12 on array 'state' [141]  (2.32 ns)

 <State 15>: 3.25ns
The critical path consists of the following:
	'load' operation ('column[0]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [45]  (3.25 ns)

 <State 16>: 3.25ns
The critical path consists of the following:
	'load' operation ('column[1]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [70]  (3.25 ns)

 <State 17>: 3.25ns
The critical path consists of the following:
	'load' operation ('column[2]', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [95]  (3.25 ns)

 <State 18>: 8.8ns
The critical path consists of the following:
	'load' operation ('tmp', helper.cpp:46->helper.cpp:185->encrypt.cpp:9) on array 'sbox' [100]  (3.25 ns)
	'call' operation ('call_ret2_i', helper.cpp:300->encrypt.cpp:11) to 'mixColumn' [121]  (2.24 ns)
	'xor' operation ('xor_ln236_1', helper.cpp:236->encrypt.cpp:12) [138]  (0.99 ns)
	'store' operation ('store_ln236', helper.cpp:236->encrypt.cpp:12) of variable 'xor_ln236_1', helper.cpp:236->encrypt.cpp:12 on array 'state' [139]  (2.32 ns)

 <State 19>: 2.32ns
The critical path consists of the following:
	'store' operation ('store_ln236', helper.cpp:236->encrypt.cpp:12) of variable 'xor_ln236_9', helper.cpp:236->encrypt.cpp:12 on array 'state' [155]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
