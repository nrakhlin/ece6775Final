

================================================================
== Vivado HLS Report for 'aes_main'
================================================================
* Date:           Sun Nov 17 11:18:47 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        encrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 6.923 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |       32|       32|         2|          -|          -|    16|    no    |
        |- Loop 2     |        ?|        ?|         ?|          -|          -|     9|    no    |
        | + Loop 2.1  |       48|       48|         3|          -|          -|    16|    no    |
        | + Loop 2.2  |       32|       32|         2|          -|          -|    16|    no    |
        |- Loop 3     |       48|       48|         3|          -|          -|    16|    no    |
        |- Loop 4     |       32|       32|         2|          -|          -|    16|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 21
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 5 
4 --> 3 
5 --> 6 15 
6 --> 7 
7 --> 8 10 
8 --> 9 
9 --> 7 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 5 
14 --> 13 
15 --> 16 
16 --> 17 19 
17 --> 18 
18 --> 16 
19 --> 20 
20 --> 21 
21 --> 20 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.81>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%roundKey = alloca [16 x i8], align 16" [encrypt.cpp:19]   --->   Operation 22 'alloca' 'roundKey' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 23 [2/2] (1.81ns)   --->   "call fastcc void @createRoundKey([176 x i8]* %expandedKey, [16 x i8]* %roundKey, i10 0)" [encrypt.cpp:21]   --->   Operation 23 'call' <Predicate = true> <Delay = 1.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 24 [1/2] (0.00ns)   --->   "call fastcc void @createRoundKey([176 x i8]* %expandedKey, [16 x i8]* %roundKey, i10 0)" [encrypt.cpp:21]   --->   Operation 24 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 25 [1/1] (1.76ns)   --->   "br label %1" [helper.cpp:200->encrypt.cpp:22]   --->   Operation 25 'br' <Predicate = true> <Delay = 1.76>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%i_0_i = phi i5 [ 0, %0 ], [ %i_6, %2 ]"   --->   Operation 26 'phi' 'i_0_i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (1.36ns)   --->   "%icmp_ln200 = icmp eq i5 %i_0_i, -16" [helper.cpp:200->encrypt.cpp:22]   --->   Operation 27 'icmp' 'icmp_ln200' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 28 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (1.78ns)   --->   "%i_6 = add i5 %i_0_i, 1" [helper.cpp:200->encrypt.cpp:22]   --->   Operation 29 'add' 'i_6' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "br i1 %icmp_ln200, label %addRoundKey.exit.preheader, label %2" [helper.cpp:200->encrypt.cpp:22]   --->   Operation 30 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln201 = zext i5 %i_0_i to i64" [helper.cpp:201->encrypt.cpp:22]   --->   Operation 31 'zext' 'zext_ln201' <Predicate = (!icmp_ln200)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%state_addr = getelementptr [16 x i8]* %state, i64 0, i64 %zext_ln201" [helper.cpp:201->encrypt.cpp:22]   --->   Operation 32 'getelementptr' 'state_addr' <Predicate = (!icmp_ln200)> <Delay = 0.00>
ST_3 : Operation 33 [2/2] (2.32ns)   --->   "%state_load = load i8* %state_addr, align 1" [helper.cpp:201->encrypt.cpp:22]   --->   Operation 33 'load' 'state_load' <Predicate = (!icmp_ln200)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%roundKey_addr = getelementptr [16 x i8]* %roundKey, i64 0, i64 %zext_ln201" [helper.cpp:201->encrypt.cpp:22]   --->   Operation 34 'getelementptr' 'roundKey_addr' <Predicate = (!icmp_ln200)> <Delay = 0.00>
ST_3 : Operation 35 [2/2] (2.32ns)   --->   "%roundKey_load = load i8* %roundKey_addr, align 1" [helper.cpp:201->encrypt.cpp:22]   --->   Operation 35 'load' 'roundKey_load' <Predicate = (!icmp_ln200)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 36 [1/1] (1.76ns)   --->   "br label %addRoundKey.exit" [encrypt.cpp:24]   --->   Operation 36 'br' <Predicate = (icmp_ln200)> <Delay = 1.76>

State 4 <SV = 3> <Delay = 5.63>
ST_4 : Operation 37 [1/2] (2.32ns)   --->   "%state_load = load i8* %state_addr, align 1" [helper.cpp:201->encrypt.cpp:22]   --->   Operation 37 'load' 'state_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 38 [1/2] (2.32ns)   --->   "%roundKey_load = load i8* %roundKey_addr, align 1" [helper.cpp:201->encrypt.cpp:22]   --->   Operation 38 'load' 'roundKey_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 39 [1/1] (0.99ns)   --->   "%xor_ln201 = xor i8 %roundKey_load, %state_load" [helper.cpp:201->encrypt.cpp:22]   --->   Operation 39 'xor' 'xor_ln201' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 40 [1/1] (2.32ns)   --->   "store i8 %xor_ln201, i8* %state_addr, align 1" [helper.cpp:201->encrypt.cpp:22]   --->   Operation 40 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "br label %1" [helper.cpp:200->encrypt.cpp:22]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 1.81>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ %i, %aes_round.exit ], [ 1, %addRoundKey.exit.preheader ]"   --->   Operation 42 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (1.30ns)   --->   "%icmp_ln24 = icmp eq i4 %i_0, -6" [encrypt.cpp:24]   --->   Operation 43 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)"   --->   Operation 44 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "br i1 %icmp_ln24, label %8, label %3" [encrypt.cpp:24]   --->   Operation 45 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 46 [1/1] (0.00ns)   --->   "%shl_ln = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %i_0, i4 0)" [encrypt.cpp:26]   --->   Operation 46 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i8 %shl_ln to i10" [encrypt.cpp:26]   --->   Operation 47 'zext' 'zext_ln26' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_5 : Operation 48 [2/2] (1.81ns)   --->   "call fastcc void @createRoundKey([176 x i8]* %expandedKey, [16 x i8]* %roundKey, i10 %zext_ln26)" [encrypt.cpp:26]   --->   Operation 48 'call' <Predicate = (!icmp_ln24)> <Delay = 1.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 49 [2/2] (1.81ns)   --->   "call fastcc void @createRoundKey([176 x i8]* %expandedKey, [16 x i8]* %roundKey, i10 160)" [encrypt.cpp:30]   --->   Operation 49 'call' <Predicate = (icmp_ln24)> <Delay = 1.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 4> <Delay = 1.76>
ST_6 : Operation 50 [1/2] (0.00ns)   --->   "call fastcc void @createRoundKey([176 x i8]* %expandedKey, [16 x i8]* %roundKey, i10 %zext_ln26)" [encrypt.cpp:26]   --->   Operation 50 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 51 [1/1] (1.76ns)   --->   "br label %4" [helper.cpp:170->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 51 'br' <Predicate = true> <Delay = 1.76>

State 7 <SV = 5> <Delay = 2.32>
ST_7 : Operation 52 [1/1] (0.00ns)   --->   "%i_0_i_i = phi i5 [ 0, %3 ], [ %i_8, %5 ]"   --->   Operation 52 'phi' 'i_0_i_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 53 [1/1] (1.36ns)   --->   "%icmp_ln170_1 = icmp eq i5 %i_0_i_i, -16" [helper.cpp:170->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 53 'icmp' 'icmp_ln170_1' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 54 [1/1] (0.00ns)   --->   "%empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 54 'speclooptripcount' 'empty_21' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 55 [1/1] (1.78ns)   --->   "%i_8 = add i5 %i_0_i_i, 1" [helper.cpp:170->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 55 'add' 'i_8' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 56 [1/1] (0.00ns)   --->   "br i1 %icmp_ln170_1, label %subBytes.exit.i, label %5" [helper.cpp:170->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 56 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln171_1 = zext i5 %i_0_i_i to i64" [helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 57 'zext' 'zext_ln171_1' <Predicate = (!icmp_ln170_1)> <Delay = 0.00>
ST_7 : Operation 58 [1/1] (0.00ns)   --->   "%state_addr_6 = getelementptr [16 x i8]* %state, i64 0, i64 %zext_ln171_1" [helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 58 'getelementptr' 'state_addr_6' <Predicate = (!icmp_ln170_1)> <Delay = 0.00>
ST_7 : Operation 59 [2/2] (2.32ns)   --->   "%state_load_3 = load i8* %state_addr_6, align 1" [helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 59 'load' 'state_load_3' <Predicate = (!icmp_ln170_1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 60 [2/2] (1.76ns)   --->   "call fastcc void @shiftRows([16 x i8]* %state)" [encrypt.cpp:10->encrypt.cpp:27]   --->   Operation 60 'call' <Predicate = (icmp_ln170_1)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 6> <Delay = 5.57>
ST_8 : Operation 61 [1/2] (2.32ns)   --->   "%state_load_3 = load i8* %state_addr_6, align 1" [helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 61 'load' 'state_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln43_1 = zext i8 %state_load_3 to i64" [helper.cpp:43->helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 62 'zext' 'zext_ln43_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 63 [1/1] (0.00ns)   --->   "%sbox_addr_1 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln43_1" [helper.cpp:43->helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 63 'getelementptr' 'sbox_addr_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 64 [2/2] (3.25ns)   --->   "%sbox_load_1 = load i8* %sbox_addr_1, align 1" [helper.cpp:43->helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 64 'load' 'sbox_load_1' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 9 <SV = 7> <Delay = 5.57>
ST_9 : Operation 65 [1/2] (3.25ns)   --->   "%sbox_load_1 = load i8* %sbox_addr_1, align 1" [helper.cpp:43->helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 65 'load' 'sbox_load_1' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_9 : Operation 66 [1/1] (2.32ns)   --->   "store i8 %sbox_load_1, i8* %state_addr_6, align 1" [helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 66 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 67 [1/1] (0.00ns)   --->   "br label %4" [helper.cpp:170->encrypt.cpp:9->encrypt.cpp:27]   --->   Operation 67 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 6> <Delay = 0.00>
ST_10 : Operation 68 [1/2] (0.00ns)   --->   "call fastcc void @shiftRows([16 x i8]* %state)" [encrypt.cpp:10->encrypt.cpp:27]   --->   Operation 68 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 7> <Delay = 0.00>
ST_11 : Operation 69 [2/2] (0.00ns)   --->   "call fastcc void @mixColumns([16 x i8]* %state)" [encrypt.cpp:11->encrypt.cpp:27]   --->   Operation 69 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 8> <Delay = 1.76>
ST_12 : Operation 70 [1/2] (0.00ns)   --->   "call fastcc void @mixColumns([16 x i8]* %state)" [encrypt.cpp:11->encrypt.cpp:27]   --->   Operation 70 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 71 [1/1] (1.76ns)   --->   "br label %6" [helper.cpp:200->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 71 'br' <Predicate = true> <Delay = 1.76>

State 13 <SV = 9> <Delay = 2.32>
ST_13 : Operation 72 [1/1] (0.00ns)   --->   "%i_0_i2_i = phi i5 [ 0, %subBytes.exit.i ], [ %i_10, %7 ]"   --->   Operation 72 'phi' 'i_0_i2_i' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 73 [1/1] (1.36ns)   --->   "%icmp_ln200_2 = icmp eq i5 %i_0_i2_i, -16" [helper.cpp:200->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 73 'icmp' 'icmp_ln200_2' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 74 [1/1] (0.00ns)   --->   "%empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 74 'speclooptripcount' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 75 [1/1] (1.78ns)   --->   "%i_10 = add i5 %i_0_i2_i, 1" [helper.cpp:200->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 75 'add' 'i_10' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 76 [1/1] (0.00ns)   --->   "br i1 %icmp_ln200_2, label %aes_round.exit, label %7" [helper.cpp:200->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 76 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln201_2 = zext i5 %i_0_i2_i to i64" [helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 77 'zext' 'zext_ln201_2' <Predicate = (!icmp_ln200_2)> <Delay = 0.00>
ST_13 : Operation 78 [1/1] (0.00ns)   --->   "%state_addr_8 = getelementptr [16 x i8]* %state, i64 0, i64 %zext_ln201_2" [helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 78 'getelementptr' 'state_addr_8' <Predicate = (!icmp_ln200_2)> <Delay = 0.00>
ST_13 : Operation 79 [2/2] (2.32ns)   --->   "%state_load_5 = load i8* %state_addr_8, align 1" [helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 79 'load' 'state_load_5' <Predicate = (!icmp_ln200_2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_13 : Operation 80 [1/1] (0.00ns)   --->   "%roundKey_addr_2 = getelementptr [16 x i8]* %roundKey, i64 0, i64 %zext_ln201_2" [helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 80 'getelementptr' 'roundKey_addr_2' <Predicate = (!icmp_ln200_2)> <Delay = 0.00>
ST_13 : Operation 81 [2/2] (2.32ns)   --->   "%roundKey_load_2 = load i8* %roundKey_addr_2, align 1" [helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 81 'load' 'roundKey_load_2' <Predicate = (!icmp_ln200_2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_13 : Operation 82 [1/1] (1.73ns)   --->   "%i = add i4 %i_0, 1" [encrypt.cpp:24]   --->   Operation 82 'add' 'i' <Predicate = (icmp_ln200_2)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 83 [1/1] (0.00ns)   --->   "br label %addRoundKey.exit" [encrypt.cpp:24]   --->   Operation 83 'br' <Predicate = (icmp_ln200_2)> <Delay = 0.00>

State 14 <SV = 10> <Delay = 5.63>
ST_14 : Operation 84 [1/2] (2.32ns)   --->   "%state_load_5 = load i8* %state_addr_8, align 1" [helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 84 'load' 'state_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_14 : Operation 85 [1/2] (2.32ns)   --->   "%roundKey_load_2 = load i8* %roundKey_addr_2, align 1" [helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 85 'load' 'roundKey_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_14 : Operation 86 [1/1] (0.99ns)   --->   "%xor_ln201_2 = xor i8 %roundKey_load_2, %state_load_5" [helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 86 'xor' 'xor_ln201_2' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 87 [1/1] (2.32ns)   --->   "store i8 %xor_ln201_2, i8* %state_addr_8, align 1" [helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 87 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_14 : Operation 88 [1/1] (0.00ns)   --->   "br label %6" [helper.cpp:200->encrypt.cpp:12->encrypt.cpp:27]   --->   Operation 88 'br' <Predicate = true> <Delay = 0.00>

State 15 <SV = 4> <Delay = 1.76>
ST_15 : Operation 89 [1/2] (0.00ns)   --->   "call fastcc void @createRoundKey([176 x i8]* %expandedKey, [16 x i8]* %roundKey, i10 160)" [encrypt.cpp:30]   --->   Operation 89 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 90 [1/1] (1.76ns)   --->   "br label %9" [helper.cpp:170->encrypt.cpp:31]   --->   Operation 90 'br' <Predicate = true> <Delay = 1.76>

State 16 <SV = 5> <Delay = 2.32>
ST_16 : Operation 91 [1/1] (0.00ns)   --->   "%i_0_i2 = phi i5 [ 0, %8 ], [ %i_7, %10 ]"   --->   Operation 91 'phi' 'i_0_i2' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 92 [1/1] (1.36ns)   --->   "%icmp_ln170 = icmp eq i5 %i_0_i2, -16" [helper.cpp:170->encrypt.cpp:31]   --->   Operation 92 'icmp' 'icmp_ln170' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 93 [1/1] (0.00ns)   --->   "%empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 93 'speclooptripcount' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 94 [1/1] (1.78ns)   --->   "%i_7 = add i5 %i_0_i2, 1" [helper.cpp:170->encrypt.cpp:31]   --->   Operation 94 'add' 'i_7' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 95 [1/1] (0.00ns)   --->   "br i1 %icmp_ln170, label %subBytes.exit, label %10" [helper.cpp:170->encrypt.cpp:31]   --->   Operation 95 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln171 = zext i5 %i_0_i2 to i64" [helper.cpp:171->encrypt.cpp:31]   --->   Operation 96 'zext' 'zext_ln171' <Predicate = (!icmp_ln170)> <Delay = 0.00>
ST_16 : Operation 97 [1/1] (0.00ns)   --->   "%state_addr_5 = getelementptr [16 x i8]* %state, i64 0, i64 %zext_ln171" [helper.cpp:171->encrypt.cpp:31]   --->   Operation 97 'getelementptr' 'state_addr_5' <Predicate = (!icmp_ln170)> <Delay = 0.00>
ST_16 : Operation 98 [2/2] (2.32ns)   --->   "%state_load_2 = load i8* %state_addr_5, align 1" [helper.cpp:171->encrypt.cpp:31]   --->   Operation 98 'load' 'state_load_2' <Predicate = (!icmp_ln170)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_16 : Operation 99 [2/2] (1.76ns)   --->   "call fastcc void @shiftRows([16 x i8]* %state)" [encrypt.cpp:32]   --->   Operation 99 'call' <Predicate = (icmp_ln170)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 6> <Delay = 5.57>
ST_17 : Operation 100 [1/2] (2.32ns)   --->   "%state_load_2 = load i8* %state_addr_5, align 1" [helper.cpp:171->encrypt.cpp:31]   --->   Operation 100 'load' 'state_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_17 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln43 = zext i8 %state_load_2 to i64" [helper.cpp:43->helper.cpp:171->encrypt.cpp:31]   --->   Operation 101 'zext' 'zext_ln43' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 102 [1/1] (0.00ns)   --->   "%sbox_addr = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln43" [helper.cpp:43->helper.cpp:171->encrypt.cpp:31]   --->   Operation 102 'getelementptr' 'sbox_addr' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 103 [2/2] (3.25ns)   --->   "%sbox_load = load i8* %sbox_addr, align 1" [helper.cpp:43->helper.cpp:171->encrypt.cpp:31]   --->   Operation 103 'load' 'sbox_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 18 <SV = 7> <Delay = 5.57>
ST_18 : Operation 104 [1/2] (3.25ns)   --->   "%sbox_load = load i8* %sbox_addr, align 1" [helper.cpp:43->helper.cpp:171->encrypt.cpp:31]   --->   Operation 104 'load' 'sbox_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_18 : Operation 105 [1/1] (2.32ns)   --->   "store i8 %sbox_load, i8* %state_addr_5, align 1" [helper.cpp:171->encrypt.cpp:31]   --->   Operation 105 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_18 : Operation 106 [1/1] (0.00ns)   --->   "br label %9" [helper.cpp:170->encrypt.cpp:31]   --->   Operation 106 'br' <Predicate = true> <Delay = 0.00>

State 19 <SV = 6> <Delay = 1.76>
ST_19 : Operation 107 [1/2] (0.00ns)   --->   "call fastcc void @shiftRows([16 x i8]* %state)" [encrypt.cpp:32]   --->   Operation 107 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 108 [1/1] (1.76ns)   --->   "br label %11" [helper.cpp:200->encrypt.cpp:33]   --->   Operation 108 'br' <Predicate = true> <Delay = 1.76>

State 20 <SV = 7> <Delay = 2.32>
ST_20 : Operation 109 [1/1] (0.00ns)   --->   "%i_0_i6 = phi i5 [ 0, %subBytes.exit ], [ %i_9, %12 ]"   --->   Operation 109 'phi' 'i_0_i6' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 110 [1/1] (1.36ns)   --->   "%icmp_ln200_1 = icmp eq i5 %i_0_i6, -16" [helper.cpp:200->encrypt.cpp:33]   --->   Operation 110 'icmp' 'icmp_ln200_1' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 111 [1/1] (0.00ns)   --->   "%empty_24 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 111 'speclooptripcount' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 112 [1/1] (1.78ns)   --->   "%i_9 = add i5 %i_0_i6, 1" [helper.cpp:200->encrypt.cpp:33]   --->   Operation 112 'add' 'i_9' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 113 [1/1] (0.00ns)   --->   "br i1 %icmp_ln200_1, label %addRoundKey.exit15, label %12" [helper.cpp:200->encrypt.cpp:33]   --->   Operation 113 'br' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln201_1 = zext i5 %i_0_i6 to i64" [helper.cpp:201->encrypt.cpp:33]   --->   Operation 114 'zext' 'zext_ln201_1' <Predicate = (!icmp_ln200_1)> <Delay = 0.00>
ST_20 : Operation 115 [1/1] (0.00ns)   --->   "%state_addr_7 = getelementptr [16 x i8]* %state, i64 0, i64 %zext_ln201_1" [helper.cpp:201->encrypt.cpp:33]   --->   Operation 115 'getelementptr' 'state_addr_7' <Predicate = (!icmp_ln200_1)> <Delay = 0.00>
ST_20 : Operation 116 [2/2] (2.32ns)   --->   "%state_load_4 = load i8* %state_addr_7, align 1" [helper.cpp:201->encrypt.cpp:33]   --->   Operation 116 'load' 'state_load_4' <Predicate = (!icmp_ln200_1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_20 : Operation 117 [1/1] (0.00ns)   --->   "%roundKey_addr_1 = getelementptr [16 x i8]* %roundKey, i64 0, i64 %zext_ln201_1" [helper.cpp:201->encrypt.cpp:33]   --->   Operation 117 'getelementptr' 'roundKey_addr_1' <Predicate = (!icmp_ln200_1)> <Delay = 0.00>
ST_20 : Operation 118 [2/2] (2.32ns)   --->   "%roundKey_load_1 = load i8* %roundKey_addr_1, align 1" [helper.cpp:201->encrypt.cpp:33]   --->   Operation 118 'load' 'roundKey_load_1' <Predicate = (!icmp_ln200_1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_20 : Operation 119 [1/1] (0.00ns)   --->   "ret void" [encrypt.cpp:34]   --->   Operation 119 'ret' <Predicate = (icmp_ln200_1)> <Delay = 0.00>

State 21 <SV = 8> <Delay = 5.63>
ST_21 : Operation 120 [1/2] (2.32ns)   --->   "%state_load_4 = load i8* %state_addr_7, align 1" [helper.cpp:201->encrypt.cpp:33]   --->   Operation 120 'load' 'state_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_21 : Operation 121 [1/2] (2.32ns)   --->   "%roundKey_load_1 = load i8* %roundKey_addr_1, align 1" [helper.cpp:201->encrypt.cpp:33]   --->   Operation 121 'load' 'roundKey_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_21 : Operation 122 [1/1] (0.99ns)   --->   "%xor_ln201_1 = xor i8 %roundKey_load_1, %state_load_4" [helper.cpp:201->encrypt.cpp:33]   --->   Operation 122 'xor' 'xor_ln201_1' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 123 [1/1] (2.32ns)   --->   "store i8 %xor_ln201_1, i8* %state_addr_7, align 1" [helper.cpp:201->encrypt.cpp:33]   --->   Operation 123 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_21 : Operation 124 [1/1] (0.00ns)   --->   "br label %11" [helper.cpp:200->encrypt.cpp:33]   --->   Operation 124 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.81ns
The critical path consists of the following:
	'alloca' operation ('roundKey', encrypt.cpp:19) [5]  (0 ns)
	'call' operation ('call_ln21', encrypt.cpp:21) to 'createRoundKey' [6]  (1.81 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', helper.cpp:200->encrypt.cpp:22) [9]  (1.77 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', helper.cpp:200->encrypt.cpp:22) [9]  (0 ns)
	'getelementptr' operation ('state_addr', helper.cpp:201->encrypt.cpp:22) [16]  (0 ns)
	'load' operation ('state_load', helper.cpp:201->encrypt.cpp:22) on array 'state' [17]  (2.32 ns)

 <State 4>: 5.63ns
The critical path consists of the following:
	'load' operation ('state_load', helper.cpp:201->encrypt.cpp:22) on array 'state' [17]  (2.32 ns)
	'xor' operation ('xor_ln201', helper.cpp:201->encrypt.cpp:22) [20]  (0.99 ns)
	'store' operation ('store_ln201', helper.cpp:201->encrypt.cpp:22) of variable 'xor_ln201', helper.cpp:201->encrypt.cpp:22 on array 'state' [21]  (2.32 ns)

 <State 5>: 1.81ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', encrypt.cpp:24) [26]  (0 ns)
	'call' operation ('call_ln26', encrypt.cpp:26) to 'createRoundKey' [33]  (1.81 ns)

 <State 6>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', helper.cpp:170->encrypt.cpp:9->encrypt.cpp:27) [36]  (1.77 ns)

 <State 7>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', helper.cpp:170->encrypt.cpp:9->encrypt.cpp:27) [36]  (0 ns)
	'getelementptr' operation ('state_addr_6', helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27) [43]  (0 ns)
	'load' operation ('num', helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27) on array 'state' [44]  (2.32 ns)

 <State 8>: 5.58ns
The critical path consists of the following:
	'load' operation ('num', helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27) on array 'state' [44]  (2.32 ns)
	'getelementptr' operation ('sbox_addr_1', helper.cpp:43->helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27) [46]  (0 ns)
	'load' operation ('sbox_load_1', helper.cpp:43->helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27) on array 'sbox' [47]  (3.25 ns)

 <State 9>: 5.58ns
The critical path consists of the following:
	'load' operation ('sbox_load_1', helper.cpp:43->helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27) on array 'sbox' [47]  (3.25 ns)
	'store' operation ('store_ln171', helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27) of variable 'sbox_load_1', helper.cpp:43->helper.cpp:171->encrypt.cpp:9->encrypt.cpp:27 on array 'state' [48]  (2.32 ns)

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:

 <State 12>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', helper.cpp:200->encrypt.cpp:12->encrypt.cpp:27) [55]  (1.77 ns)

 <State 13>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', helper.cpp:200->encrypt.cpp:12->encrypt.cpp:27) [55]  (0 ns)
	'getelementptr' operation ('state_addr_8', helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27) [62]  (0 ns)
	'load' operation ('state_load_5', helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27) on array 'state' [63]  (2.32 ns)

 <State 14>: 5.63ns
The critical path consists of the following:
	'load' operation ('state_load_5', helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27) on array 'state' [63]  (2.32 ns)
	'xor' operation ('xor_ln201_2', helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27) [66]  (0.99 ns)
	'store' operation ('store_ln201', helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27) of variable 'xor_ln201_2', helper.cpp:201->encrypt.cpp:12->encrypt.cpp:27 on array 'state' [67]  (2.32 ns)

 <State 15>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', helper.cpp:170->encrypt.cpp:31) [76]  (1.77 ns)

 <State 16>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', helper.cpp:170->encrypt.cpp:31) [76]  (0 ns)
	'getelementptr' operation ('state_addr_5', helper.cpp:171->encrypt.cpp:31) [83]  (0 ns)
	'load' operation ('num', helper.cpp:171->encrypt.cpp:31) on array 'state' [84]  (2.32 ns)

 <State 17>: 5.58ns
The critical path consists of the following:
	'load' operation ('num', helper.cpp:171->encrypt.cpp:31) on array 'state' [84]  (2.32 ns)
	'getelementptr' operation ('sbox_addr', helper.cpp:43->helper.cpp:171->encrypt.cpp:31) [86]  (0 ns)
	'load' operation ('sbox_load', helper.cpp:43->helper.cpp:171->encrypt.cpp:31) on array 'sbox' [87]  (3.25 ns)

 <State 18>: 5.58ns
The critical path consists of the following:
	'load' operation ('sbox_load', helper.cpp:43->helper.cpp:171->encrypt.cpp:31) on array 'sbox' [87]  (3.25 ns)
	'store' operation ('store_ln171', helper.cpp:171->encrypt.cpp:31) of variable 'sbox_load', helper.cpp:43->helper.cpp:171->encrypt.cpp:31 on array 'state' [88]  (2.32 ns)

 <State 19>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', helper.cpp:200->encrypt.cpp:33) [94]  (1.77 ns)

 <State 20>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', helper.cpp:200->encrypt.cpp:33) [94]  (0 ns)
	'getelementptr' operation ('state_addr_7', helper.cpp:201->encrypt.cpp:33) [101]  (0 ns)
	'load' operation ('state_load_4', helper.cpp:201->encrypt.cpp:33) on array 'state' [102]  (2.32 ns)

 <State 21>: 5.63ns
The critical path consists of the following:
	'load' operation ('state_load_4', helper.cpp:201->encrypt.cpp:33) on array 'state' [102]  (2.32 ns)
	'xor' operation ('xor_ln201_1', helper.cpp:201->encrypt.cpp:33) [105]  (0.99 ns)
	'store' operation ('store_ln201', helper.cpp:201->encrypt.cpp:33) of variable 'xor_ln201_1', helper.cpp:201->encrypt.cpp:33 on array 'state' [106]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
