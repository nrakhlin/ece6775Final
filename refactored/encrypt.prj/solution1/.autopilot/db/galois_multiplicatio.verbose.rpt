

================================================================
== Vivado HLS Report for 'galois_multiplicatio'
================================================================
* Date:           Tue Nov 19 22:02:57 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        encrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 1.248 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+----------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline |
    |   min   |   max   |    min   |    max   | min | max |   Type   |
    +---------+---------+----------+----------+-----+-----+----------+
    |        0|        0|   0 ns   |   0 ns   |    1|    1| function |
    +---------+---------+----------+----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+-----+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  | URAM|
+-----------------+---------+-------+--------+-------+-----+
|DSP              |        -|      -|       -|      -|    -|
|Expression       |        -|      -|       0|     40|    -|
|FIFO             |        -|      -|       -|      -|    -|
|Instance         |        -|      -|       -|      -|    -|
|Memory           |        -|      -|       -|      -|    -|
|Multiplexer      |        -|      -|       -|      -|    -|
|Register         |        -|      -|       -|      -|    -|
+-----------------+---------+-------+--------+-------+-----+
|Total            |        0|      0|       0|     40|    0|
+-----------------+---------+-------+--------+-------+-----+
|Available        |      280|    220|  106400|  53200|    0|
+-----------------+---------+-------+--------+-------+-----+
|Utilization (%)  |        0|      0|       0|   ~0  |    0|
+-----------------+---------+-------+--------+-------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP48E: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-------------------------+----------+-------+---+----+------------+------------+
    |      Variable Name      | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-------------------------+----------+-------+---+----+------------+------------+
    |select_ln235_1_fu_82_p3  |  select  |      0|  0|   8|           1|           8|
    |select_ln235_fu_38_p3    |  select  |      0|  0|   8|           1|           8|
    |select_ln239_fu_66_p3    |  select  |      0|  0|   8|           1|           8|
    |ap_return                |    xor   |      0|  0|   8|           8|           8|
    |xor_ln240_fu_60_p2       |    xor   |      0|  0|   8|           8|           5|
    +-------------------------+----------+-------+---+----+------------+------------+
    |Total                    |          |      0|  0|  40|          19|          37|
    +-------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+-----------+-----+-----+------------+----------------------+--------------+
| RTL Ports | Dir | Bits|  Protocol  |     Source Object    |    C Type    |
+-----------+-----+-----+------------+----------------------+--------------+
|ap_ready   | out |    1| ap_ctrl_hs | galois_multiplicatio | return value |
|ap_return  | out |    8| ap_ctrl_hs | galois_multiplicatio | return value |
|a          |  in |    8|   ap_none  |           a          |    scalar    |
|b          |  in |    3|   ap_none  |           b          |    scalar    |
+-----------+-----+-----+------------+----------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 1
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.24>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%b_read = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %b) nounwind" [helper.cpp:228]   --->   Operation 2 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%a_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %a) nounwind" [helper.cpp:228]   --->   Operation 3 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns) (grouped into LUT with out node xor_ln235)   --->   "%trunc_ln235 = trunc i3 %b_read to i1" [helper.cpp:235]   --->   Operation 4 'trunc' 'trunc_ln235' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns) (grouped into LUT with out node xor_ln235)   --->   "%select_ln235 = select i1 %trunc_ln235, i8 %a_read, i8 0" [helper.cpp:235]   --->   Operation 5 'select' 'select_ln235' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%shl_ln238 = shl i8 %a_read, 1" [helper.cpp:238]   --->   Operation 6 'shl' 'shl_ln238' <Predicate = (tmp_1)> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns) (grouped into LUT with out node xor_ln235)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %a_read, i32 7)" [helper.cpp:239]   --->   Operation 7 'bitselect' 'tmp' <Predicate = (tmp_1)> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns) (grouped into LUT with out node xor_ln235)   --->   "%xor_ln240 = xor i8 %shl_ln238, 27" [helper.cpp:240]   --->   Operation 8 'xor' 'xor_ln240' <Predicate = (tmp & tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (0.00ns) (grouped into LUT with out node xor_ln235)   --->   "%select_ln239 = select i1 %tmp, i8 %xor_ln240, i8 %shl_ln238" [helper.cpp:239]   --->   Operation 9 'select' 'select_ln239' <Predicate = (tmp_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node xor_ln235)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %b_read, i32 1)" [helper.cpp:235]   --->   Operation 10 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node xor_ln235)   --->   "%select_ln235_1 = select i1 %tmp_1, i8 %select_ln239, i8 0" [helper.cpp:235]   --->   Operation 11 'select' 'select_ln235_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (1.24ns) (out node of the LUT)   --->   "%xor_ln235 = xor i8 %select_ln235, %select_ln235_1" [helper.cpp:235]   --->   Operation 12 'xor' 'xor_ln235' <Predicate = true> <Delay = 1.24> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "ret i8 %xor_ln235" [helper.cpp:243]   --->   Operation 13 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 1
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 1
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ a]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ b]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
b_read         (read     ) [ 00]
a_read         (read     ) [ 00]
trunc_ln235    (trunc    ) [ 00]
select_ln235   (select   ) [ 00]
shl_ln238      (shl      ) [ 00]
tmp            (bitselect) [ 01]
xor_ln240      (xor      ) [ 00]
select_ln239   (select   ) [ 00]
tmp_1          (bitselect) [ 01]
select_ln235_1 (select   ) [ 00]
xor_ln235      (xor      ) [ 00]
ret_ln243      (ret      ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="a">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="a"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="b">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="b"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i3"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i8"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i8.i32"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_BitSelect.i1.i3.i32"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1004" name="b_read_read_fu_22">
<pin_list>
<pin id="23" dir="0" index="0" bw="3" slack="0"/>
<pin id="24" dir="0" index="1" bw="3" slack="0"/>
<pin id="25" dir="1" index="2" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="b_read/1 "/>
</bind>
</comp>

<comp id="28" class="1004" name="a_read_read_fu_28">
<pin_list>
<pin id="29" dir="0" index="0" bw="8" slack="0"/>
<pin id="30" dir="0" index="1" bw="8" slack="0"/>
<pin id="31" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="a_read/1 "/>
</bind>
</comp>

<comp id="34" class="1004" name="trunc_ln235_fu_34">
<pin_list>
<pin id="35" dir="0" index="0" bw="3" slack="0"/>
<pin id="36" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln235/1 "/>
</bind>
</comp>

<comp id="38" class="1004" name="select_ln235_fu_38">
<pin_list>
<pin id="39" dir="0" index="0" bw="1" slack="0"/>
<pin id="40" dir="0" index="1" bw="8" slack="0"/>
<pin id="41" dir="0" index="2" bw="8" slack="0"/>
<pin id="42" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln235/1 "/>
</bind>
</comp>

<comp id="46" class="1004" name="shl_ln238_fu_46">
<pin_list>
<pin id="47" dir="0" index="0" bw="8" slack="0"/>
<pin id="48" dir="0" index="1" bw="1" slack="0"/>
<pin id="49" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="shl(20) " fcode="shl"/>
<opset="shl_ln238/1 "/>
</bind>
</comp>

<comp id="52" class="1004" name="tmp_fu_52">
<pin_list>
<pin id="53" dir="0" index="0" bw="1" slack="0"/>
<pin id="54" dir="0" index="1" bw="8" slack="0"/>
<pin id="55" dir="0" index="2" bw="4" slack="0"/>
<pin id="56" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp/1 "/>
</bind>
</comp>

<comp id="60" class="1004" name="xor_ln240_fu_60">
<pin_list>
<pin id="61" dir="0" index="0" bw="8" slack="0"/>
<pin id="62" dir="0" index="1" bw="8" slack="0"/>
<pin id="63" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln240/1 "/>
</bind>
</comp>

<comp id="66" class="1004" name="select_ln239_fu_66">
<pin_list>
<pin id="67" dir="0" index="0" bw="1" slack="0"/>
<pin id="68" dir="0" index="1" bw="8" slack="0"/>
<pin id="69" dir="0" index="2" bw="8" slack="0"/>
<pin id="70" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln239/1 "/>
</bind>
</comp>

<comp id="74" class="1004" name="tmp_1_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="1" slack="0"/>
<pin id="76" dir="0" index="1" bw="3" slack="0"/>
<pin id="77" dir="0" index="2" bw="1" slack="0"/>
<pin id="78" dir="1" index="3" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="bitselect(1000) " fcode="bitselect"/>
<opset="tmp_1/1 "/>
</bind>
</comp>

<comp id="82" class="1004" name="select_ln235_1_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="1" slack="0"/>
<pin id="84" dir="0" index="1" bw="8" slack="0"/>
<pin id="85" dir="0" index="2" bw="8" slack="0"/>
<pin id="86" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln235_1/1 "/>
</bind>
</comp>

<comp id="90" class="1004" name="xor_ln235_fu_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="8" slack="0"/>
<pin id="92" dir="0" index="1" bw="8" slack="0"/>
<pin id="93" dir="1" index="2" bw="8" slack="2147483647"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln235/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="26"><net_src comp="4" pin="0"/><net_sink comp="22" pin=0"/></net>

<net id="27"><net_src comp="2" pin="0"/><net_sink comp="22" pin=1"/></net>

<net id="32"><net_src comp="6" pin="0"/><net_sink comp="28" pin=0"/></net>

<net id="33"><net_src comp="0" pin="0"/><net_sink comp="28" pin=1"/></net>

<net id="37"><net_src comp="22" pin="2"/><net_sink comp="34" pin=0"/></net>

<net id="43"><net_src comp="34" pin="1"/><net_sink comp="38" pin=0"/></net>

<net id="44"><net_src comp="28" pin="2"/><net_sink comp="38" pin=1"/></net>

<net id="45"><net_src comp="8" pin="0"/><net_sink comp="38" pin=2"/></net>

<net id="50"><net_src comp="28" pin="2"/><net_sink comp="46" pin=0"/></net>

<net id="51"><net_src comp="10" pin="0"/><net_sink comp="46" pin=1"/></net>

<net id="57"><net_src comp="12" pin="0"/><net_sink comp="52" pin=0"/></net>

<net id="58"><net_src comp="28" pin="2"/><net_sink comp="52" pin=1"/></net>

<net id="59"><net_src comp="14" pin="0"/><net_sink comp="52" pin=2"/></net>

<net id="64"><net_src comp="46" pin="2"/><net_sink comp="60" pin=0"/></net>

<net id="65"><net_src comp="16" pin="0"/><net_sink comp="60" pin=1"/></net>

<net id="71"><net_src comp="52" pin="3"/><net_sink comp="66" pin=0"/></net>

<net id="72"><net_src comp="60" pin="2"/><net_sink comp="66" pin=1"/></net>

<net id="73"><net_src comp="46" pin="2"/><net_sink comp="66" pin=2"/></net>

<net id="79"><net_src comp="18" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="80"><net_src comp="22" pin="2"/><net_sink comp="74" pin=1"/></net>

<net id="81"><net_src comp="20" pin="0"/><net_sink comp="74" pin=2"/></net>

<net id="87"><net_src comp="74" pin="3"/><net_sink comp="82" pin=0"/></net>

<net id="88"><net_src comp="66" pin="3"/><net_sink comp="82" pin=1"/></net>

<net id="89"><net_src comp="8" pin="0"/><net_sink comp="82" pin=2"/></net>

<net id="94"><net_src comp="38" pin="3"/><net_sink comp="90" pin=0"/></net>

<net id="95"><net_src comp="82" pin="3"/><net_sink comp="90" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: galois_multiplicatio : a | {1 }
	Port: galois_multiplicatio : b | {1 }
  - Chain level:
	State 1
		select_ln235 : 1
		select_ln235_1 : 1
		xor_ln235 : 2
		ret_ln243 : 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------|---------|---------|
| Operation|    Functional Unit   |    FF   |   LUT   |
|----------|----------------------|---------|---------|
|          |  select_ln235_fu_38  |    0    |    8    |
|  select  |  select_ln239_fu_66  |    0    |    8    |
|          | select_ln235_1_fu_82 |    0    |    8    |
|----------|----------------------|---------|---------|
|    xor   |    xor_ln240_fu_60   |    0    |    8    |
|          |    xor_ln235_fu_90   |    0    |    8    |
|----------|----------------------|---------|---------|
|   read   |   b_read_read_fu_22  |    0    |    0    |
|          |   a_read_read_fu_28  |    0    |    0    |
|----------|----------------------|---------|---------|
|   trunc  |   trunc_ln235_fu_34  |    0    |    0    |
|----------|----------------------|---------|---------|
|    shl   |    shl_ln238_fu_46   |    0    |    0    |
|----------|----------------------|---------|---------|
| bitselect|       tmp_fu_52      |    0    |    0    |
|          |      tmp_1_fu_74     |    0    |    0    |
|----------|----------------------|---------|---------|
|   Total  |                      |    0    |    40   |
|----------|----------------------|---------|---------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   40   |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    -   |    -   |
+-----------+--------+--------+
|   Total   |    0   |   40   |
+-----------+--------+--------+
