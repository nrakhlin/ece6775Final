

================================================================
== Vivado HLS Report for 'expandKey'
================================================================
* Date:           Mon Dec  9 22:58:05 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        encrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 6.824 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      180|      180| 1.800 us | 1.800 us |  180|  180|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |- EX_K_LOOP1  |       16|       16|         1|          -|          -|    16|    no    |
        |- EX_WHILE    |      161|      161|         6|          4|          1|    40|    yes   |
        +--------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 4, D = 6, States = { 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 3 
3 --> 9 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 3 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%key_15_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_15_read)" [helper.cpp:117]   --->   Operation 10 'read' 'key_15_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%key_14_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_14_read)" [helper.cpp:117]   --->   Operation 11 'read' 'key_14_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%key_13_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_13_read)" [helper.cpp:117]   --->   Operation 12 'read' 'key_13_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%key_12_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_12_read)" [helper.cpp:117]   --->   Operation 13 'read' 'key_12_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%key_11_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_11_read)" [helper.cpp:117]   --->   Operation 14 'read' 'key_11_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%key_10_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_10_read)" [helper.cpp:117]   --->   Operation 15 'read' 'key_10_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%key_9_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_9_read)" [helper.cpp:117]   --->   Operation 16 'read' 'key_9_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%key_8_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_8_read)" [helper.cpp:117]   --->   Operation 17 'read' 'key_8_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%key_7_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_7_read)" [helper.cpp:117]   --->   Operation 18 'read' 'key_7_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%key_6_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_6_read)" [helper.cpp:117]   --->   Operation 19 'read' 'key_6_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%key_5_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_5_read)" [helper.cpp:117]   --->   Operation 20 'read' 'key_5_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%key_4_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_4_read)" [helper.cpp:117]   --->   Operation 21 'read' 'key_4_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%key_3_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_3_read)" [helper.cpp:117]   --->   Operation 22 'read' 'key_3_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%key_2_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_2_read)" [helper.cpp:117]   --->   Operation 23 'read' 'key_2_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%key_1_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_1_read)" [helper.cpp:117]   --->   Operation 24 'read' 'key_1_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%key_0_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %key_0_read)" [helper.cpp:117]   --->   Operation 25 'read' 'key_0_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.76ns)   --->   "br label %0" [helper.cpp:135]   --->   Operation 26 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 4.38>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ %i, %2 ], [ 0, %.preheader ]"   --->   Operation 27 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.36ns)   --->   "%icmp_ln135 = icmp eq i5 %i_0, -16" [helper.cpp:135]   --->   Operation 28 'icmp' 'icmp_ln135' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 29 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.78ns)   --->   "%i = add i5 %i_0, 1" [helper.cpp:135]   --->   Operation 30 'add' 'i' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %icmp_ln135, label %.preheader1.preheader, label %1" [helper.cpp:135]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str2) nounwind" [helper.cpp:135]   --->   Operation 32 'specloopname' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%trunc_ln136 = trunc i5 %i_0 to i4" [helper.cpp:136]   --->   Operation 33 'trunc' 'trunc_ln136' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (2.06ns)   --->   "%tmp = call i8 @_ssdm_op_Mux.ap_auto.16i8.i4(i8 %key_0_read_1, i8 %key_1_read_1, i8 %key_2_read_1, i8 %key_3_read_1, i8 %key_4_read_1, i8 %key_5_read_1, i8 %key_6_read_1, i8 %key_7_read_1, i8 %key_8_read_1, i8 %key_9_read_1, i8 %key_10_read_1, i8 %key_11_read_1, i8 %key_12_read_1, i8 %key_13_read_1, i8 %key_14_read_1, i8 %key_15_read_1, i4 %trunc_ln136)" [helper.cpp:136]   --->   Operation 34 'mux' 'tmp' <Predicate = (!icmp_ln135)> <Delay = 2.06> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 2.06> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln136_1 = trunc i5 %i_0 to i2" [helper.cpp:136]   --->   Operation 35 'trunc' 'trunc_ln136_1' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%lshr_ln = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %i_0, i32 2, i32 4)" [helper.cpp:136]   --->   Operation 36 'partselect' 'lshr_ln' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln136 = zext i3 %lshr_ln to i64" [helper.cpp:136]   --->   Operation 37 'zext' 'zext_ln136' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%expandedKey_0_addr = getelementptr [44 x i8]* %expandedKey_0, i64 0, i64 %zext_ln136" [helper.cpp:136]   --->   Operation 38 'getelementptr' 'expandedKey_0_addr' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%expandedKey_1_addr = getelementptr [44 x i8]* %expandedKey_1, i64 0, i64 %zext_ln136" [helper.cpp:136]   --->   Operation 39 'getelementptr' 'expandedKey_1_addr' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%expandedKey_2_addr = getelementptr [44 x i8]* %expandedKey_2, i64 0, i64 %zext_ln136" [helper.cpp:136]   --->   Operation 40 'getelementptr' 'expandedKey_2_addr' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%expandedKey_3_addr = getelementptr [44 x i8]* %expandedKey_3, i64 0, i64 %zext_ln136" [helper.cpp:136]   --->   Operation 41 'getelementptr' 'expandedKey_3_addr' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.30ns)   --->   "switch i2 %trunc_ln136_1, label %branch3131 [
    i2 0, label %branch0128
    i2 1, label %branch1129
    i2 -2, label %branch2130
  ]" [helper.cpp:136]   --->   Operation 42 'switch' <Predicate = (!icmp_ln135)> <Delay = 1.30>
ST_2 : Operation 43 [1/1] (2.32ns)   --->   "store i8 %tmp, i8* %expandedKey_2_addr, align 1" [helper.cpp:136]   --->   Operation 43 'store' <Predicate = (!icmp_ln135 & trunc_ln136_1 == 2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "br label %2" [helper.cpp:136]   --->   Operation 44 'br' <Predicate = (!icmp_ln135 & trunc_ln136_1 == 2)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (2.32ns)   --->   "store i8 %tmp, i8* %expandedKey_1_addr, align 1" [helper.cpp:136]   --->   Operation 45 'store' <Predicate = (!icmp_ln135 & trunc_ln136_1 == 1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "br label %2" [helper.cpp:136]   --->   Operation 46 'br' <Predicate = (!icmp_ln135 & trunc_ln136_1 == 1)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (2.32ns)   --->   "store i8 %tmp, i8* %expandedKey_0_addr, align 1" [helper.cpp:136]   --->   Operation 47 'store' <Predicate = (!icmp_ln135 & trunc_ln136_1 == 0)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "br label %2" [helper.cpp:136]   --->   Operation 48 'br' <Predicate = (!icmp_ln135 & trunc_ln136_1 == 0)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (2.32ns)   --->   "store i8 %tmp, i8* %expandedKey_3_addr, align 1" [helper.cpp:136]   --->   Operation 49 'store' <Predicate = (!icmp_ln135 & trunc_ln136_1 == 3)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "br label %2" [helper.cpp:136]   --->   Operation 50 'br' <Predicate = (!icmp_ln135 & trunc_ln136_1 == 3)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "br label %0" [helper.cpp:135]   --->   Operation 51 'br' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (1.76ns)   --->   "br label %.preheader1" [helper.cpp:139]   --->   Operation 52 'br' <Predicate = (icmp_ln135)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 4.23>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%currentSize_0 = phi i8 [ %currentSize, %EX_WHILE ], [ 16, %.preheader1.preheader ]"   --->   Operation 53 'phi' 'currentSize_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%iteration_assign = phi i32 [ %rconIteration_1, %EX_WHILE ], [ 1, %.preheader1.preheader ]"   --->   Operation 54 'phi' 'iteration_assign' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.55ns)   --->   "%icmp_ln139 = icmp ult i8 %currentSize_0, -80" [helper.cpp:139]   --->   Operation 55 'icmp' 'icmp_ln139' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 40, i64 40, i64 40)"   --->   Operation 56 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "br i1 %icmp_ln139, label %EX_WHILE, label %3" [helper.cpp:139]   --->   Operation 57 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln139 = trunc i8 %currentSize_0 to i4" [helper.cpp:139]   --->   Operation 58 'trunc' 'trunc_ln139' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (1.91ns)   --->   "%add_ln145 = add i8 -4, %currentSize_0" [helper.cpp:145]   --->   Operation 59 'add' 'add_ln145' <Predicate = (icmp_ln139)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%lshr_ln1 = call i6 @_ssdm_op_PartSelect.i6.i8.i32.i32(i8 %add_ln145, i32 2, i32 7)" [helper.cpp:145]   --->   Operation 60 'partselect' 'lshr_ln1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln145 = zext i6 %lshr_ln1 to i64" [helper.cpp:145]   --->   Operation 61 'zext' 'zext_ln145' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%expandedKey_0_addr_1 = getelementptr [44 x i8]* %expandedKey_0, i64 0, i64 %zext_ln145" [helper.cpp:145]   --->   Operation 62 'getelementptr' 'expandedKey_0_addr_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 63 [2/2] (2.32ns)   --->   "%t_0_3 = load i8* %expandedKey_0_addr_1, align 1" [helper.cpp:145]   --->   Operation 63 'load' 't_0_3' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_3 : Operation 64 [1/1] (1.91ns)   --->   "%add_ln145_3 = add i8 -1, %currentSize_0" [helper.cpp:145]   --->   Operation 64 'add' 'add_ln145_3' <Predicate = (icmp_ln139)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%lshr_ln145_3 = call i6 @_ssdm_op_PartSelect.i6.i8.i32.i32(i8 %add_ln145_3, i32 2, i32 7)" [helper.cpp:145]   --->   Operation 65 'partselect' 'lshr_ln145_3' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln145_3 = zext i6 %lshr_ln145_3 to i64" [helper.cpp:145]   --->   Operation 66 'zext' 'zext_ln145_3' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%expandedKey_3_addr_1 = getelementptr [44 x i8]* %expandedKey_3, i64 0, i64 %zext_ln145_3" [helper.cpp:145]   --->   Operation 67 'getelementptr' 'expandedKey_3_addr_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 68 [2/2] (2.32ns)   --->   "%t_3_1 = load i8* %expandedKey_3_addr_1, align 1" [helper.cpp:145]   --->   Operation 68 'load' 't_3_1' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_3 : Operation 69 [1/1] (1.30ns)   --->   "%icmp_ln151 = icmp eq i4 %trunc_ln139, 0" [helper.cpp:151]   --->   Operation 69 'icmp' 'icmp_ln151' <Predicate = (icmp_ln139)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (2.55ns)   --->   "%rconIteration = add nsw i32 1, %iteration_assign" [helper.cpp:153]   --->   Operation 70 'add' 'rconIteration' <Predicate = (icmp_ln139)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%trunc_ln114 = trunc i32 %iteration_assign to i8" [helper.cpp:114->helper.cpp:153]   --->   Operation 71 'trunc' 'trunc_ln114' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln97 = zext i8 %trunc_ln114 to i64" [helper.cpp:97->helper.cpp:114->helper.cpp:153]   --->   Operation 72 'zext' 'zext_ln97' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%Rcon_addr = getelementptr inbounds [255 x i8]* @Rcon, i64 0, i64 %zext_ln97" [helper.cpp:97->helper.cpp:114->helper.cpp:153]   --->   Operation 73 'getelementptr' 'Rcon_addr' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 74 [2/2] (3.25ns)   --->   "%Rcon_load = load i8* %Rcon_addr, align 1" [helper.cpp:97->helper.cpp:114->helper.cpp:153]   --->   Operation 74 'load' 'Rcon_load' <Predicate = (icmp_ln139)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_3 : Operation 75 [1/1] (0.69ns)   --->   "%rconIteration_1 = select i1 %icmp_ln151, i32 %rconIteration, i32 %iteration_assign" [helper.cpp:151]   --->   Operation 75 'select' 'rconIteration_1' <Predicate = (icmp_ln139)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (1.91ns)   --->   "%add_ln170 = add i8 -16, %currentSize_0" [helper.cpp:170]   --->   Operation 76 'add' 'add_ln170' <Predicate = (icmp_ln139)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%lshr_ln2 = call i6 @_ssdm_op_PartSelect.i6.i8.i32.i32(i8 %add_ln170, i32 2, i32 7)" [helper.cpp:170]   --->   Operation 77 'partselect' 'lshr_ln2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln170 = zext i6 %lshr_ln2 to i64" [helper.cpp:170]   --->   Operation 78 'zext' 'zext_ln170' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%expandedKey_0_addr_2 = getelementptr [44 x i8]* %expandedKey_0, i64 0, i64 %zext_ln170" [helper.cpp:170]   --->   Operation 79 'getelementptr' 'expandedKey_0_addr_2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 80 [2/2] (2.32ns)   --->   "%expandedKey_0_load = load i8* %expandedKey_0_addr_2, align 1" [helper.cpp:170]   --->   Operation 80 'load' 'expandedKey_0_load' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%or_ln172 = or i8 %currentSize_0, 1" [helper.cpp:172]   --->   Operation 81 'or' 'or_ln172' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln172 = zext i8 %or_ln172 to i9" [helper.cpp:172]   --->   Operation 82 'zext' 'zext_ln172' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (1.91ns)   --->   "%add_ln170_1 = add i9 -16, %zext_ln172" [helper.cpp:170]   --->   Operation 83 'add' 'add_ln170_1' <Predicate = (icmp_ln139)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln2 = call i7 @_ssdm_op_PartSelect.i7.i9.i32.i32(i9 %add_ln170_1, i32 2, i32 8)" [helper.cpp:170]   --->   Operation 84 'partselect' 'trunc_ln2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%sext_ln170 = sext i7 %trunc_ln2 to i30" [helper.cpp:170]   --->   Operation 85 'sext' 'sext_ln170' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln170_1 = zext i30 %sext_ln170 to i64" [helper.cpp:170]   --->   Operation 86 'zext' 'zext_ln170_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%expandedKey_1_addr_2 = getelementptr [44 x i8]* %expandedKey_1, i64 0, i64 %zext_ln170_1" [helper.cpp:170]   --->   Operation 87 'getelementptr' 'expandedKey_1_addr_2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 88 [2/2] (2.32ns)   --->   "%expandedKey_1_load = load i8* %expandedKey_1_addr_2, align 1" [helper.cpp:170]   --->   Operation 88 'load' 'expandedKey_1_load' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_3 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node add_ln170_3)   --->   "%or_ln172_1 = or i8 %currentSize_0, 3" [helper.cpp:172]   --->   Operation 89 'or' 'or_ln172_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node add_ln170_3)   --->   "%zext_ln172_1 = zext i8 %or_ln172_1 to i9" [helper.cpp:172]   --->   Operation 90 'zext' 'zext_ln172_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (1.91ns) (out node of the LUT)   --->   "%add_ln170_3 = add i9 -16, %zext_ln172_1" [helper.cpp:170]   --->   Operation 91 'add' 'add_ln170_3' <Predicate = (icmp_ln139)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln170_2 = call i7 @_ssdm_op_PartSelect.i7.i9.i32.i32(i9 %add_ln170_3, i32 2, i32 8)" [helper.cpp:170]   --->   Operation 92 'partselect' 'trunc_ln170_2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%sext_ln170_2 = sext i7 %trunc_ln170_2 to i30" [helper.cpp:170]   --->   Operation 93 'sext' 'sext_ln170_2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln170_3 = zext i30 %sext_ln170_2 to i64" [helper.cpp:170]   --->   Operation 94 'zext' 'zext_ln170_3' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%expandedKey_3_addr_2 = getelementptr [44 x i8]* %expandedKey_3, i64 0, i64 %zext_ln170_3" [helper.cpp:170]   --->   Operation 95 'getelementptr' 'expandedKey_3_addr_2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 96 [2/2] (2.32ns)   --->   "%expandedKey_3_load = load i8* %expandedKey_3_addr_2, align 1" [helper.cpp:170]   --->   Operation 96 'load' 'expandedKey_3_load' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>

State 4 <SV = 3> <Delay = 5.57>
ST_4 : Operation 97 [1/2] (2.32ns)   --->   "%t_0_3 = load i8* %expandedKey_0_addr_1, align 1" [helper.cpp:145]   --->   Operation 97 'load' 't_0_3' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_4 : Operation 98 [1/1] (1.91ns)   --->   "%add_ln145_1 = add i8 -3, %currentSize_0" [helper.cpp:145]   --->   Operation 98 'add' 'add_ln145_1' <Predicate = (icmp_ln139)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%lshr_ln145_1 = call i6 @_ssdm_op_PartSelect.i6.i8.i32.i32(i8 %add_ln145_1, i32 2, i32 7)" [helper.cpp:145]   --->   Operation 99 'partselect' 'lshr_ln145_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln145_1 = zext i6 %lshr_ln145_1 to i64" [helper.cpp:145]   --->   Operation 100 'zext' 'zext_ln145_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%expandedKey_1_addr_1 = getelementptr [44 x i8]* %expandedKey_1, i64 0, i64 %zext_ln145_1" [helper.cpp:145]   --->   Operation 101 'getelementptr' 'expandedKey_1_addr_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_4 : Operation 102 [2/2] (2.32ns)   --->   "%t_1_1 = load i8* %expandedKey_1_addr_1, align 1" [helper.cpp:145]   --->   Operation 102 'load' 't_1_1' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_4 : Operation 103 [1/2] (2.32ns)   --->   "%t_3_1 = load i8* %expandedKey_3_addr_1, align 1" [helper.cpp:145]   --->   Operation 103 'load' 't_3_1' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln46_3 = zext i8 %t_0_3 to i64" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 104 'zext' 'zext_ln46_3' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%sbox_addr_3 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_3" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 105 'getelementptr' 'sbox_addr_3' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 0.00>
ST_4 : Operation 106 [2/2] (3.25ns)   --->   "%t_3 = load i8* %sbox_addr_3, align 1" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 106 'load' 't_3' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_4 : Operation 107 [1/2] (3.25ns)   --->   "%Rcon_load = load i8* %Rcon_addr, align 1" [helper.cpp:97->helper.cpp:114->helper.cpp:153]   --->   Operation 107 'load' 'Rcon_load' <Predicate = (icmp_ln139)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_4 : Operation 108 [1/2] (2.32ns)   --->   "%expandedKey_0_load = load i8* %expandedKey_0_addr_2, align 1" [helper.cpp:170]   --->   Operation 108 'load' 'expandedKey_0_load' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_4 : Operation 109 [1/2] (2.32ns)   --->   "%expandedKey_1_load = load i8* %expandedKey_1_addr_2, align 1" [helper.cpp:170]   --->   Operation 109 'load' 'expandedKey_1_load' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_4 : Operation 110 [1/2] (2.32ns)   --->   "%expandedKey_3_load = load i8* %expandedKey_3_addr_2, align 1" [helper.cpp:170]   --->   Operation 110 'load' 'expandedKey_3_load' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>

State 5 <SV = 4> <Delay = 6.82>
ST_5 : Operation 111 [1/2] (2.32ns)   --->   "%t_1_1 = load i8* %expandedKey_1_addr_1, align 1" [helper.cpp:145]   --->   Operation 111 'load' 't_1_1' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_5 : Operation 112 [1/1] (1.91ns)   --->   "%add_ln145_2 = add i8 -2, %currentSize_0" [helper.cpp:145]   --->   Operation 112 'add' 'add_ln145_2' <Predicate = (icmp_ln139)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%lshr_ln145_2 = call i6 @_ssdm_op_PartSelect.i6.i8.i32.i32(i8 %add_ln145_2, i32 2, i32 7)" [helper.cpp:145]   --->   Operation 113 'partselect' 'lshr_ln145_2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln145_2 = zext i6 %lshr_ln145_2 to i64" [helper.cpp:145]   --->   Operation 114 'zext' 'zext_ln145_2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%expandedKey_2_addr_1 = getelementptr [44 x i8]* %expandedKey_2, i64 0, i64 %zext_ln145_2" [helper.cpp:145]   --->   Operation 115 'getelementptr' 'expandedKey_2_addr_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_5 : Operation 116 [2/2] (2.32ns)   --->   "%t_2_1 = load i8* %expandedKey_2_addr_1, align 1" [helper.cpp:145]   --->   Operation 116 'load' 't_2_1' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_5 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i8 %t_1_1 to i64" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 117 'zext' 'zext_ln46' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 0.00>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%sbox_addr = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 118 'getelementptr' 'sbox_addr' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 0.00>
ST_5 : Operation 119 [2/2] (3.25ns)   --->   "%sbox_load = load i8* %sbox_addr, align 1" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 119 'load' 'sbox_load' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_5 : Operation 120 [1/2] (3.25ns)   --->   "%t_3 = load i8* %sbox_addr_3, align 1" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 120 'load' 't_3' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_5 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node xor_ln171_3)   --->   "%t_3_2 = select i1 %icmp_ln151, i8 %t_3, i8 %t_3_1" [helper.cpp:151]   --->   Operation 121 'select' 't_3_2' <Predicate = (icmp_ln139)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 122 [1/1] (0.00ns)   --->   "%lshr_ln3 = call i6 @_ssdm_op_PartSelect.i6.i8.i32.i32(i8 %currentSize_0, i32 2, i32 7)" [helper.cpp:171]   --->   Operation 122 'partselect' 'lshr_ln3' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_5 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln171 = zext i6 %lshr_ln3 to i64" [helper.cpp:171]   --->   Operation 123 'zext' 'zext_ln171' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (1.24ns) (out node of the LUT)   --->   "%xor_ln171_3 = xor i8 %expandedKey_3_load, %t_3_2" [helper.cpp:171]   --->   Operation 124 'xor' 'xor_ln171_3' <Predicate = (icmp_ln139)> <Delay = 1.24> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%expandedKey_3_addr_3 = getelementptr [44 x i8]* %expandedKey_3, i64 0, i64 %zext_ln171" [helper.cpp:171]   --->   Operation 125 'getelementptr' 'expandedKey_3_addr_3' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_5 : Operation 126 [1/1] (2.32ns)   --->   "store i8 %xor_ln171_3, i8* %expandedKey_3_addr_3, align 1" [helper.cpp:171]   --->   Operation 126 'store' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>

State 6 <SV = 5> <Delay = 6.82>
ST_6 : Operation 127 [1/2] (2.32ns)   --->   "%t_2_1 = load i8* %expandedKey_2_addr_1, align 1" [helper.cpp:145]   --->   Operation 127 'load' 't_2_1' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_6 : Operation 128 [1/2] (3.25ns)   --->   "%sbox_load = load i8* %sbox_addr, align 1" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 128 'load' 'sbox_load' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_6 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln46_1 = zext i8 %t_2_1 to i64" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 129 'zext' 'zext_ln46_1' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 0.00>
ST_6 : Operation 130 [1/1] (0.00ns)   --->   "%sbox_addr_1 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_1" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 130 'getelementptr' 'sbox_addr_1' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 0.00>
ST_6 : Operation 131 [2/2] (3.25ns)   --->   "%t_1 = load i8* %sbox_addr_1, align 1" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 131 'load' 't_1' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_6 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node xor_ln171)   --->   "%t_0 = xor i8 %Rcon_load, %sbox_load" [helper.cpp:114->helper.cpp:153]   --->   Operation 132 'xor' 't_0' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node xor_ln171)   --->   "%t_0_2 = select i1 %icmp_ln151, i8 %t_0, i8 %t_0_3" [helper.cpp:151]   --->   Operation 133 'select' 't_0_2' <Predicate = (icmp_ln139)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 134 [1/1] (1.91ns)   --->   "%currentSize = add i8 4, %currentSize_0" [helper.cpp:172]   --->   Operation 134 'add' 'currentSize' <Predicate = (icmp_ln139)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 135 [1/1] (1.24ns) (out node of the LUT)   --->   "%xor_ln171 = xor i8 %expandedKey_0_load, %t_0_2" [helper.cpp:171]   --->   Operation 135 'xor' 'xor_ln171' <Predicate = (icmp_ln139)> <Delay = 1.24> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 136 [1/1] (0.00ns)   --->   "%expandedKey_0_addr_3 = getelementptr [44 x i8]* %expandedKey_0, i64 0, i64 %zext_ln171" [helper.cpp:171]   --->   Operation 136 'getelementptr' 'expandedKey_0_addr_3' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_6 : Operation 137 [1/1] (2.32ns)   --->   "store i8 %xor_ln171, i8* %expandedKey_0_addr_3, align 1" [helper.cpp:171]   --->   Operation 137 'store' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>

State 7 <SV = 6> <Delay = 6.82>
ST_7 : Operation 138 [1/2] (3.25ns)   --->   "%t_1 = load i8* %sbox_addr_1, align 1" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 138 'load' 't_1' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_7 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln46_2 = zext i8 %t_3_1 to i64" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 139 'zext' 'zext_ln46_2' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 0.00>
ST_7 : Operation 140 [1/1] (0.00ns)   --->   "%sbox_addr_2 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln46_2" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 140 'getelementptr' 'sbox_addr_2' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 0.00>
ST_7 : Operation 141 [2/2] (3.25ns)   --->   "%t_2 = load i8* %sbox_addr_2, align 1" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 141 'load' 't_2' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_7 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node xor_ln171_1)   --->   "%t_1_2 = select i1 %icmp_ln151, i8 %t_1, i8 %t_1_1" [helper.cpp:151]   --->   Operation 142 'select' 't_1_2' <Predicate = (icmp_ln139)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 143 [1/1] (1.24ns) (out node of the LUT)   --->   "%xor_ln171_1 = xor i8 %expandedKey_1_load, %t_1_2" [helper.cpp:171]   --->   Operation 143 'xor' 'xor_ln171_1' <Predicate = (icmp_ln139)> <Delay = 1.24> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 144 [1/1] (0.00ns)   --->   "%expandedKey_1_addr_3 = getelementptr [44 x i8]* %expandedKey_1, i64 0, i64 %zext_ln171" [helper.cpp:171]   --->   Operation 144 'getelementptr' 'expandedKey_1_addr_3' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_7 : Operation 145 [1/1] (2.32ns)   --->   "store i8 %xor_ln171_1, i8* %expandedKey_1_addr_3, align 1" [helper.cpp:171]   --->   Operation 145 'store' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_7 : Operation 146 [1/1] (1.91ns)   --->   "%add_ln172 = add i9 1, %zext_ln172" [helper.cpp:172]   --->   Operation 146 'add' 'add_ln172' <Predicate = (icmp_ln139)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 147 [1/1] (1.91ns)   --->   "%add_ln170_2 = add i9 -15, %zext_ln172" [helper.cpp:170]   --->   Operation 147 'add' 'add_ln170_2' <Predicate = (icmp_ln139)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 148 [1/1] (0.00ns)   --->   "%trunc_ln170_1 = call i7 @_ssdm_op_PartSelect.i7.i9.i32.i32(i9 %add_ln170_2, i32 2, i32 8)" [helper.cpp:170]   --->   Operation 148 'partselect' 'trunc_ln170_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_7 : Operation 149 [1/1] (0.00ns)   --->   "%sext_ln170_1 = sext i7 %trunc_ln170_1 to i30" [helper.cpp:170]   --->   Operation 149 'sext' 'sext_ln170_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_7 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln170_2 = zext i30 %sext_ln170_1 to i64" [helper.cpp:170]   --->   Operation 150 'zext' 'zext_ln170_2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_7 : Operation 151 [1/1] (0.00ns)   --->   "%expandedKey_2_addr_2 = getelementptr [44 x i8]* %expandedKey_2, i64 0, i64 %zext_ln170_2" [helper.cpp:170]   --->   Operation 151 'getelementptr' 'expandedKey_2_addr_2' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_7 : Operation 152 [2/2] (2.32ns)   --->   "%expandedKey_2_load = load i8* %expandedKey_2_addr_2, align 1" [helper.cpp:170]   --->   Operation 152 'load' 'expandedKey_2_load' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_7 : Operation 153 [1/1] (0.00ns)   --->   "%lshr_ln171_1 = call i7 @_ssdm_op_PartSelect.i7.i9.i32.i32(i9 %add_ln172, i32 2, i32 8)" [helper.cpp:171]   --->   Operation 153 'partselect' 'lshr_ln171_1' <Predicate = (icmp_ln139)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 6.82>
ST_8 : Operation 154 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [helper.cpp:140]   --->   Operation 154 'specloopname' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_8 : Operation 155 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3)" [helper.cpp:140]   --->   Operation 155 'specregionbegin' 'tmp_3' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_8 : Operation 156 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [helper.cpp:141]   --->   Operation 156 'specpipeline' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_8 : Operation 157 [1/2] (3.25ns)   --->   "%t_2 = load i8* %sbox_addr_2, align 1" [helper.cpp:46->helper.cpp:110->helper.cpp:153]   --->   Operation 157 'load' 't_2' <Predicate = (icmp_ln139 & icmp_ln151)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_8 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node xor_ln171_2)   --->   "%t_2_2 = select i1 %icmp_ln151, i8 %t_2, i8 %t_2_1" [helper.cpp:151]   --->   Operation 158 'select' 't_2_2' <Predicate = (icmp_ln139)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 159 [1/2] (2.32ns)   --->   "%expandedKey_2_load = load i8* %expandedKey_2_addr_2, align 1" [helper.cpp:170]   --->   Operation 159 'load' 'expandedKey_2_load' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_8 : Operation 160 [1/1] (1.24ns) (out node of the LUT)   --->   "%xor_ln171_2 = xor i8 %expandedKey_2_load, %t_2_2" [helper.cpp:171]   --->   Operation 160 'xor' 'xor_ln171_2' <Predicate = (icmp_ln139)> <Delay = 1.24> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 161 [1/1] (0.00ns)   --->   "%zext_ln171_1 = zext i7 %lshr_ln171_1 to i64" [helper.cpp:171]   --->   Operation 161 'zext' 'zext_ln171_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_8 : Operation 162 [1/1] (0.00ns)   --->   "%expandedKey_2_addr_3 = getelementptr [44 x i8]* %expandedKey_2, i64 0, i64 %zext_ln171_1" [helper.cpp:171]   --->   Operation 162 'getelementptr' 'expandedKey_2_addr_3' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_8 : Operation 163 [1/1] (2.32ns)   --->   "store i8 %xor_ln171_2, i8* %expandedKey_2_addr_3, align 1" [helper.cpp:171]   --->   Operation 163 'store' <Predicate = (icmp_ln139)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 44> <RAM>
ST_8 : Operation 164 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_3)" [helper.cpp:174]   --->   Operation 164 'specregionend' 'empty_12' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_8 : Operation 165 [1/1] (0.00ns)   --->   "br label %.preheader1" [helper.cpp:174]   --->   Operation 165 'br' <Predicate = (icmp_ln139)> <Delay = 0.00>

State 9 <SV = 3> <Delay = 0.00>
ST_9 : Operation 166 [1/1] (0.00ns)   --->   "ret void" [helper.cpp:175]   --->   Operation 166 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', helper.cpp:135) [43]  (1.77 ns)

 <State 2>: 4.39ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', helper.cpp:135) [43]  (0 ns)
	'mux' operation ('tmp', helper.cpp:136) [51]  (2.06 ns)
	'store' operation ('store_ln136', helper.cpp:136) of variable 'tmp', helper.cpp:136 on array 'expandedKey_0' [67]  (2.32 ns)

 <State 3>: 4.24ns
The critical path consists of the following:
	'phi' operation ('currentSize') with incoming values : ('currentSize', helper.cpp:172) [77]  (0 ns)
	'add' operation ('add_ln145', helper.cpp:145) [87]  (1.92 ns)
	'getelementptr' operation ('expandedKey_0_addr_1', helper.cpp:145) [90]  (0 ns)
	'load' operation ('t[0]', helper.cpp:145) on array 'expandedKey_0' [91]  (2.32 ns)

 <State 4>: 5.58ns
The critical path consists of the following:
	'load' operation ('t[0]', helper.cpp:145) on array 'expandedKey_0' [91]  (2.32 ns)
	'getelementptr' operation ('sbox_addr_3', helper.cpp:46->helper.cpp:110->helper.cpp:153) [119]  (0 ns)
	'load' operation ('t[3]', helper.cpp:46->helper.cpp:110->helper.cpp:153) on array 'sbox' [120]  (3.25 ns)

 <State 5>: 6.82ns
The critical path consists of the following:
	'load' operation ('t[3]', helper.cpp:46->helper.cpp:110->helper.cpp:153) on array 'sbox' [120]  (3.25 ns)
	'select' operation ('t[3]', helper.cpp:151) [126]  (0 ns)
	'xor' operation ('xor_ln171_3', helper.cpp:171) [173]  (1.25 ns)
	'store' operation ('store_ln171', helper.cpp:171) of variable 'xor_ln171_3', helper.cpp:171 on array 'expandedKey_3' [175]  (2.32 ns)

 <State 6>: 6.82ns
The critical path consists of the following:
	'load' operation ('sbox_load', helper.cpp:46->helper.cpp:110->helper.cpp:153) on array 'sbox' [111]  (3.25 ns)
	'xor' operation ('t[0]', helper.cpp:114->helper.cpp:153) [125]  (0 ns)
	'select' operation ('t[0]', helper.cpp:151) [129]  (0 ns)
	'xor' operation ('xor_ln171', helper.cpp:171) [137]  (1.25 ns)
	'store' operation ('store_ln171', helper.cpp:171) of variable 'xor_ln171', helper.cpp:171 on array 'expandedKey_0' [141]  (2.32 ns)

 <State 7>: 6.82ns
The critical path consists of the following:
	'load' operation ('t[1]', helper.cpp:46->helper.cpp:110->helper.cpp:153) on array 'sbox' [114]  (3.25 ns)
	'select' operation ('t[1]', helper.cpp:151) [128]  (0 ns)
	'xor' operation ('xor_ln171_1', helper.cpp:171) [150]  (1.25 ns)
	'store' operation ('store_ln171', helper.cpp:171) of variable 'xor_ln171_1', helper.cpp:171 on array 'expandedKey_1' [152]  (2.32 ns)

 <State 8>: 6.82ns
The critical path consists of the following:
	'load' operation ('t[2]', helper.cpp:46->helper.cpp:110->helper.cpp:153) on array 'sbox' [117]  (3.25 ns)
	'select' operation ('t[2]', helper.cpp:151) [127]  (0 ns)
	'xor' operation ('xor_ln171_2', helper.cpp:171) [160]  (1.25 ns)
	'store' operation ('store_ln171', helper.cpp:171) of variable 'xor_ln171_2', helper.cpp:171 on array 'expandedKey_2' [164]  (2.32 ns)

 <State 9>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
