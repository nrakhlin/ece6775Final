

================================================================
== Vivado HLS Report for 'shiftRows'
================================================================
* Date:           Sun Nov 17 11:18:47 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        encrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 4.874 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                 |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |    Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +-----------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- Loop 1         |        ?|        ?|         ?|          -|          -|      4|    no    |
        | + Loop 1.1      |        ?|        ?|         ?|          -|          -| 0 ~ 3 |    no    |
        |  ++ Loop 1.1.1  |        ?|        ?|         2|          -|          -|      ?|    no    |
        +-----------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 
5 --> 6 3 
6 --> 5 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (1.76ns)   --->   "br label %.loopexit" [helper.cpp:179]   --->   Operation 7 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%indvars_iv = phi i3 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 8 'phi' 'indvars_iv' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (1.13ns)   --->   "%icmp_ln179 = icmp eq i3 %indvars_iv, -4" [helper.cpp:179]   --->   Operation 9 'icmp' 'icmp_ln179' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 10 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (1.65ns)   --->   "%i = add i3 %indvars_iv, 1" [helper.cpp:179]   --->   Operation 11 'add' 'i' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "br i1 %icmp_ln179, label %7, label %1" [helper.cpp:179]   --->   Operation 12 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%trunc_ln183 = trunc i3 %indvars_iv to i2" [helper.cpp:183]   --->   Operation 13 'trunc' 'trunc_ln183' <Predicate = (!icmp_ln179)> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%ptr = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %trunc_ln183, i2 0)" [helper.cpp:183]   --->   Operation 14 'bitconcatenate' 'ptr' <Predicate = (!icmp_ln179)> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln183 = zext i4 %ptr to i32" [helper.cpp:183]   --->   Operation 15 'zext' 'zext_ln183' <Predicate = (!icmp_ln179)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln189 = zext i4 %ptr to i64" [helper.cpp:189]   --->   Operation 16 'zext' 'zext_ln189' <Predicate = (!icmp_ln179)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%state_addr = getelementptr [16 x i8]* %state, i64 0, i64 %zext_ln189" [helper.cpp:189]   --->   Operation 17 'getelementptr' 'state_addr' <Predicate = (!icmp_ln179)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%or_ln190 = or i4 %ptr, 3" [helper.cpp:190]   --->   Operation 18 'or' 'or_ln190' <Predicate = (!icmp_ln179)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln190 = zext i4 %or_ln190 to i32" [helper.cpp:190]   --->   Operation 19 'zext' 'zext_ln190' <Predicate = (!icmp_ln179)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln192 = zext i4 %or_ln190 to i64" [helper.cpp:192]   --->   Operation 20 'zext' 'zext_ln192' <Predicate = (!icmp_ln179)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%state_addr_1 = getelementptr [16 x i8]* %state, i64 0, i64 %zext_ln192" [helper.cpp:192]   --->   Operation 21 'getelementptr' 'state_addr_1' <Predicate = (!icmp_ln179)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.76ns)   --->   "br label %2" [helper.cpp:187]   --->   Operation 22 'br' <Predicate = (!icmp_ln179)> <Delay = 1.76>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "ret void" [helper.cpp:195]   --->   Operation 23 'ret' <Predicate = (icmp_ln179)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%k_0 = phi i2 [ 0, %1 ], [ %k, %6 ]"   --->   Operation 24 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln187 = zext i2 %k_0 to i3" [helper.cpp:187]   --->   Operation 25 'zext' 'zext_ln187' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (1.13ns)   --->   "%icmp_ln187 = icmp eq i3 %zext_ln187, %indvars_iv" [helper.cpp:187]   --->   Operation 26 'icmp' 'icmp_ln187' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 3, i64 0)"   --->   Operation 27 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.56ns)   --->   "%k = add i2 %k_0, 1" [helper.cpp:187]   --->   Operation 28 'add' 'k' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "br i1 %icmp_ln187, label %.loopexit.loopexit, label %3" [helper.cpp:187]   --->   Operation 29 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [2/2] (2.32ns)   --->   "%tmp = load i8* %state_addr, align 1" [helper.cpp:189]   --->   Operation 30 'load' 'tmp' <Predicate = (!icmp_ln187)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 31 'br' <Predicate = (icmp_ln187)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 2.32>
ST_4 : Operation 32 [1/2] (2.32ns)   --->   "%tmp = load i8* %state_addr, align 1" [helper.cpp:189]   --->   Operation 32 'load' 'tmp' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 33 [1/1] (1.76ns)   --->   "br label %4" [helper.cpp:190]   --->   Operation 33 'br' <Predicate = true> <Delay = 1.76>

State 5 <SV = 4> <Delay = 4.87>
ST_5 : Operation 34 [1/1] (0.00ns)   --->   "%j_0 = phi i32 [ %zext_ln183, %3 ], [ %j_1, %5 ]"   --->   Operation 34 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 35 [1/1] (2.47ns)   --->   "%icmp_ln190 = icmp slt i32 %j_0, %zext_ln190" [helper.cpp:190]   --->   Operation 35 'icmp' 'icmp_ln190' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "br i1 %icmp_ln190, label %5, label %6" [helper.cpp:190]   --->   Operation 36 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (2.55ns)   --->   "%j_1 = add nsw i32 %j_0, 1" [helper.cpp:191]   --->   Operation 37 'add' 'j_1' <Predicate = (icmp_ln190)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%sext_ln191 = sext i32 %j_1 to i64" [helper.cpp:191]   --->   Operation 38 'sext' 'sext_ln191' <Predicate = (icmp_ln190)> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%state_addr_2 = getelementptr [16 x i8]* %state, i64 0, i64 %sext_ln191" [helper.cpp:191]   --->   Operation 39 'getelementptr' 'state_addr_2' <Predicate = (icmp_ln190)> <Delay = 0.00>
ST_5 : Operation 40 [2/2] (2.32ns)   --->   "%state_load = load i8* %state_addr_2, align 1" [helper.cpp:191]   --->   Operation 40 'load' 'state_load' <Predicate = (icmp_ln190)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 41 [1/1] (2.32ns)   --->   "store i8 %tmp, i8* %state_addr_1, align 1" [helper.cpp:192]   --->   Operation 41 'store' <Predicate = (!icmp_ln190)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "br label %2" [helper.cpp:187]   --->   Operation 42 'br' <Predicate = (!icmp_ln190)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 4.64>
ST_6 : Operation 43 [1/2] (2.32ns)   --->   "%state_load = load i8* %state_addr_2, align 1" [helper.cpp:191]   --->   Operation 43 'load' 'state_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 44 [1/1] (0.00ns)   --->   "%sext_ln191_1 = sext i32 %j_0 to i64" [helper.cpp:191]   --->   Operation 44 'sext' 'sext_ln191_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 45 [1/1] (0.00ns)   --->   "%state_addr_3 = getelementptr [16 x i8]* %state, i64 0, i64 %sext_ln191_1" [helper.cpp:191]   --->   Operation 45 'getelementptr' 'state_addr_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 46 [1/1] (2.32ns)   --->   "store i8 %state_load, i8* %state_addr_3, align 1" [helper.cpp:191]   --->   Operation 46 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 47 [1/1] (0.00ns)   --->   "br label %4" [helper.cpp:190]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', helper.cpp:179) [4]  (1.77 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('k') with incoming values : ('k', helper.cpp:187) [21]  (1.77 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'load' operation ('tmp', helper.cpp:189) on array 'state' [28]  (2.32 ns)

 <State 4>: 2.32ns
The critical path consists of the following:
	'load' operation ('tmp', helper.cpp:189) on array 'state' [28]  (2.32 ns)

 <State 5>: 4.87ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('zext_ln183', helper.cpp:183) ('j', helper.cpp:191) [31]  (0 ns)
	'add' operation ('j', helper.cpp:191) [35]  (2.55 ns)
	'getelementptr' operation ('state_addr_2', helper.cpp:191) [37]  (0 ns)
	'load' operation ('state_load', helper.cpp:191) on array 'state' [38]  (2.32 ns)

 <State 6>: 4.64ns
The critical path consists of the following:
	'load' operation ('state_load', helper.cpp:191) on array 'state' [38]  (2.32 ns)
	'store' operation ('store_ln191', helper.cpp:191) of variable 'state_load', helper.cpp:191 on array 'state' [41]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
