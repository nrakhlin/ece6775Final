

================================================================
== Vivado HLS Report for 'encrypt_dut'
================================================================
* Date:           Mon Dec  9 22:58:08 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        encrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.804 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      488|      488| 4.880 us | 4.880 us |  488|  488|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%input_0_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_0)" [encrypt.cpp:81]   --->   Operation 3 'read' 'input_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%input_1_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_1)" [encrypt.cpp:81]   --->   Operation 4 'read' 'input_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%input_2_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_2)" [encrypt.cpp:81]   --->   Operation 5 'read' 'input_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%input_3_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_3)" [encrypt.cpp:81]   --->   Operation 6 'read' 'input_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%input_4_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_4)" [encrypt.cpp:81]   --->   Operation 7 'read' 'input_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%input_5_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_5)" [encrypt.cpp:81]   --->   Operation 8 'read' 'input_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%input_6_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_6)" [encrypt.cpp:81]   --->   Operation 9 'read' 'input_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%input_7_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_7)" [encrypt.cpp:81]   --->   Operation 10 'read' 'input_7_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%input_8_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_8)" [encrypt.cpp:81]   --->   Operation 11 'read' 'input_8_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%input_9_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_9)" [encrypt.cpp:81]   --->   Operation 12 'read' 'input_9_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%input_10_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_10)" [encrypt.cpp:81]   --->   Operation 13 'read' 'input_10_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%input_11_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_11)" [encrypt.cpp:81]   --->   Operation 14 'read' 'input_11_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%input_12_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_12)" [encrypt.cpp:81]   --->   Operation 15 'read' 'input_12_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%input_13_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_13)" [encrypt.cpp:81]   --->   Operation 16 'read' 'input_13_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%input_14_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_14)" [encrypt.cpp:81]   --->   Operation 17 'read' 'input_14_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%input_15_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_15)" [encrypt.cpp:81]   --->   Operation 18 'read' 'input_15_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%key_0_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_0)" [encrypt.cpp:81]   --->   Operation 19 'read' 'key_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%key_1_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_1)" [encrypt.cpp:81]   --->   Operation 20 'read' 'key_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%key_2_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_2)" [encrypt.cpp:81]   --->   Operation 21 'read' 'key_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%key_3_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_3)" [encrypt.cpp:81]   --->   Operation 22 'read' 'key_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%key_4_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_4)" [encrypt.cpp:81]   --->   Operation 23 'read' 'key_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%key_5_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_5)" [encrypt.cpp:81]   --->   Operation 24 'read' 'key_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%key_6_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_6)" [encrypt.cpp:81]   --->   Operation 25 'read' 'key_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%key_7_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_7)" [encrypt.cpp:81]   --->   Operation 26 'read' 'key_7_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%key_8_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_8)" [encrypt.cpp:81]   --->   Operation 27 'read' 'key_8_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%key_9_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_9)" [encrypt.cpp:81]   --->   Operation 28 'read' 'key_9_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%key_10_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_10)" [encrypt.cpp:81]   --->   Operation 29 'read' 'key_10_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%key_11_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_11)" [encrypt.cpp:81]   --->   Operation 30 'read' 'key_11_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%key_12_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_12)" [encrypt.cpp:81]   --->   Operation 31 'read' 'key_12_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%key_13_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_13)" [encrypt.cpp:81]   --->   Operation 32 'read' 'key_13_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%key_14_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_14)" [encrypt.cpp:81]   --->   Operation 33 'read' 'key_14_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%key_15_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %key_15)" [encrypt.cpp:81]   --->   Operation 34 'read' 'key_15_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [2/2] (0.00ns)   --->   "call fastcc void @aes_encrypt(i8 %input_0_read, i8 %input_1_read, i8 %input_2_read, i8 %input_3_read, i8 %input_4_read, i8 %input_5_read, i8 %input_6_read, i8 %input_7_read, i8 %input_8_read, i8 %input_9_read, i8 %input_10_read, i8 %input_11_read, i8 %input_12_read, i8 %input_13_read, i8 %input_14_read, i8 %input_15_read, i8* %output_0, i8* %output_1, i8* %output_2, i8* %output_3, i8* %output_4, i8* %output_5, i8* %output_6, i8* %output_7, i8* %output_8, i8* %output_9, i8* %output_10, i8* %output_11, i8* %output_12, i8* %output_13, i8* %output_14, i8* %output_15, i8 %key_0_read, i8 %key_1_read, i8 %key_2_read, i8 %key_3_read, i8 %key_4_read, i8 %key_5_read, i8 %key_6_read, i8 %key_7_read, i8 %key_8_read, i8 %key_9_read, i8 %key_10_read, i8 %key_11_read, i8 %key_12_read, i8 %key_13_read, i8 %key_14_read, i8 %key_15_read)" [encrypt.cpp:81]   --->   Operation 35 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 2.32>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_15), !map !58"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_14), !map !64"   --->   Operation 37 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_13), !map !70"   --->   Operation 38 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_12), !map !76"   --->   Operation 39 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_11), !map !82"   --->   Operation 40 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_10), !map !88"   --->   Operation 41 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_9), !map !94"   --->   Operation 42 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_8), !map !100"   --->   Operation 43 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_7), !map !106"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_6), !map !112"   --->   Operation 45 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_5), !map !118"   --->   Operation 46 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_4), !map !124"   --->   Operation 47 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_3), !map !130"   --->   Operation 48 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_2), !map !136"   --->   Operation 49 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_1), !map !142"   --->   Operation 50 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %output_0), !map !148"   --->   Operation 51 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_15), !map !154"   --->   Operation 52 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_14), !map !158"   --->   Operation 53 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_13), !map !162"   --->   Operation 54 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_12), !map !166"   --->   Operation 55 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_11), !map !170"   --->   Operation 56 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_10), !map !174"   --->   Operation 57 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_9), !map !178"   --->   Operation 58 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_8), !map !182"   --->   Operation 59 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_7), !map !186"   --->   Operation 60 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_6), !map !190"   --->   Operation 61 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_5), !map !194"   --->   Operation 62 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_4), !map !198"   --->   Operation 63 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_3), !map !202"   --->   Operation 64 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_2), !map !206"   --->   Operation 65 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_1), !map !210"   --->   Operation 66 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %key_0), !map !214"   --->   Operation 67 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_15), !map !218"   --->   Operation 68 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_14), !map !222"   --->   Operation 69 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_13), !map !226"   --->   Operation 70 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_12), !map !230"   --->   Operation 71 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_11), !map !234"   --->   Operation 72 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_10), !map !238"   --->   Operation 73 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_9), !map !242"   --->   Operation 74 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_8), !map !246"   --->   Operation 75 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_7), !map !250"   --->   Operation 76 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_6), !map !254"   --->   Operation 77 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_5), !map !258"   --->   Operation 78 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_4), !map !262"   --->   Operation 79 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_3), !map !266"   --->   Operation 80 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_2), !map !270"   --->   Operation 81 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_1), !map !274"   --->   Operation 82 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_0), !map !278"   --->   Operation 83 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @encrypt_dut_str) nounwind"   --->   Operation 84 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 85 [1/2] (2.32ns)   --->   "call fastcc void @aes_encrypt(i8 %input_0_read, i8 %input_1_read, i8 %input_2_read, i8 %input_3_read, i8 %input_4_read, i8 %input_5_read, i8 %input_6_read, i8 %input_7_read, i8 %input_8_read, i8 %input_9_read, i8 %input_10_read, i8 %input_11_read, i8 %input_12_read, i8 %input_13_read, i8 %input_14_read, i8 %input_15_read, i8* %output_0, i8* %output_1, i8* %output_2, i8* %output_3, i8* %output_4, i8* %output_5, i8* %output_6, i8* %output_7, i8* %output_8, i8* %output_9, i8* %output_10, i8* %output_11, i8* %output_12, i8* %output_13, i8* %output_14, i8* %output_15, i8 %key_0_read, i8 %key_1_read, i8 %key_2_read, i8 %key_3_read, i8 %key_4_read, i8 %key_5_read, i8 %key_6_read, i8 %key_7_read, i8 %key_8_read, i8 %key_9_read, i8 %key_10_read, i8 %key_11_read, i8 %key_12_read, i8 %key_13_read, i8 %key_14_read, i8 %key_15_read)" [encrypt.cpp:81]   --->   Operation 85 'call' <Predicate = true> <Delay = 2.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "ret void" [encrypt.cpp:82]   --->   Operation 86 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 2.32ns
The critical path consists of the following:
	'call' operation ('call_ln81', encrypt.cpp:81) to 'aes_encrypt' [134]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
