// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _expandKey_HH_
#define _expandKey_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "expandKey_sbox.h"
#include "expandKey_Rcon.h"

namespace ap_rtl {

struct expandKey : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > expandedKey_address0;
    sc_out< sc_logic > expandedKey_ce0;
    sc_out< sc_logic > expandedKey_we0;
    sc_out< sc_lv<8> > expandedKey_d0;
    sc_in< sc_lv<8> > expandedKey_q0;
    sc_out< sc_lv<8> > expandedKey_address1;
    sc_out< sc_logic > expandedKey_ce1;
    sc_out< sc_logic > expandedKey_we1;
    sc_out< sc_lv<8> > expandedKey_d1;
    sc_in< sc_lv<8> > expandedKey_q1;
    sc_out< sc_lv<4> > key_address0;
    sc_out< sc_logic > key_ce0;
    sc_in< sc_lv<8> > key_q0;


    // Module declarations
    expandKey(sc_module_name name);
    SC_HAS_PROCESS(expandKey);

    ~expandKey();

    sc_trace_file* mVcdFile;

    expandKey_sbox* sbox_U;
    expandKey_Rcon* Rcon_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<8> > reg_279;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln126_fu_283_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > i_fu_289_p2;
    sc_signal< sc_lv<5> > i_reg_564;
    sc_signal< sc_lv<64> > zext_ln127_fu_295_p1;
    sc_signal< sc_lv<64> > zext_ln127_reg_569;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln130_fu_300_p2;
    sc_signal< sc_lv<1> > icmp_ln142_fu_332_p2;
    sc_signal< sc_lv<1> > icmp_ln142_reg_592;
    sc_signal< sc_lv<32> > rconIteration_1_fu_353_p3;
    sc_signal< sc_lv<32> > rconIteration_1_reg_605;
    sc_signal< sc_lv<8> > t_1_1_reg_610;
    sc_signal< sc_lv<8> > Rcon_load_reg_630;
    sc_signal< sc_lv<8> > t_2_1_reg_635;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > t_3_1_reg_640;
    sc_signal< sc_lv<8> > sbox_load_reg_646;
    sc_signal< sc_lv<8> > or_ln162_fu_404_p2;
    sc_signal< sc_lv<8> > or_ln162_reg_661;
    sc_signal< sc_lv<9> > zext_ln162_fu_410_p1;
    sc_signal< sc_lv<9> > zext_ln162_reg_666;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > xor_ln161_fu_450_p2;
    sc_signal< sc_lv<8> > xor_ln161_reg_682;
    sc_signal< sc_lv<8> > xor_ln161_1_fu_456_p2;
    sc_signal< sc_lv<8> > xor_ln161_1_reg_687;
    sc_signal< sc_lv<8> > or_ln162_1_fu_476_p2;
    sc_signal< sc_lv<8> > or_ln162_1_reg_697;
    sc_signal< sc_lv<8> > xor_ln161_2_fu_521_p2;
    sc_signal< sc_lv<8> > xor_ln161_2_reg_712;
    sc_signal< sc_lv<8> > currentSize_fu_533_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<5> > i_0_reg_245;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > currentSize_0_reg_256;
    sc_signal< sc_lv<32> > iteration_assign_reg_268;
    sc_signal< sc_lv<64> > zext_ln136_fu_316_p1;
    sc_signal< sc_lv<64> > zext_ln136_1_fu_327_p1;
    sc_signal< sc_lv<64> > zext_ln92_fu_348_p1;
    sc_signal< sc_lv<64> > zext_ln136_2_fu_367_p1;
    sc_signal< sc_lv<64> > zext_ln136_3_fu_378_p1;
    sc_signal< sc_lv<64> > zext_ln43_fu_383_p1;
    sc_signal< sc_lv<64> > zext_ln43_1_fu_388_p1;
    sc_signal< sc_lv<64> > zext_ln161_fu_399_p1;
    sc_signal< sc_lv<64> > zext_ln161_2_fu_424_p1;
    sc_signal< sc_lv<64> > zext_ln43_2_fu_429_p1;
    sc_signal< sc_lv<64> > zext_ln161_4_fu_471_p1;
    sc_signal< sc_lv<64> > zext_ln161_6_fu_496_p1;
    sc_signal< sc_lv<64> > zext_ln43_3_fu_501_p1;
    sc_signal< sc_lv<64> > zext_ln161_1_fu_512_p1;
    sc_signal< sc_lv<64> > zext_ln161_3_fu_517_p1;
    sc_signal< sc_lv<64> > zext_ln161_5_fu_544_p1;
    sc_signal< sc_lv<64> > zext_ln161_7_fu_556_p1;
    sc_signal< sc_lv<8> > xor_ln161_3_fu_549_p2;
    sc_signal< sc_lv<8> > add_ln136_fu_310_p2;
    sc_signal< sc_lv<8> > add_ln136_1_fu_321_p2;
    sc_signal< sc_lv<4> > trunc_ln130_fu_306_p1;
    sc_signal< sc_lv<8> > trunc_ln109_fu_344_p1;
    sc_signal< sc_lv<32> > rconIteration_fu_338_p2;
    sc_signal< sc_lv<8> > add_ln136_2_fu_361_p2;
    sc_signal< sc_lv<8> > add_ln136_3_fu_372_p2;
    sc_signal< sc_lv<8> > add_ln161_fu_393_p2;
    sc_signal< sc_lv<9> > add_ln161_1_fu_414_p2;
    sc_signal< sc_lv<32> > sext_ln161_fu_420_p1;
    sc_signal< sc_lv<8> > t_0_fu_433_p2;
    sc_signal< sc_lv<8> > t_0_2_fu_443_p3;
    sc_signal< sc_lv<8> > t_1_2_fu_437_p3;
    sc_signal< sc_lv<9> > add_ln161_2_fu_462_p2;
    sc_signal< sc_lv<32> > sext_ln161_1_fu_467_p1;
    sc_signal< sc_lv<9> > zext_ln162_1_fu_482_p1;
    sc_signal< sc_lv<9> > add_ln161_3_fu_486_p2;
    sc_signal< sc_lv<32> > sext_ln161_2_fu_492_p1;
    sc_signal< sc_lv<8> > t_2_2_fu_506_p3;
    sc_signal< sc_lv<9> > add_ln162_fu_539_p2;
    sc_signal< sc_lv<8> > t_3_2_fu_527_p3;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<8> ap_const_lv8_B0;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<9> ap_const_lv9_1F0;
    static const sc_lv<9> ap_const_lv9_1F1;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_add_ln136_1_fu_321_p2();
    void thread_add_ln136_2_fu_361_p2();
    void thread_add_ln136_3_fu_372_p2();
    void thread_add_ln136_fu_310_p2();
    void thread_add_ln161_1_fu_414_p2();
    void thread_add_ln161_2_fu_462_p2();
    void thread_add_ln161_3_fu_486_p2();
    void thread_add_ln161_fu_393_p2();
    void thread_add_ln162_fu_539_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_currentSize_fu_533_p2();
    void thread_expandedKey_address0();
    void thread_expandedKey_address1();
    void thread_expandedKey_ce0();
    void thread_expandedKey_ce1();
    void thread_expandedKey_d0();
    void thread_expandedKey_d1();
    void thread_expandedKey_we0();
    void thread_expandedKey_we1();
    void thread_i_fu_289_p2();
    void thread_icmp_ln126_fu_283_p2();
    void thread_icmp_ln130_fu_300_p2();
    void thread_icmp_ln142_fu_332_p2();
    void thread_key_address0();
    void thread_key_ce0();
    void thread_or_ln162_1_fu_476_p2();
    void thread_or_ln162_fu_404_p2();
    void thread_rconIteration_1_fu_353_p3();
    void thread_rconIteration_fu_338_p2();
    void thread_sbox_address0();
    void thread_sbox_ce0();
    void thread_sext_ln161_1_fu_467_p1();
    void thread_sext_ln161_2_fu_492_p1();
    void thread_sext_ln161_fu_420_p1();
    void thread_t_0_2_fu_443_p3();
    void thread_t_0_fu_433_p2();
    void thread_t_1_2_fu_437_p3();
    void thread_t_2_2_fu_506_p3();
    void thread_t_3_2_fu_527_p3();
    void thread_trunc_ln109_fu_344_p1();
    void thread_trunc_ln130_fu_306_p1();
    void thread_xor_ln161_1_fu_456_p2();
    void thread_xor_ln161_2_fu_521_p2();
    void thread_xor_ln161_3_fu_549_p2();
    void thread_xor_ln161_fu_450_p2();
    void thread_zext_ln127_fu_295_p1();
    void thread_zext_ln136_1_fu_327_p1();
    void thread_zext_ln136_2_fu_367_p1();
    void thread_zext_ln136_3_fu_378_p1();
    void thread_zext_ln136_fu_316_p1();
    void thread_zext_ln161_1_fu_512_p1();
    void thread_zext_ln161_2_fu_424_p1();
    void thread_zext_ln161_3_fu_517_p1();
    void thread_zext_ln161_4_fu_471_p1();
    void thread_zext_ln161_5_fu_544_p1();
    void thread_zext_ln161_6_fu_496_p1();
    void thread_zext_ln161_7_fu_556_p1();
    void thread_zext_ln161_fu_399_p1();
    void thread_zext_ln162_1_fu_482_p1();
    void thread_zext_ln162_fu_410_p1();
    void thread_zext_ln43_1_fu_388_p1();
    void thread_zext_ln43_2_fu_429_p1();
    void thread_zext_ln43_3_fu_501_p1();
    void thread_zext_ln43_fu_383_p1();
    void thread_zext_ln92_fu_348_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
