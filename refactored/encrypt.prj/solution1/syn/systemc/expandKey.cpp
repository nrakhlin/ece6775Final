// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "expandKey.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic expandKey::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic expandKey::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> expandKey::ap_ST_fsm_state1 = "1";
const sc_lv<7> expandKey::ap_ST_fsm_state2 = "10";
const sc_lv<7> expandKey::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<7> expandKey::ap_ST_fsm_pp0_stage1 = "1000";
const sc_lv<7> expandKey::ap_ST_fsm_pp0_stage2 = "10000";
const sc_lv<7> expandKey::ap_ST_fsm_pp0_stage3 = "100000";
const sc_lv<7> expandKey::ap_ST_fsm_state9 = "1000000";
const bool expandKey::ap_const_boolean_1 = true;
const sc_lv<32> expandKey::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> expandKey::ap_const_lv32_1 = "1";
const sc_lv<32> expandKey::ap_const_lv32_2 = "10";
const bool expandKey::ap_const_boolean_0 = false;
const sc_lv<1> expandKey::ap_const_lv1_1 = "1";
const sc_lv<32> expandKey::ap_const_lv32_3 = "11";
const sc_lv<32> expandKey::ap_const_lv32_4 = "100";
const sc_lv<32> expandKey::ap_const_lv32_5 = "101";
const sc_lv<1> expandKey::ap_const_lv1_0 = "0";
const sc_lv<5> expandKey::ap_const_lv5_0 = "00000";
const sc_lv<8> expandKey::ap_const_lv8_10 = "10000";
const sc_lv<2> expandKey::ap_const_lv2_2 = "10";
const sc_lv<2> expandKey::ap_const_lv2_1 = "1";
const sc_lv<2> expandKey::ap_const_lv2_0 = "00";
const sc_lv<2> expandKey::ap_const_lv2_3 = "11";
const sc_lv<5> expandKey::ap_const_lv5_10 = "10000";
const sc_lv<5> expandKey::ap_const_lv5_1 = "1";
const sc_lv<8> expandKey::ap_const_lv8_B0 = "10110000";
const sc_lv<8> expandKey::ap_const_lv8_FC = "11111100";
const sc_lv<32> expandKey::ap_const_lv32_7 = "111";
const sc_lv<8> expandKey::ap_const_lv8_FF = "11111111";
const sc_lv<4> expandKey::ap_const_lv4_0 = "0000";
const sc_lv<8> expandKey::ap_const_lv8_F0 = "11110000";
const sc_lv<8> expandKey::ap_const_lv8_1 = "1";
const sc_lv<9> expandKey::ap_const_lv9_1F0 = "111110000";
const sc_lv<32> expandKey::ap_const_lv32_8 = "1000";
const sc_lv<8> expandKey::ap_const_lv8_3 = "11";
const sc_lv<8> expandKey::ap_const_lv8_FD = "11111101";
const sc_lv<8> expandKey::ap_const_lv8_FE = "11111110";
const sc_lv<8> expandKey::ap_const_lv8_4 = "100";
const sc_lv<9> expandKey::ap_const_lv9_1 = "1";
const sc_lv<9> expandKey::ap_const_lv9_1F1 = "111110001";
const sc_lv<32> expandKey::ap_const_lv32_6 = "110";

expandKey::expandKey(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sbox_U = new expandKey_sbox("sbox_U");
    sbox_U->clk(ap_clk);
    sbox_U->reset(ap_rst);
    sbox_U->address0(sbox_address0);
    sbox_U->ce0(sbox_ce0);
    sbox_U->q0(sbox_q0);
    Rcon_U = new expandKey_Rcon("Rcon_U");
    Rcon_U->clk(ap_clk);
    Rcon_U->reset(ap_rst);
    Rcon_U->address0(Rcon_address0);
    Rcon_U->ce0(Rcon_ce0);
    Rcon_U->q0(Rcon_q0);
    encrypt_dut_mux_1bkb_U1 = new encrypt_dut_mux_1bkb<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>("encrypt_dut_mux_1bkb_U1");
    encrypt_dut_mux_1bkb_U1->din0(key_0_read);
    encrypt_dut_mux_1bkb_U1->din1(key_1_read);
    encrypt_dut_mux_1bkb_U1->din2(key_2_read);
    encrypt_dut_mux_1bkb_U1->din3(key_3_read);
    encrypt_dut_mux_1bkb_U1->din4(key_4_read);
    encrypt_dut_mux_1bkb_U1->din5(key_5_read);
    encrypt_dut_mux_1bkb_U1->din6(key_6_read);
    encrypt_dut_mux_1bkb_U1->din7(key_7_read);
    encrypt_dut_mux_1bkb_U1->din8(key_8_read);
    encrypt_dut_mux_1bkb_U1->din9(key_9_read);
    encrypt_dut_mux_1bkb_U1->din10(key_10_read);
    encrypt_dut_mux_1bkb_U1->din11(key_11_read);
    encrypt_dut_mux_1bkb_U1->din12(key_12_read);
    encrypt_dut_mux_1bkb_U1->din13(key_13_read);
    encrypt_dut_mux_1bkb_U1->din14(key_14_read);
    encrypt_dut_mux_1bkb_U1->din15(key_15_read);
    encrypt_dut_mux_1bkb_U1->din16(tmp_fu_484_p17);
    encrypt_dut_mux_1bkb_U1->dout(tmp_fu_484_p18);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Rcon_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln97_fu_600_p1 );

    SC_METHOD(thread_Rcon_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_add_ln145_1_fu_704_p2);
    sensitive << ( currentSize_0_reg_445 );

    SC_METHOD(thread_add_ln145_2_fu_730_p2);
    sensitive << ( currentSize_0_reg_445 );

    SC_METHOD(thread_add_ln145_3_fu_563_p2);
    sensitive << ( ap_phi_mux_currentSize_0_phi_fu_449_p4 );

    SC_METHOD(thread_add_ln145_fu_542_p2);
    sensitive << ( ap_phi_mux_currentSize_0_phi_fu_449_p4 );

    SC_METHOD(thread_add_ln170_1_fu_644_p2);
    sensitive << ( zext_ln172_fu_640_p1 );

    SC_METHOD(thread_add_ln170_2_fu_832_p2);
    sensitive << ( zext_ln172_reg_1012 );

    SC_METHOD(thread_add_ln170_3_fu_679_p2);
    sensitive << ( zext_ln172_1_fu_675_p1 );

    SC_METHOD(thread_add_ln170_fu_613_p2);
    sensitive << ( ap_phi_mux_currentSize_0_phi_fu_449_p4 );

    SC_METHOD(thread_add_ln172_fu_827_p2);
    sensitive << ( zext_ln172_reg_1012 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln139_fu_532_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_currentSize_0_phi_fu_449_p4);
    sensitive << ( currentSize_0_reg_445 );
    sensitive << ( icmp_ln139_reg_975 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( currentSize_reg_1100 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_iteration_assign_phi_fu_461_p4);
    sensitive << ( iteration_assign_reg_457 );
    sensitive << ( icmp_ln139_reg_975 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( rconIteration_1_reg_1002 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_currentSize_fu_799_p2);
    sensitive << ( currentSize_0_reg_445 );

    SC_METHOD(thread_expandedKey_0_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln136_fu_524_p1 );
    sensitive << ( zext_ln145_fu_558_p1 );

    SC_METHOD(thread_expandedKey_0_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln171_reg_1084 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln170_fu_629_p1 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_expandedKey_0_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_expandedKey_0_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_expandedKey_0_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_484_p18 );

    SC_METHOD(thread_expandedKey_0_d1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( expandedKey_0_load_reg_1054 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( t_0_2_fu_793_p3 );

    SC_METHOD(thread_expandedKey_0_we0);
    sensitive << ( icmp_ln135_fu_468_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( trunc_ln136_1_fu_510_p1 );

    SC_METHOD(thread_expandedKey_0_we1);
    sensitive << ( icmp_ln139_reg_975 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_expandedKey_1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln136_fu_524_p1 );
    sensitive << ( zext_ln170_1_fu_664_p1 );

    SC_METHOD(thread_expandedKey_1_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( zext_ln171_reg_1084 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln145_1_fu_720_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_expandedKey_1_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_expandedKey_1_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_expandedKey_1_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_484_p18 );

    SC_METHOD(thread_expandedKey_1_d1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( expandedKey_1_load_reg_1059 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( t_1_2_fu_815_p3 );

    SC_METHOD(thread_expandedKey_1_we0);
    sensitive << ( icmp_ln135_fu_468_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( trunc_ln136_1_fu_510_p1 );

    SC_METHOD(thread_expandedKey_1_we1);
    sensitive << ( icmp_ln139_reg_975 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_expandedKey_2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln136_fu_524_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln145_2_fu_746_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln170_2_fu_851_p1 );
    sensitive << ( zext_ln171_1_fu_879_p1 );

    SC_METHOD(thread_expandedKey_2_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_expandedKey_2_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_fu_484_p18 );
    sensitive << ( xor_ln171_2_fu_872_p2 );

    SC_METHOD(thread_expandedKey_2_we0);
    sensitive << ( icmp_ln135_fu_468_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln139_reg_975_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( trunc_ln136_1_fu_510_p1 );

    SC_METHOD(thread_expandedKey_3_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln136_fu_524_p1 );
    sensitive << ( zext_ln145_3_fu_579_p1 );

    SC_METHOD(thread_expandedKey_3_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( zext_ln171_fu_772_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln170_3_fu_699_p1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_expandedKey_3_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_expandedKey_3_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_expandedKey_3_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_484_p18 );

    SC_METHOD(thread_expandedKey_3_d1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( expandedKey_3_load_reg_1064 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( t_3_2_fu_756_p3 );

    SC_METHOD(thread_expandedKey_3_we0);
    sensitive << ( icmp_ln135_fu_468_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( trunc_ln136_1_fu_510_p1 );

    SC_METHOD(thread_expandedKey_3_we1);
    sensitive << ( icmp_ln139_reg_975 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_i_fu_474_p2);
    sensitive << ( i_0_reg_434 );

    SC_METHOD(thread_icmp_ln135_fu_468_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_434 );

    SC_METHOD(thread_icmp_ln139_fu_532_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_currentSize_0_phi_fu_449_p4 );

    SC_METHOD(thread_icmp_ln151_fu_584_p2);
    sensitive << ( icmp_ln139_fu_532_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( trunc_ln139_fu_538_p1 );

    SC_METHOD(thread_lshr_ln145_1_fu_710_p4);
    sensitive << ( add_ln145_1_fu_704_p2 );

    SC_METHOD(thread_lshr_ln145_2_fu_736_p4);
    sensitive << ( add_ln145_2_fu_730_p2 );

    SC_METHOD(thread_lshr_ln145_3_fu_569_p4);
    sensitive << ( add_ln145_3_fu_563_p2 );

    SC_METHOD(thread_lshr_ln1_fu_548_p4);
    sensitive << ( add_ln145_fu_542_p2 );

    SC_METHOD(thread_lshr_ln2_fu_619_p4);
    sensitive << ( add_ln170_fu_613_p2 );

    SC_METHOD(thread_lshr_ln3_fu_762_p4);
    sensitive << ( currentSize_0_reg_445 );

    SC_METHOD(thread_lshr_ln_fu_514_p4);
    sensitive << ( i_0_reg_434 );

    SC_METHOD(thread_or_ln172_1_fu_669_p2);
    sensitive << ( ap_phi_mux_currentSize_0_phi_fu_449_p4 );

    SC_METHOD(thread_or_ln172_fu_634_p2);
    sensitive << ( ap_phi_mux_currentSize_0_phi_fu_449_p4 );

    SC_METHOD(thread_rconIteration_1_fu_605_p3);
    sensitive << ( icmp_ln151_fu_584_p2 );
    sensitive << ( ap_phi_mux_iteration_assign_phi_fu_461_p4 );
    sensitive << ( rconIteration_fu_590_p2 );

    SC_METHOD(thread_rconIteration_fu_590_p2);
    sensitive << ( ap_phi_mux_iteration_assign_phi_fu_461_p4 );

    SC_METHOD(thread_sbox_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln46_3_fu_725_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln46_fu_751_p1 );
    sensitive << ( zext_ln46_1_fu_783_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln46_2_fu_811_p1 );

    SC_METHOD(thread_sbox_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_sext_ln170_1_fu_847_p1);
    sensitive << ( trunc_ln170_1_fu_837_p4 );

    SC_METHOD(thread_sext_ln170_2_fu_695_p1);
    sensitive << ( trunc_ln170_2_fu_685_p4 );

    SC_METHOD(thread_sext_ln170_fu_660_p1);
    sensitive << ( trunc_ln2_fu_650_p4 );

    SC_METHOD(thread_t_0_2_fu_793_p3);
    sensitive << ( icmp_ln151_reg_989 );
    sensitive << ( t_0_3_reg_1028 );
    sensitive << ( t_0_fu_788_p2 );

    SC_METHOD(thread_t_0_fu_788_p2);
    sensitive << ( sbox_q0 );
    sensitive << ( Rcon_load_reg_1049 );

    SC_METHOD(thread_t_1_2_fu_815_p3);
    sensitive << ( sbox_q0 );
    sensitive << ( icmp_ln151_reg_989 );
    sensitive << ( t_1_1_reg_1069 );

    SC_METHOD(thread_t_2_2_fu_866_p3);
    sensitive << ( sbox_q0 );
    sensitive << ( icmp_ln151_reg_989_pp0_iter1_reg );
    sensitive << ( t_2_1_reg_1090 );

    SC_METHOD(thread_t_3_2_fu_756_p3);
    sensitive << ( sbox_q0 );
    sensitive << ( icmp_ln151_reg_989 );
    sensitive << ( t_3_1_reg_1038 );

    SC_METHOD(thread_tmp_fu_484_p17);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_434 );

    SC_METHOD(thread_trunc_ln114_fu_596_p1);
    sensitive << ( ap_phi_mux_iteration_assign_phi_fu_461_p4 );

    SC_METHOD(thread_trunc_ln136_1_fu_510_p1);
    sensitive << ( i_0_reg_434 );

    SC_METHOD(thread_trunc_ln139_fu_538_p1);
    sensitive << ( ap_phi_mux_currentSize_0_phi_fu_449_p4 );

    SC_METHOD(thread_trunc_ln170_1_fu_837_p4);
    sensitive << ( add_ln170_2_fu_832_p2 );

    SC_METHOD(thread_trunc_ln170_2_fu_685_p4);
    sensitive << ( add_ln170_3_fu_679_p2 );

    SC_METHOD(thread_trunc_ln2_fu_650_p4);
    sensitive << ( add_ln170_1_fu_644_p2 );

    SC_METHOD(thread_xor_ln171_2_fu_872_p2);
    sensitive << ( expandedKey_2_q0 );
    sensitive << ( t_2_2_fu_866_p3 );

    SC_METHOD(thread_zext_ln136_fu_524_p1);
    sensitive << ( lshr_ln_fu_514_p4 );

    SC_METHOD(thread_zext_ln145_1_fu_720_p1);
    sensitive << ( lshr_ln145_1_fu_710_p4 );

    SC_METHOD(thread_zext_ln145_2_fu_746_p1);
    sensitive << ( lshr_ln145_2_fu_736_p4 );

    SC_METHOD(thread_zext_ln145_3_fu_579_p1);
    sensitive << ( lshr_ln145_3_fu_569_p4 );

    SC_METHOD(thread_zext_ln145_fu_558_p1);
    sensitive << ( lshr_ln1_fu_548_p4 );

    SC_METHOD(thread_zext_ln170_1_fu_664_p1);
    sensitive << ( sext_ln170_fu_660_p1 );

    SC_METHOD(thread_zext_ln170_2_fu_851_p1);
    sensitive << ( sext_ln170_1_fu_847_p1 );

    SC_METHOD(thread_zext_ln170_3_fu_699_p1);
    sensitive << ( sext_ln170_2_fu_695_p1 );

    SC_METHOD(thread_zext_ln170_fu_629_p1);
    sensitive << ( lshr_ln2_fu_619_p4 );

    SC_METHOD(thread_zext_ln171_1_fu_879_p1);
    sensitive << ( lshr_ln171_1_reg_1115 );

    SC_METHOD(thread_zext_ln171_fu_772_p1);
    sensitive << ( lshr_ln3_fu_762_p4 );

    SC_METHOD(thread_zext_ln172_1_fu_675_p1);
    sensitive << ( or_ln172_1_fu_669_p2 );

    SC_METHOD(thread_zext_ln172_fu_640_p1);
    sensitive << ( or_ln172_fu_634_p2 );

    SC_METHOD(thread_zext_ln46_1_fu_783_p1);
    sensitive << ( expandedKey_2_q0 );

    SC_METHOD(thread_zext_ln46_2_fu_811_p1);
    sensitive << ( t_3_1_reg_1038 );

    SC_METHOD(thread_zext_ln46_3_fu_725_p1);
    sensitive << ( expandedKey_0_q0 );

    SC_METHOD(thread_zext_ln46_fu_751_p1);
    sensitive << ( expandedKey_1_q1 );

    SC_METHOD(thread_zext_ln97_fu_600_p1);
    sensitive << ( trunc_ln114_fu_596_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln135_fu_468_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln139_fu_532_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );

    ap_CS_fsm = "0000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "expandKey_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, expandedKey_0_address0, "(port)expandedKey_0_address0");
    sc_trace(mVcdFile, expandedKey_0_ce0, "(port)expandedKey_0_ce0");
    sc_trace(mVcdFile, expandedKey_0_we0, "(port)expandedKey_0_we0");
    sc_trace(mVcdFile, expandedKey_0_d0, "(port)expandedKey_0_d0");
    sc_trace(mVcdFile, expandedKey_0_q0, "(port)expandedKey_0_q0");
    sc_trace(mVcdFile, expandedKey_0_address1, "(port)expandedKey_0_address1");
    sc_trace(mVcdFile, expandedKey_0_ce1, "(port)expandedKey_0_ce1");
    sc_trace(mVcdFile, expandedKey_0_we1, "(port)expandedKey_0_we1");
    sc_trace(mVcdFile, expandedKey_0_d1, "(port)expandedKey_0_d1");
    sc_trace(mVcdFile, expandedKey_0_q1, "(port)expandedKey_0_q1");
    sc_trace(mVcdFile, expandedKey_1_address0, "(port)expandedKey_1_address0");
    sc_trace(mVcdFile, expandedKey_1_ce0, "(port)expandedKey_1_ce0");
    sc_trace(mVcdFile, expandedKey_1_we0, "(port)expandedKey_1_we0");
    sc_trace(mVcdFile, expandedKey_1_d0, "(port)expandedKey_1_d0");
    sc_trace(mVcdFile, expandedKey_1_q0, "(port)expandedKey_1_q0");
    sc_trace(mVcdFile, expandedKey_1_address1, "(port)expandedKey_1_address1");
    sc_trace(mVcdFile, expandedKey_1_ce1, "(port)expandedKey_1_ce1");
    sc_trace(mVcdFile, expandedKey_1_we1, "(port)expandedKey_1_we1");
    sc_trace(mVcdFile, expandedKey_1_d1, "(port)expandedKey_1_d1");
    sc_trace(mVcdFile, expandedKey_1_q1, "(port)expandedKey_1_q1");
    sc_trace(mVcdFile, expandedKey_2_address0, "(port)expandedKey_2_address0");
    sc_trace(mVcdFile, expandedKey_2_ce0, "(port)expandedKey_2_ce0");
    sc_trace(mVcdFile, expandedKey_2_we0, "(port)expandedKey_2_we0");
    sc_trace(mVcdFile, expandedKey_2_d0, "(port)expandedKey_2_d0");
    sc_trace(mVcdFile, expandedKey_2_q0, "(port)expandedKey_2_q0");
    sc_trace(mVcdFile, expandedKey_3_address0, "(port)expandedKey_3_address0");
    sc_trace(mVcdFile, expandedKey_3_ce0, "(port)expandedKey_3_ce0");
    sc_trace(mVcdFile, expandedKey_3_we0, "(port)expandedKey_3_we0");
    sc_trace(mVcdFile, expandedKey_3_d0, "(port)expandedKey_3_d0");
    sc_trace(mVcdFile, expandedKey_3_q0, "(port)expandedKey_3_q0");
    sc_trace(mVcdFile, expandedKey_3_address1, "(port)expandedKey_3_address1");
    sc_trace(mVcdFile, expandedKey_3_ce1, "(port)expandedKey_3_ce1");
    sc_trace(mVcdFile, expandedKey_3_we1, "(port)expandedKey_3_we1");
    sc_trace(mVcdFile, expandedKey_3_d1, "(port)expandedKey_3_d1");
    sc_trace(mVcdFile, expandedKey_3_q1, "(port)expandedKey_3_q1");
    sc_trace(mVcdFile, key_0_read, "(port)key_0_read");
    sc_trace(mVcdFile, key_1_read, "(port)key_1_read");
    sc_trace(mVcdFile, key_2_read, "(port)key_2_read");
    sc_trace(mVcdFile, key_3_read, "(port)key_3_read");
    sc_trace(mVcdFile, key_4_read, "(port)key_4_read");
    sc_trace(mVcdFile, key_5_read, "(port)key_5_read");
    sc_trace(mVcdFile, key_6_read, "(port)key_6_read");
    sc_trace(mVcdFile, key_7_read, "(port)key_7_read");
    sc_trace(mVcdFile, key_8_read, "(port)key_8_read");
    sc_trace(mVcdFile, key_9_read, "(port)key_9_read");
    sc_trace(mVcdFile, key_10_read, "(port)key_10_read");
    sc_trace(mVcdFile, key_11_read, "(port)key_11_read");
    sc_trace(mVcdFile, key_12_read, "(port)key_12_read");
    sc_trace(mVcdFile, key_13_read, "(port)key_13_read");
    sc_trace(mVcdFile, key_14_read, "(port)key_14_read");
    sc_trace(mVcdFile, key_15_read, "(port)key_15_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, sbox_address0, "sbox_address0");
    sc_trace(mVcdFile, sbox_ce0, "sbox_ce0");
    sc_trace(mVcdFile, sbox_q0, "sbox_q0");
    sc_trace(mVcdFile, Rcon_address0, "Rcon_address0");
    sc_trace(mVcdFile, Rcon_ce0, "Rcon_ce0");
    sc_trace(mVcdFile, Rcon_q0, "Rcon_q0");
    sc_trace(mVcdFile, currentSize_0_reg_445, "currentSize_0_reg_445");
    sc_trace(mVcdFile, iteration_assign_reg_457, "iteration_assign_reg_457");
    sc_trace(mVcdFile, icmp_ln135_fu_468_p2, "icmp_ln135_fu_468_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_474_p2, "i_fu_474_p2");
    sc_trace(mVcdFile, icmp_ln139_fu_532_p2, "icmp_ln139_fu_532_p2");
    sc_trace(mVcdFile, icmp_ln139_reg_975, "icmp_ln139_reg_975");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter1, "ap_block_state7_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln139_reg_975_pp0_iter1_reg, "icmp_ln139_reg_975_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln151_fu_584_p2, "icmp_ln151_fu_584_p2");
    sc_trace(mVcdFile, icmp_ln151_reg_989, "icmp_ln151_reg_989");
    sc_trace(mVcdFile, icmp_ln151_reg_989_pp0_iter1_reg, "icmp_ln151_reg_989_pp0_iter1_reg");
    sc_trace(mVcdFile, rconIteration_1_fu_605_p3, "rconIteration_1_fu_605_p3");
    sc_trace(mVcdFile, rconIteration_1_reg_1002, "rconIteration_1_reg_1002");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln172_fu_640_p1, "zext_ln172_fu_640_p1");
    sc_trace(mVcdFile, zext_ln172_reg_1012, "zext_ln172_reg_1012");
    sc_trace(mVcdFile, t_0_3_reg_1028, "t_0_3_reg_1028");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter0, "ap_block_state4_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter1, "ap_block_state8_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, t_3_1_reg_1038, "t_3_1_reg_1038");
    sc_trace(mVcdFile, Rcon_load_reg_1049, "Rcon_load_reg_1049");
    sc_trace(mVcdFile, expandedKey_0_load_reg_1054, "expandedKey_0_load_reg_1054");
    sc_trace(mVcdFile, expandedKey_1_load_reg_1059, "expandedKey_1_load_reg_1059");
    sc_trace(mVcdFile, expandedKey_3_load_reg_1064, "expandedKey_3_load_reg_1064");
    sc_trace(mVcdFile, t_1_1_reg_1069, "t_1_1_reg_1069");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage2_iter0, "ap_block_state5_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, zext_ln171_fu_772_p1, "zext_ln171_fu_772_p1");
    sc_trace(mVcdFile, zext_ln171_reg_1084, "zext_ln171_reg_1084");
    sc_trace(mVcdFile, t_2_1_reg_1090, "t_2_1_reg_1090");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage3_iter0, "ap_block_state6_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, currentSize_fu_799_p2, "currentSize_fu_799_p2");
    sc_trace(mVcdFile, currentSize_reg_1100, "currentSize_reg_1100");
    sc_trace(mVcdFile, lshr_ln171_1_reg_1115, "lshr_ln171_1_reg_1115");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, i_0_reg_434, "i_0_reg_434");
    sc_trace(mVcdFile, ap_phi_mux_currentSize_0_phi_fu_449_p4, "ap_phi_mux_currentSize_0_phi_fu_449_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_iteration_assign_phi_fu_461_p4, "ap_phi_mux_iteration_assign_phi_fu_461_p4");
    sc_trace(mVcdFile, zext_ln136_fu_524_p1, "zext_ln136_fu_524_p1");
    sc_trace(mVcdFile, zext_ln145_fu_558_p1, "zext_ln145_fu_558_p1");
    sc_trace(mVcdFile, zext_ln145_3_fu_579_p1, "zext_ln145_3_fu_579_p1");
    sc_trace(mVcdFile, zext_ln97_fu_600_p1, "zext_ln97_fu_600_p1");
    sc_trace(mVcdFile, zext_ln170_fu_629_p1, "zext_ln170_fu_629_p1");
    sc_trace(mVcdFile, zext_ln170_1_fu_664_p1, "zext_ln170_1_fu_664_p1");
    sc_trace(mVcdFile, zext_ln170_3_fu_699_p1, "zext_ln170_3_fu_699_p1");
    sc_trace(mVcdFile, zext_ln145_1_fu_720_p1, "zext_ln145_1_fu_720_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, zext_ln46_3_fu_725_p1, "zext_ln46_3_fu_725_p1");
    sc_trace(mVcdFile, zext_ln145_2_fu_746_p1, "zext_ln145_2_fu_746_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, zext_ln46_fu_751_p1, "zext_ln46_fu_751_p1");
    sc_trace(mVcdFile, zext_ln46_1_fu_783_p1, "zext_ln46_1_fu_783_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, zext_ln46_2_fu_811_p1, "zext_ln46_2_fu_811_p1");
    sc_trace(mVcdFile, zext_ln170_2_fu_851_p1, "zext_ln170_2_fu_851_p1");
    sc_trace(mVcdFile, zext_ln171_1_fu_879_p1, "zext_ln171_1_fu_879_p1");
    sc_trace(mVcdFile, trunc_ln136_1_fu_510_p1, "trunc_ln136_1_fu_510_p1");
    sc_trace(mVcdFile, tmp_fu_484_p18, "tmp_fu_484_p18");
    sc_trace(mVcdFile, xor_ln171_2_fu_872_p2, "xor_ln171_2_fu_872_p2");
    sc_trace(mVcdFile, tmp_fu_484_p17, "tmp_fu_484_p17");
    sc_trace(mVcdFile, lshr_ln_fu_514_p4, "lshr_ln_fu_514_p4");
    sc_trace(mVcdFile, add_ln145_fu_542_p2, "add_ln145_fu_542_p2");
    sc_trace(mVcdFile, lshr_ln1_fu_548_p4, "lshr_ln1_fu_548_p4");
    sc_trace(mVcdFile, add_ln145_3_fu_563_p2, "add_ln145_3_fu_563_p2");
    sc_trace(mVcdFile, lshr_ln145_3_fu_569_p4, "lshr_ln145_3_fu_569_p4");
    sc_trace(mVcdFile, trunc_ln139_fu_538_p1, "trunc_ln139_fu_538_p1");
    sc_trace(mVcdFile, trunc_ln114_fu_596_p1, "trunc_ln114_fu_596_p1");
    sc_trace(mVcdFile, rconIteration_fu_590_p2, "rconIteration_fu_590_p2");
    sc_trace(mVcdFile, add_ln170_fu_613_p2, "add_ln170_fu_613_p2");
    sc_trace(mVcdFile, lshr_ln2_fu_619_p4, "lshr_ln2_fu_619_p4");
    sc_trace(mVcdFile, or_ln172_fu_634_p2, "or_ln172_fu_634_p2");
    sc_trace(mVcdFile, add_ln170_1_fu_644_p2, "add_ln170_1_fu_644_p2");
    sc_trace(mVcdFile, trunc_ln2_fu_650_p4, "trunc_ln2_fu_650_p4");
    sc_trace(mVcdFile, sext_ln170_fu_660_p1, "sext_ln170_fu_660_p1");
    sc_trace(mVcdFile, or_ln172_1_fu_669_p2, "or_ln172_1_fu_669_p2");
    sc_trace(mVcdFile, zext_ln172_1_fu_675_p1, "zext_ln172_1_fu_675_p1");
    sc_trace(mVcdFile, add_ln170_3_fu_679_p2, "add_ln170_3_fu_679_p2");
    sc_trace(mVcdFile, trunc_ln170_2_fu_685_p4, "trunc_ln170_2_fu_685_p4");
    sc_trace(mVcdFile, sext_ln170_2_fu_695_p1, "sext_ln170_2_fu_695_p1");
    sc_trace(mVcdFile, add_ln145_1_fu_704_p2, "add_ln145_1_fu_704_p2");
    sc_trace(mVcdFile, lshr_ln145_1_fu_710_p4, "lshr_ln145_1_fu_710_p4");
    sc_trace(mVcdFile, add_ln145_2_fu_730_p2, "add_ln145_2_fu_730_p2");
    sc_trace(mVcdFile, lshr_ln145_2_fu_736_p4, "lshr_ln145_2_fu_736_p4");
    sc_trace(mVcdFile, lshr_ln3_fu_762_p4, "lshr_ln3_fu_762_p4");
    sc_trace(mVcdFile, t_3_2_fu_756_p3, "t_3_2_fu_756_p3");
    sc_trace(mVcdFile, t_0_fu_788_p2, "t_0_fu_788_p2");
    sc_trace(mVcdFile, t_0_2_fu_793_p3, "t_0_2_fu_793_p3");
    sc_trace(mVcdFile, t_1_2_fu_815_p3, "t_1_2_fu_815_p3");
    sc_trace(mVcdFile, add_ln170_2_fu_832_p2, "add_ln170_2_fu_832_p2");
    sc_trace(mVcdFile, trunc_ln170_1_fu_837_p4, "trunc_ln170_1_fu_837_p4");
    sc_trace(mVcdFile, sext_ln170_1_fu_847_p1, "sext_ln170_1_fu_847_p1");
    sc_trace(mVcdFile, add_ln172_fu_827_p2, "add_ln172_fu_827_p2");
    sc_trace(mVcdFile, t_2_2_fu_866_p3, "t_2_2_fu_866_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

expandKey::~expandKey() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete sbox_U;
    delete Rcon_U;
    delete encrypt_dut_mux_1bkb_U1;
}

void expandKey::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln135_fu_468_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln135_fu_468_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln135_fu_468_p2.read(), ap_const_lv1_1))) {
        currentSize_0_reg_445 = ap_const_lv8_10;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        currentSize_0_reg_445 = currentSize_reg_1100.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_434 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln135_fu_468_p2.read(), ap_const_lv1_0))) {
        i_0_reg_434 = i_fu_474_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln135_fu_468_p2.read(), ap_const_lv1_1))) {
        iteration_assign_reg_457 = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        iteration_assign_reg_457 = rconIteration_1_reg_1002.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1))) {
        Rcon_load_reg_1049 = Rcon_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        currentSize_reg_1100 = currentSize_fu_799_p2.read();
        t_2_1_reg_1090 = expandedKey_2_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1))) {
        expandedKey_0_load_reg_1054 = expandedKey_0_q1.read();
        expandedKey_1_load_reg_1059 = expandedKey_1_q0.read();
        expandedKey_3_load_reg_1064 = expandedKey_3_q1.read();
        t_0_3_reg_1028 = expandedKey_0_q0.read();
        t_3_1_reg_1038 = expandedKey_3_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln139_reg_975 = icmp_ln139_fu_532_p2.read();
        icmp_ln139_reg_975_pp0_iter1_reg = icmp_ln139_reg_975.read();
        icmp_ln151_reg_989_pp0_iter1_reg = icmp_ln151_reg_989.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln139_fu_532_p2.read(), ap_const_lv1_1))) {
        icmp_ln151_reg_989 = icmp_ln151_fu_584_p2.read();
        zext_ln172_reg_1012 = zext_ln172_fu_640_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1))) {
        lshr_ln171_1_reg_1115 = add_ln172_fu_827_p2.read().range(8, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln139_fu_532_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        rconIteration_1_reg_1002 = rconIteration_1_fu_605_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        t_1_1_reg_1069 = expandedKey_1_q1.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        zext_ln171_reg_1084 = zext_ln171_fu_772_p1.read();
    }
}

void expandKey::thread_Rcon_address0() {
    Rcon_address0 =  (sc_lv<8>) (zext_ln97_fu_600_p1.read());
}

void expandKey::thread_Rcon_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        Rcon_ce0 = ap_const_logic_1;
    } else {
        Rcon_ce0 = ap_const_logic_0;
    }
}

void expandKey::thread_add_ln145_1_fu_704_p2() {
    add_ln145_1_fu_704_p2 = (!ap_const_lv8_FD.is_01() || !currentSize_0_reg_445.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FD) + sc_biguint<8>(currentSize_0_reg_445.read()));
}

void expandKey::thread_add_ln145_2_fu_730_p2() {
    add_ln145_2_fu_730_p2 = (!ap_const_lv8_FE.is_01() || !currentSize_0_reg_445.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FE) + sc_biguint<8>(currentSize_0_reg_445.read()));
}

void expandKey::thread_add_ln145_3_fu_563_p2() {
    add_ln145_3_fu_563_p2 = (!ap_const_lv8_FF.is_01() || !ap_phi_mux_currentSize_0_phi_fu_449_p4.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FF) + sc_biguint<8>(ap_phi_mux_currentSize_0_phi_fu_449_p4.read()));
}

void expandKey::thread_add_ln145_fu_542_p2() {
    add_ln145_fu_542_p2 = (!ap_const_lv8_FC.is_01() || !ap_phi_mux_currentSize_0_phi_fu_449_p4.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FC) + sc_biguint<8>(ap_phi_mux_currentSize_0_phi_fu_449_p4.read()));
}

void expandKey::thread_add_ln170_1_fu_644_p2() {
    add_ln170_1_fu_644_p2 = (!ap_const_lv9_1F0.is_01() || !zext_ln172_fu_640_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_1F0) + sc_biguint<9>(zext_ln172_fu_640_p1.read()));
}

void expandKey::thread_add_ln170_2_fu_832_p2() {
    add_ln170_2_fu_832_p2 = (!ap_const_lv9_1F1.is_01() || !zext_ln172_reg_1012.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_1F1) + sc_biguint<9>(zext_ln172_reg_1012.read()));
}

void expandKey::thread_add_ln170_3_fu_679_p2() {
    add_ln170_3_fu_679_p2 = (!ap_const_lv9_1F0.is_01() || !zext_ln172_1_fu_675_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_1F0) + sc_biguint<9>(zext_ln172_1_fu_675_p1.read()));
}

void expandKey::thread_add_ln170_fu_613_p2() {
    add_ln170_fu_613_p2 = (!ap_const_lv8_F0.is_01() || !ap_phi_mux_currentSize_0_phi_fu_449_p4.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_F0) + sc_biguint<8>(ap_phi_mux_currentSize_0_phi_fu_449_p4.read()));
}

void expandKey::thread_add_ln172_fu_827_p2() {
    add_ln172_fu_827_p2 = (!ap_const_lv9_1.is_01() || !zext_ln172_reg_1012.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(zext_ln172_reg_1012.read()));
}

void expandKey::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void expandKey::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[3];
}

void expandKey::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[4];
}

void expandKey::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[5];
}

void expandKey::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void expandKey::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void expandKey::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[6];
}

void expandKey::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_state4_pp0_stage1_iter0() {
    ap_block_state4_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_state5_pp0_stage2_iter0() {
    ap_block_state5_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_state6_pp0_stage3_iter0() {
    ap_block_state6_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_state7_pp0_stage0_iter1() {
    ap_block_state7_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_block_state8_pp0_stage1_iter1() {
    ap_block_state8_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void expandKey::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln139_fu_532_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void expandKey::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void expandKey::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void expandKey::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void expandKey::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void expandKey::thread_ap_phi_mux_currentSize_0_phi_fu_449_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_currentSize_0_phi_fu_449_p4 = currentSize_reg_1100.read();
    } else {
        ap_phi_mux_currentSize_0_phi_fu_449_p4 = currentSize_0_reg_445.read();
    }
}

void expandKey::thread_ap_phi_mux_iteration_assign_phi_fu_461_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_iteration_assign_phi_fu_461_p4 = rconIteration_1_reg_1002.read();
    } else {
        ap_phi_mux_iteration_assign_phi_fu_461_p4 = iteration_assign_reg_457.read();
    }
}

void expandKey::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void expandKey::thread_currentSize_fu_799_p2() {
    currentSize_fu_799_p2 = (!ap_const_lv8_4.is_01() || !currentSize_0_reg_445.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_4) + sc_biguint<8>(currentSize_0_reg_445.read()));
}

void expandKey::thread_expandedKey_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        expandedKey_0_address0 =  (sc_lv<6>) (zext_ln145_fu_558_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        expandedKey_0_address0 =  (sc_lv<6>) (zext_ln136_fu_524_p1.read());
    } else {
        expandedKey_0_address0 = "XXXXXX";
    }
}

void expandKey::thread_expandedKey_0_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            expandedKey_0_address1 =  (sc_lv<6>) (zext_ln171_reg_1084.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            expandedKey_0_address1 =  (sc_lv<6>) (zext_ln170_fu_629_p1.read());
        } else {
            expandedKey_0_address1 = "XXXXXX";
        }
    } else {
        expandedKey_0_address1 = "XXXXXX";
    }
}

void expandKey::thread_expandedKey_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        expandedKey_0_ce0 = ap_const_logic_1;
    } else {
        expandedKey_0_ce0 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_0_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        expandedKey_0_ce1 = ap_const_logic_1;
    } else {
        expandedKey_0_ce1 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_0_d0() {
    expandedKey_0_d0 = tmp_fu_484_p18.read();
}

void expandKey::thread_expandedKey_0_d1() {
    expandedKey_0_d1 = (expandedKey_0_load_reg_1054.read() ^ t_0_2_fu_793_p3.read());
}

void expandKey::thread_expandedKey_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln135_fu_468_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,2,2>(trunc_ln136_1_fu_510_p1.read(), ap_const_lv2_0))) {
        expandedKey_0_we0 = ap_const_logic_1;
    } else {
        expandedKey_0_we0 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_0_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        expandedKey_0_we1 = ap_const_logic_1;
    } else {
        expandedKey_0_we1 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        expandedKey_1_address0 =  (sc_lv<6>) (zext_ln170_1_fu_664_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        expandedKey_1_address0 =  (sc_lv<6>) (zext_ln136_fu_524_p1.read());
    } else {
        expandedKey_1_address0 = "XXXXXX";
    }
}

void expandKey::thread_expandedKey_1_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        expandedKey_1_address1 =  (sc_lv<6>) (zext_ln171_reg_1084.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        expandedKey_1_address1 =  (sc_lv<6>) (zext_ln145_1_fu_720_p1.read());
    } else {
        expandedKey_1_address1 = "XXXXXX";
    }
}

void expandKey::thread_expandedKey_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        expandedKey_1_ce0 = ap_const_logic_1;
    } else {
        expandedKey_1_ce0 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_1_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        expandedKey_1_ce1 = ap_const_logic_1;
    } else {
        expandedKey_1_ce1 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_1_d0() {
    expandedKey_1_d0 = tmp_fu_484_p18.read();
}

void expandKey::thread_expandedKey_1_d1() {
    expandedKey_1_d1 = (expandedKey_1_load_reg_1059.read() ^ t_1_2_fu_815_p3.read());
}

void expandKey::thread_expandedKey_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln135_fu_468_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,2,2>(trunc_ln136_1_fu_510_p1.read(), ap_const_lv2_1))) {
        expandedKey_1_we0 = ap_const_logic_1;
    } else {
        expandedKey_1_we0 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_1_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        expandedKey_1_we1 = ap_const_logic_1;
    } else {
        expandedKey_1_we1 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        expandedKey_2_address0 =  (sc_lv<6>) (zext_ln171_1_fu_879_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        expandedKey_2_address0 =  (sc_lv<6>) (zext_ln170_2_fu_851_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        expandedKey_2_address0 =  (sc_lv<6>) (zext_ln145_2_fu_746_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        expandedKey_2_address0 =  (sc_lv<6>) (zext_ln136_fu_524_p1.read());
    } else {
        expandedKey_2_address0 = "XXXXXX";
    }
}

void expandKey::thread_expandedKey_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        expandedKey_2_ce0 = ap_const_logic_1;
    } else {
        expandedKey_2_ce0 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_2_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        expandedKey_2_d0 = xor_ln171_2_fu_872_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        expandedKey_2_d0 = tmp_fu_484_p18.read();
    } else {
        expandedKey_2_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void expandKey::thread_expandedKey_2_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln135_fu_468_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,2,2>(trunc_ln136_1_fu_510_p1.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln139_reg_975_pp0_iter1_reg.read(), ap_const_lv1_1)))) {
        expandedKey_2_we0 = ap_const_logic_1;
    } else {
        expandedKey_2_we0 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_3_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        expandedKey_3_address0 =  (sc_lv<6>) (zext_ln145_3_fu_579_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        expandedKey_3_address0 =  (sc_lv<6>) (zext_ln136_fu_524_p1.read());
    } else {
        expandedKey_3_address0 = "XXXXXX";
    }
}

void expandKey::thread_expandedKey_3_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            expandedKey_3_address1 =  (sc_lv<6>) (zext_ln171_fu_772_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            expandedKey_3_address1 =  (sc_lv<6>) (zext_ln170_3_fu_699_p1.read());
        } else {
            expandedKey_3_address1 = "XXXXXX";
        }
    } else {
        expandedKey_3_address1 = "XXXXXX";
    }
}

void expandKey::thread_expandedKey_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        expandedKey_3_ce0 = ap_const_logic_1;
    } else {
        expandedKey_3_ce0 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_3_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        expandedKey_3_ce1 = ap_const_logic_1;
    } else {
        expandedKey_3_ce1 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_3_d0() {
    expandedKey_3_d0 = tmp_fu_484_p18.read();
}

void expandKey::thread_expandedKey_3_d1() {
    expandedKey_3_d1 = (expandedKey_3_load_reg_1064.read() ^ t_3_2_fu_756_p3.read());
}

void expandKey::thread_expandedKey_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln135_fu_468_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,2,2>(trunc_ln136_1_fu_510_p1.read(), ap_const_lv2_3))) {
        expandedKey_3_we0 = ap_const_logic_1;
    } else {
        expandedKey_3_we0 = ap_const_logic_0;
    }
}

void expandKey::thread_expandedKey_3_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln139_reg_975.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        expandedKey_3_we1 = ap_const_logic_1;
    } else {
        expandedKey_3_we1 = ap_const_logic_0;
    }
}

void expandKey::thread_i_fu_474_p2() {
    i_fu_474_p2 = (!i_0_reg_434.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_434.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void expandKey::thread_icmp_ln135_fu_468_p2() {
    icmp_ln135_fu_468_p2 = (!i_0_reg_434.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_434.read() == ap_const_lv5_10);
}

void expandKey::thread_icmp_ln139_fu_532_p2() {
    icmp_ln139_fu_532_p2 = (!ap_phi_mux_currentSize_0_phi_fu_449_p4.read().is_01() || !ap_const_lv8_B0.is_01())? sc_lv<1>(): (sc_biguint<8>(ap_phi_mux_currentSize_0_phi_fu_449_p4.read()) < sc_biguint<8>(ap_const_lv8_B0));
}

void expandKey::thread_icmp_ln151_fu_584_p2() {
    icmp_ln151_fu_584_p2 = (!trunc_ln139_fu_538_p1.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln139_fu_538_p1.read() == ap_const_lv4_0);
}

void expandKey::thread_lshr_ln145_1_fu_710_p4() {
    lshr_ln145_1_fu_710_p4 = add_ln145_1_fu_704_p2.read().range(7, 2);
}

void expandKey::thread_lshr_ln145_2_fu_736_p4() {
    lshr_ln145_2_fu_736_p4 = add_ln145_2_fu_730_p2.read().range(7, 2);
}

void expandKey::thread_lshr_ln145_3_fu_569_p4() {
    lshr_ln145_3_fu_569_p4 = add_ln145_3_fu_563_p2.read().range(7, 2);
}

void expandKey::thread_lshr_ln1_fu_548_p4() {
    lshr_ln1_fu_548_p4 = add_ln145_fu_542_p2.read().range(7, 2);
}

void expandKey::thread_lshr_ln2_fu_619_p4() {
    lshr_ln2_fu_619_p4 = add_ln170_fu_613_p2.read().range(7, 2);
}

void expandKey::thread_lshr_ln3_fu_762_p4() {
    lshr_ln3_fu_762_p4 = currentSize_0_reg_445.read().range(7, 2);
}

void expandKey::thread_lshr_ln_fu_514_p4() {
    lshr_ln_fu_514_p4 = i_0_reg_434.read().range(4, 2);
}

void expandKey::thread_or_ln172_1_fu_669_p2() {
    or_ln172_1_fu_669_p2 = (ap_phi_mux_currentSize_0_phi_fu_449_p4.read() | ap_const_lv8_3);
}

void expandKey::thread_or_ln172_fu_634_p2() {
    or_ln172_fu_634_p2 = (ap_phi_mux_currentSize_0_phi_fu_449_p4.read() | ap_const_lv8_1);
}

void expandKey::thread_rconIteration_1_fu_605_p3() {
    rconIteration_1_fu_605_p3 = (!icmp_ln151_fu_584_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln151_fu_584_p2.read()[0].to_bool())? rconIteration_fu_590_p2.read(): ap_phi_mux_iteration_assign_phi_fu_461_p4.read());
}

void expandKey::thread_rconIteration_fu_590_p2() {
    rconIteration_fu_590_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_iteration_assign_phi_fu_461_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_iteration_assign_phi_fu_461_p4.read()));
}

void expandKey::thread_sbox_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        sbox_address0 =  (sc_lv<8>) (zext_ln46_2_fu_811_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        sbox_address0 =  (sc_lv<8>) (zext_ln46_1_fu_783_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        sbox_address0 =  (sc_lv<8>) (zext_ln46_fu_751_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        sbox_address0 =  (sc_lv<8>) (zext_ln46_3_fu_725_p1.read());
    } else {
        sbox_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void expandKey::thread_sbox_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        sbox_ce0 = ap_const_logic_1;
    } else {
        sbox_ce0 = ap_const_logic_0;
    }
}

void expandKey::thread_sext_ln170_1_fu_847_p1() {
    sext_ln170_1_fu_847_p1 = esl_sext<30,7>(trunc_ln170_1_fu_837_p4.read());
}

void expandKey::thread_sext_ln170_2_fu_695_p1() {
    sext_ln170_2_fu_695_p1 = esl_sext<30,7>(trunc_ln170_2_fu_685_p4.read());
}

void expandKey::thread_sext_ln170_fu_660_p1() {
    sext_ln170_fu_660_p1 = esl_sext<30,7>(trunc_ln2_fu_650_p4.read());
}

void expandKey::thread_t_0_2_fu_793_p3() {
    t_0_2_fu_793_p3 = (!icmp_ln151_reg_989.read()[0].is_01())? sc_lv<8>(): ((icmp_ln151_reg_989.read()[0].to_bool())? t_0_fu_788_p2.read(): t_0_3_reg_1028.read());
}

void expandKey::thread_t_0_fu_788_p2() {
    t_0_fu_788_p2 = (Rcon_load_reg_1049.read() ^ sbox_q0.read());
}

void expandKey::thread_t_1_2_fu_815_p3() {
    t_1_2_fu_815_p3 = (!icmp_ln151_reg_989.read()[0].is_01())? sc_lv<8>(): ((icmp_ln151_reg_989.read()[0].to_bool())? sbox_q0.read(): t_1_1_reg_1069.read());
}

void expandKey::thread_t_2_2_fu_866_p3() {
    t_2_2_fu_866_p3 = (!icmp_ln151_reg_989_pp0_iter1_reg.read()[0].is_01())? sc_lv<8>(): ((icmp_ln151_reg_989_pp0_iter1_reg.read()[0].to_bool())? sbox_q0.read(): t_2_1_reg_1090.read());
}

void expandKey::thread_t_3_2_fu_756_p3() {
    t_3_2_fu_756_p3 = (!icmp_ln151_reg_989.read()[0].is_01())? sc_lv<8>(): ((icmp_ln151_reg_989.read()[0].to_bool())? sbox_q0.read(): t_3_1_reg_1038.read());
}

void expandKey::thread_tmp_fu_484_p17() {
    tmp_fu_484_p17 = i_0_reg_434.read().range(4-1, 0);
}

void expandKey::thread_trunc_ln114_fu_596_p1() {
    trunc_ln114_fu_596_p1 = ap_phi_mux_iteration_assign_phi_fu_461_p4.read().range(8-1, 0);
}

void expandKey::thread_trunc_ln136_1_fu_510_p1() {
    trunc_ln136_1_fu_510_p1 = i_0_reg_434.read().range(2-1, 0);
}

void expandKey::thread_trunc_ln139_fu_538_p1() {
    trunc_ln139_fu_538_p1 = ap_phi_mux_currentSize_0_phi_fu_449_p4.read().range(4-1, 0);
}

void expandKey::thread_trunc_ln170_1_fu_837_p4() {
    trunc_ln170_1_fu_837_p4 = add_ln170_2_fu_832_p2.read().range(8, 2);
}

void expandKey::thread_trunc_ln170_2_fu_685_p4() {
    trunc_ln170_2_fu_685_p4 = add_ln170_3_fu_679_p2.read().range(8, 2);
}

void expandKey::thread_trunc_ln2_fu_650_p4() {
    trunc_ln2_fu_650_p4 = add_ln170_1_fu_644_p2.read().range(8, 2);
}

void expandKey::thread_xor_ln171_2_fu_872_p2() {
    xor_ln171_2_fu_872_p2 = (expandedKey_2_q0.read() ^ t_2_2_fu_866_p3.read());
}

void expandKey::thread_zext_ln136_fu_524_p1() {
    zext_ln136_fu_524_p1 = esl_zext<64,3>(lshr_ln_fu_514_p4.read());
}

void expandKey::thread_zext_ln145_1_fu_720_p1() {
    zext_ln145_1_fu_720_p1 = esl_zext<64,6>(lshr_ln145_1_fu_710_p4.read());
}

void expandKey::thread_zext_ln145_2_fu_746_p1() {
    zext_ln145_2_fu_746_p1 = esl_zext<64,6>(lshr_ln145_2_fu_736_p4.read());
}

void expandKey::thread_zext_ln145_3_fu_579_p1() {
    zext_ln145_3_fu_579_p1 = esl_zext<64,6>(lshr_ln145_3_fu_569_p4.read());
}

void expandKey::thread_zext_ln145_fu_558_p1() {
    zext_ln145_fu_558_p1 = esl_zext<64,6>(lshr_ln1_fu_548_p4.read());
}

void expandKey::thread_zext_ln170_1_fu_664_p1() {
    zext_ln170_1_fu_664_p1 = esl_zext<64,30>(sext_ln170_fu_660_p1.read());
}

void expandKey::thread_zext_ln170_2_fu_851_p1() {
    zext_ln170_2_fu_851_p1 = esl_zext<64,30>(sext_ln170_1_fu_847_p1.read());
}

void expandKey::thread_zext_ln170_3_fu_699_p1() {
    zext_ln170_3_fu_699_p1 = esl_zext<64,30>(sext_ln170_2_fu_695_p1.read());
}

void expandKey::thread_zext_ln170_fu_629_p1() {
    zext_ln170_fu_629_p1 = esl_zext<64,6>(lshr_ln2_fu_619_p4.read());
}

void expandKey::thread_zext_ln171_1_fu_879_p1() {
    zext_ln171_1_fu_879_p1 = esl_zext<64,7>(lshr_ln171_1_reg_1115.read());
}

void expandKey::thread_zext_ln171_fu_772_p1() {
    zext_ln171_fu_772_p1 = esl_zext<64,6>(lshr_ln3_fu_762_p4.read());
}

void expandKey::thread_zext_ln172_1_fu_675_p1() {
    zext_ln172_1_fu_675_p1 = esl_zext<9,8>(or_ln172_1_fu_669_p2.read());
}

void expandKey::thread_zext_ln172_fu_640_p1() {
    zext_ln172_fu_640_p1 = esl_zext<9,8>(or_ln172_fu_634_p2.read());
}

void expandKey::thread_zext_ln46_1_fu_783_p1() {
    zext_ln46_1_fu_783_p1 = esl_zext<64,8>(expandedKey_2_q0.read());
}

void expandKey::thread_zext_ln46_2_fu_811_p1() {
    zext_ln46_2_fu_811_p1 = esl_zext<64,8>(t_3_1_reg_1038.read());
}

void expandKey::thread_zext_ln46_3_fu_725_p1() {
    zext_ln46_3_fu_725_p1 = esl_zext<64,8>(expandedKey_0_q0.read());
}

void expandKey::thread_zext_ln46_fu_751_p1() {
    zext_ln46_fu_751_p1 = esl_zext<64,8>(expandedKey_1_q1.read());
}

void expandKey::thread_zext_ln97_fu_600_p1() {
    zext_ln97_fu_600_p1 = esl_zext<64,8>(trunc_ln114_fu_596_p1.read());
}

void expandKey::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln135_fu_468_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln139_fu_532_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln139_fu_532_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

