// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes_round_HH_
#define _aes_round_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "mixColumn.h"
#include "expandKey_sbox.h"

namespace ap_rtl {

struct aes_round : public sc_module {
    // Port declarations 32
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > state_address0;
    sc_out< sc_logic > state_ce0;
    sc_out< sc_logic > state_we0;
    sc_out< sc_lv<8> > state_d0;
    sc_in< sc_lv<8> > state_q0;
    sc_out< sc_lv<4> > state_address1;
    sc_out< sc_logic > state_ce1;
    sc_out< sc_logic > state_we1;
    sc_out< sc_lv<8> > state_d1;
    sc_in< sc_lv<8> > state_q1;
    sc_in< sc_lv<8> > p_read;
    sc_in< sc_lv<8> > p_read1;
    sc_in< sc_lv<8> > p_read2;
    sc_in< sc_lv<8> > p_read3;
    sc_in< sc_lv<8> > p_read4;
    sc_in< sc_lv<8> > p_read5;
    sc_in< sc_lv<8> > p_read6;
    sc_in< sc_lv<8> > p_read7;
    sc_in< sc_lv<8> > p_read8;
    sc_in< sc_lv<8> > p_read9;
    sc_in< sc_lv<8> > p_read10;
    sc_in< sc_lv<8> > p_read11;
    sc_in< sc_lv<8> > p_read12;
    sc_in< sc_lv<8> > p_read13;
    sc_in< sc_lv<8> > p_read14;
    sc_in< sc_lv<8> > p_read15;


    // Module declarations
    aes_round(sc_module_name name);
    SC_HAS_PROCESS(aes_round);

    ~aes_round();

    sc_trace_file* mVcdFile;

    expandKey_sbox* sbox_U;
    mixColumn* grp_mixColumn_fu_454;
    sc_signal< sc_lv<19> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > reg_464;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > reg_468;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > reg_473;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<8> > reg_479;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > reg_485;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > reg_490;
    sc_signal< sc_lv<8> > reg_495;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<4> > state_addr_reg_744;
    sc_signal< sc_lv<4> > state_addr_15_reg_749;
    sc_signal< sc_lv<4> > state_addr_10_reg_760;
    sc_signal< sc_lv<4> > state_addr_3_reg_775;
    sc_signal< sc_lv<4> > state_addr_14_reg_780;
    sc_signal< sc_lv<4> > state_addr_2_reg_802;
    sc_signal< sc_lv<4> > state_addr_13_reg_812;
    sc_signal< sc_lv<8> > state_load_13_reg_827;
    sc_signal< sc_lv<8> > xor_ln226_fu_541_p2;
    sc_signal< sc_lv<8> > xor_ln226_reg_837;
    sc_signal< sc_lv<8> > xor_ln226_4_fu_547_p2;
    sc_signal< sc_lv<8> > xor_ln226_4_reg_842;
    sc_signal< sc_lv<4> > state_addr_1_reg_847;
    sc_signal< sc_lv<8> > state_load_12_reg_863;
    sc_signal< sc_lv<4> > state_addr_6_reg_868;
    sc_signal< sc_lv<8> > state_load_7_reg_873;
    sc_signal< sc_lv<4> > state_addr_11_reg_883;
    sc_signal< sc_lv<8> > state_load_11_reg_893;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<8> > xor_ln226_7_fu_609_p2;
    sc_signal< sc_lv<8> > xor_ln226_7_reg_903;
    sc_signal< sc_lv<8> > xor_ln226_15_fu_622_p2;
    sc_signal< sc_lv<8> > xor_ln226_15_reg_908;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<8> > xor_ln226_6_fu_670_p2;
    sc_signal< sc_lv<8> > xor_ln226_6_reg_933;
    sc_signal< sc_lv<8> > xor_ln226_14_fu_683_p2;
    sc_signal< sc_lv<8> > xor_ln226_14_reg_938;
    sc_signal< sc_lv<8> > xor_ln226_9_fu_732_p2;
    sc_signal< sc_lv<8> > xor_ln226_9_reg_958;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<8> > xor_ln226_13_fu_738_p2;
    sc_signal< sc_lv<8> > xor_ln226_13_reg_963;
    sc_signal< sc_lv<8> > ap_port_reg_p_read;
    sc_signal< sc_lv<8> > ap_port_reg_p_read1;
    sc_signal< sc_lv<8> > ap_port_reg_p_read2;
    sc_signal< sc_lv<8> > ap_port_reg_p_read3;
    sc_signal< sc_lv<8> > ap_port_reg_p_read4;
    sc_signal< sc_lv<8> > ap_port_reg_p_read5;
    sc_signal< sc_lv<8> > ap_port_reg_p_read6;
    sc_signal< sc_lv<8> > ap_port_reg_p_read7;
    sc_signal< sc_lv<8> > ap_port_reg_p_read8;
    sc_signal< sc_lv<8> > ap_port_reg_p_read9;
    sc_signal< sc_lv<8> > ap_port_reg_p_read10;
    sc_signal< sc_lv<8> > ap_port_reg_p_read11;
    sc_signal< sc_lv<8> > ap_port_reg_p_read12;
    sc_signal< sc_lv<8> > ap_port_reg_p_read13;
    sc_signal< sc_lv<8> > ap_port_reg_p_read14;
    sc_signal< sc_lv<8> > ap_port_reg_p_read15;
    sc_signal< sc_logic > grp_mixColumn_fu_454_ap_ready;
    sc_signal< sc_lv<8> > grp_mixColumn_fu_454_column_0_read;
    sc_signal< sc_lv<8> > grp_mixColumn_fu_454_column_1_read;
    sc_signal< sc_lv<8> > grp_mixColumn_fu_454_column_3_read;
    sc_signal< sc_lv<8> > grp_mixColumn_fu_454_ap_return_0;
    sc_signal< sc_lv<8> > grp_mixColumn_fu_454_ap_return_1;
    sc_signal< sc_lv<8> > grp_mixColumn_fu_454_ap_return_2;
    sc_signal< sc_lv<8> > grp_mixColumn_fu_454_ap_return_3;
    sc_signal< sc_lv<64> > zext_ln43_18_fu_500_p1;
    sc_signal< sc_lv<64> > zext_ln43_fu_505_p1;
    sc_signal< sc_lv<64> > zext_ln43_13_fu_510_p1;
    sc_signal< sc_lv<64> > zext_ln43_8_fu_515_p1;
    sc_signal< sc_lv<64> > zext_ln43_17_fu_520_p1;
    sc_signal< sc_lv<64> > zext_ln43_6_fu_567_p1;
    sc_signal< sc_lv<64> > zext_ln43_12_fu_572_p1;
    sc_signal< sc_lv<64> > zext_ln43_7_fu_577_p1;
    sc_signal< sc_lv<64> > zext_ln43_16_fu_582_p1;
    sc_signal< sc_lv<64> > zext_ln43_5_fu_628_p1;
    sc_signal< sc_lv<64> > zext_ln43_11_fu_633_p1;
    sc_signal< sc_lv<64> > zext_ln43_10_fu_638_p1;
    sc_signal< sc_lv<64> > zext_ln43_4_fu_642_p1;
    sc_signal< sc_lv<64> > zext_ln43_9_fu_689_p1;
    sc_signal< sc_lv<64> > zext_ln43_14_fu_694_p1;
    sc_signal< sc_lv<64> > zext_ln43_15_fu_698_p1;
    sc_signal< sc_lv<8> > xor_ln226_8_fu_553_p2;
    sc_signal< sc_lv<8> > xor_ln226_12_fu_560_p2;
    sc_signal< sc_lv<8> > xor_ln226_3_fu_602_p2;
    sc_signal< sc_lv<8> > xor_ln226_11_fu_615_p2;
    sc_signal< sc_lv<8> > xor_ln226_2_fu_663_p2;
    sc_signal< sc_lv<8> > xor_ln226_10_fu_676_p2;
    sc_signal< sc_lv<8> > xor_ln226_1_fu_718_p2;
    sc_signal< sc_lv<8> > xor_ln226_5_fu_725_p2;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<19> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<19> ap_ST_fsm_state1;
    static const sc_lv<19> ap_ST_fsm_state2;
    static const sc_lv<19> ap_ST_fsm_state3;
    static const sc_lv<19> ap_ST_fsm_state4;
    static const sc_lv<19> ap_ST_fsm_state5;
    static const sc_lv<19> ap_ST_fsm_state6;
    static const sc_lv<19> ap_ST_fsm_state7;
    static const sc_lv<19> ap_ST_fsm_state8;
    static const sc_lv<19> ap_ST_fsm_state9;
    static const sc_lv<19> ap_ST_fsm_state10;
    static const sc_lv<19> ap_ST_fsm_state11;
    static const sc_lv<19> ap_ST_fsm_state12;
    static const sc_lv<19> ap_ST_fsm_state13;
    static const sc_lv<19> ap_ST_fsm_state14;
    static const sc_lv<19> ap_ST_fsm_state15;
    static const sc_lv<19> ap_ST_fsm_state16;
    static const sc_lv<19> ap_ST_fsm_state17;
    static const sc_lv<19> ap_ST_fsm_state18;
    static const sc_lv<19> ap_ST_fsm_state19;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<32> ap_const_lv32_12;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_mixColumn_fu_454_column_0_read();
    void thread_grp_mixColumn_fu_454_column_1_read();
    void thread_grp_mixColumn_fu_454_column_3_read();
    void thread_sbox_address0();
    void thread_sbox_ce0();
    void thread_state_addr_10_reg_760();
    void thread_state_addr_11_reg_883();
    void thread_state_addr_13_reg_812();
    void thread_state_addr_14_reg_780();
    void thread_state_addr_15_reg_749();
    void thread_state_addr_1_reg_847();
    void thread_state_addr_2_reg_802();
    void thread_state_addr_3_reg_775();
    void thread_state_addr_6_reg_868();
    void thread_state_addr_reg_744();
    void thread_state_address0();
    void thread_state_address1();
    void thread_state_ce0();
    void thread_state_ce1();
    void thread_state_d0();
    void thread_state_d1();
    void thread_state_we0();
    void thread_state_we1();
    void thread_xor_ln226_10_fu_676_p2();
    void thread_xor_ln226_11_fu_615_p2();
    void thread_xor_ln226_12_fu_560_p2();
    void thread_xor_ln226_13_fu_738_p2();
    void thread_xor_ln226_14_fu_683_p2();
    void thread_xor_ln226_15_fu_622_p2();
    void thread_xor_ln226_1_fu_718_p2();
    void thread_xor_ln226_2_fu_663_p2();
    void thread_xor_ln226_3_fu_602_p2();
    void thread_xor_ln226_4_fu_547_p2();
    void thread_xor_ln226_5_fu_725_p2();
    void thread_xor_ln226_6_fu_670_p2();
    void thread_xor_ln226_7_fu_609_p2();
    void thread_xor_ln226_8_fu_553_p2();
    void thread_xor_ln226_9_fu_732_p2();
    void thread_xor_ln226_fu_541_p2();
    void thread_zext_ln43_10_fu_638_p1();
    void thread_zext_ln43_11_fu_633_p1();
    void thread_zext_ln43_12_fu_572_p1();
    void thread_zext_ln43_13_fu_510_p1();
    void thread_zext_ln43_14_fu_694_p1();
    void thread_zext_ln43_15_fu_698_p1();
    void thread_zext_ln43_16_fu_582_p1();
    void thread_zext_ln43_17_fu_520_p1();
    void thread_zext_ln43_18_fu_500_p1();
    void thread_zext_ln43_4_fu_642_p1();
    void thread_zext_ln43_5_fu_628_p1();
    void thread_zext_ln43_6_fu_567_p1();
    void thread_zext_ln43_7_fu_577_p1();
    void thread_zext_ln43_8_fu_515_p1();
    void thread_zext_ln43_9_fu_689_p1();
    void thread_zext_ln43_fu_505_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
