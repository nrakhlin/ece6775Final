// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes_encrypt_HH_
#define _aes_encrypt_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aes_main.h"
#include "expandKey.h"
#include "encrypt_dut_mux_1bkb.h"
#include "aes_encrypt_block.h"
#include "aes_encrypt_expandEe.h"
#include "aes_encrypt_expanfYi.h"

namespace ap_rtl {

struct aes_encrypt : public sc_module {
    // Port declarations 70
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > input_0_read;
    sc_in< sc_lv<8> > input_1_read;
    sc_in< sc_lv<8> > input_2_read;
    sc_in< sc_lv<8> > input_3_read;
    sc_in< sc_lv<8> > input_4_read;
    sc_in< sc_lv<8> > input_5_read;
    sc_in< sc_lv<8> > input_6_read;
    sc_in< sc_lv<8> > input_7_read;
    sc_in< sc_lv<8> > input_8_read;
    sc_in< sc_lv<8> > input_9_read;
    sc_in< sc_lv<8> > input_10_read;
    sc_in< sc_lv<8> > input_11_read;
    sc_in< sc_lv<8> > input_12_read;
    sc_in< sc_lv<8> > input_13_read;
    sc_in< sc_lv<8> > input_14_read;
    sc_in< sc_lv<8> > input_15_read;
    sc_out< sc_lv<8> > output_0;
    sc_out< sc_logic > output_0_ap_vld;
    sc_out< sc_lv<8> > output_1;
    sc_out< sc_logic > output_1_ap_vld;
    sc_out< sc_lv<8> > output_2;
    sc_out< sc_logic > output_2_ap_vld;
    sc_out< sc_lv<8> > output_3;
    sc_out< sc_logic > output_3_ap_vld;
    sc_out< sc_lv<8> > output_4;
    sc_out< sc_logic > output_4_ap_vld;
    sc_out< sc_lv<8> > output_5;
    sc_out< sc_logic > output_5_ap_vld;
    sc_out< sc_lv<8> > output_6;
    sc_out< sc_logic > output_6_ap_vld;
    sc_out< sc_lv<8> > output_7;
    sc_out< sc_logic > output_7_ap_vld;
    sc_out< sc_lv<8> > output_8;
    sc_out< sc_logic > output_8_ap_vld;
    sc_out< sc_lv<8> > output_9;
    sc_out< sc_logic > output_9_ap_vld;
    sc_out< sc_lv<8> > output_10;
    sc_out< sc_logic > output_10_ap_vld;
    sc_out< sc_lv<8> > output_11;
    sc_out< sc_logic > output_11_ap_vld;
    sc_out< sc_lv<8> > output_12;
    sc_out< sc_logic > output_12_ap_vld;
    sc_out< sc_lv<8> > output_13;
    sc_out< sc_logic > output_13_ap_vld;
    sc_out< sc_lv<8> > output_14;
    sc_out< sc_logic > output_14_ap_vld;
    sc_out< sc_lv<8> > output_15;
    sc_out< sc_logic > output_15_ap_vld;
    sc_in< sc_lv<8> > key_0_read;
    sc_in< sc_lv<8> > key_1_read;
    sc_in< sc_lv<8> > key_2_read;
    sc_in< sc_lv<8> > key_3_read;
    sc_in< sc_lv<8> > key_4_read;
    sc_in< sc_lv<8> > key_5_read;
    sc_in< sc_lv<8> > key_6_read;
    sc_in< sc_lv<8> > key_7_read;
    sc_in< sc_lv<8> > key_8_read;
    sc_in< sc_lv<8> > key_9_read;
    sc_in< sc_lv<8> > key_10_read;
    sc_in< sc_lv<8> > key_11_read;
    sc_in< sc_lv<8> > key_12_read;
    sc_in< sc_lv<8> > key_13_read;
    sc_in< sc_lv<8> > key_14_read;
    sc_in< sc_lv<8> > key_15_read;


    // Module declarations
    aes_encrypt(sc_module_name name);
    SC_HAS_PROCESS(aes_encrypt);

    ~aes_encrypt();

    sc_trace_file* mVcdFile;

    aes_encrypt_block* block_U;
    aes_encrypt_expandEe* expandedKey_0_U;
    aes_encrypt_expandEe* expandedKey_1_U;
    aes_encrypt_expanfYi* expandedKey_2_U;
    aes_encrypt_expandEe* expandedKey_3_U;
    aes_main* grp_aes_main_fu_561;
    expandKey* grp_expandKey_fu_572;
    encrypt_dut_mux_1bkb<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* encrypt_dut_mux_1bkb_U81;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > zext_ln49_fu_600_p1;
    sc_signal< sc_lv<4> > zext_ln49_reg_925;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<3> > i_fu_610_p2;
    sc_signal< sc_lv<3> > i_reg_933;
    sc_signal< sc_lv<4> > shl_ln_fu_620_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_938;
    sc_signal< sc_lv<1> > icmp_ln49_fu_604_p2;
    sc_signal< sc_lv<3> > j_fu_638_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > zext_ln65_fu_694_p1;
    sc_signal< sc_lv<4> > zext_ln65_reg_951;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > i_2_fu_704_p2;
    sc_signal< sc_lv<3> > i_2_reg_959;
    sc_signal< sc_lv<4> > shl_ln1_fu_714_p3;
    sc_signal< sc_lv<4> > shl_ln1_reg_964;
    sc_signal< sc_lv<1> > icmp_ln65_fu_698_p2;
    sc_signal< sc_lv<3> > j_2_fu_732_p2;
    sc_signal< sc_lv<3> > j_2_reg_972;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln68_fu_726_p2;
    sc_signal< sc_lv<4> > add_ln70_1_fu_760_p2;
    sc_signal< sc_lv<4> > add_ln70_1_reg_982;
    sc_signal< sc_lv<4> > block_address0;
    sc_signal< sc_logic > block_ce0;
    sc_signal< sc_logic > block_we0;
    sc_signal< sc_lv<8> > block_d0;
    sc_signal< sc_lv<8> > block_q0;
    sc_signal< sc_logic > block_ce1;
    sc_signal< sc_logic > block_we1;
    sc_signal< sc_lv<8> > block_q1;
    sc_signal< sc_lv<6> > expandedKey_0_address0;
    sc_signal< sc_logic > expandedKey_0_ce0;
    sc_signal< sc_logic > expandedKey_0_we0;
    sc_signal< sc_lv<8> > expandedKey_0_q0;
    sc_signal< sc_lv<6> > expandedKey_0_address1;
    sc_signal< sc_logic > expandedKey_0_ce1;
    sc_signal< sc_logic > expandedKey_0_we1;
    sc_signal< sc_lv<8> > expandedKey_0_q1;
    sc_signal< sc_lv<6> > expandedKey_1_address0;
    sc_signal< sc_logic > expandedKey_1_ce0;
    sc_signal< sc_logic > expandedKey_1_we0;
    sc_signal< sc_lv<8> > expandedKey_1_q0;
    sc_signal< sc_lv<6> > expandedKey_1_address1;
    sc_signal< sc_logic > expandedKey_1_ce1;
    sc_signal< sc_logic > expandedKey_1_we1;
    sc_signal< sc_lv<8> > expandedKey_1_q1;
    sc_signal< sc_lv<6> > expandedKey_2_address0;
    sc_signal< sc_logic > expandedKey_2_ce0;
    sc_signal< sc_logic > expandedKey_2_we0;
    sc_signal< sc_lv<8> > expandedKey_2_q0;
    sc_signal< sc_logic > expandedKey_2_ce1;
    sc_signal< sc_lv<8> > expandedKey_2_q1;
    sc_signal< sc_lv<6> > expandedKey_3_address0;
    sc_signal< sc_logic > expandedKey_3_ce0;
    sc_signal< sc_logic > expandedKey_3_we0;
    sc_signal< sc_lv<8> > expandedKey_3_q0;
    sc_signal< sc_lv<6> > expandedKey_3_address1;
    sc_signal< sc_logic > expandedKey_3_ce1;
    sc_signal< sc_logic > expandedKey_3_we1;
    sc_signal< sc_lv<8> > expandedKey_3_q1;
    sc_signal< sc_logic > grp_aes_main_fu_561_ap_start;
    sc_signal< sc_logic > grp_aes_main_fu_561_ap_done;
    sc_signal< sc_logic > grp_aes_main_fu_561_ap_idle;
    sc_signal< sc_logic > grp_aes_main_fu_561_ap_ready;
    sc_signal< sc_lv<4> > grp_aes_main_fu_561_state_address0;
    sc_signal< sc_logic > grp_aes_main_fu_561_state_ce0;
    sc_signal< sc_logic > grp_aes_main_fu_561_state_we0;
    sc_signal< sc_lv<8> > grp_aes_main_fu_561_state_d0;
    sc_signal< sc_lv<4> > grp_aes_main_fu_561_state_address1;
    sc_signal< sc_logic > grp_aes_main_fu_561_state_ce1;
    sc_signal< sc_logic > grp_aes_main_fu_561_state_we1;
    sc_signal< sc_lv<8> > grp_aes_main_fu_561_state_d1;
    sc_signal< sc_lv<6> > grp_aes_main_fu_561_expandedKey_0_address0;
    sc_signal< sc_logic > grp_aes_main_fu_561_expandedKey_0_ce0;
    sc_signal< sc_lv<6> > grp_aes_main_fu_561_expandedKey_0_address1;
    sc_signal< sc_logic > grp_aes_main_fu_561_expandedKey_0_ce1;
    sc_signal< sc_lv<6> > grp_aes_main_fu_561_expandedKey_1_address0;
    sc_signal< sc_logic > grp_aes_main_fu_561_expandedKey_1_ce0;
    sc_signal< sc_lv<6> > grp_aes_main_fu_561_expandedKey_1_address1;
    sc_signal< sc_logic > grp_aes_main_fu_561_expandedKey_1_ce1;
    sc_signal< sc_lv<6> > grp_aes_main_fu_561_expandedKey_2_address0;
    sc_signal< sc_logic > grp_aes_main_fu_561_expandedKey_2_ce0;
    sc_signal< sc_lv<6> > grp_aes_main_fu_561_expandedKey_2_address1;
    sc_signal< sc_logic > grp_aes_main_fu_561_expandedKey_2_ce1;
    sc_signal< sc_lv<6> > grp_aes_main_fu_561_expandedKey_3_address0;
    sc_signal< sc_logic > grp_aes_main_fu_561_expandedKey_3_ce0;
    sc_signal< sc_lv<6> > grp_aes_main_fu_561_expandedKey_3_address1;
    sc_signal< sc_logic > grp_aes_main_fu_561_expandedKey_3_ce1;
    sc_signal< sc_logic > grp_expandKey_fu_572_ap_start;
    sc_signal< sc_logic > grp_expandKey_fu_572_ap_done;
    sc_signal< sc_logic > grp_expandKey_fu_572_ap_idle;
    sc_signal< sc_logic > grp_expandKey_fu_572_ap_ready;
    sc_signal< sc_lv<6> > grp_expandKey_fu_572_expandedKey_0_address0;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_0_ce0;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_0_we0;
    sc_signal< sc_lv<8> > grp_expandKey_fu_572_expandedKey_0_d0;
    sc_signal< sc_lv<6> > grp_expandKey_fu_572_expandedKey_0_address1;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_0_ce1;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_0_we1;
    sc_signal< sc_lv<8> > grp_expandKey_fu_572_expandedKey_0_d1;
    sc_signal< sc_lv<6> > grp_expandKey_fu_572_expandedKey_1_address0;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_1_ce0;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_1_we0;
    sc_signal< sc_lv<8> > grp_expandKey_fu_572_expandedKey_1_d0;
    sc_signal< sc_lv<6> > grp_expandKey_fu_572_expandedKey_1_address1;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_1_ce1;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_1_we1;
    sc_signal< sc_lv<8> > grp_expandKey_fu_572_expandedKey_1_d1;
    sc_signal< sc_lv<6> > grp_expandKey_fu_572_expandedKey_2_address0;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_2_ce0;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_2_we0;
    sc_signal< sc_lv<8> > grp_expandKey_fu_572_expandedKey_2_d0;
    sc_signal< sc_lv<6> > grp_expandKey_fu_572_expandedKey_3_address0;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_3_ce0;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_3_we0;
    sc_signal< sc_lv<8> > grp_expandKey_fu_572_expandedKey_3_d0;
    sc_signal< sc_lv<6> > grp_expandKey_fu_572_expandedKey_3_address1;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_3_ce1;
    sc_signal< sc_logic > grp_expandKey_fu_572_expandedKey_3_we1;
    sc_signal< sc_lv<8> > grp_expandKey_fu_572_expandedKey_3_d1;
    sc_signal< sc_lv<3> > i_0_reg_517;
    sc_signal< sc_lv<1> > icmp_ln52_fu_632_p2;
    sc_signal< sc_lv<3> > j_0_reg_528;
    sc_signal< sc_lv<3> > i_1_reg_539;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > j_1_reg_550;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > grp_aes_main_fu_561_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_expandKey_fu_572_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > zext_ln54_fu_689_p1;
    sc_signal< sc_lv<64> > zext_ln70_fu_755_p1;
    sc_signal< sc_lv<8> > tmp_fu_649_p18;
    sc_signal< sc_lv<2> > trunc_ln54_fu_616_p1;
    sc_signal< sc_lv<4> > zext_ln52_fu_628_p1;
    sc_signal< sc_lv<4> > tmp_fu_649_p17;
    sc_signal< sc_lv<2> > trunc_ln54_1_fu_672_p1;
    sc_signal< sc_lv<4> > shl_ln54_1_fu_676_p3;
    sc_signal< sc_lv<4> > add_ln54_1_fu_684_p2;
    sc_signal< sc_lv<2> > trunc_ln70_fu_710_p1;
    sc_signal< sc_lv<2> > trunc_ln70_1_fu_738_p1;
    sc_signal< sc_lv<4> > shl_ln70_1_fu_742_p3;
    sc_signal< sc_lv<4> > add_ln70_fu_750_p2;
    sc_signal< sc_lv<4> > zext_ln68_fu_722_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln54_1_fu_684_p2();
    void thread_add_ln70_1_fu_760_p2();
    void thread_add_ln70_fu_750_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_block_address0();
    void thread_block_ce0();
    void thread_block_ce1();
    void thread_block_d0();
    void thread_block_we0();
    void thread_block_we1();
    void thread_expandedKey_0_address0();
    void thread_expandedKey_0_address1();
    void thread_expandedKey_0_ce0();
    void thread_expandedKey_0_ce1();
    void thread_expandedKey_0_we0();
    void thread_expandedKey_0_we1();
    void thread_expandedKey_1_address0();
    void thread_expandedKey_1_address1();
    void thread_expandedKey_1_ce0();
    void thread_expandedKey_1_ce1();
    void thread_expandedKey_1_we0();
    void thread_expandedKey_1_we1();
    void thread_expandedKey_2_address0();
    void thread_expandedKey_2_ce0();
    void thread_expandedKey_2_ce1();
    void thread_expandedKey_2_we0();
    void thread_expandedKey_3_address0();
    void thread_expandedKey_3_address1();
    void thread_expandedKey_3_ce0();
    void thread_expandedKey_3_ce1();
    void thread_expandedKey_3_we0();
    void thread_expandedKey_3_we1();
    void thread_grp_aes_main_fu_561_ap_start();
    void thread_grp_expandKey_fu_572_ap_start();
    void thread_i_2_fu_704_p2();
    void thread_i_fu_610_p2();
    void thread_icmp_ln49_fu_604_p2();
    void thread_icmp_ln52_fu_632_p2();
    void thread_icmp_ln65_fu_698_p2();
    void thread_icmp_ln68_fu_726_p2();
    void thread_j_2_fu_732_p2();
    void thread_j_fu_638_p2();
    void thread_output_0();
    void thread_output_0_ap_vld();
    void thread_output_1();
    void thread_output_10();
    void thread_output_10_ap_vld();
    void thread_output_11();
    void thread_output_11_ap_vld();
    void thread_output_12();
    void thread_output_12_ap_vld();
    void thread_output_13();
    void thread_output_13_ap_vld();
    void thread_output_14();
    void thread_output_14_ap_vld();
    void thread_output_15();
    void thread_output_15_ap_vld();
    void thread_output_1_ap_vld();
    void thread_output_2();
    void thread_output_2_ap_vld();
    void thread_output_3();
    void thread_output_3_ap_vld();
    void thread_output_4();
    void thread_output_4_ap_vld();
    void thread_output_5();
    void thread_output_5_ap_vld();
    void thread_output_6();
    void thread_output_6_ap_vld();
    void thread_output_7();
    void thread_output_7_ap_vld();
    void thread_output_8();
    void thread_output_8_ap_vld();
    void thread_output_9();
    void thread_output_9_ap_vld();
    void thread_shl_ln1_fu_714_p3();
    void thread_shl_ln54_1_fu_676_p3();
    void thread_shl_ln70_1_fu_742_p3();
    void thread_shl_ln_fu_620_p3();
    void thread_tmp_fu_649_p17();
    void thread_trunc_ln54_1_fu_672_p1();
    void thread_trunc_ln54_fu_616_p1();
    void thread_trunc_ln70_1_fu_738_p1();
    void thread_trunc_ln70_fu_710_p1();
    void thread_zext_ln49_fu_600_p1();
    void thread_zext_ln52_fu_628_p1();
    void thread_zext_ln54_fu_689_p1();
    void thread_zext_ln65_fu_694_p1();
    void thread_zext_ln68_fu_722_p1();
    void thread_zext_ln70_fu_755_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
