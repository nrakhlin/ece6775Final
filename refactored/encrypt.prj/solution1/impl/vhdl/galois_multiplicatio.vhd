-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity galois_multiplicatio is
port (
    ap_ready : OUT STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (7 downto 0);
    b : IN STD_LOGIC_VECTOR (2 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of galois_multiplicatio is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_1B : STD_LOGIC_VECTOR (7 downto 0) := "00011011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal trunc_ln235_fu_34_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln238_fu_46_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_52_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln240_fu_60_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_74_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln239_fu_66_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln235_fu_38_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln235_1_fu_82_p3 : STD_LOGIC_VECTOR (7 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= (select_ln235_fu_38_p3 xor select_ln235_1_fu_82_p3);
    select_ln235_1_fu_82_p3 <= 
        select_ln239_fu_66_p3 when (tmp_1_fu_74_p3(0) = '1') else 
        ap_const_lv8_0;
    select_ln235_fu_38_p3 <= 
        a when (trunc_ln235_fu_34_p1(0) = '1') else 
        ap_const_lv8_0;
    select_ln239_fu_66_p3 <= 
        xor_ln240_fu_60_p2 when (tmp_fu_52_p3(0) = '1') else 
        shl_ln238_fu_46_p2;
    shl_ln238_fu_46_p2 <= std_logic_vector(shift_left(unsigned(a),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_1_fu_74_p3 <= b(1 downto 1);
    tmp_fu_52_p3 <= a(7 downto 7);
    trunc_ln235_fu_34_p1 <= b(1 - 1 downto 0);
    xor_ln240_fu_60_p2 <= (shl_ln238_fu_46_p2 xor ap_const_lv8_1B);
end behav;
