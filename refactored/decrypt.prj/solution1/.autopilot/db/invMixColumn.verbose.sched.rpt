

================================================================
== Vivado HLS Report for 'invMixColumn'
================================================================
* Date:           Mon Dec  9 19:19:38 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        decrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 5.982 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+----------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline |
    |   min   |   max   |    min   |    max   | min | max |   Type   |
    +---------+---------+----------+----------+-----+-----+----------+
    |        0|        0|   0 ns   |   0 ns   |    1|    1| function |
    +---------+---------+----------+----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.98>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%column_3_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %column_3_read)" [helper.cpp:388]   --->   Operation 2 'read' 'column_3_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%column_2_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %column_2_read)" [helper.cpp:388]   --->   Operation 3 'read' 'column_2_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%column_1_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %column_1_read)" [helper.cpp:388]   --->   Operation 4 'read' 'column_1_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%column_0_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %column_0_read)" [helper.cpp:388]   --->   Operation 5 'read' 'column_0_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (4.99ns)   --->   "%tmp = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_0_read_1, i5 zeroext 14)" [helper.cpp:388]   --->   Operation 6 'call' 'tmp' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 7 [1/1] (4.99ns)   --->   "%tmp_6 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_3_read_1, i5 zeroext 9)" [helper.cpp:389]   --->   Operation 7 'call' 'tmp_6' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 8 [1/1] (4.99ns)   --->   "%tmp_7 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_2_read_1, i5 zeroext 13)" [helper.cpp:390]   --->   Operation 8 'call' 'tmp_7' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 9 [1/1] (4.99ns)   --->   "%tmp_8 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_1_read_1, i5 zeroext 11)" [helper.cpp:391]   --->   Operation 9 'call' 'tmp_8' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node xor_ln391)   --->   "%xor_ln391_1 = xor i8 %tmp_6, %tmp" [helper.cpp:391]   --->   Operation 10 'xor' 'xor_ln391_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node xor_ln391)   --->   "%xor_ln391_2 = xor i8 %tmp_7, %tmp_8" [helper.cpp:391]   --->   Operation 11 'xor' 'xor_ln391_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln391 = xor i8 %xor_ln391_2, %xor_ln391_1" [helper.cpp:391]   --->   Operation 12 'xor' 'xor_ln391' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (4.99ns)   --->   "%tmp_9 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_1_read_1, i5 zeroext 14)" [helper.cpp:392]   --->   Operation 13 'call' 'tmp_9' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 14 [1/1] (4.99ns)   --->   "%tmp_s = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_0_read_1, i5 zeroext 9)" [helper.cpp:393]   --->   Operation 14 'call' 'tmp_s' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 15 [1/1] (4.99ns)   --->   "%tmp_1 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_3_read_1, i5 zeroext 13)" [helper.cpp:394]   --->   Operation 15 'call' 'tmp_1' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 16 [1/1] (4.99ns)   --->   "%tmp_2 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_2_read_1, i5 zeroext 11)" [helper.cpp:395]   --->   Operation 16 'call' 'tmp_2' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node xor_ln395)   --->   "%xor_ln395_1 = xor i8 %tmp_s, %tmp_9" [helper.cpp:395]   --->   Operation 17 'xor' 'xor_ln395_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node xor_ln395)   --->   "%xor_ln395_2 = xor i8 %tmp_1, %tmp_2" [helper.cpp:395]   --->   Operation 18 'xor' 'xor_ln395_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln395 = xor i8 %xor_ln395_2, %xor_ln395_1" [helper.cpp:395]   --->   Operation 19 'xor' 'xor_ln395' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (4.99ns)   --->   "%tmp_3 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_2_read_1, i5 zeroext 14)" [helper.cpp:396]   --->   Operation 20 'call' 'tmp_3' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 21 [1/1] (4.99ns)   --->   "%tmp_4 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_1_read_1, i5 zeroext 9)" [helper.cpp:397]   --->   Operation 21 'call' 'tmp_4' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 22 [1/1] (4.99ns)   --->   "%tmp_5 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_0_read_1, i5 zeroext 13)" [helper.cpp:398]   --->   Operation 22 'call' 'tmp_5' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 23 [1/1] (4.99ns)   --->   "%tmp_10 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_3_read_1, i5 zeroext 11)" [helper.cpp:399]   --->   Operation 23 'call' 'tmp_10' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node xor_ln399)   --->   "%xor_ln399_1 = xor i8 %tmp_4, %tmp_3" [helper.cpp:399]   --->   Operation 24 'xor' 'xor_ln399_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node xor_ln399)   --->   "%xor_ln399_2 = xor i8 %tmp_5, %tmp_10" [helper.cpp:399]   --->   Operation 25 'xor' 'xor_ln399_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln399 = xor i8 %xor_ln399_2, %xor_ln399_1" [helper.cpp:399]   --->   Operation 26 'xor' 'xor_ln399' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (4.99ns)   --->   "%tmp_11 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_3_read_1, i5 zeroext 14)" [helper.cpp:400]   --->   Operation 27 'call' 'tmp_11' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 28 [1/1] (4.99ns)   --->   "%tmp_12 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_2_read_1, i5 zeroext 9)" [helper.cpp:401]   --->   Operation 28 'call' 'tmp_12' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 29 [1/1] (4.99ns)   --->   "%tmp_13 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_1_read_1, i5 zeroext 13)" [helper.cpp:402]   --->   Operation 29 'call' 'tmp_13' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 30 [1/1] (4.99ns)   --->   "%tmp_14 = call fastcc zeroext i8 @galois_multiplicatio(i8 zeroext %column_0_read_1, i5 zeroext 11)" [helper.cpp:403]   --->   Operation 30 'call' 'tmp_14' <Predicate = true> <Delay = 4.99> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node xor_ln403)   --->   "%xor_ln403_1 = xor i8 %tmp_12, %tmp_11" [helper.cpp:403]   --->   Operation 31 'xor' 'xor_ln403_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node xor_ln403)   --->   "%xor_ln403_2 = xor i8 %tmp_13, %tmp_14" [helper.cpp:403]   --->   Operation 32 'xor' 'xor_ln403_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln403 = xor i8 %xor_ln403_2, %xor_ln403_1" [helper.cpp:403]   --->   Operation 33 'xor' 'xor_ln403' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i8, i8, i8, i8 } undef, i8 %xor_ln391, 0" [helper.cpp:404]   --->   Operation 34 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i8, i8, i8, i8 } %mrv, i8 %xor_ln395, 1" [helper.cpp:404]   --->   Operation 35 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue { i8, i8, i8, i8 } %mrv_1, i8 %xor_ln399, 2" [helper.cpp:404]   --->   Operation 36 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue { i8, i8, i8, i8 } %mrv_2, i8 %xor_ln403, 3" [helper.cpp:404]   --->   Operation 37 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "ret { i8, i8, i8, i8 } %mrv_3" [helper.cpp:404]   --->   Operation 38 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 5.98ns
The critical path consists of the following:
	wire read on port 'column_3_read' (helper.cpp:388) [5]  (0 ns)
	'call' operation ('tmp_6', helper.cpp:389) to 'galois_multiplicatio' [10]  (4.99 ns)
	'xor' operation ('xor_ln391_1', helper.cpp:391) [13]  (0 ns)
	'xor' operation ('xor_ln391', helper.cpp:391) [15]  (0.99 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
