

================================================================
== Vivado HLS Report for 'decrypt_dut'
================================================================
* Date:           Mon Dec  9 19:19:41 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        decrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 10.00 ns | 12.548 ns |   1.25 ns  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      583|      583| 7.315 us | 7.315 us |  583|  583|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%input_0_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_0)" [decrypt.cpp:13]   --->   Operation 3 'read' 'input_0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%input_1_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_1)" [decrypt.cpp:13]   --->   Operation 4 'read' 'input_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%input_2_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_2)" [decrypt.cpp:13]   --->   Operation 5 'read' 'input_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%input_3_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_3)" [decrypt.cpp:13]   --->   Operation 6 'read' 'input_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%input_4_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_4)" [decrypt.cpp:13]   --->   Operation 7 'read' 'input_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%input_5_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_5)" [decrypt.cpp:13]   --->   Operation 8 'read' 'input_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%input_6_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_6)" [decrypt.cpp:13]   --->   Operation 9 'read' 'input_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%input_7_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_7)" [decrypt.cpp:13]   --->   Operation 10 'read' 'input_7_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%input_8_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_8)" [decrypt.cpp:13]   --->   Operation 11 'read' 'input_8_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%input_9_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_9)" [decrypt.cpp:13]   --->   Operation 12 'read' 'input_9_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%input_10_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_10)" [decrypt.cpp:13]   --->   Operation 13 'read' 'input_10_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%input_11_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_11)" [decrypt.cpp:13]   --->   Operation 14 'read' 'input_11_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%input_12_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_12)" [decrypt.cpp:13]   --->   Operation 15 'read' 'input_12_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%input_13_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_13)" [decrypt.cpp:13]   --->   Operation 16 'read' 'input_13_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%input_14_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_14)" [decrypt.cpp:13]   --->   Operation 17 'read' 'input_14_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%input_15_read = call i8 @_ssdm_op_Read.ap_auto.i8P(i8* %input_15)" [decrypt.cpp:13]   --->   Operation 18 'read' 'input_15_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [2/2] (0.00ns)   --->   "call fastcc void @aes_decrypt(i8 %input_0_read, i8 %input_1_read, i8 %input_2_read, i8 %input_3_read, i8 %input_4_read, i8 %input_5_read, i8 %input_6_read, i8 %input_7_read, i8 %input_8_read, i8 %input_9_read, i8 %input_10_read, i8 %input_11_read, i8 %input_12_read, i8 %input_13_read, i8 %input_14_read, i8 %input_15_read, [16 x i8]* %output_r, [16 x i8]* %key)" [decrypt.cpp:13]   --->   Operation 19 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_15), !map !51"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_14), !map !57"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_13), !map !63"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_12), !map !69"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_11), !map !75"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_10), !map !81"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_9), !map !87"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_8), !map !93"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_7), !map !99"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_6), !map !105"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_5), !map !111"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_4), !map !117"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_3), !map !123"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_2), !map !129"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_1), !map !135"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %input_0), !map !141"   --->   Operation 35 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([16 x i8]* %output_r) nounwind, !map !147"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([16 x i8]* %key) nounwind, !map !153"   --->   Operation 37 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @decrypt_dut_str) nounwind"   --->   Operation 38 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/2] (0.00ns)   --->   "call fastcc void @aes_decrypt(i8 %input_0_read, i8 %input_1_read, i8 %input_2_read, i8 %input_3_read, i8 %input_4_read, i8 %input_5_read, i8 %input_6_read, i8 %input_7_read, i8 %input_8_read, i8 %input_9_read, i8 %input_10_read, i8 %input_11_read, i8 %input_12_read, i8 %input_13_read, i8 %input_14_read, i8 %input_15_read, [16 x i8]* %output_r, [16 x i8]* %key)" [decrypt.cpp:13]   --->   Operation 39 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "ret void" [decrypt.cpp:14]   --->   Operation 40 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
