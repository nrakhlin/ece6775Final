#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("input_0", 8, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("input_1", 8, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("input_2", 8, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("input_3", 8, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("input_4", 8, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("input_5", 8, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("input_6", 8, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("input_7", 8, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("input_8", 8, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("input_9", 8, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("input_10", 8, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("input_11", 8, hls_in, 11, "ap_none", "in_data", 1),
	Port_Property("input_12", 8, hls_in, 12, "ap_none", "in_data", 1),
	Port_Property("input_13", 8, hls_in, 13, "ap_none", "in_data", 1),
	Port_Property("input_14", 8, hls_in, 14, "ap_none", "in_data", 1),
	Port_Property("input_15", 8, hls_in, 15, "ap_none", "in_data", 1),
	Port_Property("output_0", 8, hls_out, 16, "ap_vld", "out_data", 1),
	Port_Property("output_0_ap_vld", 1, hls_out, 16, "ap_vld", "out_vld", 1),
	Port_Property("output_1", 8, hls_out, 17, "ap_vld", "out_data", 1),
	Port_Property("output_1_ap_vld", 1, hls_out, 17, "ap_vld", "out_vld", 1),
	Port_Property("output_2", 8, hls_out, 18, "ap_vld", "out_data", 1),
	Port_Property("output_2_ap_vld", 1, hls_out, 18, "ap_vld", "out_vld", 1),
	Port_Property("output_3", 8, hls_out, 19, "ap_vld", "out_data", 1),
	Port_Property("output_3_ap_vld", 1, hls_out, 19, "ap_vld", "out_vld", 1),
	Port_Property("output_4", 8, hls_out, 20, "ap_vld", "out_data", 1),
	Port_Property("output_4_ap_vld", 1, hls_out, 20, "ap_vld", "out_vld", 1),
	Port_Property("output_5", 8, hls_out, 21, "ap_vld", "out_data", 1),
	Port_Property("output_5_ap_vld", 1, hls_out, 21, "ap_vld", "out_vld", 1),
	Port_Property("output_6", 8, hls_out, 22, "ap_vld", "out_data", 1),
	Port_Property("output_6_ap_vld", 1, hls_out, 22, "ap_vld", "out_vld", 1),
	Port_Property("output_7", 8, hls_out, 23, "ap_vld", "out_data", 1),
	Port_Property("output_7_ap_vld", 1, hls_out, 23, "ap_vld", "out_vld", 1),
	Port_Property("output_8", 8, hls_out, 24, "ap_vld", "out_data", 1),
	Port_Property("output_8_ap_vld", 1, hls_out, 24, "ap_vld", "out_vld", 1),
	Port_Property("output_9", 8, hls_out, 25, "ap_vld", "out_data", 1),
	Port_Property("output_9_ap_vld", 1, hls_out, 25, "ap_vld", "out_vld", 1),
	Port_Property("output_10", 8, hls_out, 26, "ap_vld", "out_data", 1),
	Port_Property("output_10_ap_vld", 1, hls_out, 26, "ap_vld", "out_vld", 1),
	Port_Property("output_11", 8, hls_out, 27, "ap_vld", "out_data", 1),
	Port_Property("output_11_ap_vld", 1, hls_out, 27, "ap_vld", "out_vld", 1),
	Port_Property("output_12", 8, hls_out, 28, "ap_vld", "out_data", 1),
	Port_Property("output_12_ap_vld", 1, hls_out, 28, "ap_vld", "out_vld", 1),
	Port_Property("output_13", 8, hls_out, 29, "ap_vld", "out_data", 1),
	Port_Property("output_13_ap_vld", 1, hls_out, 29, "ap_vld", "out_vld", 1),
	Port_Property("output_14", 8, hls_out, 30, "ap_vld", "out_data", 1),
	Port_Property("output_14_ap_vld", 1, hls_out, 30, "ap_vld", "out_vld", 1),
	Port_Property("output_15", 8, hls_out, 31, "ap_vld", "out_data", 1),
	Port_Property("output_15_ap_vld", 1, hls_out, 31, "ap_vld", "out_vld", 1),
	Port_Property("key_0", 8, hls_in, 32, "ap_none", "in_data", 1),
	Port_Property("key_1", 8, hls_in, 33, "ap_none", "in_data", 1),
	Port_Property("key_2", 8, hls_in, 34, "ap_none", "in_data", 1),
	Port_Property("key_3", 8, hls_in, 35, "ap_none", "in_data", 1),
	Port_Property("key_4", 8, hls_in, 36, "ap_none", "in_data", 1),
	Port_Property("key_5", 8, hls_in, 37, "ap_none", "in_data", 1),
	Port_Property("key_6", 8, hls_in, 38, "ap_none", "in_data", 1),
	Port_Property("key_7", 8, hls_in, 39, "ap_none", "in_data", 1),
	Port_Property("key_8", 8, hls_in, 40, "ap_none", "in_data", 1),
	Port_Property("key_9", 8, hls_in, 41, "ap_none", "in_data", 1),
	Port_Property("key_10", 8, hls_in, 42, "ap_none", "in_data", 1),
	Port_Property("key_11", 8, hls_in, 43, "ap_none", "in_data", 1),
	Port_Property("key_12", 8, hls_in, 44, "ap_none", "in_data", 1),
	Port_Property("key_13", 8, hls_in, 45, "ap_none", "in_data", 1),
	Port_Property("key_14", 8, hls_in, 46, "ap_none", "in_data", 1),
	Port_Property("key_15", 8, hls_in, 47, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "decrypt_dut";
