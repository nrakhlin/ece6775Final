

================================================================
== Vivado HLS Report for 'expandKey'
================================================================
* Date:           Tue Nov 19 21:05:41 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        decrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 7.498 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+-----------+-----+------+---------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval  | Pipeline|
    |   min   |   max   |    min   |    max    | min |  max |   Type  |
    +---------+---------+----------+-----------+-----+------+---------+
    |      998|     1678| 9.980 us | 16.780 us |  998|  1678|   none  |
    +---------+---------+----------+-----------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- memset_t   |        3|        3|         1|          -|          -|     4|    no    |
        |- Loop 2     |       32|       32|         2|          -|          -|    16|    no    |
        |- Loop 3     |      960|     1640|  24 ~ 41 |          -|          -|    40|    no    |
        | + Loop 3.1  |       12|       12|         3|          -|          -|     4|    no    |
        | + Loop 3.2  |        8|        8|         2|          -|          -|     4|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 3 
3 --> 4 5 
4 --> 3 
5 --> 6 
6 --> 7 9 
7 --> 8 
8 --> 6 
9 --> 10 
10 --> 11 5 
11 --> 10 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%t_0_0 = alloca i8"   --->   Operation 12 'alloca' 't_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%t_1_0 = alloca i8"   --->   Operation 13 'alloca' 't_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%t_2_0 = alloca i8"   --->   Operation 14 'alloca' 't_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%t_3_0 = alloca i8"   --->   Operation 15 'alloca' 't_3_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.76ns)   --->   "br label %meminst"   --->   Operation 16 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.95>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%phi_ln122 = phi i2 [ 0, %0 ], [ %add_ln122, %meminst ]" [helper.cpp:122]   --->   Operation 17 'phi' 'phi_ln122' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%t_0_0_load = load i8* %t_0_0"   --->   Operation 18 'load' 't_0_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%t_1_0_load = load i8* %t_1_0"   --->   Operation 19 'load' 't_1_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%t_2_0_load = load i8* %t_2_0"   --->   Operation 20 'load' 't_2_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%t_3_0_load = load i8* %t_3_0"   --->   Operation 21 'load' 't_3_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.56ns)   --->   "%add_ln122 = add i2 %phi_ln122, 1" [helper.cpp:122]   --->   Operation 22 'add' 'add_ln122' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (1.95ns)   --->   "%t_0_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 0, i8 %t_0_0_load, i8 %t_0_0_load, i8 %t_0_0_load, i2 %phi_ln122)" [helper.cpp:122]   --->   Operation 23 'mux' 't_0_1' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.95ns)   --->   "%t_1_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %t_1_0_load, i8 0, i8 %t_1_0_load, i8 %t_1_0_load, i2 %phi_ln122)" [helper.cpp:122]   --->   Operation 24 'mux' 't_1_1' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.95ns)   --->   "%t_2_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %t_2_0_load, i8 %t_2_0_load, i8 0, i8 %t_2_0_load, i2 %phi_ln122)" [helper.cpp:122]   --->   Operation 25 'mux' 't_2_1' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.95ns)   --->   "%t_3_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %t_3_0_load, i8 %t_3_0_load, i8 %t_3_0_load, i8 0, i2 %phi_ln122)" [helper.cpp:122]   --->   Operation 26 'mux' 't_3_1' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.95ns)   --->   "%icmp_ln122 = icmp eq i2 %phi_ln122, -1" [helper.cpp:122]   --->   Operation 27 'icmp' 'icmp_ln122' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @memset_t_str)"   --->   Operation 28 'specloopname' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 29 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "store i8 %t_3_1, i8* %t_3_0" [helper.cpp:122]   --->   Operation 30 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "store i8 %t_2_1, i8* %t_2_0" [helper.cpp:122]   --->   Operation 31 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "store i8 %t_1_1, i8* %t_1_0" [helper.cpp:122]   --->   Operation 32 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "store i8 %t_0_1, i8* %t_0_0" [helper.cpp:122]   --->   Operation 33 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %icmp_ln122, label %.preheader.preheader, label %meminst" [helper.cpp:122]   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.76ns)   --->   "br label %.preheader" [helper.cpp:125]   --->   Operation 35 'br' <Predicate = (icmp_ln122)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ %i, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 36 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.36ns)   --->   "%icmp_ln125 = icmp eq i5 %i_0, -16" [helper.cpp:125]   --->   Operation 37 'icmp' 'icmp_ln125' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 38 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (1.78ns)   --->   "%i = add i5 %i_0, 1" [helper.cpp:125]   --->   Operation 39 'add' 'i' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "br i1 %icmp_ln125, label %.preheader3.preheader, label %1" [helper.cpp:125]   --->   Operation 40 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln126 = zext i5 %i_0 to i64" [helper.cpp:126]   --->   Operation 41 'zext' 'zext_ln126' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%key_addr = getelementptr [16 x i8]* %key, i64 0, i64 %zext_ln126" [helper.cpp:126]   --->   Operation 42 'getelementptr' 'key_addr' <Predicate = (!icmp_ln125)> <Delay = 0.00>
ST_3 : Operation 43 [2/2] (2.32ns)   --->   "%key_load = load i8* %key_addr, align 1" [helper.cpp:126]   --->   Operation 43 'load' 'key_load' <Predicate = (!icmp_ln125)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%rconIteration_1 = alloca i32"   --->   Operation 44 'alloca' 'rconIteration_1' <Predicate = (icmp_ln125)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (1.76ns)   --->   "store i32 1, i32* %rconIteration_1" [helper.cpp:129]   --->   Operation 45 'store' <Predicate = (icmp_ln125)> <Delay = 1.76>
ST_3 : Operation 46 [1/1] (1.76ns)   --->   "br label %.preheader3" [helper.cpp:129]   --->   Operation 46 'br' <Predicate = (icmp_ln125)> <Delay = 1.76>

State 4 <SV = 3> <Delay = 5.57>
ST_4 : Operation 47 [1/2] (2.32ns)   --->   "%key_load = load i8* %key_addr, align 1" [helper.cpp:126]   --->   Operation 47 'load' 'key_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%expandedKey_addr = getelementptr [176 x i8]* %expandedKey, i64 0, i64 %zext_ln126" [helper.cpp:126]   --->   Operation 48 'getelementptr' 'expandedKey_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (3.25ns)   --->   "store i8 %key_load, i8* %expandedKey_addr, align 1" [helper.cpp:126]   --->   Operation 49 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "br label %.preheader" [helper.cpp:125]   --->   Operation 50 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 1.76>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%t_3_2 = phi i8 [ %t_3_1, %.preheader3.preheader ], [ %t_3_5, %.preheader3.loopexit ]" [helper.cpp:122]   --->   Operation 51 'phi' 't_3_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "%t_2_2 = phi i8 [ %t_2_1, %.preheader3.preheader ], [ %t_2_5, %.preheader3.loopexit ]" [helper.cpp:122]   --->   Operation 52 'phi' 't_2_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%t_1_2 = phi i8 [ %t_1_1, %.preheader3.preheader ], [ %t_1_5, %.preheader3.loopexit ]" [helper.cpp:122]   --->   Operation 53 'phi' 't_1_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%t_0_26 = phi i8 [ %t_0_1, %.preheader3.preheader ], [ %t_0_5, %.preheader3.loopexit ]" [helper.cpp:122]   --->   Operation 54 'phi' 't_0_26' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%currentSize_0 = phi i8 [ 16, %.preheader3.preheader ], [ %currentSize, %.preheader3.loopexit ]"   --->   Operation 55 'phi' 'currentSize_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (1.55ns)   --->   "%icmp_ln129 = icmp ult i8 %currentSize_0, -80" [helper.cpp:129]   --->   Operation 56 'icmp' 'icmp_ln129' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 40, i64 40, i64 40)"   --->   Operation 57 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "br i1 %icmp_ln129, label %.preheader2.preheader, label %7" [helper.cpp:129]   --->   Operation 58 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (1.76ns)   --->   "br label %.preheader2" [helper.cpp:132]   --->   Operation 59 'br' <Predicate = (icmp_ln129)> <Delay = 1.76>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "ret void" [helper.cpp:161]   --->   Operation 60 'ret' <Predicate = (!icmp_ln129)> <Delay = 0.00>

State 6 <SV = 4> <Delay = 5.16>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%t_3_3 = phi i8 [ %t_3_2, %.preheader2.preheader ], [ %t_3_3_be, %.preheader2.backedge ]" [helper.cpp:122]   --->   Operation 61 'phi' 't_3_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%t_2_3 = phi i8 [ %t_2_2, %.preheader2.preheader ], [ %t_2_3_be, %.preheader2.backedge ]" [helper.cpp:122]   --->   Operation 62 'phi' 't_2_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%t_1_3 = phi i8 [ %t_1_2, %.preheader2.preheader ], [ %t_1_3_be, %.preheader2.backedge ]" [helper.cpp:122]   --->   Operation 63 'phi' 't_1_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%t_0_3 = phi i8 [ %t_0_26, %.preheader2.preheader ], [ %t_0_3_be, %.preheader2.backedge ]" [helper.cpp:122]   --->   Operation 64 'phi' 't_0_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%i_1 = phi i3 [ 0, %.preheader2.preheader ], [ %i_2, %.preheader2.backedge ]"   --->   Operation 65 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (1.13ns)   --->   "%icmp_ln132 = icmp eq i3 %i_1, -4" [helper.cpp:132]   --->   Operation 66 'icmp' 'icmp_ln132' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 67 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (1.65ns)   --->   "%i_2 = add i3 %i_1, 1" [helper.cpp:132]   --->   Operation 68 'add' 'i_2' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "br i1 %icmp_ln132, label %3, label %2" [helper.cpp:132]   --->   Operation 69 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node add_ln134)   --->   "%xor_ln134 = xor i3 %i_1, -4" [helper.cpp:134]   --->   Operation 70 'xor' 'xor_ln134' <Predicate = (!icmp_ln132)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node add_ln134)   --->   "%sext_ln134 = sext i3 %xor_ln134 to i8" [helper.cpp:134]   --->   Operation 71 'sext' 'sext_ln134' <Predicate = (!icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (1.91ns) (out node of the LUT)   --->   "%add_ln134 = add i8 %currentSize_0, %sext_ln134" [helper.cpp:134]   --->   Operation 72 'add' 'add_ln134' <Predicate = (!icmp_ln132)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln134 = zext i8 %add_ln134 to i64" [helper.cpp:134]   --->   Operation 73 'zext' 'zext_ln134' <Predicate = (!icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%expandedKey_addr_1 = getelementptr [176 x i8]* %expandedKey, i64 0, i64 %zext_ln134" [helper.cpp:134]   --->   Operation 74 'getelementptr' 'expandedKey_addr_1' <Predicate = (!icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 75 [2/2] (3.25ns)   --->   "%t_0 = load i8* %expandedKey_addr_1, align 1" [helper.cpp:134]   --->   Operation 75 'load' 't_0' <Predicate = (!icmp_ln132)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%trunc_ln134 = trunc i3 %i_1 to i2" [helper.cpp:134]   --->   Operation 76 'trunc' 'trunc_ln134' <Predicate = (!icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln129 = trunc i8 %currentSize_0 to i4" [helper.cpp:129]   --->   Operation 77 'trunc' 'trunc_ln129' <Predicate = (icmp_ln132)> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (1.30ns)   --->   "%icmp_ln140 = icmp eq i4 %trunc_ln129, 0" [helper.cpp:140]   --->   Operation 78 'icmp' 'icmp_ln140' <Predicate = (icmp_ln132)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 79 [1/1] (1.76ns)   --->   "br i1 %icmp_ln140, label %4, label %.loopexit1" [helper.cpp:140]   --->   Operation 79 'br' <Predicate = (icmp_ln132)> <Delay = 1.76>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%rconIteration_1_load = load i32* %rconIteration_1" [helper.cpp:142]   --->   Operation 80 'load' 'rconIteration_1_load' <Predicate = (icmp_ln132 & icmp_ln140)> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (2.55ns)   --->   "%rconIteration = add nsw i32 %rconIteration_1_load, 1" [helper.cpp:142]   --->   Operation 81 'add' 'rconIteration' <Predicate = (icmp_ln132 & icmp_ln140)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [2/2] (1.76ns)   --->   "%core_ret = call fastcc { i8, i8, i8, i8 } @core(i8 %t_0_3, i8 %t_1_3, i8 %t_2_3, i8 %t_3_3, i32 %rconIteration_1_load)" [helper.cpp:142]   --->   Operation 82 'call' 'core_ret' <Predicate = (icmp_ln132 & icmp_ln140)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 83 [1/1] (1.76ns)   --->   "store i32 %rconIteration, i32* %rconIteration_1" [helper.cpp:143]   --->   Operation 83 'store' <Predicate = (icmp_ln132 & icmp_ln140)> <Delay = 1.76>

State 7 <SV = 5> <Delay = 3.25>
ST_7 : Operation 84 [1/2] (3.25ns)   --->   "%t_0 = load i8* %expandedKey_addr_1, align 1" [helper.cpp:134]   --->   Operation 84 'load' 't_0' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_7 : Operation 85 [1/1] (1.76ns)   --->   "switch i2 %trunc_ln134, label %branch3 [
    i2 0, label %.preheader2.backedge
    i2 1, label %branch1
    i2 -2, label %branch2
  ]" [helper.cpp:134]   --->   Operation 85 'switch' <Predicate = true> <Delay = 1.76>
ST_7 : Operation 86 [1/1] (1.76ns)   --->   "br label %.preheader2.backedge" [helper.cpp:134]   --->   Operation 86 'br' <Predicate = (trunc_ln134 == 2)> <Delay = 1.76>
ST_7 : Operation 87 [1/1] (1.76ns)   --->   "br label %.preheader2.backedge" [helper.cpp:134]   --->   Operation 87 'br' <Predicate = (trunc_ln134 == 1)> <Delay = 1.76>
ST_7 : Operation 88 [1/1] (1.76ns)   --->   "br label %.preheader2.backedge" [helper.cpp:134]   --->   Operation 88 'br' <Predicate = (trunc_ln134 == 3)> <Delay = 1.76>

State 8 <SV = 6> <Delay = 0.00>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "%t_3_3_be = phi i8 [ %t_0, %branch3 ], [ %t_3_3, %branch2 ], [ %t_3_3, %branch1 ], [ %t_3_3, %2 ]"   --->   Operation 89 'phi' 't_3_3_be' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 90 [1/1] (0.00ns)   --->   "%t_2_3_be = phi i8 [ %t_2_3, %branch3 ], [ %t_0, %branch2 ], [ %t_2_3, %branch1 ], [ %t_2_3, %2 ]"   --->   Operation 90 'phi' 't_2_3_be' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%t_1_3_be = phi i8 [ %t_1_3, %branch3 ], [ %t_1_3, %branch2 ], [ %t_0, %branch1 ], [ %t_1_3, %2 ]"   --->   Operation 91 'phi' 't_1_3_be' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "%t_0_3_be = phi i8 [ %t_0_3, %branch3 ], [ %t_0_3, %branch2 ], [ %t_0_3, %branch1 ], [ %t_0, %2 ]"   --->   Operation 92 'phi' 't_0_3_be' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "br label %.preheader2"   --->   Operation 93 'br' <Predicate = true> <Delay = 0.00>

State 9 <SV = 5> <Delay = 6.01>
ST_9 : Operation 94 [1/2] (4.24ns)   --->   "%core_ret = call fastcc { i8, i8, i8, i8 } @core(i8 %t_0_3, i8 %t_1_3, i8 %t_2_3, i8 %t_3_3, i32 %rconIteration_1_load)" [helper.cpp:142]   --->   Operation 94 'call' 'core_ret' <Predicate = (icmp_ln140)> <Delay = 4.24> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 95 [1/1] (0.00ns)   --->   "%t_3 = extractvalue { i8, i8, i8, i8 } %core_ret, 2" [helper.cpp:142]   --->   Operation 95 'extractvalue' 't_3' <Predicate = (icmp_ln140)> <Delay = 0.00>
ST_9 : Operation 96 [1/1] (0.00ns)   --->   "%t_2 = extractvalue { i8, i8, i8, i8 } %core_ret, 1" [helper.cpp:142]   --->   Operation 96 'extractvalue' 't_2' <Predicate = (icmp_ln140)> <Delay = 0.00>
ST_9 : Operation 97 [1/1] (0.00ns)   --->   "%t_1 = extractvalue { i8, i8, i8, i8 } %core_ret, 0" [helper.cpp:142]   --->   Operation 97 'extractvalue' 't_1' <Predicate = (icmp_ln140)> <Delay = 0.00>
ST_9 : Operation 98 [1/1] (0.00ns)   --->   "%t_0_2 = extractvalue { i8, i8, i8, i8 } %core_ret, 3" [helper.cpp:142]   --->   Operation 98 'extractvalue' 't_0_2' <Predicate = (icmp_ln140)> <Delay = 0.00>
ST_9 : Operation 99 [1/1] (1.76ns)   --->   "br label %.loopexit1" [helper.cpp:143]   --->   Operation 99 'br' <Predicate = (icmp_ln140)> <Delay = 1.76>
ST_9 : Operation 100 [1/1] (0.00ns)   --->   "%t_3_5 = phi i8 [ %t_3, %4 ], [ %t_3_3, %3 ]"   --->   Operation 100 'phi' 't_3_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 101 [1/1] (0.00ns)   --->   "%t_2_5 = phi i8 [ %t_2, %4 ], [ %t_2_3, %3 ]"   --->   Operation 101 'phi' 't_2_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 102 [1/1] (0.00ns)   --->   "%t_1_5 = phi i8 [ %t_1, %4 ], [ %t_1_3, %3 ]"   --->   Operation 102 'phi' 't_1_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 103 [1/1] (0.00ns)   --->   "%t_0_5 = phi i8 [ %t_0_2, %4 ], [ %t_0_3, %3 ]"   --->   Operation 103 'phi' 't_0_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 104 [1/1] (1.91ns)   --->   "%currentSize = add i8 %currentSize_0, 4" [helper.cpp:158]   --->   Operation 104 'add' 'currentSize' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 105 [1/1] (1.76ns)   --->   "br label %5" [helper.cpp:155]   --->   Operation 105 'br' <Predicate = true> <Delay = 1.76>

State 10 <SV = 6> <Delay = 5.16>
ST_10 : Operation 106 [1/1] (0.00ns)   --->   "%currentSize_1 = phi i8 [ %currentSize_0, %.loopexit1 ], [ %add_ln158, %6 ]" [helper.cpp:158]   --->   Operation 106 'phi' 'currentSize_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 107 [1/1] (0.00ns)   --->   "%i_3 = phi i3 [ 0, %.loopexit1 ], [ %i_4, %6 ]"   --->   Operation 107 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 108 [1/1] (1.13ns)   --->   "%icmp_ln155 = icmp eq i3 %i_3, -4" [helper.cpp:155]   --->   Operation 108 'icmp' 'icmp_ln155' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 109 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 109 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 110 [1/1] (1.65ns)   --->   "%i_4 = add i3 %i_3, 1" [helper.cpp:155]   --->   Operation 110 'add' 'i_4' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 111 [1/1] (0.00ns)   --->   "br i1 %icmp_ln155, label %.preheader3.loopexit, label %6" [helper.cpp:155]   --->   Operation 111 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 112 [1/1] (1.91ns)   --->   "%add_ln157 = add i8 -16, %currentSize_1" [helper.cpp:157]   --->   Operation 112 'add' 'add_ln157' <Predicate = (!icmp_ln155)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln157 = zext i8 %add_ln157 to i64" [helper.cpp:157]   --->   Operation 113 'zext' 'zext_ln157' <Predicate = (!icmp_ln155)> <Delay = 0.00>
ST_10 : Operation 114 [1/1] (0.00ns)   --->   "%expandedKey_addr_2 = getelementptr [176 x i8]* %expandedKey, i64 0, i64 %zext_ln157" [helper.cpp:157]   --->   Operation 114 'getelementptr' 'expandedKey_addr_2' <Predicate = (!icmp_ln155)> <Delay = 0.00>
ST_10 : Operation 115 [2/2] (3.25ns)   --->   "%expandedKey_load = load i8* %expandedKey_addr_2, align 1" [helper.cpp:157]   --->   Operation 115 'load' 'expandedKey_load' <Predicate = (!icmp_ln155)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_10 : Operation 116 [1/1] (0.00ns)   --->   "%trunc_ln157 = trunc i3 %i_3 to i2" [helper.cpp:157]   --->   Operation 116 'trunc' 'trunc_ln157' <Predicate = (!icmp_ln155)> <Delay = 0.00>
ST_10 : Operation 117 [1/1] (1.95ns)   --->   "%tmp = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %t_0_5, i8 %t_1_5, i8 %t_2_5, i8 %t_3_5, i2 %trunc_ln157)" [helper.cpp:157]   --->   Operation 117 'mux' 'tmp' <Predicate = (!icmp_ln155)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 118 [1/1] (0.00ns)   --->   "br label %.preheader3"   --->   Operation 118 'br' <Predicate = (icmp_ln155)> <Delay = 0.00>

State 11 <SV = 7> <Delay = 7.49>
ST_11 : Operation 119 [1/2] (3.25ns)   --->   "%expandedKey_load = load i8* %expandedKey_addr_2, align 1" [helper.cpp:157]   --->   Operation 119 'load' 'expandedKey_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_11 : Operation 120 [1/1] (0.99ns)   --->   "%xor_ln157 = xor i8 %expandedKey_load, %tmp" [helper.cpp:157]   --->   Operation 120 'xor' 'xor_ln157' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln157_1 = zext i8 %currentSize_1 to i64" [helper.cpp:157]   --->   Operation 121 'zext' 'zext_ln157_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 122 [1/1] (0.00ns)   --->   "%expandedKey_addr_3 = getelementptr [176 x i8]* %expandedKey, i64 0, i64 %zext_ln157_1" [helper.cpp:157]   --->   Operation 122 'getelementptr' 'expandedKey_addr_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 123 [1/1] (3.25ns)   --->   "store i8 %xor_ln157, i8* %expandedKey_addr_3, align 1" [helper.cpp:157]   --->   Operation 123 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_11 : Operation 124 [1/1] (1.91ns)   --->   "%add_ln158 = add i8 1, %currentSize_1" [helper.cpp:158]   --->   Operation 124 'add' 'add_ln158' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 125 [1/1] (0.00ns)   --->   "br label %5" [helper.cpp:155]   --->   Operation 125 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('phi_ln122', helper.cpp:122) with incoming values : ('add_ln122', helper.cpp:122) [13]  (1.77 ns)

 <State 2>: 1.96ns
The critical path consists of the following:
	'phi' operation ('phi_ln122', helper.cpp:122) with incoming values : ('add_ln122', helper.cpp:122) [13]  (0 ns)
	'mux' operation ('t_0_1', helper.cpp:122) [19]  (1.96 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', helper.cpp:125) [34]  (0 ns)
	'getelementptr' operation ('key_addr', helper.cpp:126) [41]  (0 ns)
	'load' operation ('key_load', helper.cpp:126) on array 'key' [42]  (2.32 ns)

 <State 4>: 5.58ns
The critical path consists of the following:
	'load' operation ('key_load', helper.cpp:126) on array 'key' [42]  (2.32 ns)
	'store' operation ('store_ln126', helper.cpp:126) of variable 'key_load', helper.cpp:126 on array 'expandedKey' [44]  (3.25 ns)

 <State 5>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('t_3_3', helper.cpp:122) with incoming values : ('t_3_1', helper.cpp:122) ('t[0]', helper.cpp:134) ('t[3]', helper.cpp:142) [62]  (1.77 ns)

 <State 6>: 5.17ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', helper.cpp:132) [66]  (0 ns)
	'xor' operation ('xor_ln134', helper.cpp:134) [72]  (0 ns)
	'add' operation ('add_ln134', helper.cpp:134) [74]  (1.92 ns)
	'getelementptr' operation ('expandedKey_addr_1', helper.cpp:134) [76]  (0 ns)
	'load' operation ('t[0]', helper.cpp:134) on array 'expandedKey' [77]  (3.25 ns)

 <State 7>: 3.25ns
The critical path consists of the following:
	'load' operation ('t[0]', helper.cpp:134) on array 'expandedKey' [77]  (3.25 ns)

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 6.01ns
The critical path consists of the following:
	'call' operation ('core_ret', helper.cpp:142) to 'core' [99]  (4.24 ns)
	multiplexor before 'phi' operation ('t[3]') with incoming values : ('t_3_1', helper.cpp:122) ('t[0]', helper.cpp:134) ('t[3]', helper.cpp:142) [107]  (1.77 ns)
	'phi' operation ('t[3]') with incoming values : ('t_3_1', helper.cpp:122) ('t[0]', helper.cpp:134) ('t[3]', helper.cpp:142) [107]  (0 ns)

 <State 10>: 5.17ns
The critical path consists of the following:
	'phi' operation ('currentSize_1', helper.cpp:158) with incoming values : ('currentSize', helper.cpp:158) ('add_ln158', helper.cpp:158) [114]  (0 ns)
	'add' operation ('add_ln157', helper.cpp:157) [121]  (1.92 ns)
	'getelementptr' operation ('expandedKey_addr_2', helper.cpp:157) [123]  (0 ns)
	'load' operation ('expandedKey_load', helper.cpp:157) on array 'expandedKey' [124]  (3.25 ns)

 <State 11>: 7.5ns
The critical path consists of the following:
	'load' operation ('expandedKey_load', helper.cpp:157) on array 'expandedKey' [124]  (3.25 ns)
	'xor' operation ('xor_ln157', helper.cpp:157) [127]  (0.99 ns)
	'store' operation ('store_ln157', helper.cpp:157) of variable 'xor_ln157', helper.cpp:157 on array 'expandedKey' [130]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
