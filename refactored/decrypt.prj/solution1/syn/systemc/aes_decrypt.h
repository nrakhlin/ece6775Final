// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes_decrypt_HH_
#define _aes_decrypt_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aes_invMain.h"
#include "expandKey.h"
#include "decrypt_dut_mux_1g8j.h"
#include "aes_decrypt_expancud.h"

namespace ap_rtl {

struct aes_decrypt : public sc_module {
    // Port declarations 70
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > input_0_read;
    sc_in< sc_lv<8> > input_1_read;
    sc_in< sc_lv<8> > input_2_read;
    sc_in< sc_lv<8> > input_3_read;
    sc_in< sc_lv<8> > input_4_read;
    sc_in< sc_lv<8> > input_5_read;
    sc_in< sc_lv<8> > input_6_read;
    sc_in< sc_lv<8> > input_7_read;
    sc_in< sc_lv<8> > input_8_read;
    sc_in< sc_lv<8> > input_9_read;
    sc_in< sc_lv<8> > input_10_read;
    sc_in< sc_lv<8> > input_11_read;
    sc_in< sc_lv<8> > input_12_read;
    sc_in< sc_lv<8> > input_13_read;
    sc_in< sc_lv<8> > input_14_read;
    sc_in< sc_lv<8> > input_15_read;
    sc_out< sc_lv<8> > output_0;
    sc_out< sc_logic > output_0_ap_vld;
    sc_out< sc_lv<8> > output_1;
    sc_out< sc_logic > output_1_ap_vld;
    sc_out< sc_lv<8> > output_2;
    sc_out< sc_logic > output_2_ap_vld;
    sc_out< sc_lv<8> > output_3;
    sc_out< sc_logic > output_3_ap_vld;
    sc_out< sc_lv<8> > output_4;
    sc_out< sc_logic > output_4_ap_vld;
    sc_out< sc_lv<8> > output_5;
    sc_out< sc_logic > output_5_ap_vld;
    sc_out< sc_lv<8> > output_6;
    sc_out< sc_logic > output_6_ap_vld;
    sc_out< sc_lv<8> > output_7;
    sc_out< sc_logic > output_7_ap_vld;
    sc_out< sc_lv<8> > output_8;
    sc_out< sc_logic > output_8_ap_vld;
    sc_out< sc_lv<8> > output_9;
    sc_out< sc_logic > output_9_ap_vld;
    sc_out< sc_lv<8> > output_10;
    sc_out< sc_logic > output_10_ap_vld;
    sc_out< sc_lv<8> > output_11;
    sc_out< sc_logic > output_11_ap_vld;
    sc_out< sc_lv<8> > output_12;
    sc_out< sc_logic > output_12_ap_vld;
    sc_out< sc_lv<8> > output_13;
    sc_out< sc_logic > output_13_ap_vld;
    sc_out< sc_lv<8> > output_14;
    sc_out< sc_logic > output_14_ap_vld;
    sc_out< sc_lv<8> > output_15;
    sc_out< sc_logic > output_15_ap_vld;
    sc_in< sc_lv<8> > key_0_read;
    sc_in< sc_lv<8> > key_1_read;
    sc_in< sc_lv<8> > key_2_read;
    sc_in< sc_lv<8> > key_3_read;
    sc_in< sc_lv<8> > key_4_read;
    sc_in< sc_lv<8> > key_5_read;
    sc_in< sc_lv<8> > key_6_read;
    sc_in< sc_lv<8> > key_7_read;
    sc_in< sc_lv<8> > key_8_read;
    sc_in< sc_lv<8> > key_9_read;
    sc_in< sc_lv<8> > key_10_read;
    sc_in< sc_lv<8> > key_11_read;
    sc_in< sc_lv<8> > key_12_read;
    sc_in< sc_lv<8> > key_13_read;
    sc_in< sc_lv<8> > key_14_read;
    sc_in< sc_lv<8> > key_15_read;


    // Module declarations
    aes_decrypt(sc_module_name name);
    SC_HAS_PROCESS(aes_decrypt);

    ~aes_decrypt();

    sc_trace_file* mVcdFile;

    aes_decrypt_expancud* expandedKey_0_U;
    aes_decrypt_expancud* expandedKey_1_U;
    aes_decrypt_expancud* expandedKey_2_U;
    aes_decrypt_expancud* expandedKey_3_U;
    aes_invMain* grp_aes_invMain_fu_588;
    expandKey* grp_expandKey_fu_614;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U60;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U61;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U62;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U63;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U64;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U65;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U66;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U67;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U68;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U69;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U70;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U71;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U72;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U73;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U74;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U75;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U76;
    decrypt_dut_mux_1g8j<1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,4,8>* decrypt_dut_mux_1g8j_U77;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_712_p2;
    sc_signal< sc_lv<3> > i_reg_1909;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > zext_ln81_fu_718_p1;
    sc_signal< sc_lv<4> > zext_ln81_reg_1914;
    sc_signal< sc_lv<1> > icmp_ln76_fu_706_p2;
    sc_signal< sc_lv<4> > shl_ln_fu_726_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_1919;
    sc_signal< sc_lv<3> > j_fu_740_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > block_016_load_reg_1932;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > block_117_load_reg_1937;
    sc_signal< sc_lv<8> > block_218_load_reg_1942;
    sc_signal< sc_lv<8> > block_319_load_reg_1947;
    sc_signal< sc_lv<8> > block_420_load_reg_1952;
    sc_signal< sc_lv<8> > block_521_load_reg_1957;
    sc_signal< sc_lv<8> > block_622_load_reg_1962;
    sc_signal< sc_lv<8> > block_723_load_reg_1967;
    sc_signal< sc_lv<8> > block_824_load_reg_1972;
    sc_signal< sc_lv<8> > block_925_load_reg_1977;
    sc_signal< sc_lv<8> > block_1026_load_reg_1982;
    sc_signal< sc_lv<8> > block_1127_load_reg_1987;
    sc_signal< sc_lv<8> > block_1228_load_reg_1992;
    sc_signal< sc_lv<8> > block_1329_load_reg_1997;
    sc_signal< sc_lv<8> > block_1430_load_reg_2002;
    sc_signal< sc_lv<8> > block_1531_load_reg_2007;
    sc_signal< sc_lv<8> > block_0_reg_2012;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_ap_ready;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_ap_done;
    sc_signal< sc_lv<8> > block_1_11_reg_2017;
    sc_signal< sc_lv<8> > block_2_12_reg_2022;
    sc_signal< sc_lv<8> > block_3_13_reg_2027;
    sc_signal< sc_lv<8> > block_4_14_reg_2032;
    sc_signal< sc_lv<8> > block_5_15_reg_2037;
    sc_signal< sc_lv<8> > block_6_16_reg_2042;
    sc_signal< sc_lv<8> > block_7_17_reg_2047;
    sc_signal< sc_lv<8> > block_8_18_reg_2052;
    sc_signal< sc_lv<8> > block_9_19_reg_2057;
    sc_signal< sc_lv<8> > block_10_20_reg_2062;
    sc_signal< sc_lv<8> > block_11_21_reg_2067;
    sc_signal< sc_lv<8> > block_12_22_reg_2072;
    sc_signal< sc_lv<8> > block_13_23_reg_2077;
    sc_signal< sc_lv<8> > block_14_24_reg_2082;
    sc_signal< sc_lv<8> > block_15_25_reg_2087;
    sc_signal< sc_lv<3> > i_2_fu_1552_p2;
    sc_signal< sc_lv<3> > i_2_reg_2095;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > zext_ln97_fu_1558_p1;
    sc_signal< sc_lv<4> > zext_ln97_reg_2100;
    sc_signal< sc_lv<1> > icmp_ln92_fu_1546_p2;
    sc_signal< sc_lv<4> > shl_ln1_fu_1566_p3;
    sc_signal< sc_lv<4> > shl_ln1_reg_2105;
    sc_signal< sc_lv<3> > j_2_fu_1580_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > expandedKey_0_address0;
    sc_signal< sc_logic > expandedKey_0_ce0;
    sc_signal< sc_logic > expandedKey_0_we0;
    sc_signal< sc_lv<8> > expandedKey_0_q0;
    sc_signal< sc_lv<6> > expandedKey_0_address1;
    sc_signal< sc_logic > expandedKey_0_ce1;
    sc_signal< sc_logic > expandedKey_0_we1;
    sc_signal< sc_lv<8> > expandedKey_0_q1;
    sc_signal< sc_lv<6> > expandedKey_1_address0;
    sc_signal< sc_logic > expandedKey_1_ce0;
    sc_signal< sc_logic > expandedKey_1_we0;
    sc_signal< sc_lv<8> > expandedKey_1_q0;
    sc_signal< sc_lv<6> > expandedKey_1_address1;
    sc_signal< sc_logic > expandedKey_1_ce1;
    sc_signal< sc_logic > expandedKey_1_we1;
    sc_signal< sc_lv<8> > expandedKey_1_q1;
    sc_signal< sc_lv<6> > expandedKey_2_address0;
    sc_signal< sc_logic > expandedKey_2_ce0;
    sc_signal< sc_logic > expandedKey_2_we0;
    sc_signal< sc_lv<8> > expandedKey_2_q0;
    sc_signal< sc_lv<6> > expandedKey_2_address1;
    sc_signal< sc_logic > expandedKey_2_ce1;
    sc_signal< sc_logic > expandedKey_2_we1;
    sc_signal< sc_lv<8> > expandedKey_2_q1;
    sc_signal< sc_lv<6> > expandedKey_3_address0;
    sc_signal< sc_logic > expandedKey_3_ce0;
    sc_signal< sc_logic > expandedKey_3_we0;
    sc_signal< sc_lv<8> > expandedKey_3_q0;
    sc_signal< sc_lv<6> > expandedKey_3_address1;
    sc_signal< sc_logic > expandedKey_3_ce1;
    sc_signal< sc_logic > expandedKey_3_we1;
    sc_signal< sc_lv<8> > expandedKey_3_q1;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_ap_start;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_ap_idle;
    sc_signal< sc_lv<6> > grp_aes_invMain_fu_588_expandedKey_0_address0;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_expandedKey_0_ce0;
    sc_signal< sc_lv<6> > grp_aes_invMain_fu_588_expandedKey_0_address1;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_expandedKey_0_ce1;
    sc_signal< sc_lv<6> > grp_aes_invMain_fu_588_expandedKey_1_address0;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_expandedKey_1_ce0;
    sc_signal< sc_lv<6> > grp_aes_invMain_fu_588_expandedKey_1_address1;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_expandedKey_1_ce1;
    sc_signal< sc_lv<6> > grp_aes_invMain_fu_588_expandedKey_2_address0;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_expandedKey_2_ce0;
    sc_signal< sc_lv<6> > grp_aes_invMain_fu_588_expandedKey_2_address1;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_expandedKey_2_ce1;
    sc_signal< sc_lv<6> > grp_aes_invMain_fu_588_expandedKey_3_address0;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_expandedKey_3_ce0;
    sc_signal< sc_lv<6> > grp_aes_invMain_fu_588_expandedKey_3_address1;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_expandedKey_3_ce1;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_0;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_1;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_2;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_3;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_4;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_5;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_6;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_7;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_8;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_9;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_10;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_11;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_12;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_13;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_14;
    sc_signal< sc_lv<8> > grp_aes_invMain_fu_588_ap_return_15;
    sc_signal< sc_logic > grp_expandKey_fu_614_ap_start;
    sc_signal< sc_logic > grp_expandKey_fu_614_ap_done;
    sc_signal< sc_logic > grp_expandKey_fu_614_ap_idle;
    sc_signal< sc_logic > grp_expandKey_fu_614_ap_ready;
    sc_signal< sc_lv<6> > grp_expandKey_fu_614_expandedKey_0_address0;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_0_ce0;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_0_we0;
    sc_signal< sc_lv<8> > grp_expandKey_fu_614_expandedKey_0_d0;
    sc_signal< sc_lv<6> > grp_expandKey_fu_614_expandedKey_0_address1;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_0_ce1;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_0_we1;
    sc_signal< sc_lv<8> > grp_expandKey_fu_614_expandedKey_0_d1;
    sc_signal< sc_lv<6> > grp_expandKey_fu_614_expandedKey_1_address0;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_1_ce0;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_1_we0;
    sc_signal< sc_lv<8> > grp_expandKey_fu_614_expandedKey_1_d0;
    sc_signal< sc_lv<6> > grp_expandKey_fu_614_expandedKey_1_address1;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_1_ce1;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_1_we1;
    sc_signal< sc_lv<8> > grp_expandKey_fu_614_expandedKey_1_d1;
    sc_signal< sc_lv<6> > grp_expandKey_fu_614_expandedKey_2_address0;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_2_ce0;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_2_we0;
    sc_signal< sc_lv<8> > grp_expandKey_fu_614_expandedKey_2_d0;
    sc_signal< sc_lv<6> > grp_expandKey_fu_614_expandedKey_2_address1;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_2_ce1;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_2_we1;
    sc_signal< sc_lv<8> > grp_expandKey_fu_614_expandedKey_2_d1;
    sc_signal< sc_lv<6> > grp_expandKey_fu_614_expandedKey_3_address0;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_3_ce0;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_3_we0;
    sc_signal< sc_lv<8> > grp_expandKey_fu_614_expandedKey_3_d0;
    sc_signal< sc_lv<6> > grp_expandKey_fu_614_expandedKey_3_address1;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_3_ce1;
    sc_signal< sc_logic > grp_expandKey_fu_614_expandedKey_3_we1;
    sc_signal< sc_lv<8> > grp_expandKey_fu_614_expandedKey_3_d1;
    sc_signal< sc_lv<3> > i_0_reg_544;
    sc_signal< sc_lv<1> > icmp_ln79_fu_734_p2;
    sc_signal< sc_lv<3> > j_0_reg_555;
    sc_signal< sc_lv<3> > i_1_reg_566;
    sc_signal< sc_lv<1> > icmp_ln95_fu_1574_p2;
    sc_signal< sc_lv<3> > j_1_reg_577;
    sc_signal< sc_logic > grp_aes_invMain_fu_588_ap_start_reg;
    sc_signal< sc_logic > grp_expandKey_fu_614_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > block_016_fu_160;
    sc_signal< sc_lv<8> > block_s_fu_794_p18;
    sc_signal< sc_lv<8> > block_117_fu_164;
    sc_signal< sc_lv<8> > block_1_fu_832_p18;
    sc_signal< sc_lv<8> > block_218_fu_168;
    sc_signal< sc_lv<8> > block_2_fu_870_p18;
    sc_signal< sc_lv<8> > block_319_fu_172;
    sc_signal< sc_lv<8> > block_3_fu_908_p18;
    sc_signal< sc_lv<8> > block_420_fu_176;
    sc_signal< sc_lv<8> > block_4_fu_946_p18;
    sc_signal< sc_lv<8> > block_521_fu_180;
    sc_signal< sc_lv<8> > block_5_fu_984_p18;
    sc_signal< sc_lv<8> > block_622_fu_184;
    sc_signal< sc_lv<8> > block_6_fu_1022_p18;
    sc_signal< sc_lv<8> > block_723_fu_188;
    sc_signal< sc_lv<8> > block_7_fu_1060_p18;
    sc_signal< sc_lv<8> > block_824_fu_192;
    sc_signal< sc_lv<8> > block_8_fu_1098_p18;
    sc_signal< sc_lv<8> > block_925_fu_196;
    sc_signal< sc_lv<8> > block_9_fu_1136_p18;
    sc_signal< sc_lv<8> > block_1026_fu_200;
    sc_signal< sc_lv<8> > block_10_fu_1174_p18;
    sc_signal< sc_lv<8> > block_1127_fu_204;
    sc_signal< sc_lv<8> > block_11_fu_1212_p18;
    sc_signal< sc_lv<8> > block_1228_fu_208;
    sc_signal< sc_lv<8> > block_12_fu_1250_p18;
    sc_signal< sc_lv<8> > block_1329_fu_212;
    sc_signal< sc_lv<8> > block_13_fu_1288_p18;
    sc_signal< sc_lv<8> > block_1430_fu_216;
    sc_signal< sc_lv<8> > block_14_fu_1326_p18;
    sc_signal< sc_lv<8> > block_1531_fu_220;
    sc_signal< sc_lv<8> > block_15_fu_1364_p18;
    sc_signal< sc_lv<8> > tmp_s_fu_1607_p18;
    sc_signal< sc_lv<4> > add_ln97_1_fu_1645_p2;
    sc_signal< sc_lv<2> > trunc_ln81_fu_722_p1;
    sc_signal< sc_lv<4> > zext_ln81_1_fu_746_p1;
    sc_signal< sc_lv<4> > tmp_fu_755_p17;
    sc_signal< sc_lv<2> > trunc_ln81_1_fu_777_p1;
    sc_signal< sc_lv<4> > shl_ln81_1_fu_781_p3;
    sc_signal< sc_lv<8> > tmp_fu_755_p18;
    sc_signal< sc_lv<4> > add_ln81_1_fu_789_p2;
    sc_signal< sc_lv<2> > trunc_ln97_fu_1562_p1;
    sc_signal< sc_lv<2> > trunc_ln97_1_fu_1590_p1;
    sc_signal< sc_lv<4> > shl_ln97_1_fu_1594_p3;
    sc_signal< sc_lv<4> > tmp_s_fu_1607_p17;
    sc_signal< sc_lv<4> > zext_ln97_1_fu_1586_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln81_1_fu_789_p2();
    void thread_add_ln97_1_fu_1645_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_expandedKey_0_address0();
    void thread_expandedKey_0_address1();
    void thread_expandedKey_0_ce0();
    void thread_expandedKey_0_ce1();
    void thread_expandedKey_0_we0();
    void thread_expandedKey_0_we1();
    void thread_expandedKey_1_address0();
    void thread_expandedKey_1_address1();
    void thread_expandedKey_1_ce0();
    void thread_expandedKey_1_ce1();
    void thread_expandedKey_1_we0();
    void thread_expandedKey_1_we1();
    void thread_expandedKey_2_address0();
    void thread_expandedKey_2_address1();
    void thread_expandedKey_2_ce0();
    void thread_expandedKey_2_ce1();
    void thread_expandedKey_2_we0();
    void thread_expandedKey_2_we1();
    void thread_expandedKey_3_address0();
    void thread_expandedKey_3_address1();
    void thread_expandedKey_3_ce0();
    void thread_expandedKey_3_ce1();
    void thread_expandedKey_3_we0();
    void thread_expandedKey_3_we1();
    void thread_grp_aes_invMain_fu_588_ap_start();
    void thread_grp_expandKey_fu_614_ap_start();
    void thread_i_2_fu_1552_p2();
    void thread_i_fu_712_p2();
    void thread_icmp_ln76_fu_706_p2();
    void thread_icmp_ln79_fu_734_p2();
    void thread_icmp_ln92_fu_1546_p2();
    void thread_icmp_ln95_fu_1574_p2();
    void thread_j_2_fu_1580_p2();
    void thread_j_fu_740_p2();
    void thread_output_0();
    void thread_output_0_ap_vld();
    void thread_output_1();
    void thread_output_10();
    void thread_output_10_ap_vld();
    void thread_output_11();
    void thread_output_11_ap_vld();
    void thread_output_12();
    void thread_output_12_ap_vld();
    void thread_output_13();
    void thread_output_13_ap_vld();
    void thread_output_14();
    void thread_output_14_ap_vld();
    void thread_output_15();
    void thread_output_15_ap_vld();
    void thread_output_1_ap_vld();
    void thread_output_2();
    void thread_output_2_ap_vld();
    void thread_output_3();
    void thread_output_3_ap_vld();
    void thread_output_4();
    void thread_output_4_ap_vld();
    void thread_output_5();
    void thread_output_5_ap_vld();
    void thread_output_6();
    void thread_output_6_ap_vld();
    void thread_output_7();
    void thread_output_7_ap_vld();
    void thread_output_8();
    void thread_output_8_ap_vld();
    void thread_output_9();
    void thread_output_9_ap_vld();
    void thread_shl_ln1_fu_1566_p3();
    void thread_shl_ln81_1_fu_781_p3();
    void thread_shl_ln97_1_fu_1594_p3();
    void thread_shl_ln_fu_726_p3();
    void thread_tmp_fu_755_p17();
    void thread_tmp_s_fu_1607_p17();
    void thread_trunc_ln81_1_fu_777_p1();
    void thread_trunc_ln81_fu_722_p1();
    void thread_trunc_ln97_1_fu_1590_p1();
    void thread_trunc_ln97_fu_1562_p1();
    void thread_zext_ln81_1_fu_746_p1();
    void thread_zext_ln81_fu_718_p1();
    void thread_zext_ln97_1_fu_1586_p1();
    void thread_zext_ln97_fu_1558_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
