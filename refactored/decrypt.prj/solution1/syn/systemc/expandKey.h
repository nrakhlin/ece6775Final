// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _expandKey_HH_
#define _expandKey_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "core.h"
#include "decrypt_dut_mux_4cud.h"

namespace ap_rtl {

struct expandKey : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > expandedKey_address0;
    sc_out< sc_logic > expandedKey_ce0;
    sc_out< sc_logic > expandedKey_we0;
    sc_out< sc_lv<8> > expandedKey_d0;
    sc_in< sc_lv<8> > expandedKey_q0;
    sc_out< sc_lv<4> > key_address0;
    sc_out< sc_logic > key_ce0;
    sc_in< sc_lv<8> > key_q0;
    sc_signal< sc_lv<8> > ap_var_for_const0;


    // Module declarations
    expandKey(sc_module_name name);
    SC_HAS_PROCESS(expandKey);

    ~expandKey();

    sc_trace_file* mVcdFile;

    core* grp_core_fu_404;
    decrypt_dut_mux_4cud<1,1,8,8,8,8,2,8>* decrypt_dut_mux_4cud_U15;
    decrypt_dut_mux_4cud<1,1,8,8,8,8,2,8>* decrypt_dut_mux_4cud_U16;
    decrypt_dut_mux_4cud<1,1,8,8,8,8,2,8>* decrypt_dut_mux_4cud_U17;
    decrypt_dut_mux_4cud<1,1,8,8,8,8,2,8>* decrypt_dut_mux_4cud_U18;
    decrypt_dut_mux_4cud<1,1,8,8,8,8,2,8>* decrypt_dut_mux_4cud_U19;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > add_ln122_fu_433_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > t_0_1_fu_439_p6;
    sc_signal< sc_lv<8> > t_0_1_reg_724;
    sc_signal< sc_lv<8> > t_1_1_fu_453_p6;
    sc_signal< sc_lv<8> > t_1_1_reg_729;
    sc_signal< sc_lv<8> > t_2_1_fu_467_p6;
    sc_signal< sc_lv<8> > t_2_1_reg_734;
    sc_signal< sc_lv<8> > t_3_1_fu_481_p6;
    sc_signal< sc_lv<8> > t_3_1_reg_739;
    sc_signal< sc_lv<5> > i_fu_527_p2;
    sc_signal< sc_lv<5> > i_reg_750;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln126_fu_533_p1;
    sc_signal< sc_lv<64> > zext_ln126_reg_755;
    sc_signal< sc_lv<1> > icmp_ln125_fu_521_p2;
    sc_signal< sc_lv<3> > i_2_fu_555_p2;
    sc_signal< sc_lv<3> > i_2_reg_778;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln132_fu_549_p2;
    sc_signal< sc_lv<2> > trunc_ln134_fu_582_p1;
    sc_signal< sc_lv<2> > trunc_ln134_reg_788;
    sc_signal< sc_lv<1> > icmp_ln140_fu_590_p2;
    sc_signal< sc_lv<1> > icmp_ln140_reg_792;
    sc_signal< sc_lv<32> > rconIteration_1_load_reg_796;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > currentSize_fu_631_p2;
    sc_signal< sc_lv<8> > currentSize_reg_809;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > grp_core_fu_404_ap_ready;
    sc_signal< sc_logic > grp_core_fu_404_ap_done;
    sc_signal< bool > ap_block_state9_on_subcall_done;
    sc_signal< sc_lv<3> > i_4_fu_643_p2;
    sc_signal< sc_lv<3> > i_4_reg_817;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > icmp_ln155_fu_637_p2;
    sc_signal< sc_lv<8> > tmp_fu_664_p6;
    sc_signal< sc_lv<8> > tmp_reg_827;
    sc_signal< sc_lv<8> > add_ln158_fu_689_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > grp_core_fu_404_ap_start;
    sc_signal< sc_logic > grp_core_fu_404_ap_idle;
    sc_signal< sc_lv<8> > grp_core_fu_404_ap_return_0;
    sc_signal< sc_lv<8> > grp_core_fu_404_ap_return_1;
    sc_signal< sc_lv<8> > grp_core_fu_404_ap_return_2;
    sc_signal< sc_lv<8> > grp_core_fu_404_ap_return_3;
    sc_signal< sc_lv<2> > phi_ln122_reg_133;
    sc_signal< sc_lv<1> > icmp_ln122_fu_495_p2;
    sc_signal< sc_lv<5> > i_0_reg_144;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > t_3_2_reg_155;
    sc_signal< sc_lv<8> > t_3_5_reg_334;
    sc_signal< sc_lv<8> > t_2_2_reg_165;
    sc_signal< sc_lv<8> > t_2_5_reg_346;
    sc_signal< sc_lv<8> > t_1_2_reg_175;
    sc_signal< sc_lv<8> > t_1_5_reg_358;
    sc_signal< sc_lv<8> > t_0_26_reg_185;
    sc_signal< sc_lv<8> > t_0_5_reg_370;
    sc_signal< sc_lv<8> > currentSize_0_reg_195;
    sc_signal< sc_lv<8> > t_3_3_reg_207;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln129_fu_543_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > t_2_3_reg_218;
    sc_signal< sc_lv<8> > t_1_3_reg_229;
    sc_signal< sc_lv<8> > t_0_3_reg_240;
    sc_signal< sc_lv<3> > i_1_reg_251;
    sc_signal< sc_lv<8> > t_3_3_be_reg_262;
    sc_signal< sc_lv<8> > t_2_3_be_reg_280;
    sc_signal< sc_lv<8> > t_1_3_be_reg_298;
    sc_signal< sc_lv<8> > t_0_3_be_reg_316;
    sc_signal< sc_lv<8> > currentSize_1_reg_382;
    sc_signal< sc_lv<3> > i_3_reg_393;
    sc_signal< sc_logic > grp_core_fu_404_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln134_fu_577_p1;
    sc_signal< sc_lv<64> > zext_ln157_fu_655_p1;
    sc_signal< sc_lv<64> > zext_ln157_1_fu_684_p1;
    sc_signal< sc_lv<8> > t_0_0_fu_62;
    sc_signal< sc_lv<8> > t_1_0_fu_66;
    sc_signal< sc_lv<8> > t_2_0_fu_70;
    sc_signal< sc_lv<8> > t_3_0_fu_74;
    sc_signal< sc_lv<32> > rconIteration_1_fu_78;
    sc_signal< sc_lv<32> > rconIteration_fu_600_p2;
    sc_signal< sc_lv<8> > xor_ln157_fu_678_p2;
    sc_signal< sc_lv<3> > xor_ln134_fu_561_p2;
    sc_signal< sc_lv<8> > sext_ln134_fu_567_p1;
    sc_signal< sc_lv<8> > add_ln134_fu_571_p2;
    sc_signal< sc_lv<4> > trunc_ln129_fu_586_p1;
    sc_signal< sc_lv<8> > add_ln157_fu_649_p2;
    sc_signal< sc_lv<2> > tmp_fu_664_p5;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<8> ap_const_lv8_B0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln122_fu_433_p2();
    void thread_add_ln134_fu_571_p2();
    void thread_add_ln157_fu_649_p2();
    void thread_add_ln158_fu_689_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state9_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_currentSize_fu_631_p2();
    void thread_expandedKey_address0();
    void thread_expandedKey_ce0();
    void thread_expandedKey_d0();
    void thread_expandedKey_we0();
    void thread_grp_core_fu_404_ap_start();
    void thread_i_2_fu_555_p2();
    void thread_i_4_fu_643_p2();
    void thread_i_fu_527_p2();
    void thread_icmp_ln122_fu_495_p2();
    void thread_icmp_ln125_fu_521_p2();
    void thread_icmp_ln129_fu_543_p2();
    void thread_icmp_ln132_fu_549_p2();
    void thread_icmp_ln140_fu_590_p2();
    void thread_icmp_ln155_fu_637_p2();
    void thread_key_address0();
    void thread_key_ce0();
    void thread_rconIteration_fu_600_p2();
    void thread_sext_ln134_fu_567_p1();
    void thread_tmp_fu_664_p5();
    void thread_trunc_ln129_fu_586_p1();
    void thread_trunc_ln134_fu_582_p1();
    void thread_xor_ln134_fu_561_p2();
    void thread_xor_ln157_fu_678_p2();
    void thread_zext_ln126_fu_533_p1();
    void thread_zext_ln134_fu_577_p1();
    void thread_zext_ln157_1_fu_684_p1();
    void thread_zext_ln157_fu_655_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
