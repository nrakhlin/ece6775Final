// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _expandKey_HH_
#define _expandKey_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "expandKey_sbox.h"
#include "expandKey_Rcon.h"

namespace ap_rtl {

struct expandKey : public sc_module {
    // Port declarations 60
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > expandedKey_0_address0;
    sc_out< sc_logic > expandedKey_0_ce0;
    sc_out< sc_logic > expandedKey_0_we0;
    sc_out< sc_lv<8> > expandedKey_0_d0;
    sc_in< sc_lv<8> > expandedKey_0_q0;
    sc_out< sc_lv<6> > expandedKey_0_address1;
    sc_out< sc_logic > expandedKey_0_ce1;
    sc_out< sc_logic > expandedKey_0_we1;
    sc_out< sc_lv<8> > expandedKey_0_d1;
    sc_in< sc_lv<8> > expandedKey_0_q1;
    sc_out< sc_lv<6> > expandedKey_1_address0;
    sc_out< sc_logic > expandedKey_1_ce0;
    sc_out< sc_logic > expandedKey_1_we0;
    sc_out< sc_lv<8> > expandedKey_1_d0;
    sc_in< sc_lv<8> > expandedKey_1_q0;
    sc_out< sc_lv<6> > expandedKey_1_address1;
    sc_out< sc_logic > expandedKey_1_ce1;
    sc_out< sc_logic > expandedKey_1_we1;
    sc_out< sc_lv<8> > expandedKey_1_d1;
    sc_out< sc_lv<6> > expandedKey_2_address0;
    sc_out< sc_logic > expandedKey_2_ce0;
    sc_out< sc_logic > expandedKey_2_we0;
    sc_out< sc_lv<8> > expandedKey_2_d0;
    sc_in< sc_lv<8> > expandedKey_2_q0;
    sc_out< sc_lv<6> > expandedKey_2_address1;
    sc_out< sc_logic > expandedKey_2_ce1;
    sc_out< sc_logic > expandedKey_2_we1;
    sc_out< sc_lv<8> > expandedKey_2_d1;
    sc_out< sc_lv<6> > expandedKey_3_address0;
    sc_out< sc_logic > expandedKey_3_ce0;
    sc_out< sc_logic > expandedKey_3_we0;
    sc_out< sc_lv<8> > expandedKey_3_d0;
    sc_in< sc_lv<8> > expandedKey_3_q0;
    sc_out< sc_lv<6> > expandedKey_3_address1;
    sc_out< sc_logic > expandedKey_3_ce1;
    sc_out< sc_logic > expandedKey_3_we1;
    sc_out< sc_lv<8> > expandedKey_3_d1;
    sc_in< sc_lv<8> > expandedKey_3_q1;
    sc_in< sc_lv<8> > key_0_read;
    sc_in< sc_lv<8> > key_1_read;
    sc_in< sc_lv<8> > key_2_read;
    sc_in< sc_lv<8> > key_3_read;
    sc_in< sc_lv<8> > key_4_read;
    sc_in< sc_lv<8> > key_5_read;
    sc_in< sc_lv<8> > key_6_read;
    sc_in< sc_lv<8> > key_7_read;
    sc_in< sc_lv<8> > key_8_read;
    sc_in< sc_lv<8> > key_9_read;
    sc_in< sc_lv<8> > key_10_read;
    sc_in< sc_lv<8> > key_11_read;
    sc_in< sc_lv<8> > key_12_read;
    sc_in< sc_lv<8> > key_13_read;
    sc_in< sc_lv<8> > key_14_read;
    sc_in< sc_lv<8> > key_15_read;


    // Module declarations
    expandKey(sc_module_name name);
    SC_HAS_PROCESS(expandKey);

    ~expandKey();

    sc_trace_file* mVcdFile;

    expandKey_sbox* sbox_U;
    expandKey_Rcon* Rcon_U;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<8> > currentSize_0_reg_550;
    sc_signal< sc_lv<32> > iteration_assign_reg_562;
    sc_signal< sc_lv<1> > icmp_ln139_fu_573_p2;
    sc_signal< sc_lv<1> > icmp_ln139_reg_924;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln139_reg_924_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln151_fu_625_p2;
    sc_signal< sc_lv<1> > icmp_ln151_reg_938;
    sc_signal< sc_lv<1> > icmp_ln151_reg_938_pp0_iter1_reg;
    sc_signal< sc_lv<32> > rconIteration_1_fu_646_p3;
    sc_signal< sc_lv<32> > rconIteration_1_reg_951;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<9> > zext_ln172_fu_681_p1;
    sc_signal< sc_lv<9> > zext_ln172_reg_961;
    sc_signal< sc_lv<8> > t_0_3_reg_977;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<8> > t_3_1_reg_987;
    sc_signal< sc_lv<8> > Rcon_load_reg_998;
    sc_signal< sc_lv<8> > expandedKey_0_load_reg_1003;
    sc_signal< sc_lv<8> > expandedKey_1_load_reg_1008;
    sc_signal< sc_lv<8> > expandedKey_3_load_reg_1013;
    sc_signal< sc_lv<8> > t_1_1_reg_1018;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<64> > zext_ln171_fu_813_p1;
    sc_signal< sc_lv<64> > zext_ln171_reg_1033;
    sc_signal< sc_lv<8> > t_2_1_reg_1039;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<8> > currentSize_fu_840_p2;
    sc_signal< sc_lv<8> > currentSize_reg_1049;
    sc_signal< sc_lv<7> > lshr_ln171_1_reg_1064;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<8> > ap_phi_mux_currentSize_0_phi_fu_554_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_iteration_assign_phi_fu_566_p4;
    sc_signal< sc_lv<64> > zext_ln145_fu_599_p1;
    sc_signal< sc_lv<64> > zext_ln145_3_fu_620_p1;
    sc_signal< sc_lv<64> > zext_ln97_fu_641_p1;
    sc_signal< sc_lv<64> > zext_ln170_fu_670_p1;
    sc_signal< sc_lv<64> > zext_ln170_1_fu_705_p1;
    sc_signal< sc_lv<64> > zext_ln170_3_fu_740_p1;
    sc_signal< sc_lv<64> > zext_ln145_1_fu_761_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln46_3_fu_766_p1;
    sc_signal< sc_lv<64> > zext_ln145_2_fu_787_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > zext_ln46_fu_792_p1;
    sc_signal< sc_lv<64> > zext_ln46_1_fu_824_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > zext_ln46_2_fu_852_p1;
    sc_signal< sc_lv<64> > zext_ln170_2_fu_892_p1;
    sc_signal< sc_lv<64> > zext_ln171_1_fu_920_p1;
    sc_signal< sc_lv<8> > xor_ln171_fu_846_p2;
    sc_signal< sc_lv<8> > xor_ln171_1_fu_862_p2;
    sc_signal< sc_lv<8> > xor_ln171_2_fu_913_p2;
    sc_signal< sc_lv<8> > xor_ln171_3_fu_818_p2;
    sc_signal< sc_lv<8> > add_ln145_fu_583_p2;
    sc_signal< sc_lv<6> > lshr_ln_fu_589_p4;
    sc_signal< sc_lv<8> > add_ln145_3_fu_604_p2;
    sc_signal< sc_lv<6> > lshr_ln145_3_fu_610_p4;
    sc_signal< sc_lv<4> > trunc_ln139_fu_579_p1;
    sc_signal< sc_lv<8> > trunc_ln114_fu_637_p1;
    sc_signal< sc_lv<32> > rconIteration_fu_631_p2;
    sc_signal< sc_lv<8> > add_ln170_fu_654_p2;
    sc_signal< sc_lv<6> > lshr_ln1_fu_660_p4;
    sc_signal< sc_lv<8> > or_ln172_fu_675_p2;
    sc_signal< sc_lv<9> > add_ln170_1_fu_685_p2;
    sc_signal< sc_lv<7> > trunc_ln1_fu_691_p4;
    sc_signal< sc_lv<30> > sext_ln170_fu_701_p1;
    sc_signal< sc_lv<8> > or_ln172_1_fu_710_p2;
    sc_signal< sc_lv<9> > zext_ln172_1_fu_716_p1;
    sc_signal< sc_lv<9> > add_ln170_3_fu_720_p2;
    sc_signal< sc_lv<7> > trunc_ln170_2_fu_726_p4;
    sc_signal< sc_lv<30> > sext_ln170_2_fu_736_p1;
    sc_signal< sc_lv<8> > add_ln145_1_fu_745_p2;
    sc_signal< sc_lv<6> > lshr_ln145_1_fu_751_p4;
    sc_signal< sc_lv<8> > add_ln145_2_fu_771_p2;
    sc_signal< sc_lv<6> > lshr_ln145_2_fu_777_p4;
    sc_signal< sc_lv<6> > lshr_ln2_fu_803_p4;
    sc_signal< sc_lv<8> > t_3_2_fu_797_p3;
    sc_signal< sc_lv<8> > t_0_fu_829_p2;
    sc_signal< sc_lv<8> > t_0_2_fu_834_p3;
    sc_signal< sc_lv<8> > t_1_2_fu_856_p3;
    sc_signal< sc_lv<9> > add_ln170_2_fu_873_p2;
    sc_signal< sc_lv<7> > trunc_ln170_1_fu_878_p4;
    sc_signal< sc_lv<30> > sext_ln170_1_fu_888_p1;
    sc_signal< sc_lv<9> > add_ln172_fu_868_p2;
    sc_signal< sc_lv<8> > t_2_2_fu_907_p3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage3;
    static const sc_lv<7> ap_ST_fsm_state9;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<8> ap_const_lv8_B0;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<9> ap_const_lv9_1F0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_1F1;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_add_ln145_1_fu_745_p2();
    void thread_add_ln145_2_fu_771_p2();
    void thread_add_ln145_3_fu_604_p2();
    void thread_add_ln145_fu_583_p2();
    void thread_add_ln170_1_fu_685_p2();
    void thread_add_ln170_2_fu_873_p2();
    void thread_add_ln170_3_fu_720_p2();
    void thread_add_ln170_fu_654_p2();
    void thread_add_ln172_fu_868_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_currentSize_0_phi_fu_554_p4();
    void thread_ap_phi_mux_iteration_assign_phi_fu_566_p4();
    void thread_ap_ready();
    void thread_currentSize_fu_840_p2();
    void thread_expandedKey_0_address0();
    void thread_expandedKey_0_address1();
    void thread_expandedKey_0_ce0();
    void thread_expandedKey_0_ce1();
    void thread_expandedKey_0_d0();
    void thread_expandedKey_0_d1();
    void thread_expandedKey_0_we0();
    void thread_expandedKey_0_we1();
    void thread_expandedKey_1_address0();
    void thread_expandedKey_1_address1();
    void thread_expandedKey_1_ce0();
    void thread_expandedKey_1_ce1();
    void thread_expandedKey_1_d0();
    void thread_expandedKey_1_d1();
    void thread_expandedKey_1_we0();
    void thread_expandedKey_1_we1();
    void thread_expandedKey_2_address0();
    void thread_expandedKey_2_address1();
    void thread_expandedKey_2_ce0();
    void thread_expandedKey_2_ce1();
    void thread_expandedKey_2_d0();
    void thread_expandedKey_2_d1();
    void thread_expandedKey_2_we0();
    void thread_expandedKey_2_we1();
    void thread_expandedKey_3_address0();
    void thread_expandedKey_3_address1();
    void thread_expandedKey_3_ce0();
    void thread_expandedKey_3_ce1();
    void thread_expandedKey_3_d0();
    void thread_expandedKey_3_d1();
    void thread_expandedKey_3_we0();
    void thread_expandedKey_3_we1();
    void thread_icmp_ln139_fu_573_p2();
    void thread_icmp_ln151_fu_625_p2();
    void thread_lshr_ln145_1_fu_751_p4();
    void thread_lshr_ln145_2_fu_777_p4();
    void thread_lshr_ln145_3_fu_610_p4();
    void thread_lshr_ln1_fu_660_p4();
    void thread_lshr_ln2_fu_803_p4();
    void thread_lshr_ln_fu_589_p4();
    void thread_or_ln172_1_fu_710_p2();
    void thread_or_ln172_fu_675_p2();
    void thread_rconIteration_1_fu_646_p3();
    void thread_rconIteration_fu_631_p2();
    void thread_sbox_address0();
    void thread_sbox_ce0();
    void thread_sext_ln170_1_fu_888_p1();
    void thread_sext_ln170_2_fu_736_p1();
    void thread_sext_ln170_fu_701_p1();
    void thread_t_0_2_fu_834_p3();
    void thread_t_0_fu_829_p2();
    void thread_t_1_2_fu_856_p3();
    void thread_t_2_2_fu_907_p3();
    void thread_t_3_2_fu_797_p3();
    void thread_trunc_ln114_fu_637_p1();
    void thread_trunc_ln139_fu_579_p1();
    void thread_trunc_ln170_1_fu_878_p4();
    void thread_trunc_ln170_2_fu_726_p4();
    void thread_trunc_ln1_fu_691_p4();
    void thread_xor_ln171_1_fu_862_p2();
    void thread_xor_ln171_2_fu_913_p2();
    void thread_xor_ln171_3_fu_818_p2();
    void thread_xor_ln171_fu_846_p2();
    void thread_zext_ln145_1_fu_761_p1();
    void thread_zext_ln145_2_fu_787_p1();
    void thread_zext_ln145_3_fu_620_p1();
    void thread_zext_ln145_fu_599_p1();
    void thread_zext_ln170_1_fu_705_p1();
    void thread_zext_ln170_2_fu_892_p1();
    void thread_zext_ln170_3_fu_740_p1();
    void thread_zext_ln170_fu_670_p1();
    void thread_zext_ln171_1_fu_920_p1();
    void thread_zext_ln171_fu_813_p1();
    void thread_zext_ln172_1_fu_716_p1();
    void thread_zext_ln172_fu_681_p1();
    void thread_zext_ln46_1_fu_824_p1();
    void thread_zext_ln46_2_fu_852_p1();
    void thread_zext_ln46_3_fu_766_p1();
    void thread_zext_ln46_fu_792_p1();
    void thread_zext_ln97_fu_641_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
