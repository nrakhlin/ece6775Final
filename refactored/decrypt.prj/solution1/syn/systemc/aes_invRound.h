// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes_invRound_HH_
#define _aes_invRound_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "invMixColumn.h"
#include "aes_invRound_rsbox.h"

namespace ap_rtl {

struct aes_invRound : public sc_module {
    // Port declarations 32
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > state_address0;
    sc_out< sc_logic > state_ce0;
    sc_out< sc_logic > state_we0;
    sc_out< sc_lv<8> > state_d0;
    sc_in< sc_lv<8> > state_q0;
    sc_out< sc_lv<4> > state_address1;
    sc_out< sc_logic > state_ce1;
    sc_out< sc_logic > state_we1;
    sc_out< sc_lv<8> > state_d1;
    sc_in< sc_lv<8> > state_q1;
    sc_in< sc_lv<8> > p_read;
    sc_in< sc_lv<8> > p_read1;
    sc_in< sc_lv<8> > p_read2;
    sc_in< sc_lv<8> > p_read3;
    sc_in< sc_lv<8> > p_read4;
    sc_in< sc_lv<8> > p_read5;
    sc_in< sc_lv<8> > p_read6;
    sc_in< sc_lv<8> > p_read7;
    sc_in< sc_lv<8> > p_read8;
    sc_in< sc_lv<8> > p_read9;
    sc_in< sc_lv<8> > p_read10;
    sc_in< sc_lv<8> > p_read11;
    sc_in< sc_lv<8> > p_read12;
    sc_in< sc_lv<8> > p_read13;
    sc_in< sc_lv<8> > p_read14;
    sc_in< sc_lv<8> > p_read15;


    // Module declarations
    aes_invRound(sc_module_name name);
    SC_HAS_PROCESS(aes_invRound);

    ~aes_invRound();

    sc_trace_file* mVcdFile;

    aes_invRound_rsbox* rsbox_U;
    invMixColumn* grp_invMixColumn_fu_454;
    sc_signal< sc_lv<19> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > rsbox_address0;
    sc_signal< sc_logic > rsbox_ce0;
    sc_signal< sc_lv<8> > rsbox_q0;
    sc_signal< sc_lv<8> > reg_482;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<8> > reg_487;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > reg_492;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<8> > reg_496;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > reg_500;
    sc_signal< sc_lv<8> > reg_505;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > reg_509;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<8> > reg_514;
    sc_signal< sc_lv<4> > state_addr_9_reg_696;
    sc_signal< sc_lv<4> > state_addr_3_reg_707;
    sc_signal< sc_lv<4> > state_addr_4_reg_712;
    sc_signal< sc_lv<4> > state_addr_11_reg_722;
    sc_signal< sc_lv<4> > state_addr_15_reg_732;
    sc_signal< sc_lv<4> > state_addr_6_reg_743;
    sc_signal< sc_lv<4> > state_addr_8_reg_753;
    sc_signal< sc_lv<4> > state_addr_14_reg_758;
    sc_signal< sc_lv<8> > column_0_2_fu_539_p2;
    sc_signal< sc_lv<8> > column_0_2_reg_768;
    sc_signal< sc_lv<8> > column_1_2_fu_545_p2;
    sc_signal< sc_lv<8> > column_1_2_reg_773;
    sc_signal< sc_lv<8> > column_3_2_fu_551_p2;
    sc_signal< sc_lv<8> > column_3_2_reg_778;
    sc_signal< sc_lv<8> > state_load_14_reg_788;
    sc_signal< sc_lv<8> > column_0_3_reg_798;
    sc_signal< sc_lv<8> > state_load_6_reg_826;
    sc_signal< sc_lv<8> > tmp_10_reg_841;
    sc_signal< sc_lv<4> > state_addr_12_reg_846;
    sc_signal< sc_lv<8> > column_0_6_fu_584_p2;
    sc_signal< sc_lv<8> > column_0_6_reg_856;
    sc_signal< sc_lv<8> > column_1_6_fu_590_p2;
    sc_signal< sc_lv<8> > column_1_6_reg_861;
    sc_signal< sc_lv<8> > column_3_6_fu_596_p2;
    sc_signal< sc_lv<8> > column_3_6_reg_866;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<8> > column_0_4_fu_627_p2;
    sc_signal< sc_lv<8> > column_0_4_reg_891;
    sc_signal< sc_lv<8> > column_1_4_fu_633_p2;
    sc_signal< sc_lv<8> > column_1_4_reg_896;
    sc_signal< sc_lv<8> > column_3_4_fu_639_p2;
    sc_signal< sc_lv<8> > column_3_4_reg_901;
    sc_signal< sc_lv<8> > column_1_5_reg_911;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<8> > column_0_fu_671_p2;
    sc_signal< sc_lv<8> > column_0_reg_931;
    sc_signal< sc_lv<8> > column_1_fu_677_p2;
    sc_signal< sc_lv<8> > column_1_reg_936;
    sc_signal< sc_lv<8> > column_2_fu_683_p2;
    sc_signal< sc_lv<8> > column_2_reg_941;
    sc_signal< sc_lv<8> > ap_port_reg_p_read;
    sc_signal< sc_lv<8> > ap_port_reg_p_read1;
    sc_signal< sc_lv<8> > ap_port_reg_p_read2;
    sc_signal< sc_lv<8> > ap_port_reg_p_read3;
    sc_signal< sc_lv<8> > ap_port_reg_p_read4;
    sc_signal< sc_lv<8> > ap_port_reg_p_read5;
    sc_signal< sc_lv<8> > ap_port_reg_p_read6;
    sc_signal< sc_lv<8> > ap_port_reg_p_read7;
    sc_signal< sc_lv<8> > ap_port_reg_p_read8;
    sc_signal< sc_lv<8> > ap_port_reg_p_read9;
    sc_signal< sc_lv<8> > ap_port_reg_p_read10;
    sc_signal< sc_lv<8> > ap_port_reg_p_read11;
    sc_signal< sc_lv<8> > ap_port_reg_p_read12;
    sc_signal< sc_lv<8> > ap_port_reg_p_read13;
    sc_signal< sc_lv<8> > ap_port_reg_p_read14;
    sc_signal< sc_lv<8> > ap_port_reg_p_read15;
    sc_signal< sc_logic > grp_invMixColumn_fu_454_ap_ready;
    sc_signal< sc_lv<8> > grp_invMixColumn_fu_454_column_0_read;
    sc_signal< sc_lv<8> > grp_invMixColumn_fu_454_column_1_read;
    sc_signal< sc_lv<8> > grp_invMixColumn_fu_454_column_2_read;
    sc_signal< sc_lv<8> > grp_invMixColumn_fu_454_column_3_read;
    sc_signal< sc_lv<8> > grp_invMixColumn_fu_454_ap_return_0;
    sc_signal< sc_lv<8> > grp_invMixColumn_fu_454_ap_return_1;
    sc_signal< sc_lv<8> > grp_invMixColumn_fu_454_ap_return_2;
    sc_signal< sc_lv<8> > grp_invMixColumn_fu_454_ap_return_3;
    sc_signal< sc_lv<8> > column_2_2_fu_562_p2;
    sc_signal< sc_lv<8> > column_2_6_fu_607_p2;
    sc_signal< sc_lv<8> > column_2_4_fu_650_p2;
    sc_signal< sc_lv<8> > column_3_fu_689_p2;
    sc_signal< sc_lv<64> > zext_ln48_13_fu_519_p1;
    sc_signal< sc_lv<64> > zext_ln48_1_fu_524_p1;
    sc_signal< sc_lv<64> > zext_ln48_5_fu_529_p1;
    sc_signal< sc_lv<64> > zext_ln48_9_fu_534_p1;
    sc_signal< sc_lv<64> > zext_ln48_15_fu_557_p1;
    sc_signal< sc_lv<64> > zext_ln48_3_fu_569_p1;
    sc_signal< sc_lv<64> > zext_ln48_7_fu_574_p1;
    sc_signal< sc_lv<64> > zext_ln48_11_fu_579_p1;
    sc_signal< sc_lv<64> > zext_ln48_14_fu_602_p1;
    sc_signal< sc_lv<64> > zext_ln48_2_fu_614_p1;
    sc_signal< sc_lv<64> > zext_ln48_6_fu_618_p1;
    sc_signal< sc_lv<64> > zext_ln48_10_fu_623_p1;
    sc_signal< sc_lv<64> > zext_ln48_fu_645_p1;
    sc_signal< sc_lv<64> > zext_ln48_4_fu_657_p1;
    sc_signal< sc_lv<64> > zext_ln48_8_fu_662_p1;
    sc_signal< sc_lv<64> > zext_ln48_12_fu_667_p1;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<19> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<19> ap_ST_fsm_state1;
    static const sc_lv<19> ap_ST_fsm_state2;
    static const sc_lv<19> ap_ST_fsm_state3;
    static const sc_lv<19> ap_ST_fsm_state4;
    static const sc_lv<19> ap_ST_fsm_state5;
    static const sc_lv<19> ap_ST_fsm_state6;
    static const sc_lv<19> ap_ST_fsm_state7;
    static const sc_lv<19> ap_ST_fsm_state8;
    static const sc_lv<19> ap_ST_fsm_state9;
    static const sc_lv<19> ap_ST_fsm_state10;
    static const sc_lv<19> ap_ST_fsm_state11;
    static const sc_lv<19> ap_ST_fsm_state12;
    static const sc_lv<19> ap_ST_fsm_state13;
    static const sc_lv<19> ap_ST_fsm_state14;
    static const sc_lv<19> ap_ST_fsm_state15;
    static const sc_lv<19> ap_ST_fsm_state16;
    static const sc_lv<19> ap_ST_fsm_state17;
    static const sc_lv<19> ap_ST_fsm_state18;
    static const sc_lv<19> ap_ST_fsm_state19;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<64> ap_const_lv64_E;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_B;
    static const sc_lv<64> ap_const_lv64_C;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<64> ap_const_lv64_F;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<64> ap_const_lv64_D;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_column_0_2_fu_539_p2();
    void thread_column_0_4_fu_627_p2();
    void thread_column_0_6_fu_584_p2();
    void thread_column_0_fu_671_p2();
    void thread_column_1_2_fu_545_p2();
    void thread_column_1_4_fu_633_p2();
    void thread_column_1_6_fu_590_p2();
    void thread_column_1_fu_677_p2();
    void thread_column_2_2_fu_562_p2();
    void thread_column_2_4_fu_650_p2();
    void thread_column_2_6_fu_607_p2();
    void thread_column_2_fu_683_p2();
    void thread_column_3_2_fu_551_p2();
    void thread_column_3_4_fu_639_p2();
    void thread_column_3_6_fu_596_p2();
    void thread_column_3_fu_689_p2();
    void thread_grp_invMixColumn_fu_454_column_0_read();
    void thread_grp_invMixColumn_fu_454_column_1_read();
    void thread_grp_invMixColumn_fu_454_column_2_read();
    void thread_grp_invMixColumn_fu_454_column_3_read();
    void thread_rsbox_address0();
    void thread_rsbox_ce0();
    void thread_state_addr_11_reg_722();
    void thread_state_addr_12_reg_846();
    void thread_state_addr_14_reg_758();
    void thread_state_addr_15_reg_732();
    void thread_state_addr_3_reg_707();
    void thread_state_addr_4_reg_712();
    void thread_state_addr_6_reg_743();
    void thread_state_addr_8_reg_753();
    void thread_state_addr_9_reg_696();
    void thread_state_address0();
    void thread_state_address1();
    void thread_state_ce0();
    void thread_state_ce1();
    void thread_state_d0();
    void thread_state_d1();
    void thread_state_we0();
    void thread_state_we1();
    void thread_zext_ln48_10_fu_623_p1();
    void thread_zext_ln48_11_fu_579_p1();
    void thread_zext_ln48_12_fu_667_p1();
    void thread_zext_ln48_13_fu_519_p1();
    void thread_zext_ln48_14_fu_602_p1();
    void thread_zext_ln48_15_fu_557_p1();
    void thread_zext_ln48_1_fu_524_p1();
    void thread_zext_ln48_2_fu_614_p1();
    void thread_zext_ln48_3_fu_569_p1();
    void thread_zext_ln48_4_fu_657_p1();
    void thread_zext_ln48_5_fu_529_p1();
    void thread_zext_ln48_6_fu_618_p1();
    void thread_zext_ln48_7_fu_574_p1();
    void thread_zext_ln48_8_fu_662_p1();
    void thread_zext_ln48_9_fu_534_p1();
    void thread_zext_ln48_fu_645_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
