// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "aes_invMain.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic aes_invMain::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic aes_invMain::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> aes_invMain::ap_ST_fsm_state1 = "1";
const sc_lv<18> aes_invMain::ap_ST_fsm_state2 = "10";
const sc_lv<18> aes_invMain::ap_ST_fsm_state3 = "100";
const sc_lv<18> aes_invMain::ap_ST_fsm_state4 = "1000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state5 = "10000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state6 = "100000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> aes_invMain::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> aes_invMain::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> aes_invMain::ap_const_lv32_2 = "10";
const sc_lv<1> aes_invMain::ap_const_lv1_0 = "0";
const sc_lv<32> aes_invMain::ap_const_lv32_4 = "100";
const sc_lv<32> aes_invMain::ap_const_lv32_8 = "1000";
const sc_lv<32> aes_invMain::ap_const_lv32_9 = "1001";
const sc_lv<32> aes_invMain::ap_const_lv32_A = "1010";
const sc_lv<32> aes_invMain::ap_const_lv32_B = "1011";
const sc_lv<1> aes_invMain::ap_const_lv1_1 = "1";
const sc_lv<32> aes_invMain::ap_const_lv32_D = "1101";
const sc_lv<32> aes_invMain::ap_const_lv32_E = "1110";
const sc_lv<32> aes_invMain::ap_const_lv32_10 = "10000";
const sc_lv<5> aes_invMain::ap_const_lv5_0 = "00000";
const sc_lv<32> aes_invMain::ap_const_lv32_1 = "1";
const sc_lv<32> aes_invMain::ap_const_lv32_3 = "11";
const sc_lv<32> aes_invMain::ap_const_lv32_7 = "111";
const sc_lv<4> aes_invMain::ap_const_lv4_9 = "1001";
const sc_lv<3> aes_invMain::ap_const_lv3_0 = "000";
const sc_lv<3> aes_invMain::ap_const_lv3_7 = "111";
const sc_lv<32> aes_invMain::ap_const_lv32_C = "1100";
const sc_lv<32> aes_invMain::ap_const_lv32_F = "1111";
const sc_lv<32> aes_invMain::ap_const_lv32_11 = "10001";
const sc_lv<32> aes_invMain::ap_const_lv32_6 = "110";
const sc_lv<32> aes_invMain::ap_const_lv32_5 = "101";
const sc_lv<9> aes_invMain::ap_const_lv9_A0 = "10100000";
const sc_lv<9> aes_invMain::ap_const_lv9_0 = "000000000";
const sc_lv<64> aes_invMain::ap_const_lv64_F = "1111";
const sc_lv<64> aes_invMain::ap_const_lv64_C = "1100";
const sc_lv<5> aes_invMain::ap_const_lv5_10 = "10000";
const sc_lv<5> aes_invMain::ap_const_lv5_1 = "1";
const sc_lv<4> aes_invMain::ap_const_lv4_0 = "0000";
const sc_lv<4> aes_invMain::ap_const_lv4_F = "1111";
const sc_lv<3> aes_invMain::ap_const_lv3_4 = "100";
const sc_lv<3> aes_invMain::ap_const_lv3_1 = "1";
const sc_lv<8> aes_invMain::ap_const_lv8_0 = "00000000";
const bool aes_invMain::ap_const_boolean_1 = true;

aes_invMain::aes_invMain(sc_module_name name) : sc_module(name), mVcdFile(0) {
    rsbox_U = new aes_invRound_rsbox("rsbox_U");
    rsbox_U->clk(ap_clk);
    rsbox_U->reset(ap_rst);
    rsbox_U->address0(rsbox_address0);
    rsbox_U->ce0(rsbox_ce0);
    rsbox_U->q0(rsbox_q0);
    roundKey_U = new aes_invMain_rounddEe("roundKey_U");
    roundKey_U->clk(ap_clk);
    roundKey_U->reset(ap_rst);
    roundKey_U->address0(roundKey_address0);
    roundKey_U->ce0(roundKey_ce0);
    roundKey_U->we0(roundKey_we0);
    roundKey_U->d0(grp_createRoundKey_fu_228_roundKey_d0);
    roundKey_U->q0(roundKey_q0);
    grp_aes_invRound_fu_219 = new aes_invRound("grp_aes_invRound_fu_219");
    grp_aes_invRound_fu_219->ap_clk(ap_clk);
    grp_aes_invRound_fu_219->ap_rst(ap_rst);
    grp_aes_invRound_fu_219->ap_start(grp_aes_invRound_fu_219_ap_start);
    grp_aes_invRound_fu_219->ap_done(grp_aes_invRound_fu_219_ap_done);
    grp_aes_invRound_fu_219->ap_idle(grp_aes_invRound_fu_219_ap_idle);
    grp_aes_invRound_fu_219->ap_ready(grp_aes_invRound_fu_219_ap_ready);
    grp_aes_invRound_fu_219->state_address0(grp_aes_invRound_fu_219_state_address0);
    grp_aes_invRound_fu_219->state_ce0(grp_aes_invRound_fu_219_state_ce0);
    grp_aes_invRound_fu_219->state_we0(grp_aes_invRound_fu_219_state_we0);
    grp_aes_invRound_fu_219->state_d0(grp_aes_invRound_fu_219_state_d0);
    grp_aes_invRound_fu_219->state_q0(state_q0);
    grp_aes_invRound_fu_219->roundKey_address0(grp_aes_invRound_fu_219_roundKey_address0);
    grp_aes_invRound_fu_219->roundKey_ce0(grp_aes_invRound_fu_219_roundKey_ce0);
    grp_aes_invRound_fu_219->roundKey_q0(roundKey_q0);
    grp_createRoundKey_fu_228 = new createRoundKey("grp_createRoundKey_fu_228");
    grp_createRoundKey_fu_228->ap_clk(ap_clk);
    grp_createRoundKey_fu_228->ap_rst(ap_rst);
    grp_createRoundKey_fu_228->ap_start(grp_createRoundKey_fu_228_ap_start);
    grp_createRoundKey_fu_228->ap_done(grp_createRoundKey_fu_228_ap_done);
    grp_createRoundKey_fu_228->ap_idle(grp_createRoundKey_fu_228_ap_idle);
    grp_createRoundKey_fu_228->ap_ready(grp_createRoundKey_fu_228_ap_ready);
    grp_createRoundKey_fu_228->expandedKey_address0(grp_createRoundKey_fu_228_expandedKey_address0);
    grp_createRoundKey_fu_228->expandedKey_ce0(grp_createRoundKey_fu_228_expandedKey_ce0);
    grp_createRoundKey_fu_228->expandedKey_q0(expandedKey_q0);
    grp_createRoundKey_fu_228->roundKey_address0(grp_createRoundKey_fu_228_roundKey_address0);
    grp_createRoundKey_fu_228->roundKey_ce0(grp_createRoundKey_fu_228_roundKey_ce0);
    grp_createRoundKey_fu_228->roundKey_we0(grp_createRoundKey_fu_228_roundKey_we0);
    grp_createRoundKey_fu_228->roundKey_d0(grp_createRoundKey_fu_228_roundKey_d0);
    grp_createRoundKey_fu_228->ptr(grp_createRoundKey_fu_228_ptr);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln324_fu_283_p2);
    sensitive << ( i_reg_164 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln172_1_fu_352_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln172_1_fu_352_p2 );

    SC_METHOD(thread_expandedKey_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_createRoundKey_fu_228_expandedKey_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_expandedKey_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_createRoundKey_fu_228_expandedKey_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_aes_invRound_fu_219_ap_start);
    sensitive << ( grp_aes_invRound_fu_219_ap_start_reg );

    SC_METHOD(thread_grp_createRoundKey_fu_228_ap_start);
    sensitive << ( grp_createRoundKey_fu_228_ap_start_reg );

    SC_METHOD(thread_grp_createRoundKey_fu_228_ptr);
    sensitive << ( zext_ln326_reg_391 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_239_p2);
    sensitive << ( state_q0 );
    sensitive << ( roundKey_q0 );

    SC_METHOD(thread_i_7_fu_252_p2);
    sensitive << ( i_0_i_reg_153 );

    SC_METHOD(thread_i_8_fu_336_p2);
    sensitive << ( i_0_i4_reg_197 );

    SC_METHOD(thread_i_9_fu_358_p2);
    sensitive << ( i_0_i8_reg_208 );

    SC_METHOD(thread_icmp_ln172_1_fu_352_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( i_0_i8_reg_208 );

    SC_METHOD(thread_icmp_ln172_fu_246_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_i_reg_153 );

    SC_METHOD(thread_icmp_ln213_fu_330_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_0_i4_reg_197 );

    SC_METHOD(thread_icmp_ln229_fu_289_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( k_0_i_reg_175 );

    SC_METHOD(thread_icmp_ln232_fu_305_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( j_0_i_reg_186 );

    SC_METHOD(thread_icmp_ln324_fu_264_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_reg_164 );

    SC_METHOD(thread_j_fu_311_p2);
    sensitive << ( j_0_i_reg_186 );

    SC_METHOD(thread_k_fu_295_p2);
    sensitive << ( k_0_i_reg_175 );

    SC_METHOD(thread_roundKey_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( grp_aes_invRound_fu_219_roundKey_address0 );
    sensitive << ( grp_createRoundKey_fu_228_roundKey_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln173_fu_258_p1 );
    sensitive << ( zext_ln173_1_fu_364_p1 );

    SC_METHOD(thread_roundKey_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( grp_aes_invRound_fu_219_roundKey_ce0 );
    sensitive << ( grp_createRoundKey_fu_228_roundKey_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_roundKey_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_createRoundKey_fu_228_roundKey_we0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_rsbox_address0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( zext_ln69_fu_347_p1 );

    SC_METHOD(thread_rsbox_ce0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_sext_ln232_fu_301_p1);
    sensitive << ( j_0_i_reg_186 );

    SC_METHOD(thread_sext_ln233_fu_317_p1);
    sensitive << ( j_fu_311_p2 );

    SC_METHOD(thread_shl_ln_fu_270_p3);
    sensitive << ( i_reg_164 );

    SC_METHOD(thread_state_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( state_addr_reg_378 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln232_fu_305_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( state_addr_9_reg_450 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( state_addr_12_reg_468 );
    sensitive << ( grp_aes_invRound_fu_219_state_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( zext_ln173_fu_258_p1 );
    sensitive << ( zext_ln233_fu_321_p1 );
    sensitive << ( zext_ln233_2_fu_326_p1 );
    sensitive << ( zext_ln214_fu_342_p1 );
    sensitive << ( zext_ln173_1_fu_364_p1 );

    SC_METHOD(thread_state_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln232_fu_305_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( grp_aes_invRound_fu_219_state_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_d0);
    sensitive << ( state_q0 );
    sensitive << ( rsbox_q0 );
    sensitive << ( tmp_reg_419 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln232_fu_305_p2 );
    sensitive << ( grp_aes_invRound_fu_219_state_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( grp_fu_239_p2 );

    SC_METHOD(thread_state_we0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln232_fu_305_p2 );
    sensitive << ( grp_aes_invRound_fu_219_state_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_zext_ln173_1_fu_364_p1);
    sensitive << ( i_0_i8_reg_208 );

    SC_METHOD(thread_zext_ln173_fu_258_p1);
    sensitive << ( i_0_i_reg_153 );

    SC_METHOD(thread_zext_ln214_fu_342_p1);
    sensitive << ( i_0_i4_reg_197 );

    SC_METHOD(thread_zext_ln233_2_fu_326_p1);
    sensitive << ( sext_ln232_reg_424 );

    SC_METHOD(thread_zext_ln233_fu_321_p1);
    sensitive << ( sext_ln233_fu_317_p1 );

    SC_METHOD(thread_zext_ln326_fu_278_p1);
    sensitive << ( shl_ln_fu_270_p3 );

    SC_METHOD(thread_zext_ln69_fu_347_p1);
    sensitive << ( state_q0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln172_fu_246_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln324_fu_264_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_createRoundKey_fu_228_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln232_fu_305_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln213_fu_330_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln172_1_fu_352_p2 );
    sensitive << ( grp_aes_invRound_fu_219_ap_done );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln229_fu_289_p2 );
    sensitive << ( ap_CS_fsm_state6 );

    ap_CS_fsm = "000000000000000001";
    grp_aes_invRound_fu_219_ap_start_reg = SC_LOGIC_0;
    grp_createRoundKey_fu_228_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "aes_invMain_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, state_address0, "(port)state_address0");
    sc_trace(mVcdFile, state_ce0, "(port)state_ce0");
    sc_trace(mVcdFile, state_we0, "(port)state_we0");
    sc_trace(mVcdFile, state_d0, "(port)state_d0");
    sc_trace(mVcdFile, state_q0, "(port)state_q0");
    sc_trace(mVcdFile, expandedKey_address0, "(port)expandedKey_address0");
    sc_trace(mVcdFile, expandedKey_ce0, "(port)expandedKey_ce0");
    sc_trace(mVcdFile, expandedKey_q0, "(port)expandedKey_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, rsbox_address0, "rsbox_address0");
    sc_trace(mVcdFile, rsbox_ce0, "rsbox_ce0");
    sc_trace(mVcdFile, rsbox_q0, "rsbox_q0");
    sc_trace(mVcdFile, i_7_fu_252_p2, "i_7_fu_252_p2");
    sc_trace(mVcdFile, i_7_reg_373, "i_7_reg_373");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, state_addr_reg_378, "state_addr_reg_378");
    sc_trace(mVcdFile, icmp_ln172_fu_246_p2, "icmp_ln172_fu_246_p2");
    sc_trace(mVcdFile, zext_ln326_fu_278_p1, "zext_ln326_fu_278_p1");
    sc_trace(mVcdFile, zext_ln326_reg_391, "zext_ln326_reg_391");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln324_fu_264_p2, "icmp_ln324_fu_264_p2");
    sc_trace(mVcdFile, add_ln324_fu_283_p2, "add_ln324_fu_283_p2");
    sc_trace(mVcdFile, add_ln324_reg_396, "add_ln324_reg_396");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_ap_ready, "grp_createRoundKey_fu_228_ap_ready");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_ap_done, "grp_createRoundKey_fu_228_ap_done");
    sc_trace(mVcdFile, k_fu_295_p2, "k_fu_295_p2");
    sc_trace(mVcdFile, k_reg_414, "k_reg_414");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_reg_419, "tmp_reg_419");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, sext_ln232_fu_301_p1, "sext_ln232_fu_301_p1");
    sc_trace(mVcdFile, sext_ln232_reg_424, "sext_ln232_reg_424");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, j_fu_311_p2, "j_fu_311_p2");
    sc_trace(mVcdFile, j_reg_432, "j_reg_432");
    sc_trace(mVcdFile, icmp_ln232_fu_305_p2, "icmp_ln232_fu_305_p2");
    sc_trace(mVcdFile, i_8_fu_336_p2, "i_8_fu_336_p2");
    sc_trace(mVcdFile, i_8_reg_445, "i_8_reg_445");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, state_addr_9_reg_450, "state_addr_9_reg_450");
    sc_trace(mVcdFile, icmp_ln213_fu_330_p2, "icmp_ln213_fu_330_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, i_9_fu_358_p2, "i_9_fu_358_p2");
    sc_trace(mVcdFile, i_9_reg_463, "i_9_reg_463");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, state_addr_12_reg_468, "state_addr_12_reg_468");
    sc_trace(mVcdFile, icmp_ln172_1_fu_352_p2, "icmp_ln172_1_fu_352_p2");
    sc_trace(mVcdFile, roundKey_address0, "roundKey_address0");
    sc_trace(mVcdFile, roundKey_ce0, "roundKey_ce0");
    sc_trace(mVcdFile, roundKey_we0, "roundKey_we0");
    sc_trace(mVcdFile, roundKey_q0, "roundKey_q0");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_ap_start, "grp_aes_invRound_fu_219_ap_start");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_ap_done, "grp_aes_invRound_fu_219_ap_done");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_ap_idle, "grp_aes_invRound_fu_219_ap_idle");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_ap_ready, "grp_aes_invRound_fu_219_ap_ready");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_state_address0, "grp_aes_invRound_fu_219_state_address0");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_state_ce0, "grp_aes_invRound_fu_219_state_ce0");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_state_we0, "grp_aes_invRound_fu_219_state_we0");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_state_d0, "grp_aes_invRound_fu_219_state_d0");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_roundKey_address0, "grp_aes_invRound_fu_219_roundKey_address0");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_roundKey_ce0, "grp_aes_invRound_fu_219_roundKey_ce0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_ap_start, "grp_createRoundKey_fu_228_ap_start");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_ap_idle, "grp_createRoundKey_fu_228_ap_idle");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_expandedKey_address0, "grp_createRoundKey_fu_228_expandedKey_address0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_expandedKey_ce0, "grp_createRoundKey_fu_228_expandedKey_ce0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_roundKey_address0, "grp_createRoundKey_fu_228_roundKey_address0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_roundKey_ce0, "grp_createRoundKey_fu_228_roundKey_ce0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_roundKey_we0, "grp_createRoundKey_fu_228_roundKey_we0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_roundKey_d0, "grp_createRoundKey_fu_228_roundKey_d0");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_ptr, "grp_createRoundKey_fu_228_ptr");
    sc_trace(mVcdFile, i_0_i_reg_153, "i_0_i_reg_153");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_reg_164, "i_reg_164");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, k_0_i_reg_175, "k_0_i_reg_175");
    sc_trace(mVcdFile, j_0_i_reg_186, "j_0_i_reg_186");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, i_0_i4_reg_197, "i_0_i4_reg_197");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, icmp_ln229_fu_289_p2, "icmp_ln229_fu_289_p2");
    sc_trace(mVcdFile, i_0_i8_reg_208, "i_0_i8_reg_208");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_aes_invRound_fu_219_ap_start_reg, "grp_aes_invRound_fu_219_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_createRoundKey_fu_228_ap_start_reg, "grp_createRoundKey_fu_228_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln173_fu_258_p1, "zext_ln173_fu_258_p1");
    sc_trace(mVcdFile, zext_ln233_fu_321_p1, "zext_ln233_fu_321_p1");
    sc_trace(mVcdFile, zext_ln233_2_fu_326_p1, "zext_ln233_2_fu_326_p1");
    sc_trace(mVcdFile, zext_ln214_fu_342_p1, "zext_ln214_fu_342_p1");
    sc_trace(mVcdFile, zext_ln69_fu_347_p1, "zext_ln69_fu_347_p1");
    sc_trace(mVcdFile, zext_ln173_1_fu_364_p1, "zext_ln173_1_fu_364_p1");
    sc_trace(mVcdFile, grp_fu_239_p2, "grp_fu_239_p2");
    sc_trace(mVcdFile, shl_ln_fu_270_p3, "shl_ln_fu_270_p3");
    sc_trace(mVcdFile, sext_ln233_fu_317_p1, "sext_ln233_fu_317_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

aes_invMain::~aes_invMain() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete rsbox_U;
    delete roundKey_U;
    delete grp_aes_invRound_fu_219;
    delete grp_createRoundKey_fu_228;
}

void aes_invMain::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_aes_invRound_fu_219_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_aes_invRound_fu_219_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aes_invRound_fu_219_ap_ready.read())) {
            grp_aes_invRound_fu_219_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_createRoundKey_fu_228_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln324_fu_264_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
              esl_seteq<1,1,1>(icmp_ln324_fu_264_p2.read(), ap_const_lv1_1)))) {
            grp_createRoundKey_fu_228_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_createRoundKey_fu_228_ap_ready.read())) {
            grp_createRoundKey_fu_228_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln229_fu_289_p2.read()))) {
        i_0_i4_reg_197 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_0_i4_reg_197 = i_8_reg_445.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln213_fu_330_p2.read()))) {
        i_0_i8_reg_208 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_0_i8_reg_208 = i_9_reg_463.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_0_i_reg_153 = i_7_reg_373.read();
    } else if ((esl_seteq<1,1,1>(grp_createRoundKey_fu_228_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_0_i_reg_153 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln172_fu_246_p2.read(), ap_const_lv1_1))) {
        i_reg_164 = ap_const_lv4_9;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_aes_invRound_fu_219_ap_done.read(), ap_const_logic_1))) {
        i_reg_164 = add_ln324_reg_396.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j_0_i_reg_186 = j_reg_432.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_0_i_reg_186 = ap_const_lv3_7;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(grp_createRoundKey_fu_228_ap_done.read(), ap_const_logic_1))) {
        k_0_i_reg_175 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln232_fu_305_p2.read()))) {
        k_0_i_reg_175 = k_reg_414.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln324_fu_264_p2.read()))) {
        add_ln324_reg_396 = add_ln324_fu_283_p2.read();
        zext_ln326_reg_391 = zext_ln326_fu_278_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_7_reg_373 = i_7_fu_252_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_8_reg_445 = i_8_fu_336_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i_9_reg_463 = i_9_fu_358_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(icmp_ln232_fu_305_p2.read(), ap_const_lv1_1))) {
        j_reg_432 = j_fu_311_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        k_reg_414 = k_fu_295_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        sext_ln232_reg_424 = sext_ln232_fu_301_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln172_1_fu_352_p2.read()))) {
        state_addr_12_reg_468 =  (sc_lv<4>) (zext_ln173_1_fu_364_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln213_fu_330_p2.read()))) {
        state_addr_9_reg_450 =  (sc_lv<4>) (zext_ln214_fu_342_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln172_fu_246_p2.read(), ap_const_lv1_0))) {
        state_addr_reg_378 =  (sc_lv<4>) (zext_ln173_fu_258_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_reg_419 = state_q0.read();
    }
}

void aes_invMain::thread_add_ln324_fu_283_p2() {
    add_ln324_fu_283_p2 = (!i_reg_164.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_164.read()) + sc_bigint<4>(ap_const_lv4_F));
}

void aes_invMain::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void aes_invMain::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void aes_invMain::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void aes_invMain::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void aes_invMain::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void aes_invMain::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void aes_invMain::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void aes_invMain::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void aes_invMain::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void aes_invMain::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void aes_invMain::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void aes_invMain::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void aes_invMain::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void aes_invMain::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void aes_invMain::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void aes_invMain::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void aes_invMain::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void aes_invMain::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void aes_invMain::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln172_1_fu_352_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void aes_invMain::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void aes_invMain::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln172_1_fu_352_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void aes_invMain::thread_expandedKey_address0() {
    expandedKey_address0 = grp_createRoundKey_fu_228_expandedKey_address0.read();
}

void aes_invMain::thread_expandedKey_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        expandedKey_ce0 = grp_createRoundKey_fu_228_expandedKey_ce0.read();
    } else {
        expandedKey_ce0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_grp_aes_invRound_fu_219_ap_start() {
    grp_aes_invRound_fu_219_ap_start = grp_aes_invRound_fu_219_ap_start_reg.read();
}

void aes_invMain::thread_grp_createRoundKey_fu_228_ap_start() {
    grp_createRoundKey_fu_228_ap_start = grp_createRoundKey_fu_228_ap_start_reg.read();
}

void aes_invMain::thread_grp_createRoundKey_fu_228_ptr() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_createRoundKey_fu_228_ptr = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_createRoundKey_fu_228_ptr = zext_ln326_reg_391.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_createRoundKey_fu_228_ptr = ap_const_lv9_A0;
    } else {
        grp_createRoundKey_fu_228_ptr = "XXXXXXXXX";
    }
}

void aes_invMain::thread_grp_fu_239_p2() {
    grp_fu_239_p2 = (roundKey_q0.read() ^ state_q0.read());
}

void aes_invMain::thread_i_7_fu_252_p2() {
    i_7_fu_252_p2 = (!i_0_i_reg_153.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i_reg_153.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aes_invMain::thread_i_8_fu_336_p2() {
    i_8_fu_336_p2 = (!i_0_i4_reg_197.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i4_reg_197.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aes_invMain::thread_i_9_fu_358_p2() {
    i_9_fu_358_p2 = (!i_0_i8_reg_208.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i8_reg_208.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aes_invMain::thread_icmp_ln172_1_fu_352_p2() {
    icmp_ln172_1_fu_352_p2 = (!i_0_i8_reg_208.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i8_reg_208.read() == ap_const_lv5_10);
}

void aes_invMain::thread_icmp_ln172_fu_246_p2() {
    icmp_ln172_fu_246_p2 = (!i_0_i_reg_153.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_153.read() == ap_const_lv5_10);
}

void aes_invMain::thread_icmp_ln213_fu_330_p2() {
    icmp_ln213_fu_330_p2 = (!i_0_i4_reg_197.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i4_reg_197.read() == ap_const_lv5_10);
}

void aes_invMain::thread_icmp_ln229_fu_289_p2() {
    icmp_ln229_fu_289_p2 = (!k_0_i_reg_175.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(k_0_i_reg_175.read() == ap_const_lv3_4);
}

void aes_invMain::thread_icmp_ln232_fu_305_p2() {
    icmp_ln232_fu_305_p2 = (!j_0_i_reg_186.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): (sc_biguint<3>(j_0_i_reg_186.read()) > sc_biguint<3>(ap_const_lv3_4));
}

void aes_invMain::thread_icmp_ln324_fu_264_p2() {
    icmp_ln324_fu_264_p2 = (!i_reg_164.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_164.read() == ap_const_lv4_0);
}

void aes_invMain::thread_j_fu_311_p2() {
    j_fu_311_p2 = (!j_0_i_reg_186.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_bigint<3>(j_0_i_reg_186.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void aes_invMain::thread_k_fu_295_p2() {
    k_fu_295_p2 = (!k_0_i_reg_175.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_i_reg_175.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aes_invMain::thread_roundKey_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        roundKey_address0 =  (sc_lv<4>) (zext_ln173_1_fu_364_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        roundKey_address0 =  (sc_lv<4>) (zext_ln173_fu_258_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        roundKey_address0 = grp_createRoundKey_fu_228_roundKey_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        roundKey_address0 = grp_aes_invRound_fu_219_roundKey_address0.read();
    } else {
        roundKey_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void aes_invMain::thread_roundKey_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        roundKey_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        roundKey_ce0 = grp_createRoundKey_fu_228_roundKey_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        roundKey_ce0 = grp_aes_invRound_fu_219_roundKey_ce0.read();
    } else {
        roundKey_ce0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_roundKey_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        roundKey_we0 = grp_createRoundKey_fu_228_roundKey_we0.read();
    } else {
        roundKey_we0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_rsbox_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        rsbox_address0 =  (sc_lv<8>) (zext_ln69_fu_347_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        rsbox_address0 = ap_const_lv8_0;
    } else {
        rsbox_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aes_invMain::thread_rsbox_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        rsbox_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        rsbox_ce0 = ap_const_logic_0;
    } else {
        rsbox_ce0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_sext_ln232_fu_301_p1() {
    sext_ln232_fu_301_p1 = esl_sext<4,3>(j_0_i_reg_186.read());
}

void aes_invMain::thread_sext_ln233_fu_317_p1() {
    sext_ln233_fu_317_p1 = esl_sext<4,3>(j_fu_311_p2.read());
}

void aes_invMain::thread_shl_ln_fu_270_p3() {
    shl_ln_fu_270_p3 = esl_concat<4,4>(i_reg_164.read(), ap_const_lv4_0);
}

void aes_invMain::thread_state_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        state_address0 = state_addr_12_reg_468.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        state_address0 =  (sc_lv<4>) (zext_ln173_1_fu_364_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        state_address0 = state_addr_9_reg_450.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        state_address0 =  (sc_lv<4>) (zext_ln214_fu_342_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        state_address0 =  (sc_lv<4>) (zext_ln233_2_fu_326_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln232_fu_305_p2.read()))) {
        state_address0 =  (sc_lv<4>) (ap_const_lv64_C);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(icmp_ln232_fu_305_p2.read(), ap_const_lv1_1))) {
        state_address0 =  (sc_lv<4>) (zext_ln233_fu_321_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_address0 =  (sc_lv<4>) (ap_const_lv64_F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        state_address0 = state_addr_reg_378.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_address0 =  (sc_lv<4>) (zext_ln173_fu_258_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_address0 = grp_aes_invRound_fu_219_state_address0.read();
    } else {
        state_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void aes_invMain::thread_state_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(icmp_ln232_fu_305_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln232_fu_305_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        state_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_ce0 = grp_aes_invRound_fu_219_state_ce0.read();
    } else {
        state_ce0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_state_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        state_d0 = rsbox_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        state_d0 = state_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln232_fu_305_p2.read()))) {
        state_d0 = tmp_reg_419.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        state_d0 = grp_fu_239_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_d0 = grp_aes_invRound_fu_219_state_d0.read();
    } else {
        state_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aes_invMain::thread_state_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln232_fu_305_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        state_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_we0 = grp_aes_invRound_fu_219_state_we0.read();
    } else {
        state_we0 = ap_const_logic_0;
    }
}

void aes_invMain::thread_zext_ln173_1_fu_364_p1() {
    zext_ln173_1_fu_364_p1 = esl_zext<64,5>(i_0_i8_reg_208.read());
}

void aes_invMain::thread_zext_ln173_fu_258_p1() {
    zext_ln173_fu_258_p1 = esl_zext<64,5>(i_0_i_reg_153.read());
}

void aes_invMain::thread_zext_ln214_fu_342_p1() {
    zext_ln214_fu_342_p1 = esl_zext<64,5>(i_0_i4_reg_197.read());
}

void aes_invMain::thread_zext_ln233_2_fu_326_p1() {
    zext_ln233_2_fu_326_p1 = esl_zext<64,4>(sext_ln232_reg_424.read());
}

void aes_invMain::thread_zext_ln233_fu_321_p1() {
    zext_ln233_fu_321_p1 = esl_zext<64,4>(sext_ln233_fu_317_p1.read());
}

void aes_invMain::thread_zext_ln326_fu_278_p1() {
    zext_ln326_fu_278_p1 = esl_zext<9,8>(shl_ln_fu_270_p3.read());
}

void aes_invMain::thread_zext_ln69_fu_347_p1() {
    zext_ln69_fu_347_p1 = esl_zext<64,8>(state_q0.read());
}

void aes_invMain::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(grp_createRoundKey_fu_228_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln172_fu_246_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln324_fu_264_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(grp_createRoundKey_fu_228_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_aes_invRound_fu_219_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(grp_createRoundKey_fu_228_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln229_fu_289_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln232_fu_305_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln213_fu_330_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln172_1_fu_352_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

