

================================================================
== Vivado HLS Report for 'core'
================================================================
* Date:           Thu Nov 14 13:05:35 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        just_decrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 5.212 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       17|       17| 0.170 us | 0.170 us |   17|   17|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        6|        6|         2|          -|          -|     3|    no    |
        |- Loop 2  |        8|        8|         2|          -|          -|     4|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+-----+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  | URAM|
+-----------------+---------+-------+--------+-------+-----+
|DSP              |        -|      -|       -|      -|    -|
|Expression       |        -|      -|       0|     55|    -|
|FIFO             |        -|      -|       -|      -|    -|
|Instance         |        -|      -|       0|    105|    -|
|Memory           |        2|      -|       0|      0|    -|
|Multiplexer      |        -|      -|       -|    206|    -|
|Register         |        -|      -|     148|      -|    -|
+-----------------+---------+-------+--------+-------+-----+
|Total            |        2|      0|     148|    366|    0|
+-----------------+---------+-------+--------+-------+-----+
|Available        |      280|    220|  106400|  53200|    0|
+-----------------+---------+-------+--------+-------+-----+
|Utilization (%)  |    ~0   |      0|   ~0   |   ~0  |    0|
+-----------------+---------+-------+--------+-------+-----+

+ Detail: 
    * Instance: 
    +-------------------------+----------------------+---------+-------+---+----+-----+
    |         Instance        |        Module        | BRAM_18K| DSP48E| FF| LUT| URAM|
    +-------------------------+----------------------+---------+-------+---+----+-----+
    |decrypt_dut_mux_4bkb_U1  |decrypt_dut_mux_4bkb  |        0|      0|  0|  21|    0|
    |decrypt_dut_mux_4cud_U2  |decrypt_dut_mux_4cud  |        0|      0|  0|  21|    0|
    |decrypt_dut_mux_4cud_U3  |decrypt_dut_mux_4cud  |        0|      0|  0|  21|    0|
    |decrypt_dut_mux_4cud_U4  |decrypt_dut_mux_4cud  |        0|      0|  0|  21|    0|
    |decrypt_dut_mux_4cud_U5  |decrypt_dut_mux_4cud  |        0|      0|  0|  21|    0|
    +-------------------------+----------------------+---------+-------+---+----+-----+
    |Total                    |                      |        0|      0|  0| 105|    0|
    +-------------------------+----------------------+---------+-------+---+----+-----+

    * DSP48E: 
    N/A

    * Memory: 
    +--------+-----------+---------+---+----+-----+------+-----+------+-------------+
    | Memory |   Module  | BRAM_18K| FF| LUT| URAM| Words| Bits| Banks| W*Bits*Banks|
    +--------+-----------+---------+---+----+-----+------+-----+------+-------------+
    |Rcon_U  |core_Rcon  |        1|  0|   0|    0|   255|    8|     1|         2040|
    |sbox_U  |core_sbox  |        1|  0|   0|    0|   256|    8|     1|         2048|
    +--------+-----------+---------+---+----+-----+------+-----+------+-------------+
    |Total   |           |        2|  0|   0|    0|   511|   16|     2|         4088|
    +--------+-----------+---------+---+----+-----+------+-----+------+-------------+

    * FIFO: 
    N/A

    * Expression: 
    +-----------------------+----------+-------+---+----+------------+------------+
    |     Variable Name     | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-----------------------+----------+-------+---+----+------------+------------+
    |i_5_fu_227_p2          |     +    |      0|  0|  10|           2|           1|
    |i_fu_340_p2            |     +    |      0|  0|  12|           3|           1|
    |icmp_ln103_fu_334_p2   |   icmp   |      0|  0|   9|           3|           4|
    |icmp_ln85_fu_221_p2    |   icmp   |      0|  0|   8|           2|           2|
    |select_ln88_fu_247_p3  |  select  |      0|  0|   8|           1|           8|
    |xor_ln109_fu_441_p2    |    xor   |      0|  0|   8|           8|           8|
    +-----------------------+----------+-------+---+----+------------+------------+
    |Total                  |          |      0|  0|  55|          19|          24|
    +-----------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +------------------------+----+-----------+-----+-----------+
    |          Name          | LUT| Input Size| Bits| Total Bits|
    +------------------------+----+-----------+-----+-----------+
    |ap_NS_fsm               |  38|          7|    1|          7|
    |ap_return_0             |   9|          2|    8|         16|
    |ap_return_1             |   9|          2|    8|         16|
    |ap_return_2             |   9|          2|    8|         16|
    |ap_return_3             |   9|          2|    8|         16|
    |empty_14_fu_58          |   9|          2|    8|         16|
    |empty_15_fu_62          |   9|          2|    8|         16|
    |empty_16_fu_66          |   9|          2|    8|         16|
    |empty_17_fu_70          |   9|          2|    8|         16|
    |i_0_i_reg_185           |   9|          2|    2|          4|
    |i_0_reg_210             |   9|          2|    3|          6|
    |phi_ln86_reg_197        |  15|          3|    8|         24|
    |word12_0_i_reg_175      |   9|          2|    8|         16|
    |word2_0_i_reg_165       |   9|          2|    8|         16|
    |word_1_0_fu_74          |   9|          2|    8|         16|
    |word_2_0_fu_78          |   9|          2|    8|         16|
    |word_3_0_fu_82          |   9|          2|    8|         16|
    |word_load_fu_54         |   9|          2|    8|         16|
    |write_flag_0_i_reg_142  |   9|          2|    1|          2|
    +------------------------+----+-----------+-----+-----------+
    |Total                   | 206|         44|  127|        267|
    +------------------------+----+-----------+-----+-----------+

    * Register: 
    +---------------------------+---+----+-----+-----------+
    |            Name           | FF| LUT| Bits| Const Bits|
    +---------------------------+---+----+-----+-----------+
    |ap_CS_fsm                  |  6|   0|    6|          0|
    |ap_return_0_preg           |  8|   0|    8|          0|
    |ap_return_1_preg           |  8|   0|    8|          0|
    |ap_return_2_preg           |  8|   0|    8|          0|
    |ap_return_3_preg           |  8|   0|    8|          0|
    |empty_14_fu_58             |  8|   0|    8|          0|
    |empty_15_fu_62             |  8|   0|    8|          0|
    |empty_16_fu_66             |  8|   0|    8|          0|
    |empty_17_fu_70             |  8|   0|    8|          0|
    |i_0_i_reg_185              |  2|   0|    2|          0|
    |i_0_reg_210                |  3|   0|    3|          0|
    |i_5_reg_501                |  2|   0|    2|          0|
    |i_reg_585                  |  3|   0|    3|          0|
    |phi_ln86_reg_197           |  8|   0|    8|          0|
    |trunc_ln105_reg_590        |  2|   0|    2|          0|
    |word12_0_i_reg_175         |  8|   0|    8|          0|
    |word2_0_i_reg_165          |  8|   0|    8|          0|
    |word_03_i_reg_153          |  8|   0|    8|          0|
    |word_1_0_fu_74             |  8|   0|    8|          0|
    |word_2_0_fu_78             |  8|   0|    8|          0|
    |word_3_0_fu_82             |  8|   0|    8|          0|
    |word_load_fu_54            |  8|   0|    8|          0|
    |write_flag_0_be_i_reg_506  |  1|   0|    1|          0|
    |write_flag_0_i_reg_142     |  1|   0|    1|          0|
    +---------------------------+---+----+-----+-----------+
    |Total                      |148|   0|  148|          0|
    +---------------------------+---+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-------------+-----+-----+------------+--------------+--------------+
|  RTL Ports  | Dir | Bits|  Protocol  | Source Object|    C Type    |
+-------------+-----+-----+------------+--------------+--------------+
|ap_clk       |  in |    1| ap_ctrl_hs |     core     | return value |
|ap_rst       |  in |    1| ap_ctrl_hs |     core     | return value |
|ap_start     |  in |    1| ap_ctrl_hs |     core     | return value |
|ap_done      | out |    1| ap_ctrl_hs |     core     | return value |
|ap_idle      | out |    1| ap_ctrl_hs |     core     | return value |
|ap_ready     | out |    1| ap_ctrl_hs |     core     | return value |
|ap_return_0  | out |    8| ap_ctrl_hs |     core     | return value |
|ap_return_1  | out |    8| ap_ctrl_hs |     core     | return value |
|ap_return_2  | out |    8| ap_ctrl_hs |     core     | return value |
|ap_return_3  | out |    8| ap_ctrl_hs |     core     | return value |
|word_0_read  |  in |    8|   ap_none  |  word_0_read |    scalar    |
|word_1_read  |  in |    8|   ap_none  |  word_1_read |    scalar    |
|word_2_read  |  in |    8|   ap_none  |  word_2_read |    scalar    |
|word_3_read  |  in |    8|   ap_none  |  word_3_read |    scalar    |
|iteration    |  in |   32|   ap_none  |   iteration  |    scalar    |
+-------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 
3 --> 2 
4 --> 5 6 
5 --> 4 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%iteration_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %iteration)" [just_decrypt.cpp:95]   --->   Operation 7 'read' 'iteration_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%word_3_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %word_3_read)" [just_decrypt.cpp:95]   --->   Operation 8 'read' 'word_3_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%word_2_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %word_2_read)" [just_decrypt.cpp:95]   --->   Operation 9 'read' 'word_2_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%word_1_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %word_1_read)" [just_decrypt.cpp:95]   --->   Operation 10 'read' 'word_1_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%word_0_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %word_0_read)" [just_decrypt.cpp:95]   --->   Operation 11 'read' 'word_0_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.76ns)   --->   "br label %branch0.i" [just_decrypt.cpp:85->just_decrypt.cpp:100]   --->   Operation 12 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.01>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%write_flag_0_i = phi i1 [ false, %0 ], [ %write_flag_0_be_i, %branch5.i ]" [just_decrypt.cpp:86->just_decrypt.cpp:100]   --->   Operation 13 'phi' 'write_flag_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%word_03_i = phi i8 [ undef, %0 ], [ %word_03_be_i, %branch5.i ]" [just_decrypt.cpp:86->just_decrypt.cpp:100]   --->   Operation 14 'phi' 'word_03_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%word2_0_i = phi i8 [ %word_2_read_1, %0 ], [ %word2_0_be_i, %branch5.i ]" [just_decrypt.cpp:95]   --->   Operation 15 'phi' 'word2_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%word12_0_i = phi i8 [ %word_1_read_1, %0 ], [ %word12_0_be_i, %branch5.i ]" [just_decrypt.cpp:95]   --->   Operation 16 'phi' 'word12_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%i_0_i = phi i2 [ 0, %0 ], [ %i_5, %branch5.i ]"   --->   Operation 17 'phi' 'i_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.95ns)   --->   "%icmp_ln85 = icmp eq i2 %i_0_i, -1" [just_decrypt.cpp:85->just_decrypt.cpp:100]   --->   Operation 18 'icmp' 'icmp_ln85' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 19 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.56ns)   --->   "%i_5 = add i2 %i_0_i, 1" [just_decrypt.cpp:86->just_decrypt.cpp:100]   --->   Operation 20 'add' 'i_5' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %icmp_ln85, label %rotate.exit, label %1" [just_decrypt.cpp:85->just_decrypt.cpp:100]   --->   Operation 21 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.81ns)   --->   "switch i2 %i_0_i, label %branch7.i [
    i2 0, label %branch5.i
    i2 1, label %branch6.i
  ]" [just_decrypt.cpp:86->just_decrypt.cpp:100]   --->   Operation 22 'switch' <Predicate = (!icmp_ln85)> <Delay = 1.81>
ST_2 : Operation 23 [1/1] (1.81ns)   --->   "br label %branch5.i" [just_decrypt.cpp:86->just_decrypt.cpp:100]   --->   Operation 23 'br' <Predicate = (!icmp_ln85 & i_0_i == 1)> <Delay = 1.81>
ST_2 : Operation 24 [1/1] (1.81ns)   --->   "br label %branch5.i" [just_decrypt.cpp:86->just_decrypt.cpp:100]   --->   Operation 24 'br' <Predicate = (!icmp_ln85 & i_0_i != 0 & i_0_i != 1)> <Delay = 1.81>
ST_2 : Operation 25 [1/1] (1.95ns)   --->   "%write_flag_0_be_i = call i1 @_ssdm_op_Mux.ap_auto.4i1.i2(i1 true, i1 %write_flag_0_i, i1 %write_flag_0_i, i1 %write_flag_0_i, i2 %i_0_i)" [just_decrypt.cpp:86->just_decrypt.cpp:100]   --->   Operation 25 'mux' 'write_flag_0_be_i' <Predicate = (!icmp_ln85)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%word_load = alloca i8"   --->   Operation 26 'alloca' 'word_load' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%empty_14 = alloca i8"   --->   Operation 27 'alloca' 'empty_14' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%empty_15 = alloca i8"   --->   Operation 28 'alloca' 'empty_15' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%empty_16 = alloca i8"   --->   Operation 29 'alloca' 'empty_16' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%empty_17 = alloca i8"   --->   Operation 30 'alloca' 'empty_17' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%word_1_0 = alloca i8"   --->   Operation 31 'alloca' 'word_1_0' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%word_2_0 = alloca i8"   --->   Operation 32 'alloca' 'word_2_0' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%word_3_0 = alloca i8"   --->   Operation 33 'alloca' 'word_3_0' <Predicate = (icmp_ln85)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (1.24ns)   --->   "%select_ln88 = select i1 %write_flag_0_i, i8 %word_03_i, i8 %word_0_read_1" [just_decrypt.cpp:88->just_decrypt.cpp:100]   --->   Operation 34 'select' 'select_ln88' <Predicate = (icmp_ln85)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.76ns)   --->   "store i8 %word_0_read_1, i8* %word_3_0" [just_decrypt.cpp:103]   --->   Operation 35 'store' <Predicate = (icmp_ln85)> <Delay = 1.76>
ST_2 : Operation 36 [1/1] (1.76ns)   --->   "store i8 %word2_0_i, i8* %word_2_0" [just_decrypt.cpp:103]   --->   Operation 36 'store' <Predicate = (icmp_ln85)> <Delay = 1.76>
ST_2 : Operation 37 [1/1] (1.76ns)   --->   "store i8 %word12_0_i, i8* %word_1_0" [just_decrypt.cpp:103]   --->   Operation 37 'store' <Predicate = (icmp_ln85)> <Delay = 1.76>
ST_2 : Operation 38 [1/1] (1.76ns)   --->   "store i8 %word_0_read_1, i8* %empty_17" [just_decrypt.cpp:103]   --->   Operation 38 'store' <Predicate = (icmp_ln85)> <Delay = 1.76>
ST_2 : Operation 39 [1/1] (1.76ns)   --->   "store i8 %word2_0_i, i8* %empty_16" [just_decrypt.cpp:103]   --->   Operation 39 'store' <Predicate = (icmp_ln85)> <Delay = 1.76>
ST_2 : Operation 40 [1/1] (1.76ns)   --->   "store i8 %word12_0_i, i8* %empty_15" [just_decrypt.cpp:103]   --->   Operation 40 'store' <Predicate = (icmp_ln85)> <Delay = 1.76>
ST_2 : Operation 41 [1/1] (1.76ns)   --->   "store i8 %select_ln88, i8* %empty_14" [just_decrypt.cpp:103]   --->   Operation 41 'store' <Predicate = (icmp_ln85)> <Delay = 1.76>
ST_2 : Operation 42 [1/1] (1.76ns)   --->   "store i8 %select_ln88, i8* %word_load" [just_decrypt.cpp:103]   --->   Operation 42 'store' <Predicate = (icmp_ln85)> <Delay = 1.76>
ST_2 : Operation 43 [1/1] (1.76ns)   --->   "br label %branch0" [just_decrypt.cpp:103]   --->   Operation 43 'br' <Predicate = (icmp_ln85)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 1.95>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%phi_ln86 = phi i8 [ %word2_0_i, %branch6.i ], [ %word_3_read_1, %branch7.i ], [ %word12_0_i, %1 ]" [just_decrypt.cpp:86->just_decrypt.cpp:100]   --->   Operation 44 'phi' 'phi_ln86' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (1.95ns)   --->   "%word12_0_be_i = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %word12_0_i, i8 %phi_ln86, i8 %word12_0_i, i8 %word12_0_i, i2 %i_0_i)" [just_decrypt.cpp:95]   --->   Operation 45 'mux' 'word12_0_be_i' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (1.95ns)   --->   "%word2_0_be_i = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %word2_0_i, i8 %word2_0_i, i8 %phi_ln86, i8 %phi_ln86, i2 %i_0_i)" [just_decrypt.cpp:95]   --->   Operation 46 'mux' 'word2_0_be_i' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (1.95ns)   --->   "%word_03_be_i = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %phi_ln86, i8 %word_03_i, i8 %word_03_i, i8 %word_03_i, i2 %i_0_i)" [just_decrypt.cpp:86->just_decrypt.cpp:100]   --->   Operation 47 'mux' 'word_03_be_i' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "br label %branch0.i"   --->   Operation 48 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 5.21>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %rotate.exit ], [ %i, %branch0.backedge ]"   --->   Operation 49 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (1.13ns)   --->   "%icmp_ln103 = icmp eq i3 %i_0, -4" [just_decrypt.cpp:103]   --->   Operation 50 'icmp' 'icmp_ln103' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 51 'speclooptripcount' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (1.65ns)   --->   "%i = add i3 %i_0, 1" [just_decrypt.cpp:103]   --->   Operation 52 'add' 'i' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "br i1 %icmp_ln103, label %3, label %2" [just_decrypt.cpp:103]   --->   Operation 53 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%p_load11 = load i8* %empty_14" [just_decrypt.cpp:105]   --->   Operation 54 'load' 'p_load11' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%p_load10 = load i8* %empty_15" [just_decrypt.cpp:105]   --->   Operation 55 'load' 'p_load10' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%p_load9 = load i8* %empty_16" [just_decrypt.cpp:105]   --->   Operation 56 'load' 'p_load9' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%p_load = load i8* %empty_17" [just_decrypt.cpp:105]   --->   Operation 57 'load' 'p_load' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln105 = trunc i3 %i_0 to i2" [just_decrypt.cpp:105]   --->   Operation 58 'trunc' 'trunc_ln105' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (1.95ns)   --->   "%num_assign_1 = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %p_load11, i8 %p_load10, i8 %p_load9, i8 %p_load, i2 %trunc_ln105)" [just_decrypt.cpp:105]   --->   Operation 59 'mux' 'num_assign_1' <Predicate = (!icmp_ln103)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln64 = zext i8 %num_assign_1 to i64" [just_decrypt.cpp:64->just_decrypt.cpp:105]   --->   Operation 60 'zext' 'zext_ln64' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%sbox_addr = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %zext_ln64" [just_decrypt.cpp:64->just_decrypt.cpp:105]   --->   Operation 61 'getelementptr' 'sbox_addr' <Predicate = (!icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 62 [2/2] (3.25ns)   --->   "%sbox_load = load i8* %sbox_addr, align 1" [just_decrypt.cpp:64->just_decrypt.cpp:105]   --->   Operation 62 'load' 'sbox_load' <Predicate = (!icmp_ln103)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln109 = trunc i32 %iteration_read to i8" [just_decrypt.cpp:109]   --->   Operation 63 'trunc' 'trunc_ln109' <Predicate = (icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln92 = zext i8 %trunc_ln109 to i64" [just_decrypt.cpp:92->just_decrypt.cpp:109]   --->   Operation 64 'zext' 'zext_ln92' <Predicate = (icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%Rcon_addr = getelementptr inbounds [255 x i8]* @Rcon, i64 0, i64 %zext_ln92" [just_decrypt.cpp:92->just_decrypt.cpp:109]   --->   Operation 65 'getelementptr' 'Rcon_addr' <Predicate = (icmp_ln103)> <Delay = 0.00>
ST_4 : Operation 66 [2/2] (3.25ns)   --->   "%Rcon_load = load i8* %Rcon_addr, align 1" [just_decrypt.cpp:92->just_decrypt.cpp:109]   --->   Operation 66 'load' 'Rcon_load' <Predicate = (icmp_ln103)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>

State 5 <SV = 3> <Delay = 5.02>
ST_5 : Operation 67 [1/2] (3.25ns)   --->   "%sbox_load = load i8* %sbox_addr, align 1" [just_decrypt.cpp:64->just_decrypt.cpp:105]   --->   Operation 67 'load' 'sbox_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_5 : Operation 68 [1/1] (1.30ns)   --->   "switch i2 %trunc_ln105, label %branch3 [
    i2 0, label %.branch0.backedge_crit_edge
    i2 1, label %branch1
    i2 -2, label %branch2
  ]" [just_decrypt.cpp:105]   --->   Operation 68 'switch' <Predicate = true> <Delay = 1.30>
ST_5 : Operation 69 [1/1] (1.76ns)   --->   "store i8 %sbox_load, i8* %word_2_0" [just_decrypt.cpp:105]   --->   Operation 69 'store' <Predicate = (trunc_ln105 == 2)> <Delay = 1.76>
ST_5 : Operation 70 [1/1] (1.76ns)   --->   "store i8 %sbox_load, i8* %empty_16" [just_decrypt.cpp:105]   --->   Operation 70 'store' <Predicate = (trunc_ln105 == 2)> <Delay = 1.76>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "br label %branch0.backedge" [just_decrypt.cpp:105]   --->   Operation 71 'br' <Predicate = (trunc_ln105 == 2)> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (1.76ns)   --->   "store i8 %sbox_load, i8* %word_1_0" [just_decrypt.cpp:105]   --->   Operation 72 'store' <Predicate = (trunc_ln105 == 1)> <Delay = 1.76>
ST_5 : Operation 73 [1/1] (1.76ns)   --->   "store i8 %sbox_load, i8* %empty_15" [just_decrypt.cpp:105]   --->   Operation 73 'store' <Predicate = (trunc_ln105 == 1)> <Delay = 1.76>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "br label %branch0.backedge" [just_decrypt.cpp:105]   --->   Operation 74 'br' <Predicate = (trunc_ln105 == 1)> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (1.76ns)   --->   "store i8 %sbox_load, i8* %empty_14" [just_decrypt.cpp:105]   --->   Operation 75 'store' <Predicate = (trunc_ln105 == 0)> <Delay = 1.76>
ST_5 : Operation 76 [1/1] (1.76ns)   --->   "store i8 %sbox_load, i8* %word_load" [just_decrypt.cpp:105]   --->   Operation 76 'store' <Predicate = (trunc_ln105 == 0)> <Delay = 1.76>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "br label %branch0.backedge" [just_decrypt.cpp:105]   --->   Operation 77 'br' <Predicate = (trunc_ln105 == 0)> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (1.76ns)   --->   "store i8 %sbox_load, i8* %word_3_0" [just_decrypt.cpp:105]   --->   Operation 78 'store' <Predicate = (trunc_ln105 == 3)> <Delay = 1.76>
ST_5 : Operation 79 [1/1] (1.76ns)   --->   "store i8 %sbox_load, i8* %empty_17" [just_decrypt.cpp:105]   --->   Operation 79 'store' <Predicate = (trunc_ln105 == 3)> <Delay = 1.76>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "br label %branch0.backedge" [just_decrypt.cpp:105]   --->   Operation 80 'br' <Predicate = (trunc_ln105 == 3)> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "br label %branch0"   --->   Operation 81 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 3> <Delay = 4.24>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%word_load_1 = load i8* %word_load" [just_decrypt.cpp:109]   --->   Operation 82 'load' 'word_load_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (0.00ns)   --->   "%word_1_0_load = load i8* %word_1_0" [just_decrypt.cpp:110]   --->   Operation 83 'load' 'word_1_0_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%word_2_0_load = load i8* %word_2_0" [just_decrypt.cpp:110]   --->   Operation 84 'load' 'word_2_0_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%word_3_0_load = load i8* %word_3_0" [just_decrypt.cpp:110]   --->   Operation 85 'load' 'word_3_0_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 86 [1/2] (3.25ns)   --->   "%Rcon_load = load i8* %Rcon_addr, align 1" [just_decrypt.cpp:92->just_decrypt.cpp:109]   --->   Operation 86 'load' 'Rcon_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 255> <ROM>
ST_6 : Operation 87 [1/1] (0.99ns)   --->   "%xor_ln109 = xor i8 %Rcon_load, %word_load_1" [just_decrypt.cpp:109]   --->   Operation 87 'xor' 'xor_ln109' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%mrv_s = insertvalue { i8, i8, i8, i8 } undef, i8 %word_1_0_load, 0" [just_decrypt.cpp:110]   --->   Operation 88 'insertvalue' 'mrv_s' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i8, i8, i8, i8 } %mrv_s, i8 %word_2_0_load, 1" [just_decrypt.cpp:110]   --->   Operation 89 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue { i8, i8, i8, i8 } %mrv_1, i8 %word_3_0_load, 2" [just_decrypt.cpp:110]   --->   Operation 90 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue { i8, i8, i8, i8 } %mrv_2, i8 %xor_ln109, 3" [just_decrypt.cpp:110]   --->   Operation 91 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 92 [1/1] (0.00ns)   --->   "ret { i8, i8, i8, i8 } %mrv_3" [just_decrypt.cpp:110]   --->   Operation 92 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ word_0_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ word_1_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ word_2_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ word_3_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ iteration]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ sbox]:  wired=0; compound=1; hidden=1; nouse=0; global=1; static=1; extern=0; dir=0; type=1; pingpong=0; private_global=1; linkage=7; visibility=0; MemPort=[1]; IO mode=ap_memory:ce=0
Port [ Rcon]:  wired=0; compound=1; hidden=1; nouse=0; global=1; static=1; extern=0; dir=0; type=1; pingpong=0; private_global=1; linkage=7; visibility=0; MemPort=[1]; IO mode=ap_memory:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
iteration_read    (read             ) [ 0011110]
word_3_read_1     (read             ) [ 0011000]
word_2_read_1     (read             ) [ 0111000]
word_1_read_1     (read             ) [ 0111000]
word_0_read_1     (read             ) [ 0011000]
br_ln85           (br               ) [ 0111000]
write_flag_0_i    (phi              ) [ 0010000]
word_03_i         (phi              ) [ 0011000]
word2_0_i         (phi              ) [ 0011000]
word12_0_i        (phi              ) [ 0011000]
i_0_i             (phi              ) [ 0011000]
icmp_ln85         (icmp             ) [ 0011000]
empty             (speclooptripcount) [ 0000000]
i_5               (add              ) [ 0111000]
br_ln85           (br               ) [ 0000000]
switch_ln86       (switch           ) [ 0011000]
br_ln86           (br               ) [ 0011000]
br_ln86           (br               ) [ 0011000]
write_flag_0_be_i (mux              ) [ 0111000]
word_load         (alloca           ) [ 0011111]
empty_14          (alloca           ) [ 0011110]
empty_15          (alloca           ) [ 0011110]
empty_16          (alloca           ) [ 0011110]
empty_17          (alloca           ) [ 0011110]
word_1_0          (alloca           ) [ 0011111]
word_2_0          (alloca           ) [ 0011111]
word_3_0          (alloca           ) [ 0011111]
select_ln88       (select           ) [ 0000000]
store_ln103       (store            ) [ 0000000]
store_ln103       (store            ) [ 0000000]
store_ln103       (store            ) [ 0000000]
store_ln103       (store            ) [ 0000000]
store_ln103       (store            ) [ 0000000]
store_ln103       (store            ) [ 0000000]
store_ln103       (store            ) [ 0000000]
store_ln103       (store            ) [ 0000000]
br_ln103          (br               ) [ 0011110]
phi_ln86          (phi              ) [ 0001000]
word12_0_be_i     (mux              ) [ 0111000]
word2_0_be_i      (mux              ) [ 0111000]
word_03_be_i      (mux              ) [ 0111000]
br_ln0            (br               ) [ 0111000]
i_0               (phi              ) [ 0000100]
icmp_ln103        (icmp             ) [ 0000110]
empty_18          (speclooptripcount) [ 0000000]
i                 (add              ) [ 0010110]
br_ln103          (br               ) [ 0000000]
p_load11          (load             ) [ 0000000]
p_load10          (load             ) [ 0000000]
p_load9           (load             ) [ 0000000]
p_load            (load             ) [ 0000000]
trunc_ln105       (trunc            ) [ 0000010]
num_assign_1      (mux              ) [ 0000000]
zext_ln64         (zext             ) [ 0000000]
sbox_addr         (getelementptr    ) [ 0000010]
trunc_ln109       (trunc            ) [ 0000000]
zext_ln92         (zext             ) [ 0000000]
Rcon_addr         (getelementptr    ) [ 0000001]
sbox_load         (load             ) [ 0000000]
switch_ln105      (switch           ) [ 0000000]
store_ln105       (store            ) [ 0000000]
store_ln105       (store            ) [ 0000000]
br_ln105          (br               ) [ 0000000]
store_ln105       (store            ) [ 0000000]
store_ln105       (store            ) [ 0000000]
br_ln105          (br               ) [ 0000000]
store_ln105       (store            ) [ 0000000]
store_ln105       (store            ) [ 0000000]
br_ln105          (br               ) [ 0000000]
store_ln105       (store            ) [ 0000000]
store_ln105       (store            ) [ 0000000]
br_ln105          (br               ) [ 0000000]
br_ln0            (br               ) [ 0010110]
word_load_1       (load             ) [ 0000000]
word_1_0_load     (load             ) [ 0000000]
word_2_0_load     (load             ) [ 0000000]
word_3_0_load     (load             ) [ 0000000]
Rcon_load         (load             ) [ 0000000]
xor_ln109         (xor              ) [ 0000000]
mrv_s             (insertvalue      ) [ 0000000]
mrv_1             (insertvalue      ) [ 0000000]
mrv_2             (insertvalue      ) [ 0000000]
mrv_3             (insertvalue      ) [ 0000000]
ret_ln110         (ret              ) [ 0000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="word_0_read">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="word_0_read"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="word_1_read">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="word_1_read"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="word_2_read">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="word_2_read"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="word_3_read">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="word_3_read"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="iteration">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="iteration"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="sbox">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="sbox"/><MemPortTyVec>1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="Rcon">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="Rcon"/><MemPortTyVec>1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i8"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Mux.ap_auto.4i1.i2"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Mux.ap_auto.4i8.i2"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1004" name="word_load_fu_54">
<pin_list>
<pin id="55" dir="0" index="0" bw="1" slack="0"/>
<pin id="56" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="word_load/2 "/>
</bind>
</comp>

<comp id="58" class="1004" name="empty_14_fu_58">
<pin_list>
<pin id="59" dir="0" index="0" bw="1" slack="0"/>
<pin id="60" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="empty_14/2 "/>
</bind>
</comp>

<comp id="62" class="1004" name="empty_15_fu_62">
<pin_list>
<pin id="63" dir="0" index="0" bw="1" slack="0"/>
<pin id="64" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="empty_15/2 "/>
</bind>
</comp>

<comp id="66" class="1004" name="empty_16_fu_66">
<pin_list>
<pin id="67" dir="0" index="0" bw="1" slack="0"/>
<pin id="68" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="empty_16/2 "/>
</bind>
</comp>

<comp id="70" class="1004" name="empty_17_fu_70">
<pin_list>
<pin id="71" dir="0" index="0" bw="1" slack="0"/>
<pin id="72" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="empty_17/2 "/>
</bind>
</comp>

<comp id="74" class="1004" name="word_1_0_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="1" slack="0"/>
<pin id="76" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="word_1_0/2 "/>
</bind>
</comp>

<comp id="78" class="1004" name="word_2_0_fu_78">
<pin_list>
<pin id="79" dir="0" index="0" bw="1" slack="0"/>
<pin id="80" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="word_2_0/2 "/>
</bind>
</comp>

<comp id="82" class="1004" name="word_3_0_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="1" slack="0"/>
<pin id="84" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="word_3_0/2 "/>
</bind>
</comp>

<comp id="86" class="1004" name="iteration_read_read_fu_86">
<pin_list>
<pin id="87" dir="0" index="0" bw="32" slack="0"/>
<pin id="88" dir="0" index="1" bw="32" slack="0"/>
<pin id="89" dir="1" index="2" bw="32" slack="2"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="iteration_read/1 "/>
</bind>
</comp>

<comp id="92" class="1004" name="word_3_read_1_read_fu_92">
<pin_list>
<pin id="93" dir="0" index="0" bw="8" slack="0"/>
<pin id="94" dir="0" index="1" bw="8" slack="0"/>
<pin id="95" dir="1" index="2" bw="8" slack="2"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="word_3_read_1/1 "/>
</bind>
</comp>

<comp id="98" class="1004" name="word_2_read_1_read_fu_98">
<pin_list>
<pin id="99" dir="0" index="0" bw="8" slack="0"/>
<pin id="100" dir="0" index="1" bw="8" slack="0"/>
<pin id="101" dir="1" index="2" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="word_2_read_1/1 "/>
</bind>
</comp>

<comp id="104" class="1004" name="word_1_read_1_read_fu_104">
<pin_list>
<pin id="105" dir="0" index="0" bw="8" slack="0"/>
<pin id="106" dir="0" index="1" bw="8" slack="0"/>
<pin id="107" dir="1" index="2" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="word_1_read_1/1 "/>
</bind>
</comp>

<comp id="110" class="1004" name="word_0_read_1_read_fu_110">
<pin_list>
<pin id="111" dir="0" index="0" bw="8" slack="0"/>
<pin id="112" dir="0" index="1" bw="8" slack="0"/>
<pin id="113" dir="1" index="2" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="word_0_read_1/1 "/>
</bind>
</comp>

<comp id="116" class="1004" name="sbox_addr_gep_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="8" slack="0"/>
<pin id="118" dir="0" index="1" bw="1" slack="0"/>
<pin id="119" dir="0" index="2" bw="8" slack="0"/>
<pin id="120" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="sbox_addr/4 "/>
</bind>
</comp>

<comp id="123" class="1004" name="grp_access_fu_123">
<pin_list>
<pin id="124" dir="0" index="0" bw="8" slack="0"/>
<pin id="125" dir="0" index="1" bw="8" slack="2147483647"/>
<pin id="126" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="127" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="sbox_load/4 "/>
</bind>
</comp>

<comp id="129" class="1004" name="Rcon_addr_gep_fu_129">
<pin_list>
<pin id="130" dir="0" index="0" bw="8" slack="0"/>
<pin id="131" dir="0" index="1" bw="1" slack="0"/>
<pin id="132" dir="0" index="2" bw="8" slack="0"/>
<pin id="133" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="Rcon_addr/4 "/>
</bind>
</comp>

<comp id="136" class="1004" name="grp_access_fu_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="8" slack="0"/>
<pin id="138" dir="0" index="1" bw="8" slack="2147483647"/>
<pin id="139" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="140" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="Rcon_load/4 "/>
</bind>
</comp>

<comp id="142" class="1005" name="write_flag_0_i_reg_142">
<pin_list>
<pin id="143" dir="0" index="0" bw="1" slack="1"/>
<pin id="144" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="write_flag_0_i (phireg) "/>
</bind>
</comp>

<comp id="146" class="1004" name="write_flag_0_i_phi_fu_146">
<pin_list>
<pin id="147" dir="0" index="0" bw="1" slack="1"/>
<pin id="148" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="149" dir="0" index="2" bw="1" slack="0"/>
<pin id="150" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="151" dir="1" index="4" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="write_flag_0_i/2 "/>
</bind>
</comp>

<comp id="153" class="1005" name="word_03_i_reg_153">
<pin_list>
<pin id="154" dir="0" index="0" bw="8" slack="1"/>
<pin id="155" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="word_03_i (phireg) "/>
</bind>
</comp>

<comp id="157" class="1004" name="word_03_i_phi_fu_157">
<pin_list>
<pin id="158" dir="0" index="0" bw="1" slack="1"/>
<pin id="159" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="160" dir="0" index="2" bw="8" slack="1"/>
<pin id="161" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="162" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="word_03_i/2 "/>
</bind>
</comp>

<comp id="165" class="1005" name="word2_0_i_reg_165">
<pin_list>
<pin id="166" dir="0" index="0" bw="8" slack="1"/>
<pin id="167" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="word2_0_i (phireg) "/>
</bind>
</comp>

<comp id="168" class="1004" name="word2_0_i_phi_fu_168">
<pin_list>
<pin id="169" dir="0" index="0" bw="8" slack="1"/>
<pin id="170" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="171" dir="0" index="2" bw="8" slack="1"/>
<pin id="172" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="173" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="word2_0_i/2 "/>
</bind>
</comp>

<comp id="175" class="1005" name="word12_0_i_reg_175">
<pin_list>
<pin id="176" dir="0" index="0" bw="8" slack="1"/>
<pin id="177" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="word12_0_i (phireg) "/>
</bind>
</comp>

<comp id="178" class="1004" name="word12_0_i_phi_fu_178">
<pin_list>
<pin id="179" dir="0" index="0" bw="8" slack="1"/>
<pin id="180" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="181" dir="0" index="2" bw="8" slack="1"/>
<pin id="182" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="183" dir="1" index="4" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="word12_0_i/2 "/>
</bind>
</comp>

<comp id="185" class="1005" name="i_0_i_reg_185">
<pin_list>
<pin id="186" dir="0" index="0" bw="2" slack="1"/>
<pin id="187" dir="1" index="1" bw="2" slack="1"/>
</pin_list>
<bind>
<opset="i_0_i (phireg) "/>
</bind>
</comp>

<comp id="189" class="1004" name="i_0_i_phi_fu_189">
<pin_list>
<pin id="190" dir="0" index="0" bw="1" slack="1"/>
<pin id="191" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="192" dir="0" index="2" bw="2" slack="0"/>
<pin id="193" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="194" dir="1" index="4" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i_0_i/2 "/>
</bind>
</comp>

<comp id="197" class="1005" name="phi_ln86_reg_197">
<pin_list>
<pin id="198" dir="0" index="0" bw="8" slack="2147483647"/>
<pin id="199" dir="1" index="1" bw="8" slack="2147483647"/>
</pin_list>
<bind>
<opset="phi_ln86 (phireg) "/>
</bind>
</comp>

<comp id="200" class="1004" name="phi_ln86_phi_fu_200">
<pin_list>
<pin id="201" dir="0" index="0" bw="8" slack="1"/>
<pin id="202" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="203" dir="0" index="2" bw="8" slack="2"/>
<pin id="204" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="205" dir="0" index="4" bw="8" slack="1"/>
<pin id="206" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="207" dir="1" index="6" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="phi_ln86/3 "/>
</bind>
</comp>

<comp id="210" class="1005" name="i_0_reg_210">
<pin_list>
<pin id="211" dir="0" index="0" bw="3" slack="1"/>
<pin id="212" dir="1" index="1" bw="3" slack="1"/>
</pin_list>
<bind>
<opset="i_0 (phireg) "/>
</bind>
</comp>

<comp id="214" class="1004" name="i_0_phi_fu_214">
<pin_list>
<pin id="215" dir="0" index="0" bw="1" slack="1"/>
<pin id="216" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="217" dir="0" index="2" bw="3" slack="0"/>
<pin id="218" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="219" dir="1" index="4" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i_0/4 "/>
</bind>
</comp>

<comp id="221" class="1004" name="icmp_ln85_fu_221">
<pin_list>
<pin id="222" dir="0" index="0" bw="2" slack="0"/>
<pin id="223" dir="0" index="1" bw="2" slack="0"/>
<pin id="224" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln85/2 "/>
</bind>
</comp>

<comp id="227" class="1004" name="i_5_fu_227">
<pin_list>
<pin id="228" dir="0" index="0" bw="2" slack="0"/>
<pin id="229" dir="0" index="1" bw="1" slack="0"/>
<pin id="230" dir="1" index="2" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i_5/2 "/>
</bind>
</comp>

<comp id="233" class="1004" name="write_flag_0_be_i_fu_233">
<pin_list>
<pin id="234" dir="0" index="0" bw="1" slack="0"/>
<pin id="235" dir="0" index="1" bw="1" slack="0"/>
<pin id="236" dir="0" index="2" bw="1" slack="0"/>
<pin id="237" dir="0" index="3" bw="1" slack="0"/>
<pin id="238" dir="0" index="4" bw="1" slack="0"/>
<pin id="239" dir="0" index="5" bw="2" slack="0"/>
<pin id="240" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="mux(1196) " fcode="mux"/>
<opset="write_flag_0_be_i/2 "/>
</bind>
</comp>

<comp id="247" class="1004" name="select_ln88_fu_247">
<pin_list>
<pin id="248" dir="0" index="0" bw="1" slack="0"/>
<pin id="249" dir="0" index="1" bw="8" slack="0"/>
<pin id="250" dir="0" index="2" bw="8" slack="1"/>
<pin id="251" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln88/2 "/>
</bind>
</comp>

<comp id="254" class="1004" name="store_ln103_store_fu_254">
<pin_list>
<pin id="255" dir="0" index="0" bw="8" slack="1"/>
<pin id="256" dir="0" index="1" bw="8" slack="0"/>
<pin id="257" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln103/2 "/>
</bind>
</comp>

<comp id="258" class="1004" name="store_ln103_store_fu_258">
<pin_list>
<pin id="259" dir="0" index="0" bw="8" slack="0"/>
<pin id="260" dir="0" index="1" bw="8" slack="0"/>
<pin id="261" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln103/2 "/>
</bind>
</comp>

<comp id="263" class="1004" name="store_ln103_store_fu_263">
<pin_list>
<pin id="264" dir="0" index="0" bw="8" slack="0"/>
<pin id="265" dir="0" index="1" bw="8" slack="0"/>
<pin id="266" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln103/2 "/>
</bind>
</comp>

<comp id="268" class="1004" name="store_ln103_store_fu_268">
<pin_list>
<pin id="269" dir="0" index="0" bw="8" slack="1"/>
<pin id="270" dir="0" index="1" bw="8" slack="0"/>
<pin id="271" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln103/2 "/>
</bind>
</comp>

<comp id="272" class="1004" name="store_ln103_store_fu_272">
<pin_list>
<pin id="273" dir="0" index="0" bw="8" slack="0"/>
<pin id="274" dir="0" index="1" bw="8" slack="0"/>
<pin id="275" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln103/2 "/>
</bind>
</comp>

<comp id="277" class="1004" name="store_ln103_store_fu_277">
<pin_list>
<pin id="278" dir="0" index="0" bw="8" slack="0"/>
<pin id="279" dir="0" index="1" bw="8" slack="0"/>
<pin id="280" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln103/2 "/>
</bind>
</comp>

<comp id="282" class="1004" name="store_ln103_store_fu_282">
<pin_list>
<pin id="283" dir="0" index="0" bw="8" slack="0"/>
<pin id="284" dir="0" index="1" bw="8" slack="0"/>
<pin id="285" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln103/2 "/>
</bind>
</comp>

<comp id="287" class="1004" name="store_ln103_store_fu_287">
<pin_list>
<pin id="288" dir="0" index="0" bw="8" slack="0"/>
<pin id="289" dir="0" index="1" bw="8" slack="0"/>
<pin id="290" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln103/2 "/>
</bind>
</comp>

<comp id="292" class="1004" name="word12_0_be_i_fu_292">
<pin_list>
<pin id="293" dir="0" index="0" bw="8" slack="0"/>
<pin id="294" dir="0" index="1" bw="8" slack="1"/>
<pin id="295" dir="0" index="2" bw="8" slack="0"/>
<pin id="296" dir="0" index="3" bw="8" slack="1"/>
<pin id="297" dir="0" index="4" bw="8" slack="1"/>
<pin id="298" dir="0" index="5" bw="2" slack="1"/>
<pin id="299" dir="1" index="6" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="mux(1196) " fcode="mux"/>
<opset="word12_0_be_i/3 "/>
</bind>
</comp>

<comp id="306" class="1004" name="word2_0_be_i_fu_306">
<pin_list>
<pin id="307" dir="0" index="0" bw="8" slack="0"/>
<pin id="308" dir="0" index="1" bw="8" slack="1"/>
<pin id="309" dir="0" index="2" bw="8" slack="1"/>
<pin id="310" dir="0" index="3" bw="8" slack="0"/>
<pin id="311" dir="0" index="4" bw="8" slack="0"/>
<pin id="312" dir="0" index="5" bw="2" slack="1"/>
<pin id="313" dir="1" index="6" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="mux(1196) " fcode="mux"/>
<opset="word2_0_be_i/3 "/>
</bind>
</comp>

<comp id="320" class="1004" name="word_03_be_i_fu_320">
<pin_list>
<pin id="321" dir="0" index="0" bw="8" slack="0"/>
<pin id="322" dir="0" index="1" bw="8" slack="0"/>
<pin id="323" dir="0" index="2" bw="8" slack="1"/>
<pin id="324" dir="0" index="3" bw="8" slack="1"/>
<pin id="325" dir="0" index="4" bw="8" slack="1"/>
<pin id="326" dir="0" index="5" bw="2" slack="1"/>
<pin id="327" dir="1" index="6" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="mux(1196) " fcode="mux"/>
<opset="word_03_be_i/3 "/>
</bind>
</comp>

<comp id="334" class="1004" name="icmp_ln103_fu_334">
<pin_list>
<pin id="335" dir="0" index="0" bw="3" slack="0"/>
<pin id="336" dir="0" index="1" bw="3" slack="0"/>
<pin id="337" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln103/4 "/>
</bind>
</comp>

<comp id="340" class="1004" name="i_fu_340">
<pin_list>
<pin id="341" dir="0" index="0" bw="3" slack="0"/>
<pin id="342" dir="0" index="1" bw="1" slack="0"/>
<pin id="343" dir="1" index="2" bw="3" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i/4 "/>
</bind>
</comp>

<comp id="346" class="1004" name="p_load11_load_fu_346">
<pin_list>
<pin id="347" dir="0" index="0" bw="8" slack="1"/>
<pin id="348" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="p_load11/4 "/>
</bind>
</comp>

<comp id="349" class="1004" name="p_load10_load_fu_349">
<pin_list>
<pin id="350" dir="0" index="0" bw="8" slack="1"/>
<pin id="351" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="p_load10/4 "/>
</bind>
</comp>

<comp id="352" class="1004" name="p_load9_load_fu_352">
<pin_list>
<pin id="353" dir="0" index="0" bw="8" slack="1"/>
<pin id="354" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="p_load9/4 "/>
</bind>
</comp>

<comp id="355" class="1004" name="p_load_load_fu_355">
<pin_list>
<pin id="356" dir="0" index="0" bw="8" slack="1"/>
<pin id="357" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="p_load/4 "/>
</bind>
</comp>

<comp id="358" class="1004" name="trunc_ln105_fu_358">
<pin_list>
<pin id="359" dir="0" index="0" bw="3" slack="0"/>
<pin id="360" dir="1" index="1" bw="2" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln105/4 "/>
</bind>
</comp>

<comp id="362" class="1004" name="num_assign_1_fu_362">
<pin_list>
<pin id="363" dir="0" index="0" bw="8" slack="0"/>
<pin id="364" dir="0" index="1" bw="8" slack="0"/>
<pin id="365" dir="0" index="2" bw="8" slack="0"/>
<pin id="366" dir="0" index="3" bw="8" slack="0"/>
<pin id="367" dir="0" index="4" bw="8" slack="0"/>
<pin id="368" dir="0" index="5" bw="2" slack="0"/>
<pin id="369" dir="1" index="6" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="mux(1196) " fcode="mux"/>
<opset="num_assign_1/4 "/>
</bind>
</comp>

<comp id="376" class="1004" name="zext_ln64_fu_376">
<pin_list>
<pin id="377" dir="0" index="0" bw="8" slack="0"/>
<pin id="378" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln64/4 "/>
</bind>
</comp>

<comp id="381" class="1004" name="trunc_ln109_fu_381">
<pin_list>
<pin id="382" dir="0" index="0" bw="32" slack="2"/>
<pin id="383" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln109/4 "/>
</bind>
</comp>

<comp id="384" class="1004" name="zext_ln92_fu_384">
<pin_list>
<pin id="385" dir="0" index="0" bw="8" slack="0"/>
<pin id="386" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln92/4 "/>
</bind>
</comp>

<comp id="389" class="1004" name="store_ln105_store_fu_389">
<pin_list>
<pin id="390" dir="0" index="0" bw="8" slack="0"/>
<pin id="391" dir="0" index="1" bw="8" slack="2"/>
<pin id="392" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln105/5 "/>
</bind>
</comp>

<comp id="394" class="1004" name="store_ln105_store_fu_394">
<pin_list>
<pin id="395" dir="0" index="0" bw="8" slack="0"/>
<pin id="396" dir="0" index="1" bw="8" slack="2"/>
<pin id="397" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln105/5 "/>
</bind>
</comp>

<comp id="399" class="1004" name="store_ln105_store_fu_399">
<pin_list>
<pin id="400" dir="0" index="0" bw="8" slack="0"/>
<pin id="401" dir="0" index="1" bw="8" slack="2"/>
<pin id="402" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln105/5 "/>
</bind>
</comp>

<comp id="404" class="1004" name="store_ln105_store_fu_404">
<pin_list>
<pin id="405" dir="0" index="0" bw="8" slack="0"/>
<pin id="406" dir="0" index="1" bw="8" slack="2"/>
<pin id="407" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln105/5 "/>
</bind>
</comp>

<comp id="409" class="1004" name="store_ln105_store_fu_409">
<pin_list>
<pin id="410" dir="0" index="0" bw="8" slack="0"/>
<pin id="411" dir="0" index="1" bw="8" slack="2"/>
<pin id="412" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln105/5 "/>
</bind>
</comp>

<comp id="414" class="1004" name="store_ln105_store_fu_414">
<pin_list>
<pin id="415" dir="0" index="0" bw="8" slack="0"/>
<pin id="416" dir="0" index="1" bw="8" slack="2"/>
<pin id="417" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln105/5 "/>
</bind>
</comp>

<comp id="419" class="1004" name="store_ln105_store_fu_419">
<pin_list>
<pin id="420" dir="0" index="0" bw="8" slack="0"/>
<pin id="421" dir="0" index="1" bw="8" slack="2"/>
<pin id="422" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln105/5 "/>
</bind>
</comp>

<comp id="424" class="1004" name="store_ln105_store_fu_424">
<pin_list>
<pin id="425" dir="0" index="0" bw="8" slack="0"/>
<pin id="426" dir="0" index="1" bw="8" slack="2"/>
<pin id="427" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln105/5 "/>
</bind>
</comp>

<comp id="429" class="1004" name="word_load_1_load_fu_429">
<pin_list>
<pin id="430" dir="0" index="0" bw="8" slack="2"/>
<pin id="431" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="word_load_1/6 "/>
</bind>
</comp>

<comp id="432" class="1004" name="word_1_0_load_load_fu_432">
<pin_list>
<pin id="433" dir="0" index="0" bw="8" slack="2"/>
<pin id="434" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="word_1_0_load/6 "/>
</bind>
</comp>

<comp id="435" class="1004" name="word_2_0_load_load_fu_435">
<pin_list>
<pin id="436" dir="0" index="0" bw="8" slack="2"/>
<pin id="437" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="word_2_0_load/6 "/>
</bind>
</comp>

<comp id="438" class="1004" name="word_3_0_load_load_fu_438">
<pin_list>
<pin id="439" dir="0" index="0" bw="8" slack="2"/>
<pin id="440" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="word_3_0_load/6 "/>
</bind>
</comp>

<comp id="441" class="1004" name="xor_ln109_fu_441">
<pin_list>
<pin id="442" dir="0" index="0" bw="8" slack="0"/>
<pin id="443" dir="0" index="1" bw="8" slack="0"/>
<pin id="444" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln109/6 "/>
</bind>
</comp>

<comp id="447" class="1004" name="mrv_s_fu_447">
<pin_list>
<pin id="448" dir="0" index="0" bw="32" slack="0"/>
<pin id="449" dir="0" index="1" bw="8" slack="0"/>
<pin id="450" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv_s/6 "/>
</bind>
</comp>

<comp id="453" class="1004" name="mrv_1_fu_453">
<pin_list>
<pin id="454" dir="0" index="0" bw="32" slack="0"/>
<pin id="455" dir="0" index="1" bw="8" slack="0"/>
<pin id="456" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv_1/6 "/>
</bind>
</comp>

<comp id="459" class="1004" name="mrv_2_fu_459">
<pin_list>
<pin id="460" dir="0" index="0" bw="32" slack="0"/>
<pin id="461" dir="0" index="1" bw="8" slack="0"/>
<pin id="462" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv_2/6 "/>
</bind>
</comp>

<comp id="465" class="1004" name="mrv_3_fu_465">
<pin_list>
<pin id="466" dir="0" index="0" bw="32" slack="0"/>
<pin id="467" dir="0" index="1" bw="8" slack="0"/>
<pin id="468" dir="1" index="2" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="insertvalue(57) " fcode="insertvalue"/>
<opset="mrv_3/6 "/>
</bind>
</comp>

<comp id="471" class="1005" name="iteration_read_reg_471">
<pin_list>
<pin id="472" dir="0" index="0" bw="32" slack="2"/>
<pin id="473" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="iteration_read "/>
</bind>
</comp>

<comp id="476" class="1005" name="word_3_read_1_reg_476">
<pin_list>
<pin id="477" dir="0" index="0" bw="8" slack="2"/>
<pin id="478" dir="1" index="1" bw="8" slack="2"/>
</pin_list>
<bind>
<opset="word_3_read_1 "/>
</bind>
</comp>

<comp id="481" class="1005" name="word_2_read_1_reg_481">
<pin_list>
<pin id="482" dir="0" index="0" bw="8" slack="1"/>
<pin id="483" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="word_2_read_1 "/>
</bind>
</comp>

<comp id="486" class="1005" name="word_1_read_1_reg_486">
<pin_list>
<pin id="487" dir="0" index="0" bw="8" slack="1"/>
<pin id="488" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="word_1_read_1 "/>
</bind>
</comp>

<comp id="491" class="1005" name="word_0_read_1_reg_491">
<pin_list>
<pin id="492" dir="0" index="0" bw="8" slack="1"/>
<pin id="493" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="word_0_read_1 "/>
</bind>
</comp>

<comp id="501" class="1005" name="i_5_reg_501">
<pin_list>
<pin id="502" dir="0" index="0" bw="2" slack="0"/>
<pin id="503" dir="1" index="1" bw="2" slack="0"/>
</pin_list>
<bind>
<opset="i_5 "/>
</bind>
</comp>

<comp id="506" class="1005" name="write_flag_0_be_i_reg_506">
<pin_list>
<pin id="507" dir="0" index="0" bw="1" slack="0"/>
<pin id="508" dir="1" index="1" bw="1" slack="0"/>
</pin_list>
<bind>
<opset="write_flag_0_be_i "/>
</bind>
</comp>

<comp id="511" class="1005" name="word_load_reg_511">
<pin_list>
<pin id="512" dir="0" index="0" bw="8" slack="0"/>
<pin id="513" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opset="word_load "/>
</bind>
</comp>

<comp id="518" class="1005" name="empty_14_reg_518">
<pin_list>
<pin id="519" dir="0" index="0" bw="8" slack="0"/>
<pin id="520" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opset="empty_14 "/>
</bind>
</comp>

<comp id="525" class="1005" name="empty_15_reg_525">
<pin_list>
<pin id="526" dir="0" index="0" bw="8" slack="0"/>
<pin id="527" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opset="empty_15 "/>
</bind>
</comp>

<comp id="532" class="1005" name="empty_16_reg_532">
<pin_list>
<pin id="533" dir="0" index="0" bw="8" slack="0"/>
<pin id="534" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opset="empty_16 "/>
</bind>
</comp>

<comp id="539" class="1005" name="empty_17_reg_539">
<pin_list>
<pin id="540" dir="0" index="0" bw="8" slack="0"/>
<pin id="541" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opset="empty_17 "/>
</bind>
</comp>

<comp id="546" class="1005" name="word_1_0_reg_546">
<pin_list>
<pin id="547" dir="0" index="0" bw="8" slack="0"/>
<pin id="548" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opset="word_1_0 "/>
</bind>
</comp>

<comp id="553" class="1005" name="word_2_0_reg_553">
<pin_list>
<pin id="554" dir="0" index="0" bw="8" slack="0"/>
<pin id="555" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opset="word_2_0 "/>
</bind>
</comp>

<comp id="560" class="1005" name="word_3_0_reg_560">
<pin_list>
<pin id="561" dir="0" index="0" bw="8" slack="0"/>
<pin id="562" dir="1" index="1" bw="8" slack="0"/>
</pin_list>
<bind>
<opset="word_3_0 "/>
</bind>
</comp>

<comp id="567" class="1005" name="word12_0_be_i_reg_567">
<pin_list>
<pin id="568" dir="0" index="0" bw="8" slack="1"/>
<pin id="569" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="word12_0_be_i "/>
</bind>
</comp>

<comp id="572" class="1005" name="word2_0_be_i_reg_572">
<pin_list>
<pin id="573" dir="0" index="0" bw="8" slack="1"/>
<pin id="574" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="word2_0_be_i "/>
</bind>
</comp>

<comp id="577" class="1005" name="word_03_be_i_reg_577">
<pin_list>
<pin id="578" dir="0" index="0" bw="8" slack="1"/>
<pin id="579" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="word_03_be_i "/>
</bind>
</comp>

<comp id="585" class="1005" name="i_reg_585">
<pin_list>
<pin id="586" dir="0" index="0" bw="3" slack="0"/>
<pin id="587" dir="1" index="1" bw="3" slack="0"/>
</pin_list>
<bind>
<opset="i "/>
</bind>
</comp>

<comp id="590" class="1005" name="trunc_ln105_reg_590">
<pin_list>
<pin id="591" dir="0" index="0" bw="2" slack="1"/>
<pin id="592" dir="1" index="1" bw="2" slack="2147483647"/>
</pin_list>
<bind>
<opset="trunc_ln105 "/>
</bind>
</comp>

<comp id="594" class="1005" name="sbox_addr_reg_594">
<pin_list>
<pin id="595" dir="0" index="0" bw="8" slack="1"/>
<pin id="596" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="sbox_addr "/>
</bind>
</comp>

<comp id="599" class="1005" name="Rcon_addr_reg_599">
<pin_list>
<pin id="600" dir="0" index="0" bw="8" slack="1"/>
<pin id="601" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="Rcon_addr "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="57"><net_src comp="36" pin="0"/><net_sink comp="54" pin=0"/></net>

<net id="61"><net_src comp="36" pin="0"/><net_sink comp="58" pin=0"/></net>

<net id="65"><net_src comp="36" pin="0"/><net_sink comp="62" pin=0"/></net>

<net id="69"><net_src comp="36" pin="0"/><net_sink comp="66" pin=0"/></net>

<net id="73"><net_src comp="36" pin="0"/><net_sink comp="70" pin=0"/></net>

<net id="77"><net_src comp="36" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="81"><net_src comp="36" pin="0"/><net_sink comp="78" pin=0"/></net>

<net id="85"><net_src comp="36" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="90"><net_src comp="14" pin="0"/><net_sink comp="86" pin=0"/></net>

<net id="91"><net_src comp="8" pin="0"/><net_sink comp="86" pin=1"/></net>

<net id="96"><net_src comp="16" pin="0"/><net_sink comp="92" pin=0"/></net>

<net id="97"><net_src comp="6" pin="0"/><net_sink comp="92" pin=1"/></net>

<net id="102"><net_src comp="16" pin="0"/><net_sink comp="98" pin=0"/></net>

<net id="103"><net_src comp="4" pin="0"/><net_sink comp="98" pin=1"/></net>

<net id="108"><net_src comp="16" pin="0"/><net_sink comp="104" pin=0"/></net>

<net id="109"><net_src comp="2" pin="0"/><net_sink comp="104" pin=1"/></net>

<net id="114"><net_src comp="16" pin="0"/><net_sink comp="110" pin=0"/></net>

<net id="115"><net_src comp="0" pin="0"/><net_sink comp="110" pin=1"/></net>

<net id="121"><net_src comp="10" pin="0"/><net_sink comp="116" pin=0"/></net>

<net id="122"><net_src comp="48" pin="0"/><net_sink comp="116" pin=1"/></net>

<net id="128"><net_src comp="116" pin="3"/><net_sink comp="123" pin=0"/></net>

<net id="134"><net_src comp="12" pin="0"/><net_sink comp="129" pin=0"/></net>

<net id="135"><net_src comp="48" pin="0"/><net_sink comp="129" pin=1"/></net>

<net id="141"><net_src comp="129" pin="3"/><net_sink comp="136" pin=0"/></net>

<net id="145"><net_src comp="18" pin="0"/><net_sink comp="142" pin=0"/></net>

<net id="152"><net_src comp="142" pin="1"/><net_sink comp="146" pin=0"/></net>

<net id="156"><net_src comp="20" pin="0"/><net_sink comp="153" pin=0"/></net>

<net id="163"><net_src comp="153" pin="1"/><net_sink comp="157" pin=0"/></net>

<net id="164"><net_src comp="157" pin="4"/><net_sink comp="153" pin=0"/></net>

<net id="174"><net_src comp="168" pin="4"/><net_sink comp="165" pin=0"/></net>

<net id="184"><net_src comp="178" pin="4"/><net_sink comp="175" pin=0"/></net>

<net id="188"><net_src comp="22" pin="0"/><net_sink comp="185" pin=0"/></net>

<net id="195"><net_src comp="185" pin="1"/><net_sink comp="189" pin=0"/></net>

<net id="196"><net_src comp="189" pin="4"/><net_sink comp="185" pin=0"/></net>

<net id="208"><net_src comp="165" pin="1"/><net_sink comp="200" pin=0"/></net>

<net id="209"><net_src comp="175" pin="1"/><net_sink comp="200" pin=4"/></net>

<net id="213"><net_src comp="40" pin="0"/><net_sink comp="210" pin=0"/></net>

<net id="220"><net_src comp="210" pin="1"/><net_sink comp="214" pin=0"/></net>

<net id="225"><net_src comp="189" pin="4"/><net_sink comp="221" pin=0"/></net>

<net id="226"><net_src comp="24" pin="0"/><net_sink comp="221" pin=1"/></net>

<net id="231"><net_src comp="189" pin="4"/><net_sink comp="227" pin=0"/></net>

<net id="232"><net_src comp="30" pin="0"/><net_sink comp="227" pin=1"/></net>

<net id="241"><net_src comp="32" pin="0"/><net_sink comp="233" pin=0"/></net>

<net id="242"><net_src comp="34" pin="0"/><net_sink comp="233" pin=1"/></net>

<net id="243"><net_src comp="146" pin="4"/><net_sink comp="233" pin=2"/></net>

<net id="244"><net_src comp="146" pin="4"/><net_sink comp="233" pin=3"/></net>

<net id="245"><net_src comp="146" pin="4"/><net_sink comp="233" pin=4"/></net>

<net id="246"><net_src comp="189" pin="4"/><net_sink comp="233" pin=5"/></net>

<net id="252"><net_src comp="146" pin="4"/><net_sink comp="247" pin=0"/></net>

<net id="253"><net_src comp="157" pin="4"/><net_sink comp="247" pin=1"/></net>

<net id="262"><net_src comp="168" pin="4"/><net_sink comp="258" pin=0"/></net>

<net id="267"><net_src comp="178" pin="4"/><net_sink comp="263" pin=0"/></net>

<net id="276"><net_src comp="168" pin="4"/><net_sink comp="272" pin=0"/></net>

<net id="281"><net_src comp="178" pin="4"/><net_sink comp="277" pin=0"/></net>

<net id="286"><net_src comp="247" pin="3"/><net_sink comp="282" pin=0"/></net>

<net id="291"><net_src comp="247" pin="3"/><net_sink comp="287" pin=0"/></net>

<net id="300"><net_src comp="38" pin="0"/><net_sink comp="292" pin=0"/></net>

<net id="301"><net_src comp="175" pin="1"/><net_sink comp="292" pin=1"/></net>

<net id="302"><net_src comp="200" pin="6"/><net_sink comp="292" pin=2"/></net>

<net id="303"><net_src comp="175" pin="1"/><net_sink comp="292" pin=3"/></net>

<net id="304"><net_src comp="175" pin="1"/><net_sink comp="292" pin=4"/></net>

<net id="305"><net_src comp="185" pin="1"/><net_sink comp="292" pin=5"/></net>

<net id="314"><net_src comp="38" pin="0"/><net_sink comp="306" pin=0"/></net>

<net id="315"><net_src comp="165" pin="1"/><net_sink comp="306" pin=1"/></net>

<net id="316"><net_src comp="165" pin="1"/><net_sink comp="306" pin=2"/></net>

<net id="317"><net_src comp="200" pin="6"/><net_sink comp="306" pin=3"/></net>

<net id="318"><net_src comp="200" pin="6"/><net_sink comp="306" pin=4"/></net>

<net id="319"><net_src comp="185" pin="1"/><net_sink comp="306" pin=5"/></net>

<net id="328"><net_src comp="38" pin="0"/><net_sink comp="320" pin=0"/></net>

<net id="329"><net_src comp="200" pin="6"/><net_sink comp="320" pin=1"/></net>

<net id="330"><net_src comp="153" pin="1"/><net_sink comp="320" pin=2"/></net>

<net id="331"><net_src comp="153" pin="1"/><net_sink comp="320" pin=3"/></net>

<net id="332"><net_src comp="153" pin="1"/><net_sink comp="320" pin=4"/></net>

<net id="333"><net_src comp="185" pin="1"/><net_sink comp="320" pin=5"/></net>

<net id="338"><net_src comp="214" pin="4"/><net_sink comp="334" pin=0"/></net>

<net id="339"><net_src comp="42" pin="0"/><net_sink comp="334" pin=1"/></net>

<net id="344"><net_src comp="214" pin="4"/><net_sink comp="340" pin=0"/></net>

<net id="345"><net_src comp="46" pin="0"/><net_sink comp="340" pin=1"/></net>

<net id="361"><net_src comp="214" pin="4"/><net_sink comp="358" pin=0"/></net>

<net id="370"><net_src comp="38" pin="0"/><net_sink comp="362" pin=0"/></net>

<net id="371"><net_src comp="346" pin="1"/><net_sink comp="362" pin=1"/></net>

<net id="372"><net_src comp="349" pin="1"/><net_sink comp="362" pin=2"/></net>

<net id="373"><net_src comp="352" pin="1"/><net_sink comp="362" pin=3"/></net>

<net id="374"><net_src comp="355" pin="1"/><net_sink comp="362" pin=4"/></net>

<net id="375"><net_src comp="358" pin="1"/><net_sink comp="362" pin=5"/></net>

<net id="379"><net_src comp="362" pin="6"/><net_sink comp="376" pin=0"/></net>

<net id="380"><net_src comp="376" pin="1"/><net_sink comp="116" pin=2"/></net>

<net id="387"><net_src comp="381" pin="1"/><net_sink comp="384" pin=0"/></net>

<net id="388"><net_src comp="384" pin="1"/><net_sink comp="129" pin=2"/></net>

<net id="393"><net_src comp="123" pin="3"/><net_sink comp="389" pin=0"/></net>

<net id="398"><net_src comp="123" pin="3"/><net_sink comp="394" pin=0"/></net>

<net id="403"><net_src comp="123" pin="3"/><net_sink comp="399" pin=0"/></net>

<net id="408"><net_src comp="123" pin="3"/><net_sink comp="404" pin=0"/></net>

<net id="413"><net_src comp="123" pin="3"/><net_sink comp="409" pin=0"/></net>

<net id="418"><net_src comp="123" pin="3"/><net_sink comp="414" pin=0"/></net>

<net id="423"><net_src comp="123" pin="3"/><net_sink comp="419" pin=0"/></net>

<net id="428"><net_src comp="123" pin="3"/><net_sink comp="424" pin=0"/></net>

<net id="445"><net_src comp="136" pin="3"/><net_sink comp="441" pin=0"/></net>

<net id="446"><net_src comp="429" pin="1"/><net_sink comp="441" pin=1"/></net>

<net id="451"><net_src comp="52" pin="0"/><net_sink comp="447" pin=0"/></net>

<net id="452"><net_src comp="432" pin="1"/><net_sink comp="447" pin=1"/></net>

<net id="457"><net_src comp="447" pin="2"/><net_sink comp="453" pin=0"/></net>

<net id="458"><net_src comp="435" pin="1"/><net_sink comp="453" pin=1"/></net>

<net id="463"><net_src comp="453" pin="2"/><net_sink comp="459" pin=0"/></net>

<net id="464"><net_src comp="438" pin="1"/><net_sink comp="459" pin=1"/></net>

<net id="469"><net_src comp="459" pin="2"/><net_sink comp="465" pin=0"/></net>

<net id="470"><net_src comp="441" pin="2"/><net_sink comp="465" pin=1"/></net>

<net id="474"><net_src comp="86" pin="2"/><net_sink comp="471" pin=0"/></net>

<net id="475"><net_src comp="471" pin="1"/><net_sink comp="381" pin=0"/></net>

<net id="479"><net_src comp="92" pin="2"/><net_sink comp="476" pin=0"/></net>

<net id="480"><net_src comp="476" pin="1"/><net_sink comp="200" pin=2"/></net>

<net id="484"><net_src comp="98" pin="2"/><net_sink comp="481" pin=0"/></net>

<net id="485"><net_src comp="481" pin="1"/><net_sink comp="168" pin=0"/></net>

<net id="489"><net_src comp="104" pin="2"/><net_sink comp="486" pin=0"/></net>

<net id="490"><net_src comp="486" pin="1"/><net_sink comp="178" pin=0"/></net>

<net id="494"><net_src comp="110" pin="2"/><net_sink comp="491" pin=0"/></net>

<net id="495"><net_src comp="491" pin="1"/><net_sink comp="247" pin=2"/></net>

<net id="496"><net_src comp="491" pin="1"/><net_sink comp="254" pin=0"/></net>

<net id="497"><net_src comp="491" pin="1"/><net_sink comp="268" pin=0"/></net>

<net id="504"><net_src comp="227" pin="2"/><net_sink comp="501" pin=0"/></net>

<net id="505"><net_src comp="501" pin="1"/><net_sink comp="189" pin=2"/></net>

<net id="509"><net_src comp="233" pin="6"/><net_sink comp="506" pin=0"/></net>

<net id="510"><net_src comp="506" pin="1"/><net_sink comp="146" pin=2"/></net>

<net id="514"><net_src comp="54" pin="1"/><net_sink comp="511" pin=0"/></net>

<net id="515"><net_src comp="511" pin="1"/><net_sink comp="287" pin=1"/></net>

<net id="516"><net_src comp="511" pin="1"/><net_sink comp="414" pin=1"/></net>

<net id="517"><net_src comp="511" pin="1"/><net_sink comp="429" pin=0"/></net>

<net id="521"><net_src comp="58" pin="1"/><net_sink comp="518" pin=0"/></net>

<net id="522"><net_src comp="518" pin="1"/><net_sink comp="282" pin=1"/></net>

<net id="523"><net_src comp="518" pin="1"/><net_sink comp="346" pin=0"/></net>

<net id="524"><net_src comp="518" pin="1"/><net_sink comp="409" pin=1"/></net>

<net id="528"><net_src comp="62" pin="1"/><net_sink comp="525" pin=0"/></net>

<net id="529"><net_src comp="525" pin="1"/><net_sink comp="277" pin=1"/></net>

<net id="530"><net_src comp="525" pin="1"/><net_sink comp="349" pin=0"/></net>

<net id="531"><net_src comp="525" pin="1"/><net_sink comp="404" pin=1"/></net>

<net id="535"><net_src comp="66" pin="1"/><net_sink comp="532" pin=0"/></net>

<net id="536"><net_src comp="532" pin="1"/><net_sink comp="272" pin=1"/></net>

<net id="537"><net_src comp="532" pin="1"/><net_sink comp="352" pin=0"/></net>

<net id="538"><net_src comp="532" pin="1"/><net_sink comp="394" pin=1"/></net>

<net id="542"><net_src comp="70" pin="1"/><net_sink comp="539" pin=0"/></net>

<net id="543"><net_src comp="539" pin="1"/><net_sink comp="268" pin=1"/></net>

<net id="544"><net_src comp="539" pin="1"/><net_sink comp="355" pin=0"/></net>

<net id="545"><net_src comp="539" pin="1"/><net_sink comp="424" pin=1"/></net>

<net id="549"><net_src comp="74" pin="1"/><net_sink comp="546" pin=0"/></net>

<net id="550"><net_src comp="546" pin="1"/><net_sink comp="263" pin=1"/></net>

<net id="551"><net_src comp="546" pin="1"/><net_sink comp="399" pin=1"/></net>

<net id="552"><net_src comp="546" pin="1"/><net_sink comp="432" pin=0"/></net>

<net id="556"><net_src comp="78" pin="1"/><net_sink comp="553" pin=0"/></net>

<net id="557"><net_src comp="553" pin="1"/><net_sink comp="258" pin=1"/></net>

<net id="558"><net_src comp="553" pin="1"/><net_sink comp="389" pin=1"/></net>

<net id="559"><net_src comp="553" pin="1"/><net_sink comp="435" pin=0"/></net>

<net id="563"><net_src comp="82" pin="1"/><net_sink comp="560" pin=0"/></net>

<net id="564"><net_src comp="560" pin="1"/><net_sink comp="254" pin=1"/></net>

<net id="565"><net_src comp="560" pin="1"/><net_sink comp="419" pin=1"/></net>

<net id="566"><net_src comp="560" pin="1"/><net_sink comp="438" pin=0"/></net>

<net id="570"><net_src comp="292" pin="6"/><net_sink comp="567" pin=0"/></net>

<net id="571"><net_src comp="567" pin="1"/><net_sink comp="178" pin=2"/></net>

<net id="575"><net_src comp="306" pin="6"/><net_sink comp="572" pin=0"/></net>

<net id="576"><net_src comp="572" pin="1"/><net_sink comp="168" pin=2"/></net>

<net id="580"><net_src comp="320" pin="6"/><net_sink comp="577" pin=0"/></net>

<net id="581"><net_src comp="577" pin="1"/><net_sink comp="157" pin=2"/></net>

<net id="588"><net_src comp="340" pin="2"/><net_sink comp="585" pin=0"/></net>

<net id="589"><net_src comp="585" pin="1"/><net_sink comp="214" pin=2"/></net>

<net id="593"><net_src comp="358" pin="1"/><net_sink comp="590" pin=0"/></net>

<net id="597"><net_src comp="116" pin="3"/><net_sink comp="594" pin=0"/></net>

<net id="598"><net_src comp="594" pin="1"/><net_sink comp="123" pin=0"/></net>

<net id="602"><net_src comp="129" pin="3"/><net_sink comp="599" pin=0"/></net>

<net id="603"><net_src comp="599" pin="1"/><net_sink comp="136" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: sbox | {}
	Port: Rcon | {}
 - Input state : 
	Port: core : word_0_read | {1 }
	Port: core : word_1_read | {1 }
	Port: core : word_2_read | {1 }
	Port: core : word_3_read | {1 }
	Port: core : iteration | {1 }
	Port: core : sbox | {4 5 }
	Port: core : Rcon | {4 6 }
  - Chain level:
	State 1
	State 2
		icmp_ln85 : 1
		i_5 : 1
		br_ln85 : 2
		switch_ln86 : 1
		write_flag_0_be_i : 1
		select_ln88 : 1
		store_ln103 : 1
		store_ln103 : 1
		store_ln103 : 1
		store_ln103 : 1
		store_ln103 : 1
		store_ln103 : 1
		store_ln103 : 2
		store_ln103 : 2
	State 3
		word12_0_be_i : 1
		word2_0_be_i : 1
		word_03_be_i : 1
	State 4
		icmp_ln103 : 1
		i : 1
		br_ln103 : 2
		trunc_ln105 : 1
		num_assign_1 : 2
		zext_ln64 : 3
		sbox_addr : 4
		sbox_load : 5
		zext_ln92 : 1
		Rcon_addr : 2
		Rcon_load : 3
	State 5
		store_ln105 : 1
		store_ln105 : 1
		store_ln105 : 1
		store_ln105 : 1
		store_ln105 : 1
		store_ln105 : 1
		store_ln105 : 1
		store_ln105 : 1
	State 6
		xor_ln109 : 1
		mrv_s : 1
		mrv_1 : 2
		mrv_2 : 3
		mrv_3 : 4
		ret_ln110 : 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------------|---------|---------|
| Operation|      Functional Unit      |    FF   |   LUT   |
|----------|---------------------------|---------|---------|
|          |  write_flag_0_be_i_fu_233 |    0    |    21   |
|          |    word12_0_be_i_fu_292   |    0    |    21   |
|    mux   |    word2_0_be_i_fu_306    |    0    |    21   |
|          |    word_03_be_i_fu_320    |    0    |    21   |
|          |    num_assign_1_fu_362    |    0    |    21   |
|----------|---------------------------|---------|---------|
|    add   |         i_5_fu_227        |    0    |    10   |
|          |          i_fu_340         |    0    |    12   |
|----------|---------------------------|---------|---------|
|   icmp   |      icmp_ln85_fu_221     |    0    |    8    |
|          |     icmp_ln103_fu_334     |    0    |    9    |
|----------|---------------------------|---------|---------|
|  select  |     select_ln88_fu_247    |    0    |    8    |
|----------|---------------------------|---------|---------|
|    xor   |      xor_ln109_fu_441     |    0    |    8    |
|----------|---------------------------|---------|---------|
|          | iteration_read_read_fu_86 |    0    |    0    |
|          |  word_3_read_1_read_fu_92 |    0    |    0    |
|   read   |  word_2_read_1_read_fu_98 |    0    |    0    |
|          | word_1_read_1_read_fu_104 |    0    |    0    |
|          | word_0_read_1_read_fu_110 |    0    |    0    |
|----------|---------------------------|---------|---------|
|   trunc  |     trunc_ln105_fu_358    |    0    |    0    |
|          |     trunc_ln109_fu_381    |    0    |    0    |
|----------|---------------------------|---------|---------|
|   zext   |      zext_ln64_fu_376     |    0    |    0    |
|          |      zext_ln92_fu_384     |    0    |    0    |
|----------|---------------------------|---------|---------|
|          |        mrv_s_fu_447       |    0    |    0    |
|insertvalue|        mrv_1_fu_453       |    0    |    0    |
|          |        mrv_2_fu_459       |    0    |    0    |
|          |        mrv_3_fu_465       |    0    |    0    |
|----------|---------------------------|---------|---------|
|   Total  |                           |    0    |   160   |
|----------|---------------------------|---------|---------|

Memories:
N/A

* Register list:
+-------------------------+--------+
|                         |   FF   |
+-------------------------+--------+
|    Rcon_addr_reg_599    |    8   |
|     empty_14_reg_518    |    8   |
|     empty_15_reg_525    |    8   |
|     empty_16_reg_532    |    8   |
|     empty_17_reg_539    |    8   |
|      i_0_i_reg_185      |    2   |
|       i_0_reg_210       |    3   |
|       i_5_reg_501       |    2   |
|        i_reg_585        |    3   |
|  iteration_read_reg_471 |   32   |
|     phi_ln86_reg_197    |    8   |
|    sbox_addr_reg_594    |    8   |
|   trunc_ln105_reg_590   |    2   |
|  word12_0_be_i_reg_567  |    8   |
|    word12_0_i_reg_175   |    8   |
|   word2_0_be_i_reg_572  |    8   |
|    word2_0_i_reg_165    |    8   |
|   word_03_be_i_reg_577  |    8   |
|    word_03_i_reg_153    |    8   |
|  word_0_read_1_reg_491  |    8   |
|     word_1_0_reg_546    |    8   |
|  word_1_read_1_reg_486  |    8   |
|     word_2_0_reg_553    |    8   |
|  word_2_read_1_reg_481  |    8   |
|     word_3_0_reg_560    |    8   |
|  word_3_read_1_reg_476  |    8   |
|    word_load_reg_511    |    8   |
|write_flag_0_be_i_reg_506|    1   |
|  write_flag_0_i_reg_142 |    1   |
+-------------------------+--------+
|          Total          |   214  |
+-------------------------+--------+

* Multiplexer (MUX) list: 
|-------------------|------|------|------|--------||---------||---------|
|        Comp       |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|-------------------|------|------|------|--------||---------||---------|
| grp_access_fu_123 |  p0  |   2  |   8  |   16   ||    9    |
| grp_access_fu_136 |  p0  |   2  |   8  |   16   ||    9    |
| word_03_i_reg_153 |  p0  |   2  |   8  |   16   ||    9    |
|   i_0_i_reg_185   |  p0  |   2  |   2  |    4   ||    9    |
|-------------------|------|------|------|--------||---------||---------|
|       Total       |      |      |      |   52   ||  7.076  ||    36   |
|-------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   160  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    7   |    -   |   36   |
|  Register |    -   |   214  |    -   |
+-----------+--------+--------+--------+
|   Total   |    7   |   214  |   196  |
+-----------+--------+--------+--------+
